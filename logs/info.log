01:50:56.913 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

03:51:08.824 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? , heart_beat_time = ? WHERE id= ?]; Communications link failure

The last packet successfully received from the server was 10,078,807 milliseconds ago. The last packet sent successfully to the server was 10,078,807 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 10,078,807 milliseconds ago. The last packet sent successfully to the server was 10,078,807 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:80)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 10,078,807 milliseconds ago. The last packet sent successfully to the server was 10,078,807 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 21 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 10,078,807 milliseconds ago. The last packet sent successfully to the server was 10,078,807 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:538)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:702)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:641)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:940)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1075)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 28 more
Caused by: java.net.SocketException: Network is down (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:532)
	... 33 more

03:51:14.334 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 6177
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 6177
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

04:59:32.974 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

04:59:35.834 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 16190
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 16190
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

04:59:42.939 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 22208
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 22208
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

04:59:48.950 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 28220
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 28220
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

04:59:54.961 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 34233
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 34233
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

04:59:58.458 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

05:00:00.970 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 40243
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 40243
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

05:00:06.981 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 46253
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 46253
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

05:00:13.002 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 52275
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 52275
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

05:00:19.019 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 58293
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 58293
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

05:15:10.801 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 9204, active 3, maxActive 128, creating 1, createElapseMillis 70527
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 9204, active 3, maxActive 128, creating 1, createElapseMillis 70527
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

05:15:10.360 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

05:15:17.204 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 77637
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 77637
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

07:02:50.871 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 83648
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 83648
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

07:02:56.878 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 89656
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 89656
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

07:03:02.895 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 95675
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 95675
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

07:03:04.959 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

07:03:08.912 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 101692
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 101692
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1775)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more

07:03:14.931 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 135, createErrorCount 1
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 135, createErrorCount 1
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

07:14:52.184 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3677, active 3, maxActive 128, creating 1, createElapseMillis 2291, createErrorCount 2
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3677, active 3, maxActive 128, creating 1, createElapseMillis 2291, createErrorCount 2
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

07:29:55.354 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

07:29:55.626 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 9781, active 3, maxActive 128, creating 1, createElapseMillis 10815, createErrorCount 3
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 9781, active 3, maxActive 128, creating 1, createElapseMillis 10815, createErrorCount 3
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

07:30:01.722 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1225, createErrorCount 5
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1225, createErrorCount 5
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

07:45:05.790 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3396, createErrorCount 6
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3396, createErrorCount 6
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:00:09.752 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:00:09.987 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 7873, active 3, maxActive 128, creating 1, createElapseMillis 9073, createErrorCount 7
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 7873, active 3, maxActive 128, creating 1, createElapseMillis 9073, createErrorCount 7
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:00:16.013 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1191, createErrorCount 9
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1191, createErrorCount 9
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:07:58.132 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2537, createErrorCount 10
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2537, createErrorCount 10
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:08:04.166 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 3945, createErrorCount 11
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 3945, createErrorCount 11
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:08:10.196 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 918, createErrorCount 13
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 918, createErrorCount 13
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:08:11.452 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:08:16.217 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2410, createErrorCount 14
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2410, createErrorCount 14
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:08:22.242 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3916, createErrorCount 15
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3916, createErrorCount 15
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:08:41.759 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 78, createErrorCount 17
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 78, createErrorCount 17
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:08:47.768 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1573, createErrorCount 18
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1573, createErrorCount 18
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:08:53.785 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3078, createErrorCount 19
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3078, createErrorCount 19
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:08:54.962 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:08:59.794 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 67, createErrorCount 21
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 67, createErrorCount 21
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:05.812 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1577, createErrorCount 22
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1577, createErrorCount 22
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:11.817 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3073, createErrorCount 23
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3073, createErrorCount 23
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:17.834 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 55, createErrorCount 25
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 55, createErrorCount 25
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:23.849 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1553, createErrorCount 26
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1553, createErrorCount 26
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:24.957 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:09:29.864 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3055, createErrorCount 27
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3055, createErrorCount 27
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:35.879 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 51, createErrorCount 29
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 51, createErrorCount 29
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:41.899 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1559, createErrorCount 30
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1559, createErrorCount 30
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:47.933 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3073, createErrorCount 31
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3073, createErrorCount 31
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:53.967 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 85, createErrorCount 33
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 85, createErrorCount 33
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:09:54.960 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:09:59.999 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 1613, createErrorCount 34
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 1613, createErrorCount 34
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:06.007 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3113, createErrorCount 35
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3113, createErrorCount 35
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:12.016 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 105, createErrorCount 37
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 105, createErrorCount 37
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:18.025 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1600, createErrorCount 38
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1600, createErrorCount 38
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:24.040 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 3095, createErrorCount 39
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 3095, createErrorCount 39
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:24.956 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:10:30.052 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 87, createErrorCount 41
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 87, createErrorCount 41
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:36.059 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1580, createErrorCount 42
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1580, createErrorCount 42
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:42.081 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3084, createErrorCount 43
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3084, createErrorCount 43
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:48.091 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 72, createErrorCount 45
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 72, createErrorCount 45
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:54.100 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1562, createErrorCount 46
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1562, createErrorCount 46
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:10:54.959 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:11:00.114 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 3067, createErrorCount 47
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 3067, createErrorCount 47
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:06.123 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 43, createErrorCount 49
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 43, createErrorCount 49
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:12.127 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1529, createErrorCount 50
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1529, createErrorCount 50
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:18.137 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3026, createErrorCount 51
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3026, createErrorCount 51
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:24.152 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 53
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 53
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:24.956 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:11:30.161 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1449, createErrorCount 54
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1449, createErrorCount 54
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:36.171 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2953, createErrorCount 55
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2953, createErrorCount 55
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:42.185 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 57
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 57
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:48.190 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1441, createErrorCount 58
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1441, createErrorCount 58
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:54.197 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2933, createErrorCount 59
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2933, createErrorCount 59
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:11:54.951 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:12:00.210 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 61
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 61
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:06.222 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1421, createErrorCount 62
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1421, createErrorCount 62
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:12.239 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2924, createErrorCount 63
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2924, createErrorCount 63
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:18.254 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 0, createErrorCount 65
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 0, createErrorCount 65
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:24.265 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 1415, createErrorCount 66
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 1415, createErrorCount 66
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:24.950 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:12:30.273 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2914, createErrorCount 67
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2914, createErrorCount 67
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:36.282 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 69
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 69
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:42.302 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 1399, createErrorCount 70
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 1399, createErrorCount 70
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:48.315 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2905, createErrorCount 71
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2905, createErrorCount 71
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:54.324 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 4410, createErrorCount 72
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 4410, createErrorCount 72
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

08:12:55.104 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:13:25.108 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:13:55.106 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:14:25.104 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:14:55.104 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:15:25.101 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:15:55.101 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:16:25.097 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:16:55.096 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:17:25.096 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:17:55.096 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:18:25.094 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:18:55.092 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:19:25.092 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:19:55.091 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:20:25.086 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:20:55.087 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:21:25.082 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:21:55.081 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:22:25.079 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:22:55.080 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:23:25.076 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:23:55.082 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:24:25.074 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:24:55.073 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:25:25.071 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:25:55.075 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:26:25.073 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:26:55.071 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:27:25.071 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:27:55.064 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:28:25.068 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:28:55.067 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:29:25.062 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:29:55.064 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:30:25.063 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:30:55.061 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:31:25.065 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:31:55.057 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:32:25.064 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:32:55.056 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:33:25.050 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:33:55.054 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:34:25.543 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:39:55.087 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:40:25.091 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:40:55.090 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:41:25.088 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:41:55.084 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:42:25.085 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:42:55.081 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:43:25.080 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:43:55.083 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:44:25.082 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:44:55.076 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:45:25.079 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:45:55.074 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:46:25.073 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:46:55.077 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:47:25.076 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:47:55.070 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:48:25.069 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:48:55.068 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:49:25.068 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:49:55.068 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:50:25.064 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:50:55.066 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:51:25.066 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:51:55.065 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:52:25.061 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:52:55.063 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:53:25.060 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:53:55.058 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:54:25.060 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:54:55.058 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:55:25.054 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:55:55.057 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:56:25.051 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:56:55.051 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:57:25.054 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:57:55.051 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:58:25.051 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:58:55.051 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:59:25.050 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

08:59:55.049 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:00:25.046 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:00:55.048 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:01:25.047 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:01:55.046 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:02:25.045 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:02:55.043 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:03:25.043 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:03:55.036 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:04:25.039 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:04:55.036 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:05:25.042 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:05:55.041 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:06:25.031 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:06:55.039 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:07:25.038 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:07:55.027 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:08:25.035 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:08:55.034 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:09:25.031 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:09:55.014 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:10:24.993 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:10:54.993 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:11:24.988 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:11:54.990 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:12:24.985 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:12:54.980 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:13:24.985 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:13:54.984 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:14:24.976 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:14:54.974 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:15:24.980 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:15:54.971 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:16:24.976 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:16:54.968 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:17:24.973 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:17:54.973 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:18:24.972 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:18:54.963 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:19:24.963 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:19:54.967 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:20:24.956 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:20:54.965 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:21:24.963 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:21:55.557 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:22:09.082 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? WHERE id!= ? AND is_up=1 AND heart_beat_time< ?]; Communications link failure

The last packet successfully received from the server was 46,978 milliseconds ago. The last packet sent successfully to the server was 47,037 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 46,978 milliseconds ago. The last packet sent successfully to the server was 47,037 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 46,978 milliseconds ago. The last packet sent successfully to the server was 47,037 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 22 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 46,978 milliseconds ago. The last packet sent successfully to the server was 47,037 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:538)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:702)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:641)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:940)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1075)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 29 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:532)
	... 34 more

09:30:01.677 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:30:32.061 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:31:02.212 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:31:44.975 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:42:55.106 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:43:24.404 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:44:06.034 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:44:25.301 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? WHERE id!= ? AND is_up=1 AND heart_beat_time< ?]; Communications link failure

The last packet successfully received from the server was 43,810 milliseconds ago. The last packet sent successfully to the server was 43,865 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 43,810 milliseconds ago. The last packet sent successfully to the server was 43,865 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 43,810 milliseconds ago. The last packet sent successfully to the server was 43,865 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 22 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 43,810 milliseconds ago. The last packet sent successfully to the server was 43,865 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:538)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:702)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:641)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:940)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1075)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 29 more
Caused by: java.net.SocketException: Network is down (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:532)
	... 34 more

09:49:48.360 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:49:59.367 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 4004, createErrorCount 73
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 4004, createErrorCount 73
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

09:50:05.380 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 974, createErrorCount 75
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 974, createErrorCount 75
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

09:50:11.397 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2463, createErrorCount 76
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2463, createErrorCount 76
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

09:50:17.422 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 3962, createErrorCount 77
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 3962, createErrorCount 77
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

09:50:18.366 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

09:50:23.441 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 930, createErrorCount 79
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 930, createErrorCount 79
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

09:50:29.463 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 2431, createErrorCount 80
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 2431, createErrorCount 80
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

09:50:35.478 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 3912, createErrorCount 81
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 3912, createErrorCount 81
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:04:52.064 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 0, createErrorCount 83
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 0, createErrorCount 83
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:04:58.079 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 1043, createErrorCount 84
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 1043, createErrorCount 84
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:04:58.919 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

10:05:04.088 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2548, createErrorCount 85
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2548, createErrorCount 85
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:05:10.105 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 3, maxActive 128, creating 0, createErrorCount 87
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 3, maxActive 128, creating 0, createErrorCount 87
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:05:16.129 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 1039, createErrorCount 88
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 1039, createErrorCount 88
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:05:22.150 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 2539, createErrorCount 89
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 2539, createErrorCount 89
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:05:28.165 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 91
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 91
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:05:28.921 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

10:05:34.176 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1015, createErrorCount 92
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1015, createErrorCount 92
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:19:51.030 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 2500, createErrorCount 93
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 2500, createErrorCount 93
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:19:57.049 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 4004, createErrorCount 94
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 4004, createErrorCount 94
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:20:03.058 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 979, createErrorCount 96
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 979, createErrorCount 96
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:20:09.072 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 2462, createErrorCount 97
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 2462, createErrorCount 97
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:20:09.491 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

10:20:15.083 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3960, createErrorCount 98
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3960, createErrorCount 98
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:20:21.090 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 922, createErrorCount 100
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 922, createErrorCount 100
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:20:27.107 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 2409, createErrorCount 101
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 2409, createErrorCount 101
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:20:33.130 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 3918, createErrorCount 102
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 3918, createErrorCount 102
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:34:49.591 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 880, createErrorCount 104
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 880, createErrorCount 104
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:34:49.942 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

10:34:55.611 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2370, createErrorCount 105
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2370, createErrorCount 105
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:35:01.627 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 3854, createErrorCount 106
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 3854, createErrorCount 106
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:35:07.642 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 825, createErrorCount 108
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 825, createErrorCount 108
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:35:13.662 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 2321, createErrorCount 109
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 2321, createErrorCount 109
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:35:19.683 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 3828, createErrorCount 110
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 3828, createErrorCount 110
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:35:19.938 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

10:35:25.699 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 797, createErrorCount 112
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 797, createErrorCount 112
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:35:31.717 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2296, createErrorCount 113
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2296, createErrorCount 113
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:49:48.358 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3799, createErrorCount 114
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3799, createErrorCount 114
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:49:54.372 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 770, createErrorCount 116
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 770, createErrorCount 116
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:50:00.395 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 2273, createErrorCount 117
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 2273, createErrorCount 117
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:50:00.570 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

10:50:06.421 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 3771, createErrorCount 118
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 3, maxActive 128, creating 1, createElapseMillis 3771, createErrorCount 118
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:50:12.436 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 766, createErrorCount 120
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 766, createErrorCount 120
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:50:18.446 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2259, createErrorCount 121
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2259, createErrorCount 121
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:50:24.458 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3740, createErrorCount 122
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3740, createErrorCount 122
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:50:30.468 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 705, createErrorCount 124
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 705, createErrorCount 124
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

10:50:30.566 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:04:48.029 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 4135, active 3, maxActive 128, creating 1, createElapseMillis 3326, createErrorCount 125
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 4135, active 3, maxActive 128, creating 1, createElapseMillis 3326, createErrorCount 125
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:04:54.040 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 327, createErrorCount 127
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 327, createErrorCount 127
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:05:00.059 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 1832, createErrorCount 128
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 1832, createErrorCount 128
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:05:06.077 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3330, createErrorCount 129
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3330, createErrorCount 129
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:05:10.964 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:05:12.095 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 308, createErrorCount 131
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 308, createErrorCount 131
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:05:18.115 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 1800, createErrorCount 132
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 1800, createErrorCount 132
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:05:24.128 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3292, createErrorCount 133
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3292, createErrorCount 133
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:05:30.138 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 259, createErrorCount 135
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 259, createErrorCount 135
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:05:36.152 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 1745, createErrorCount 136
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 1745, createErrorCount 136
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:15:21.359 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:15:22.584 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 3, maxActive 128, creating 1, createElapseMillis 2053, createErrorCount 137
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 3, maxActive 128, creating 1, createElapseMillis 2053, createErrorCount 137
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:15:42.018 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3901, active 3, maxActive 128, creating 1, createElapseMillis 4438, createErrorCount 138
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3901, active 3, maxActive 128, creating 1, createElapseMillis 4438, createErrorCount 138
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:15:48.034 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 1000, createErrorCount 140
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 1000, createErrorCount 140
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:15:54.049 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 2500, createErrorCount 141
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 2500, createErrorCount 141
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:16:00.061 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3982, createErrorCount 142
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3982, createErrorCount 142
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:16:03.881 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:16:06.069 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 943, createErrorCount 144
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 943, createErrorCount 144
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:16:12.076 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2444, createErrorCount 145
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2444, createErrorCount 145
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:16:18.086 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 3938, createErrorCount 146
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 3938, createErrorCount 146
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:16:24.101 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 920, createErrorCount 148
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 920, createErrorCount 148
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:16:30.115 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2429, createErrorCount 149
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2429, createErrorCount 149
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:16:33.878 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:16:36.120 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3929, createErrorCount 150
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3929, createErrorCount 150
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:16:42.133 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 924, createErrorCount 152
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 924, createErrorCount 152
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

11:17:06.611 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:17:36.610 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:18:06.613 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:18:36.614 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:19:06.606 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:19:27.908 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? WHERE id!= ? AND is_up=1 AND heart_beat_time< ?]; Communications link failure

The last packet successfully received from the server was 29,200 milliseconds ago. The last packet sent successfully to the server was 29,249 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 29,200 milliseconds ago. The last packet sent successfully to the server was 29,249 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 29,200 milliseconds ago. The last packet sent successfully to the server was 29,249 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 22 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 29,200 milliseconds ago. The last packet sent successfully to the server was 29,249 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:538)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:702)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:641)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:940)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1075)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 29 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:532)
	... 34 more

11:19:36.608 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:20:06.603 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:20:36.603 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:21:06.602 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:21:36.600 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:22:06.600 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:22:36.598 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:23:06.598 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:23:36.599 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:24:06.598 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:24:36.592 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:25:06.595 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:25:36.590 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:26:06.591 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:26:36.589 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:27:06.587 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:27:36.583 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:28:06.586 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:28:36.581 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:29:06.580 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:29:36.578 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:30:06.577 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:30:36.576 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:31:06.574 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:31:36.574 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:32:06.577 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:32:36.578 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:33:06.571 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

11:33:36.655 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:00:46.029 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? WHERE id!= ? AND is_up=1 AND heart_beat_time< ?]; Communications link failure

The last packet successfully received from the server was 1,647,191 milliseconds ago. The last packet sent successfully to the server was 1,647,264 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 1,647,191 milliseconds ago. The last packet sent successfully to the server was 1,647,264 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 1,647,191 milliseconds ago. The last packet sent successfully to the server was 1,647,264 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1347)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 22 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 1,647,191 milliseconds ago. The last packet sent successfully to the server was 1,647,264 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:538)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:702)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:641)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:940)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:1075)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 29 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:532)
	... 34 more

12:00:53.042 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3036, createErrorCount 153
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3036, createErrorCount 153
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:00:59.053 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 25, createErrorCount 155
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 25, createErrorCount 155
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:02.033 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:01:05.060 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1519, createErrorCount 156
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1519, createErrorCount 156
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:11.069 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3019, createErrorCount 157
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3019, createErrorCount 157
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:17.073 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 9, createErrorCount 159
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 9, createErrorCount 159
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:23.083 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1508, createErrorCount 160
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1508, createErrorCount 160
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:29.088 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3000, createErrorCount 161
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 3000, createErrorCount 161
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:32.026 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:01:35.101 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 163
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 163
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:41.105 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1481, createErrorCount 164
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1481, createErrorCount 164
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:47.114 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2982, createErrorCount 165
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2982, createErrorCount 165
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:53.119 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 0, createErrorCount 167
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 0, createErrorCount 167
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:01:59.124 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1455, createErrorCount 168
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1455, createErrorCount 168
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:02.022 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:02:05.131 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2947, createErrorCount 169
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2947, createErrorCount 169
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:11.138 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 0, createErrorCount 171
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 0, createErrorCount 171
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:17.145 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1432, createErrorCount 172
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1432, createErrorCount 172
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:23.154 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 2929, createErrorCount 173
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 2929, createErrorCount 173
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:29.166 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 0, createErrorCount 175
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 0, createErrorCount 175
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:32.026 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:02:35.178 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 1409, createErrorCount 176
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 1409, createErrorCount 176
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:41.187 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2909, createErrorCount 177
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2909, createErrorCount 177
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:47.196 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 179
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 179
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:53.208 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1379, createErrorCount 180
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1379, createErrorCount 180
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:02:59.218 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2872, createErrorCount 181
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2872, createErrorCount 181
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:02.020 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:03:05.230 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 0, createErrorCount 183
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 0, createErrorCount 183
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:11.239 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1349, createErrorCount 184
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1349, createErrorCount 184
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:17.251 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2855, createErrorCount 185
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2855, createErrorCount 185
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:23.260 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 187
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 187
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:29.268 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1339, createErrorCount 188
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1339, createErrorCount 188
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:32.018 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:03:35.277 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2832, createErrorCount 189
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2832, createErrorCount 189
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:41.298 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 191
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 191
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:47.316 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 1340, createErrorCount 192
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 1340, createErrorCount 192
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:53.330 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2849, createErrorCount 193
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2849, createErrorCount 193
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:03:59.345 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 195
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 195
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:02.022 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:04:05.350 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1329, createErrorCount 196
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1329, createErrorCount 196
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:11.362 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 2826, createErrorCount 197
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 2826, createErrorCount 197
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:17.373 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 199
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 199
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:23.383 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1315, createErrorCount 200
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1315, createErrorCount 200
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:29.398 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 2819, createErrorCount 201
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 2819, createErrorCount 201
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:32.021 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:04:35.411 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 203
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 203
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:41.417 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1307, createErrorCount 204
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1307, createErrorCount 204
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:47.421 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2807, createErrorCount 205
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2807, createErrorCount 205
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:53.430 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 207
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 207
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:04:59.441 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1281, createErrorCount 208
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1281, createErrorCount 208
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:02.019 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:05:05.448 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2782, createErrorCount 209
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2782, createErrorCount 209
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:11.461 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 211
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 211
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:17.466 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1276, createErrorCount 212
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1276, createErrorCount 212
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:23.480 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2770, createErrorCount 213
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2770, createErrorCount 213
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:29.488 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 0, createErrorCount 215
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 0, createErrorCount 215
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:32.017 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:05:35.496 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1250, createErrorCount 216
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1250, createErrorCount 216
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:41.512 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2754, createErrorCount 217
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2754, createErrorCount 217
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:47.526 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 219
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 219
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:53.534 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1226, createErrorCount 220
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1226, createErrorCount 220
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:05:59.545 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2731, createErrorCount 221
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2731, createErrorCount 221
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:02.017 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:06:05.559 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 223
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 223
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:11.568 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1206, createErrorCount 224
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1206, createErrorCount 224
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:17.578 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2704, createErrorCount 225
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2704, createErrorCount 225
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:23.586 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 227
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 227
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:29.592 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1178, createErrorCount 228
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1178, createErrorCount 228
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:32.015 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:06:35.597 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2669, createErrorCount 229
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2669, createErrorCount 229
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:41.615 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 231
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 231
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:47.626 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1161, createErrorCount 232
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1161, createErrorCount 232
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:53.635 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2659, createErrorCount 233
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2659, createErrorCount 233
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:06:59.641 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 235
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 0, createErrorCount 235
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:02.013 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:07:05.663 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 1137, createErrorCount 236
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 1137, createErrorCount 236
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:11.677 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2650, createErrorCount 237
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2650, createErrorCount 237
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:17.683 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 0, createErrorCount 239
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 0, createErrorCount 239
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:23.692 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1133, createErrorCount 240
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 1133, createErrorCount 240
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:29.704 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2635, createErrorCount 241
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 2635, createErrorCount 241
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:32.013 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:07:35.717 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 243
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 0, createErrorCount 243
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:41.724 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1130, createErrorCount 244
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1130, createErrorCount 244
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:47.741 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2622, createErrorCount 245
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2622, createErrorCount 245
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:53.757 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 247
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 0, createErrorCount 247
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:07:59.778 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1083, createErrorCount 248
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 1083, createErrorCount 248
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:02.009 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:08:05.795 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2575, createErrorCount 249
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2575, createErrorCount 249
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:11.808 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 0, createErrorCount 251
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 0, createErrorCount 251
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:17.823 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1048, createErrorCount 252
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 1048, createErrorCount 252
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:23.839 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2540, createErrorCount 253
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2540, createErrorCount 253
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:29.856 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 0, createErrorCount 255
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 0, createErrorCount 255
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:32.009 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:08:35.872 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 995, createErrorCount 256
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 995, createErrorCount 256
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:41.884 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2490, createErrorCount 257
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2490, createErrorCount 257
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:47.901 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 3993, createErrorCount 258
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 3993, createErrorCount 258
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:53.923 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 970, createErrorCount 260
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 970, createErrorCount 260
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:08:59.942 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2474, createErrorCount 261
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2474, createErrorCount 261
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:09:02.009 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:09:05.953 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 3958, createErrorCount 262
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 3958, createErrorCount 262
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:09:11.970 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 937, createErrorCount 264
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 937, createErrorCount 264
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:09:17.980 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2426, createErrorCount 265
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2426, createErrorCount 265
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:09:23.990 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3917, createErrorCount 266
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3917, createErrorCount 266
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:09:30.002 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 870, createErrorCount 268
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 870, createErrorCount 268
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:09:32.012 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:09:36.022 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 2368, createErrorCount 269
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 2368, createErrorCount 269
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:09:42.036 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3860, createErrorCount 270
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3860, createErrorCount 270
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:09:48.116 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3058, active 3, maxActive 128, creating 1, createElapseMillis 899, createErrorCount 272
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3058, active 3, maxActive 128, creating 1, createElapseMillis 899, createErrorCount 272
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:09:54.136 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2410, createErrorCount 273
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2410, createErrorCount 273
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:00.186 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 3894, createErrorCount 274
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 3894, createErrorCount 274
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:02.002 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:10:06.196 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 832, createErrorCount 276
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 832, createErrorCount 276
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:12.213 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2320, createErrorCount 277
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 3, maxActive 128, creating 1, createElapseMillis 2320, createErrorCount 277
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:18.236 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 3814, createErrorCount 278
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 3814, createErrorCount 278
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:24.308 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 867, createErrorCount 280
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 867, createErrorCount 280
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:30.314 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2350, createErrorCount 281
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2350, createErrorCount 281
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:32.004 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:10:36.324 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3843, createErrorCount 282
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3843, createErrorCount 282
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:42.335 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 746, createErrorCount 284
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 746, createErrorCount 284
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:48.343 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2240, createErrorCount 285
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 2240, createErrorCount 285
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:10:54.360 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3725, createErrorCount 286
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3725, createErrorCount 286
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:00.385 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3013, active 3, maxActive 128, creating 1, createElapseMillis 733, createErrorCount 288
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3013, active 3, maxActive 128, creating 1, createElapseMillis 733, createErrorCount 288
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:02.003 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:11:06.403 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2195, createErrorCount 289
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 2195, createErrorCount 289
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:12.416 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 3690, createErrorCount 290
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 3690, createErrorCount 290
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:18.429 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 668, createErrorCount 292
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 3, maxActive 128, creating 1, createElapseMillis 668, createErrorCount 292
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:24.434 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2158, createErrorCount 293
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 2158, createErrorCount 293
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:30.440 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3624, createErrorCount 294
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 3624, createErrorCount 294
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:32.003 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:11:36.465 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 582, createErrorCount 296
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 3, maxActive 128, creating 1, createElapseMillis 582, createErrorCount 296
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:42.535 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 2075, createErrorCount 297
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 3, maxActive 128, creating 1, createElapseMillis 2075, createErrorCount 297
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:48.552 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3517, createErrorCount 298
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 3517, createErrorCount 298
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:11:54.568 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 490, createErrorCount 300
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 490, createErrorCount 300
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:12:00.592 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 2002, createErrorCount 301
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 3, maxActive 128, creating 1, createElapseMillis 2002, createErrorCount 301
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:12:02.004 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:12:06.613 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3494, createErrorCount 302
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 3, maxActive 128, creating 1, createElapseMillis 3494, createErrorCount 302
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:12:12.639 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 459, createErrorCount 304
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:479)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:412)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$d0c9e1ba.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 3, maxActive 128, creating 1, createElapseMillis 459, createErrorCount 304
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:906)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:831)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor100.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:850)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 9 more

12:12:30.802 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:13:00.800 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:13:30.792 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

12:14:00.789 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 16 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:08:30.586 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarting,55] - Starting WrapperAllApp on lankdeMacBook-Pro-2.local with PID 65247 (/Users/lank/IdeaProjectsnew/eam/eam/wrapper/wrapper-all/target/classes started by lank in /Users/lank/IdeaProjectsnew/eam)
13:08:30.599 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStartupProfileInfo,651] - No active profile set, falling back to default profiles: default
13:08:36.124 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [setApplicationContext,49] - service-all(default) is ready on port 8089
13:08:48.710 [main] - [] - INFO  c.d.p.f.d.DAOConfig - [primaryDAO,73] - dao is ready : 

user=root
url=jdbc:mysql://121.43.103.102:3306/eam?useSSL=false&serverTimezone=Hongkong&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowPublicKeyRetrieval=true&tinyInt1isBit=false

13:08:49.135 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,215] - TQL Scan Complete
13:08:49.135 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,217] - default sql count : 29
13:08:49.880 [main] - [] - INFO  c.g.f.s.m.ControllerAspector - [init,56] - ControllerAspector Init
13:08:53.253 [main] - [] - INFO  o.g.f.w.f.v.a.PageAspector - [init,67] - PageAspector Init
13:08:56.685 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES W... ] ━━━━━ 
┣ 语句：SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN( ? ,UPPER( ? ))
┣ 参数：{"PARAM_1":"eam","PARAM_2":"eam"}
┣ 执行：SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' ))
┣ 结果： 
┣━ 耗时：81ms , start = 1637125736422
┣━ 返回：RcdSet,size=139
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：null
┗━━━━━ SQL [ SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES W... ] ━━━━━ 

13:08:57.204 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule'
┣ 结果： 
┣━ 耗时：90ms , start = 1637125737112
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:08:57.344 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( valid = :PARAM... ] ━━━━━ 
┣ 语句：select t.* from dp_rule t WHERE ( ( t.deleted= ? ) AND ( valid = ? ) AND ( deleted = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":1}
┣ 执行：select t.* from dp_rule t WHERE ( ( t.deleted= 0 ) AND ( valid = 1 ) AND ( deleted = 0 ))
┣ 结果： 
┣━ 耗时：52ms , start = 1637125737292
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.queryList(RuleServiceImpl.java:244)
┣ TID：null
┗━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( valid = :PARAM... ] ━━━━━ 

13:08:57.407 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule_range","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule_range'
┣ 结果： 
┣━ 耗时：40ms , start = 1637125737366
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.applyAll(RuleServiceImpl.java:426)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl$1.run(RuleServiceImpl.java:87)
    com.github.foxnic.commons.concurrent.task.SimpleTaskManager$1.run(SimpleTaskManager.java:132)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:08:57.490 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.rule_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"509650653266575361","PARAM_18":"509647933944102912","PARAM_19":"509655484735684608","PARAM_10":"509657055074713600","PARAM_11":"505378699583950848","PARAM_12":"509656547438100480","PARAM_13":"505378833612935169","PARAM_14":"509655566583332865","PARAM_15":"509650758551994368","PARAM_16":"506776075892690944","PARAM_9":"509655623806222337","PARAM_8":"509650369479966720","PARAM_7":"509650558735351808","PARAM_6":"509656923604254721","PARAM_5":"506777407038951424","PARAM_4":"509650440854437889","PARAM_3":"509650043460911104","PARAM_2":"509650212042571776"}
┣ 执行：SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.rule_id IN ( '509650212042571776' , '509650043460911104' , '509650440854437889' , '506777407038951424' , '509656923604254721' , '509650558735351808' , '509650369479966720' , '509655623806222337' , '509657055074713600' , '505378699583950848' , '509656547438100480' , '505378833612935169' , '509655566583332865' , '509650758551994368' , '506776075892690944' , '509650653266575361' , '509647933944102912' , '509655484735684608' )
┣ 结果： 
┣━ 耗时：64ms , start = 1637125737419
┣━ 返回：RcdSet,size=19
┣ 调用栈：
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.applyAll(RuleServiceImpl.java:426)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl$1.run(RuleServiceImpl.java:87)
    com.github.foxnic.commons.concurrent.task.SimpleTaskManager$1.run(SimpleTaskManager.java:132)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( d... ] ━━━━━ 

13:08:57.628 [ForkJoinPool-2-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule_condition","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule_condition'
┣ 结果： 
┣━ 耗时：72ms , start = 1637125737555
┣━ 返回：RcdSet,size=24
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:08:57.747 [ForkJoinPool-2-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.range_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"510025118479552512","PARAM_18":"510025732596961280","PARAM_19":"507546341619007488","PARAM_20":"510024900207972352","PARAM_10":"509648598934224896","PARAM_11":"509653130233774080","PARAM_12":"509283833821007872","PARAM_13":"510025213606367232","PARAM_14":"510373868452450304","PARAM_15":"507545845873246208","PARAM_16":"510026172998881280","PARAM_9":"507519270167511040","PARAM_8":"510373972957728768","PARAM_7":"510024950115995648","PARAM_6":"510024837347938304","PARAM_5":"510026109497118720","PARAM_4":"510025000925794304","PARAM_3":"509042008610836480","PARAM_2":"510373932180705280"}
┣ 执行：SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.range_id IN ( '510373932180705280' , '509042008610836480' , '510025000925794304' , '510026109497118720' , '510024837347938304' , '510024950115995648' , '510373972957728768' , '507519270167511040' , '509648598934224896' , '509653130233774080' , '509283833821007872' , '510025213606367232' , '510373868452450304' , '507545845873246208' , '510026172998881280' , '510025118479552512' , '510025732596961280' , '507546341619007488' , '510024900207972352' )
┣ 结果： 
┣━ 耗时：96ms , start = 1637125737650
┣━ 返回：RcdSet,size=57
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHER... ] ━━━━━ 

13:08:57.775 [simple-parallel-task] - [] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 414ms
13:08:57.784 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我起草的流程(chs_instance_drafted) 成功
13:08:57.785 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我待审的流程(chs_instance_approving) 成功
13:08:57.785 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我办结的流程(chs_instance_approved) 成功
13:08:57.785 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我参与的流程(默认)(chs_instance_joined) 成功
13:08:57.786 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本登记审批(eam_asset_insert_approving) 成功
13:08:57.786 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产调拨单据(eam_asset_allocate) 成功
13:08:57.787 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产转移单据(eam_asset_tranfer) 成功
13:08:57.787 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维修单据(eam_asset_repair) 成功
13:08:57.788 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产借用单据(eam_asset_borrow) 成功
13:08:57.788 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产领用单据(eam_asset_collection) 成功
13:08:57.788 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产退库单据(eam_asset_collection_return) 成功
13:08:57.789 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产报废单据(eam_asset_scrap) 成功
13:08:57.789 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本变更(eam_asset_change_base_info) 成功
13:08:57.789 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维保变更(eam_asset_change_maintenance) 成功
13:08:57.790 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产财务变更(eam_asset_change_financial) 成功
13:08:57.790 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产财务变更审批(eam_asset_change_financial_approving) 成功
13:08:57.790 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维保变更审批(eam_asset_change_maintenance_approving) 成功
13:08:57.791 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本变更审批(eam_asset_change_base_info_approving) 成功
13:09:03.261 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarted,61] - Started WrapperAllApp in 35.45 seconds (JVM running for 40.625)
13:09:03.314 [main] - [] - INFO  c.g.f.s.w.WebContext - [gatherUrlMapping,130] - Request Mappings: 

url = /v2/api-docs , method = springfox.documentation.swagger2.web.Swagger2ControllerWebMvc.getDocumentation
url = /swagger-resources , method = springfox.documentation.swagger.web.ApiResourceController.swaggerResources
url = /swagger-resources/configuration/security , method = springfox.documentation.swagger.web.ApiResourceController.securityConfiguration
url = /swagger-resources/configuration/ui , method = springfox.documentation.swagger.web.ApiResourceController.uiConfiguration
url = /service-storage/sys-file/image , method = org.github.foxnic.web.storage.controller.FileController.image
url = /service-storage/sys-file/download , method = org.github.foxnic.web.storage.controller.FileController.download
url = /service-storage/sys-file/get-by-id , method = org.github.foxnic.web.storage.controller.FileController.getById
url = /service-storage/sys-file/get-by-ids , method = org.github.foxnic.web.storage.controller.FileController.getByIds
url = /service-storage/sys-file/upload , method = org.github.foxnic.web.storage.controller.FileController.upload
url = /service-storage/sys-file/delete , method = org.github.foxnic.web.storage.controller.FileController.deleteById
url = /service-storage/sys-file/batch-delete , method = org.github.foxnic.web.storage.controller.FileController.deleteByIds
url = /service-storage/sys-file/data , method = org.github.foxnic.web.storage.controller.FileController.getFileData
url = /service-storage/sys-file/query-paged-list , method = org.github.foxnic.web.storage.controller.FileController.queryPagedList
url = /service-storage/sys-file/query-list , method = org.github.foxnic.web.storage.controller.FileController.queryList
url = /business/storage/file/file_form.html , method = org.github.foxnic.web.storage.page.FilePageController.form
url = /business/storage/file/file_list.html , method = org.github.foxnic.web.storage.page.FilePageController.list
url = /service-system/sys-busi-role/update , method = org.github.foxnic.web.system.controller.BusiRoleController.update
url = /service-system/sys-busi-role/save , method = org.github.foxnic.web.system.controller.BusiRoleController.save
url = /service-system/sys-busi-role/insert , method = org.github.foxnic.web.system.controller.BusiRoleController.insert
url = /service-system/sys-busi-role/export-excel , method = org.github.foxnic.web.system.controller.BusiRoleController.exportExcel
url = /service-system/sys-busi-role/export-excel-template , method = org.github.foxnic.web.system.controller.BusiRoleController.exportExcelTemplate
url = /service-system/sys-busi-role/import-excel , method = org.github.foxnic.web.system.controller.BusiRoleController.importExcel
url = /service-system/sys-busi-role/get-by-id , method = org.github.foxnic.web.system.controller.BusiRoleController.getById
url = /service-system/sys-busi-role/get-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleController.getByIds
url = /service-system/sys-busi-role/delete , method = org.github.foxnic.web.system.controller.BusiRoleController.deleteById
url = /service-system/sys-busi-role/delete-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleController.deleteByIds
url = /service-system/sys-busi-role/query-paged-list , method = org.github.foxnic.web.system.controller.BusiRoleController.queryPagedList
url = /service-system/sys-busi-role/query-list , method = org.github.foxnic.web.system.controller.BusiRoleController.queryList
url = /service-system/sys-busi-role/get-employee-roles , method = org.github.foxnic.web.system.controller.BusiRoleController.getEmployeeRoles
url = /service-system/sys-busi-role/get-by-codes , method = org.github.foxnic.web.system.controller.BusiRoleController.getByCodes
url = /service-system/sys-db-cache/update , method = org.github.foxnic.web.system.controller.DbCacheController.update
url = /service-system/sys-db-cache/save , method = org.github.foxnic.web.system.controller.DbCacheController.save
url = /service-system/sys-db-cache/insert , method = org.github.foxnic.web.system.controller.DbCacheController.insert
url = /service-system/sys-db-cache/export-excel , method = org.github.foxnic.web.system.controller.DbCacheController.exportExcel
url = /service-system/sys-db-cache/export-excel-template , method = org.github.foxnic.web.system.controller.DbCacheController.exportExcelTemplate
url = /service-system/sys-db-cache/import-excel , method = org.github.foxnic.web.system.controller.DbCacheController.importExcel
url = /service-system/sys-db-cache/get-by-id , method = org.github.foxnic.web.system.controller.DbCacheController.getById
url = /service-system/sys-db-cache/delete , method = org.github.foxnic.web.system.controller.DbCacheController.deleteById
url = /service-system/sys-db-cache/delete-by-ids , method = org.github.foxnic.web.system.controller.DbCacheController.deleteByIds
url = /service-system/sys-db-cache/query-paged-list , method = org.github.foxnic.web.system.controller.DbCacheController.queryPagedList
url = /service-system/sys-db-cache/query-list , method = org.github.foxnic.web.system.controller.DbCacheController.queryList
url = /service-system/sys-node/update , method = org.github.foxnic.web.system.controller.NodeController.update
url = /service-system/sys-node/save , method = org.github.foxnic.web.system.controller.NodeController.save
url = /service-system/sys-node/insert , method = org.github.foxnic.web.system.controller.NodeController.insert
url = /service-system/sys-node/export-excel , method = org.github.foxnic.web.system.controller.NodeController.exportExcel
url = /service-system/sys-node/export-excel-template , method = org.github.foxnic.web.system.controller.NodeController.exportExcelTemplate
url = /service-system/sys-node/import-excel , method = org.github.foxnic.web.system.controller.NodeController.importExcel
url = /service-system/sys-node/get-by-id , method = org.github.foxnic.web.system.controller.NodeController.getById
url = /service-system/sys-node/get-by-ids , method = org.github.foxnic.web.system.controller.NodeController.getByIds
url = /service-system/sys-node/delete , method = org.github.foxnic.web.system.controller.NodeController.deleteById
url = /service-system/sys-node/delete-by-ids , method = org.github.foxnic.web.system.controller.NodeController.deleteByIds
url = /service-system/sys-node/query-paged-list , method = org.github.foxnic.web.system.controller.NodeController.queryPagedList
url = /service-system/sys-node/query-list , method = org.github.foxnic.web.system.controller.NodeController.queryList
url = /service-system/sys-code-example-car/update , method = org.github.foxnic.web.system.controller.CodeExampleCarController.update
url = /service-system/sys-code-example-car/save , method = org.github.foxnic.web.system.controller.CodeExampleCarController.save
url = /service-system/sys-code-example-car/insert , method = org.github.foxnic.web.system.controller.CodeExampleCarController.insert
url = /service-system/sys-code-example-car/export-excel , method = org.github.foxnic.web.system.controller.CodeExampleCarController.exportExcel
url = /service-system/sys-code-example-car/export-excel-template , method = org.github.foxnic.web.system.controller.CodeExampleCarController.exportExcelTemplate
url = /service-system/sys-code-example-car/import-excel , method = org.github.foxnic.web.system.controller.CodeExampleCarController.importExcel
url = /service-system/sys-code-example-car/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleCarController.getById
url = /service-system/sys-code-example-car/get-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleCarController.getByIds
url = /service-system/sys-code-example-car/delete , method = org.github.foxnic.web.system.controller.CodeExampleCarController.deleteById
url = /service-system/sys-code-example-car/delete-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleCarController.deleteByIds
url = /service-system/sys-code-example-car/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleCarController.queryPagedList
url = /service-system/sys-code-example-car/query-list , method = org.github.foxnic.web.system.controller.CodeExampleCarController.queryList
url = /service-system/sys-dict/update , method = org.github.foxnic.web.system.controller.DictController.update
url = /service-system/sys-dict/save , method = org.github.foxnic.web.system.controller.DictController.save
url = /service-system/sys-dict/insert , method = org.github.foxnic.web.system.controller.DictController.insert
url = /service-system/sys-dict/export-excel , method = org.github.foxnic.web.system.controller.DictController.exportExcel
url = /service-system/sys-dict/export-excel-template , method = org.github.foxnic.web.system.controller.DictController.exportExcelTemplate
url = /service-system/sys-dict/import-excel , method = org.github.foxnic.web.system.controller.DictController.importExcel
url = /service-system/sys-dict/get-by-id , method = org.github.foxnic.web.system.controller.DictController.getById
url = /service-system/sys-dict/get-by-ids , method = org.github.foxnic.web.system.controller.DictController.getByIds
url = /service-system/sys-dict/delete , method = org.github.foxnic.web.system.controller.DictController.deleteById
url = /service-system/sys-dict/delete-by-ids , method = org.github.foxnic.web.system.controller.DictController.deleteByIds
url = /service-system/sys-dict/query-paged-list , method = org.github.foxnic.web.system.controller.DictController.queryPagedList
url = /service-system/sys-dict/query-list , method = org.github.foxnic.web.system.controller.DictController.queryList
url = /service-system/sys-user-tenant/update , method = org.github.foxnic.web.system.controller.UserTenantController.update
url = /service-system/sys-user-tenant/save , method = org.github.foxnic.web.system.controller.UserTenantController.save
url = /service-system/sys-user-tenant/insert , method = org.github.foxnic.web.system.controller.UserTenantController.insert
url = /service-system/sys-user-tenant/export-excel , method = org.github.foxnic.web.system.controller.UserTenantController.exportExcel
url = /service-system/sys-user-tenant/export-excel-template , method = org.github.foxnic.web.system.controller.UserTenantController.exportExcelTemplate
url = /service-system/sys-user-tenant/import-excel , method = org.github.foxnic.web.system.controller.UserTenantController.importExcel
url = /service-system/sys-user-tenant/get-by-id , method = org.github.foxnic.web.system.controller.UserTenantController.getById
url = /service-system/sys-user-tenant/get-by-ids , method = org.github.foxnic.web.system.controller.UserTenantController.getByIds
url = /service-system/sys-user-tenant/delete , method = org.github.foxnic.web.system.controller.UserTenantController.deleteById
url = /service-system/sys-user-tenant/delete-by-ids , method = org.github.foxnic.web.system.controller.UserTenantController.deleteByIds
url = /service-system/sys-user-tenant/query-paged-list , method = org.github.foxnic.web.system.controller.UserTenantController.queryPagedList
url = /service-system/sys-user-tenant/query-list , method = org.github.foxnic.web.system.controller.UserTenantController.queryList
url = /service-system/sys-busi-role-member/update , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.update
url = /service-system/sys-busi-role-member/save , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.save
url = /service-system/sys-busi-role-member/insert , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.insert
url = /service-system/sys-busi-role-member/inserts , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.inserts
url = /service-system/sys-busi-role-member/export-excel , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.exportExcel
url = /service-system/sys-busi-role-member/export-excel-template , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.exportExcelTemplate
url = /service-system/sys-busi-role-member/import-excel , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.importExcel
url = /service-system/sys-busi-role-member/get-by-id , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.getById
url = /service-system/sys-busi-role-member/get-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.getByIds
url = /service-system/sys-busi-role-member/delete , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.deleteById
url = /service-system/sys-busi-role-member/delete-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.deleteByIds
url = /service-system/sys-busi-role-member/query-paged-list , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.queryPagedList
url = /service-system/sys-busi-role-member/query-list , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.queryList
url = /service-system/sys-dict-item/update , method = org.github.foxnic.web.system.controller.DictItemController.update
url = /service-system/sys-dict-item/save , method = org.github.foxnic.web.system.controller.DictItemController.save
url = /service-system/sys-dict-item/insert , method = org.github.foxnic.web.system.controller.DictItemController.insert
url = /service-system/sys-dict-item/export-excel , method = org.github.foxnic.web.system.controller.DictItemController.exportExcel
url = /service-system/sys-dict-item/export-excel-template , method = org.github.foxnic.web.system.controller.DictItemController.exportExcelTemplate
url = /service-system/sys-dict-item/import-excel , method = org.github.foxnic.web.system.controller.DictItemController.importExcel
url = /service-system/sys-dict-item/get-by-id , method = org.github.foxnic.web.system.controller.DictItemController.getById
url = /service-system/sys-dict-item/get-by-ids , method = org.github.foxnic.web.system.controller.DictItemController.getByIds
url = /service-system/sys-dict-item/delete , method = org.github.foxnic.web.system.controller.DictItemController.deleteById
url = /service-system/sys-dict-item/delete-by-ids , method = org.github.foxnic.web.system.controller.DictItemController.deleteByIds
url = /service-system/sys-dict-item/query-paged-list , method = org.github.foxnic.web.system.controller.DictItemController.queryPagedList
url = /service-system/sys-dict-item/query-list , method = org.github.foxnic.web.system.controller.DictItemController.queryList
url = /service-system/sys-code-example/update , method = org.github.foxnic.web.system.controller.CodeExampleController.update
url = /service-system/sys-code-example/save , method = org.github.foxnic.web.system.controller.CodeExampleController.save
url = /service-system/sys-code-example/insert , method = org.github.foxnic.web.system.controller.CodeExampleController.insert
url = /service-system/sys-code-example/export-excel , method = org.github.foxnic.web.system.controller.CodeExampleController.exportExcel
url = /service-system/sys-code-example/export-excel-template , method = org.github.foxnic.web.system.controller.CodeExampleController.exportExcelTemplate
url = /service-system/sys-code-example/import-excel , method = org.github.foxnic.web.system.controller.CodeExampleController.importExcel
url = /service-system/sys-code-example/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleController.getById
url = /service-system/sys-code-example/get-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleController.getByIds
url = /service-system/sys-code-example/delete , method = org.github.foxnic.web.system.controller.CodeExampleController.deleteById
url = /service-system/sys-code-example/delete-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleController.deleteByIds
url = /service-system/sys-code-example/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleController.queryPagedList
url = /service-system/sys-code-example/query-list , method = org.github.foxnic.web.system.controller.CodeExampleController.queryList
url = /service-system/sys-invoke-log/update , method = org.github.foxnic.web.system.controller.InvokeLogController.update
url = /service-system/sys-invoke-log/save , method = org.github.foxnic.web.system.controller.InvokeLogController.save
url = /service-system/sys-invoke-log/insert , method = org.github.foxnic.web.system.controller.InvokeLogController.insert
url = /service-system/sys-invoke-log/export-excel , method = org.github.foxnic.web.system.controller.InvokeLogController.exportExcel
url = /service-system/sys-invoke-log/export-excel-template , method = org.github.foxnic.web.system.controller.InvokeLogController.exportExcelTemplate
url = /service-system/sys-invoke-log/import-excel , method = org.github.foxnic.web.system.controller.InvokeLogController.importExcel
url = /service-system/sys-invoke-log/get-by-id , method = org.github.foxnic.web.system.controller.InvokeLogController.getById
url = /service-system/sys-invoke-log/get-by-ids , method = org.github.foxnic.web.system.controller.InvokeLogController.getByIds
url = /service-system/sys-invoke-log/delete , method = org.github.foxnic.web.system.controller.InvokeLogController.deleteById
url = /service-system/sys-invoke-log/delete-by-ids , method = org.github.foxnic.web.system.controller.InvokeLogController.deleteByIds
url = /service-system/sys-invoke-log/query-paged-list , method = org.github.foxnic.web.system.controller.InvokeLogController.queryPagedList
url = /service-system/sys-invoke-log/query-list , method = org.github.foxnic.web.system.controller.InvokeLogController.queryList
url = /service-system/sys-lang/update , method = org.github.foxnic.web.system.controller.LangController.update
url = /service-system/sys-lang/save , method = org.github.foxnic.web.system.controller.LangController.save
url = /service-system/sys-lang/insert , method = org.github.foxnic.web.system.controller.LangController.insert
url = /service-system/sys-lang/export-excel , method = org.github.foxnic.web.system.controller.LangController.exportExcel
url = /service-system/sys-lang/export-excel-template , method = org.github.foxnic.web.system.controller.LangController.exportExcelTemplate
url = /service-system/sys-lang/import-excel , method = org.github.foxnic.web.system.controller.LangController.importExcel
url = /service-system/sys-lang/get-by-id , method = org.github.foxnic.web.system.controller.LangController.getById
url = /service-system/sys-lang/delete , method = org.github.foxnic.web.system.controller.LangController.deleteById
url = /service-system/sys-lang/batch-delete , method = org.github.foxnic.web.system.controller.LangController.deleteByIds
url = /service-system/sys-lang/query-paged-list , method = org.github.foxnic.web.system.controller.LangController.queryPagedList
url = /service-system/sys-lang/query-list , method = org.github.foxnic.web.system.controller.LangController.queryList
url = /service-system/sys-code-example-student/update , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.update
url = /service-system/sys-code-example-student/save , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.save
url = /service-system/sys-code-example-student/insert , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.insert
url = /service-system/sys-code-example-student/export-excel , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.exportExcel
url = /service-system/sys-code-example-student/export-excel-template , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.exportExcelTemplate
url = /service-system/sys-code-example-student/import-excel , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.importExcel
url = /service-system/sys-code-example-student/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.getById
url = /service-system/sys-code-example-student/get-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.getByIds
url = /service-system/sys-code-example-student/delete , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.deleteById
url = /service-system/sys-code-example-student/delete-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.deleteByIds
url = /service-system/sys-code-example-student/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.queryPagedList
url = /service-system/sys-code-example-student/query-list , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.queryList
url = /service-system/sys-config/update , method = org.github.foxnic.web.system.controller.ConfigController.update
url = /service-system/sys-config/save , method = org.github.foxnic.web.system.controller.ConfigController.save
url = /service-system/sys-config/insert , method = org.github.foxnic.web.system.controller.ConfigController.insert
url = /service-system/sys-config/export-excel , method = org.github.foxnic.web.system.controller.ConfigController.exportExcel
url = /service-system/sys-config/export-excel-template , method = org.github.foxnic.web.system.controller.ConfigController.exportExcelTemplate
url = /service-system/sys-config/import-excel , method = org.github.foxnic.web.system.controller.ConfigController.importExcel
url = /service-system/sys-config/get-by-id , method = org.github.foxnic.web.system.controller.ConfigController.getById
url = /service-system/sys-config/delete , method = org.github.foxnic.web.system.controller.ConfigController.deleteById
url = /service-system/sys-config/batch-delete , method = org.github.foxnic.web.system.controller.ConfigController.deleteByIds
url = /service-system/sys-config/query-paged-list , method = org.github.foxnic.web.system.controller.ConfigController.queryPagedList
url = /service-system/sys-config/query-list , method = org.github.foxnic.web.system.controller.ConfigController.queryList
url = /service-system/sys-sequence/update , method = org.github.foxnic.web.system.controller.SequenceController.update
url = /service-system/sys-sequence/save , method = org.github.foxnic.web.system.controller.SequenceController.save
url = /service-system/sys-sequence/insert , method = org.github.foxnic.web.system.controller.SequenceController.insert
url = /service-system/sys-sequence/export-excel , method = org.github.foxnic.web.system.controller.SequenceController.exportExcel
url = /service-system/sys-sequence/export-excel-template , method = org.github.foxnic.web.system.controller.SequenceController.exportExcelTemplate
url = /service-system/sys-sequence/import-excel , method = org.github.foxnic.web.system.controller.SequenceController.importExcel
url = /service-system/sys-sequence/get-by-id , method = org.github.foxnic.web.system.controller.SequenceController.getById
url = /service-system/sys-sequence/get-by-ids , method = org.github.foxnic.web.system.controller.SequenceController.getByIds
url = /service-system/sys-sequence/delete , method = org.github.foxnic.web.system.controller.SequenceController.deleteById
url = /service-system/sys-sequence/delete-by-ids , method = org.github.foxnic.web.system.controller.SequenceController.deleteByIds
url = /service-system/sys-sequence/query-paged-list , method = org.github.foxnic.web.system.controller.SequenceController.queryPagedList
url = /service-system/sys-sequence/query-list , method = org.github.foxnic.web.system.controller.SequenceController.queryList
url = /service-system/sys-tenant/update , method = org.github.foxnic.web.system.controller.TenantController.update
url = /service-system/sys-tenant/save , method = org.github.foxnic.web.system.controller.TenantController.save
url = /service-system/sys-tenant/insert , method = org.github.foxnic.web.system.controller.TenantController.insert
url = /service-system/sys-tenant/export-excel , method = org.github.foxnic.web.system.controller.TenantController.exportExcel
url = /service-system/sys-tenant/export-excel-template , method = org.github.foxnic.web.system.controller.TenantController.exportExcelTemplate
url = /service-system/sys-tenant/import-excel , method = org.github.foxnic.web.system.controller.TenantController.importExcel
url = /service-system/sys-tenant/get-by-id , method = org.github.foxnic.web.system.controller.TenantController.getById
url = /service-system/sys-tenant/get-by-ids , method = org.github.foxnic.web.system.controller.TenantController.getByIds
url = /service-system/sys-tenant/delete , method = org.github.foxnic.web.system.controller.TenantController.deleteById
url = /service-system/sys-tenant/delete-by-ids , method = org.github.foxnic.web.system.controller.TenantController.deleteByIds
url = /service-system/sys-tenant/query-paged-list , method = org.github.foxnic.web.system.controller.TenantController.queryPagedList
url = /service-system/sys-tenant/query-list , method = org.github.foxnic.web.system.controller.TenantController.queryList
url = /business/system/busi_role_member/busi_role_member_form.html , method = org.github.foxnic.web.system.page.BusiRoleMemberPageController.form
url = /business/system/busi_role_member/busi_role_member_list.html , method = org.github.foxnic.web.system.page.BusiRoleMemberPageController.list
url = /business/system/db_cache/db_cache_form.html , method = org.github.foxnic.web.system.page.DbCachePageController.form
url = /business/system/db_cache/db_cache_list.html , method = org.github.foxnic.web.system.page.DbCachePageController.list
url = /business/system/dict/dict_form.html , method = org.github.foxnic.web.system.page.DictPageController.form
url = /business/system/dict/dict_list.html , method = org.github.foxnic.web.system.page.DictPageController.list
url = /index.html , method = org.github.foxnic.web.system.page.PortalPageController.index
url = / , method = org.github.foxnic.web.system.page.PortalPageController.index
url = /login.html , method = org.github.foxnic.web.system.page.PortalPageController.login
url = /business/system/busi_role/busi_role_form.html , method = org.github.foxnic.web.system.page.BusiRolePageController.form
url = /business/system/busi_role/busi_role_list.html , method = org.github.foxnic.web.system.page.BusiRolePageController.list
url = /business/system/lang/lang_form.html , method = org.github.foxnic.web.system.page.LangPageController.form
url = /business/system/lang/lang_list.html , method = org.github.foxnic.web.system.page.LangPageController.list
url = /business/system/config/config_form.html , method = org.github.foxnic.web.system.page.ConfigPageController.form
url = /business/system/config/config_list.html , method = org.github.foxnic.web.system.page.ConfigPageController.list
url = /business/system/dict_item/dict_item_form.html , method = org.github.foxnic.web.system.page.DictItemPageController.form
url = /business/system/dict_item/dict_item_list.html , method = org.github.foxnic.web.system.page.DictItemPageController.list
url = /business/system/user_tenant/user_tenant_form.html , method = org.github.foxnic.web.system.page.UserTenantPageController.form
url = /business/system/user_tenant/user_tenant_list.html , method = org.github.foxnic.web.system.page.UserTenantPageController.list
url = /business/system/code_example/code_example_form.html , method = org.github.foxnic.web.system.page.CodeExamplePageController.form
url = /business/system/code_example/code_example_list.html , method = org.github.foxnic.web.system.page.CodeExamplePageController.list
url = /business/system/tenant/tenant_form.html , method = org.github.foxnic.web.system.page.TenantPageController.form
url = /business/system/tenant/tenant_list.html , method = org.github.foxnic.web.system.page.TenantPageController.list
url = /business/system/code_example_car/code_example_car_form.html , method = org.github.foxnic.web.system.page.CodeExampleCarPageController.form
url = /business/system/code_example_car/code_example_car_list.html , method = org.github.foxnic.web.system.page.CodeExampleCarPageController.list
url = /business/system/invoke_log/invoke_log_form.html , method = org.github.foxnic.web.system.page.InvokeLogPageController.form
url = /business/system/invoke_log/invoke_log_list.html , method = org.github.foxnic.web.system.page.InvokeLogPageController.list
url = /business/system/sequence/sequence_form.html , method = org.github.foxnic.web.system.page.SequencePageController.form
url = /business/system/sequence/sequence_list.html , method = org.github.foxnic.web.system.page.SequencePageController.list
url = /business/system/code_example_student/code_example_student_form.html , method = org.github.foxnic.web.system.page.CodeExampleStudentPageController.form
url = /business/system/code_example_student/code_example_student_list.html , method = org.github.foxnic.web.system.page.CodeExampleStudentPageController.list
url = /business/system/node/node_form.html , method = org.github.foxnic.web.system.page.NodePageController.form
url = /business/system/node/node_list.html , method = org.github.foxnic.web.system.page.NodePageController.list
url = /service-oauth/sys-menu/update , method = org.github.foxnic.web.oauth.controller.MenuController.update
url = /service-oauth/sys-menu/save , method = org.github.foxnic.web.oauth.controller.MenuController.save
url = /service-oauth/sys-menu/insert , method = org.github.foxnic.web.oauth.controller.MenuController.insert
url = /service-oauth/sys-menu/search , method = org.github.foxnic.web.oauth.controller.MenuController.search
url = /service-oauth/sys-menu/query-nodes , method = org.github.foxnic.web.oauth.controller.MenuController.queryNodes
url = /service-oauth/sys-menu/save-hierarchy , method = org.github.foxnic.web.oauth.controller.MenuController.changeParent
url = /service-oauth/sys-menu/get-by-id , method = org.github.foxnic.web.oauth.controller.MenuController.getById
url = /service-oauth/sys-menu/delete , method = org.github.foxnic.web.oauth.controller.MenuController.deleteById
url = /service-oauth/sys-menu/batch-delete , method = org.github.foxnic.web.oauth.controller.MenuController.deleteByIds
url = /service-oauth/sys-menu/query-paged-list , method = org.github.foxnic.web.oauth.controller.MenuController.queryPagedList
url = /service-oauth/sys-menu/query-list , method = org.github.foxnic.web.oauth.controller.MenuController.queryList
url = /service-oauth/sys-resourze/update , method = org.github.foxnic.web.oauth.controller.ResourzeController.update
url = /service-oauth/sys-resourze/save , method = org.github.foxnic.web.oauth.controller.ResourzeController.save
url = /service-oauth/sys-resourze/insert , method = org.github.foxnic.web.oauth.controller.ResourzeController.insert
url = /service-oauth/sys-resourze/export-excel , method = org.github.foxnic.web.oauth.controller.ResourzeController.exportExcel
url = /service-oauth/sys-resourze/export-excel-template , method = org.github.foxnic.web.oauth.controller.ResourzeController.exportExcelTemplate
url = /service-oauth/sys-resourze/import-excel , method = org.github.foxnic.web.oauth.controller.ResourzeController.importExcel
url = /service-oauth/sys-resourze/get-by-id , method = org.github.foxnic.web.oauth.controller.ResourzeController.getById
url = /service-oauth/sys-resourze/get-by-ids , method = org.github.foxnic.web.oauth.controller.ResourzeController.getByIds
url = /service-oauth/sys-resourze/delete , method = org.github.foxnic.web.oauth.controller.ResourzeController.deleteById
url = /service-oauth/sys-resourze/delete-by-ids , method = org.github.foxnic.web.oauth.controller.ResourzeController.deleteByIds
url = /service-oauth/sys-resourze/query-paged-list , method = org.github.foxnic.web.oauth.controller.ResourzeController.queryPagedList
url = /service-oauth/sys-resourze/query-list , method = org.github.foxnic.web.oauth.controller.ResourzeController.queryList
url = /service-oauth/sys-session-online/update , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.update
url = /service-oauth/sys-session-online/save , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.save
url = /service-oauth/sys-session-online/insert , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.insert
url = /service-oauth/sys-session-online/get-by-id , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.getById
url = /service-oauth/sys-session-online/delete , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.deleteById
url = /service-oauth/sys-session-online/batch-delete , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.deleteByIds
url = /service-oauth/sys-session-online/query-paged-list , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.queryPagedList
url = /service-oauth/sys-session-online/query-list , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.queryList
url = /service-oauth/sys-user/update , method = org.github.foxnic.web.oauth.controller.UserController.update
url = /service-oauth/sys-user/save , method = org.github.foxnic.web.oauth.controller.UserController.save
url = /service-oauth/sys-user/insert , method = org.github.foxnic.web.oauth.controller.UserController.insert
url = /service-oauth/sys-user/change-passwd , method = org.github.foxnic.web.oauth.controller.UserController.changePasswd
url = /security/get-session-user , method = org.github.foxnic.web.oauth.controller.UserController.getSessionUser
url = /service-oauth/sys-user/get-by-id , method = org.github.foxnic.web.oauth.controller.UserController.getById
url = /service-oauth/sys-user/delete , method = org.github.foxnic.web.oauth.controller.UserController.deleteById
url = /service-oauth/sys-user/batch-delete , method = org.github.foxnic.web.oauth.controller.UserController.deleteByIds
url = /service-oauth/sys-user/query-paged-list , method = org.github.foxnic.web.oauth.controller.UserController.queryPagedList
url = /service-oauth/sys-user/query-list , method = org.github.foxnic.web.oauth.controller.UserController.queryList
url = /security/captcha/image/{browserId} , method = org.github.foxnic.web.oauth.controller.CaptchaController.createCode
url = /service-oauth/sys-role/update , method = org.github.foxnic.web.oauth.controller.RoleController.update
url = /service-oauth/sys-role/save , method = org.github.foxnic.web.oauth.controller.RoleController.save
url = /service-oauth/sys-role/insert , method = org.github.foxnic.web.oauth.controller.RoleController.insert
url = /service-oauth/sys-role/export-excel , method = org.github.foxnic.web.oauth.controller.RoleController.exportExcel
url = /service-oauth/sys-role/export-excel-template , method = org.github.foxnic.web.oauth.controller.RoleController.exportExcelTemplate
url = /service-oauth/sys-role/import-excel , method = org.github.foxnic.web.oauth.controller.RoleController.importExcel
url = /service-oauth/sys-role/get-by-id , method = org.github.foxnic.web.oauth.controller.RoleController.getById
url = /service-oauth/sys-role/get-by-ids , method = org.github.foxnic.web.oauth.controller.RoleController.getByIds
url = /service-oauth/sys-role/delete , method = org.github.foxnic.web.oauth.controller.RoleController.deleteById
url = /service-oauth/sys-role/delete-by-ids , method = org.github.foxnic.web.oauth.controller.RoleController.deleteByIds
url = /service-oauth/sys-role/query-paged-list , method = org.github.foxnic.web.oauth.controller.RoleController.queryPagedList
url = /service-oauth/sys-role/query-list , method = org.github.foxnic.web.oauth.controller.RoleController.queryList
url = /business/oauth/session_online/session_online_form.html , method = org.github.foxnic.web.oauth.page.SessionOnlinePageController.form
url = /business/oauth/session_online/session_online_list.html , method = org.github.foxnic.web.oauth.page.SessionOnlinePageController.list
url = /business/oauth/token/token_form.html , method = org.github.foxnic.web.oauth.page.TokenPageController.form
url = /business/oauth/token/token_list.html , method = org.github.foxnic.web.oauth.page.TokenPageController.list
url = /business/oauth/role/role_form.html , method = org.github.foxnic.web.oauth.page.RolePageController.form
url = /business/oauth/role/role_list.html , method = org.github.foxnic.web.oauth.page.RolePageController.list
url = /business/oauth/oauth_client/oauth_client_form.html , method = org.github.foxnic.web.oauth.page.OauthClientPageController.form
url = /business/oauth/oauth_client/oauth_client_list.html , method = org.github.foxnic.web.oauth.page.OauthClientPageController.list
url = /business/oauth/menu/menu_form.html , method = org.github.foxnic.web.oauth.page.MenuPageController.form
url = /business/oauth/menu/menu_list.html , method = org.github.foxnic.web.oauth.page.MenuPageController.list
url = /business/oauth/menu/menu_dialog.html , method = org.github.foxnic.web.oauth.page.MenuPageController.dialog
url = /business/oauth/user/user_form.html , method = org.github.foxnic.web.oauth.page.UserPageController.form
url = /business/oauth/user/user_list.html , method = org.github.foxnic.web.oauth.page.UserPageController.list
url = /business/oauth/resourze/resourze_form.html , method = org.github.foxnic.web.oauth.page.ResourzePageController.form
url = /business/oauth/resourze/resourze_list.html , method = org.github.foxnic.web.oauth.page.ResourzePageController.list
url = /service-hrm/hrm-company/update , method = org.github.foxnic.web.hrm.controller.CompanyController.update
url = /service-hrm/hrm-company/save , method = org.github.foxnic.web.hrm.controller.CompanyController.save
url = /service-hrm/hrm-company/insert , method = org.github.foxnic.web.hrm.controller.CompanyController.insert
url = /service-hrm/hrm-company/export-excel , method = org.github.foxnic.web.hrm.controller.CompanyController.exportExcel
url = /service-hrm/hrm-company/export-excel-template , method = org.github.foxnic.web.hrm.controller.CompanyController.exportExcelTemplate
url = /service-hrm/hrm-company/import-excel , method = org.github.foxnic.web.hrm.controller.CompanyController.importExcel
url = /service-hrm/hrm-company/get-by-id , method = org.github.foxnic.web.hrm.controller.CompanyController.getById
url = /service-hrm/hrm-company/get-by-ids , method = org.github.foxnic.web.hrm.controller.CompanyController.getByIds
url = /service-hrm/hrm-company/delete , method = org.github.foxnic.web.hrm.controller.CompanyController.deleteById
url = /service-hrm/hrm-company/delete-by-ids , method = org.github.foxnic.web.hrm.controller.CompanyController.deleteByIds
url = /service-hrm/hrm-company/query-paged-list , method = org.github.foxnic.web.hrm.controller.CompanyController.queryPagedList
url = /service-hrm/hrm-company/query-list , method = org.github.foxnic.web.hrm.controller.CompanyController.queryList
url = /service-hrm/hrm-position/update , method = org.github.foxnic.web.hrm.controller.PositionController.update
url = /service-hrm/hrm-position/save , method = org.github.foxnic.web.hrm.controller.PositionController.save
url = /service-hrm/hrm-position/insert , method = org.github.foxnic.web.hrm.controller.PositionController.insert
url = /service-hrm/hrm-position/export-excel , method = org.github.foxnic.web.hrm.controller.PositionController.exportExcel
url = /service-hrm/hrm-position/export-excel-template , method = org.github.foxnic.web.hrm.controller.PositionController.exportExcelTemplate
url = /service-hrm/hrm-position/import-excel , method = org.github.foxnic.web.hrm.controller.PositionController.importExcel
url = /service-hrm/hrm-position/get-by-id , method = org.github.foxnic.web.hrm.controller.PositionController.getById
url = /service-hrm/hrm-position/get-by-ids , method = org.github.foxnic.web.hrm.controller.PositionController.getByIds
url = /service-hrm/hrm-position/delete , method = org.github.foxnic.web.hrm.controller.PositionController.deleteById
url = /service-hrm/hrm-position/delete-by-ids , method = org.github.foxnic.web.hrm.controller.PositionController.deleteByIds
url = /service-hrm/hrm-position/query-paged-list , method = org.github.foxnic.web.hrm.controller.PositionController.queryPagedList
url = /service-hrm/hrm-position/query-list , method = org.github.foxnic.web.hrm.controller.PositionController.queryList
url = /service-hrm/hrm-employee/update , method = org.github.foxnic.web.hrm.controller.EmployeeController.update
url = /service-hrm/hrm-employee/save , method = org.github.foxnic.web.hrm.controller.EmployeeController.save
url = /service-hrm/hrm-employee/insert , method = org.github.foxnic.web.hrm.controller.EmployeeController.insert
url = /service-hrm/hrm-employee/export-excel , method = org.github.foxnic.web.hrm.controller.EmployeeController.exportExcel
url = /service-hrm/hrm-employee/export-excel-template , method = org.github.foxnic.web.hrm.controller.EmployeeController.exportExcelTemplate
url = /service-hrm/hrm-employee/import-excel , method = org.github.foxnic.web.hrm.controller.EmployeeController.importExcel
url = /service-hrm/hrm-employee/get-by-id , method = org.github.foxnic.web.hrm.controller.EmployeeController.getById
url = /service-hrm/hrm-employee/get-by-ids , method = org.github.foxnic.web.hrm.controller.EmployeeController.getByIds
url = /service-hrm/hrm-employee/delete , method = org.github.foxnic.web.hrm.controller.EmployeeController.deleteById
url = /service-hrm/hrm-employee/delete-by-ids , method = org.github.foxnic.web.hrm.controller.EmployeeController.deleteByIds
url = /service-hrm/hrm-employee/query-paged-list , method = org.github.foxnic.web.hrm.controller.EmployeeController.queryPagedList
url = /service-hrm/hrm-employee/get-by-badge , method = org.github.foxnic.web.hrm.controller.EmployeeController.getByBadge
url = /service-hrm/hrm-employee/get-by-badges , method = org.github.foxnic.web.hrm.controller.EmployeeController.getByBadges
url = /service-hrm/hrm-employee/query-list , method = org.github.foxnic.web.hrm.controller.EmployeeController.queryList
url = /service-hrm/hrm-favourite-group/update , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.update
url = /service-hrm/hrm-favourite-group/save , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.save
url = /service-hrm/hrm-favourite-group/insert , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.insert
url = /service-hrm/hrm-favourite-group/export-excel , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.exportExcel
url = /service-hrm/hrm-favourite-group/export-excel-template , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.exportExcelTemplate
url = /service-hrm/hrm-favourite-group/import-excel , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.importExcel
url = /service-hrm/hrm-favourite-group/get-by-id , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.getById
url = /service-hrm/hrm-favourite-group/get-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.getByIds
url = /service-hrm/hrm-favourite-group/delete , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.deleteById
url = /service-hrm/hrm-favourite-group/delete-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.deleteByIds
url = /service-hrm/hrm-favourite-group/query-paged-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.queryPagedList
url = /service-hrm/hrm-favourite-group/query-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.queryList
url = /service-hrm/hrm-favourite-group-item/update , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.update
url = /service-hrm/hrm-favourite-group-item/save , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.save
url = /service-hrm/hrm-favourite-group-item/inserts , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.insert
url = /service-hrm/hrm-favourite-group-item/insert , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.insert
url = /service-hrm/hrm-favourite-group-item/remove-all , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.removeAll
url = /service-hrm/hrm-favourite-group-item/export-excel , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.exportExcel
url = /service-hrm/hrm-favourite-group-item/export-excel-template , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.exportExcelTemplate
url = /service-hrm/hrm-favourite-group-item/import-excel , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.importExcel
url = /service-hrm/hrm-favourite-group-item/get-by-id , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.getById
url = /service-hrm/hrm-favourite-group-item/get-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.getByIds
url = /service-hrm/hrm-favourite-group-item/delete , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.deleteById
url = /service-hrm/hrm-favourite-group-item/delete-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.deleteByIds
url = /service-hrm/hrm-favourite-group-item/query-paged-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.queryPagedList
url = /service-hrm/hrm-favourite-group-item/query-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.queryList
url = /service-hrm/hrm-organization/update , method = org.github.foxnic.web.hrm.controller.OrganizationController.update
url = /service-hrm/hrm-organization/save , method = org.github.foxnic.web.hrm.controller.OrganizationController.save
url = /service-hrm/hrm-organization/insert , method = org.github.foxnic.web.hrm.controller.OrganizationController.insert
url = /service-hrm/hrm-organization/search , method = org.github.foxnic.web.hrm.controller.OrganizationController.search
url = /service-hrm/hrm-organization/query-nodes , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryNodes
url = /service-hrm/hrm-organization/save-hierarchy , method = org.github.foxnic.web.hrm.controller.OrganizationController.changeParent
url = /service-hrm/hrm-organization/export-excel , method = org.github.foxnic.web.hrm.controller.OrganizationController.exportExcel
url = /service-hrm/hrm-organization/export-excel-template , method = org.github.foxnic.web.hrm.controller.OrganizationController.exportExcelTemplate
url = /service-hrm/hrm-organization/import-excel , method = org.github.foxnic.web.hrm.controller.OrganizationController.importExcel
url = /service-hrm/hrm-organization/get-by-id , method = org.github.foxnic.web.hrm.controller.OrganizationController.getById
url = /service-hrm/hrm-organization/get-by-ids , method = org.github.foxnic.web.hrm.controller.OrganizationController.getByIds
url = /service-hrm/hrm-organization/delete , method = org.github.foxnic.web.hrm.controller.OrganizationController.deleteById
url = /service-hrm/hrm-organization/delete-by-ids , method = org.github.foxnic.web.hrm.controller.OrganizationController.deleteByIds
url = /service-hrm/hrm-organization/query-paged-list , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryPagedList
url = /service-hrm/hrm-organization/query-list , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryList
url = /service-hrm/hrm-organization/query-nodes-flatten , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryNodesFlatten
url = /service-hrm/hrm-person/update , method = org.github.foxnic.web.hrm.controller.PersonController.update
url = /service-hrm/hrm-person/save , method = org.github.foxnic.web.hrm.controller.PersonController.save
url = /service-hrm/hrm-person/insert , method = org.github.foxnic.web.hrm.controller.PersonController.insert
url = /service-hrm/hrm-person/export-excel , method = org.github.foxnic.web.hrm.controller.PersonController.exportExcel
url = /service-hrm/hrm-person/export-excel-template , method = org.github.foxnic.web.hrm.controller.PersonController.exportExcelTemplate
url = /service-hrm/hrm-person/import-excel , method = org.github.foxnic.web.hrm.controller.PersonController.importExcel
url = /service-hrm/hrm-person/get-by-id , method = org.github.foxnic.web.hrm.controller.PersonController.getById
url = /service-hrm/hrm-person/get-by-ids , method = org.github.foxnic.web.hrm.controller.PersonController.getByIds
url = /service-hrm/hrm-person/delete , method = org.github.foxnic.web.hrm.controller.PersonController.deleteById
url = /service-hrm/hrm-person/delete-by-ids , method = org.github.foxnic.web.hrm.controller.PersonController.deleteByIds
url = /service-hrm/hrm-person/query-paged-list , method = org.github.foxnic.web.hrm.controller.PersonController.queryPagedList
url = /service-hrm/hrm-person/query-list , method = org.github.foxnic.web.hrm.controller.PersonController.queryList
url = /business/hrm/company/company_form.html , method = org.github.foxnic.web.hrm.page.CompanyPageController.form
url = /business/hrm/company/company_list.html , method = org.github.foxnic.web.hrm.page.CompanyPageController.list
url = /business/hrm/person/person_form.html , method = org.github.foxnic.web.hrm.page.PersonPageController.form
url = /business/hrm/person/person_list.html , method = org.github.foxnic.web.hrm.page.PersonPageController.list
url = /business/hrm/employee/employee_form.html , method = org.github.foxnic.web.hrm.page.EmployeePageController.form
url = /business/hrm/employee/employee_list.html , method = org.github.foxnic.web.hrm.page.EmployeePageController.list
url = /business/hrm/position/position_form.html , method = org.github.foxnic.web.hrm.page.PositionPageController.form
url = /business/hrm/position/position_list.html , method = org.github.foxnic.web.hrm.page.PositionPageController.list
url = /business/hrm/organization/organization_form.html , method = org.github.foxnic.web.hrm.page.OrganizationPageController.form
url = /business/hrm/organization/organization_list.html , method = org.github.foxnic.web.hrm.page.OrganizationPageController.list
url = /business/hrm/favourite_group_item/favourite_group_item_form.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupItemPageController.form
url = /business/hrm/favourite_group_item/favourite_group_item_list.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupItemPageController.list
url = /business/hrm/favourite_group/favourite_group_form.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupPageController.form
url = /business/hrm/favourite_group/favourite_group_list.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupPageController.list
url = /service-pcm/pcm-catalog-attribute/update , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.update
url = /service-pcm/pcm-catalog-attribute/save , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.save
url = /service-pcm/pcm-catalog-attribute/insert , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.insert
url = /service-pcm/pcm-catalog-attribute/export-excel , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.exportExcel
url = /service-pcm/pcm-catalog-attribute/export-excel-template , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.exportExcelTemplate
url = /service-pcm/pcm-catalog-attribute/import-excel , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.importExcel
url = /service-pcm/pcm-catalog-attribute/get-by-id , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.getById
url = /service-pcm/pcm-catalog-attribute/get-by-ids , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.getByIds
url = /service-pcm/pcm-catalog-attribute/delete , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.deleteById
url = /service-pcm/pcm-catalog-attribute/delete-by-ids , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.deleteByIds
url = /service-pcm/pcm-catalog-attribute/query-paged-list , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryPagedList
url = /service-pcm/pcm-catalog-attribute/query-list , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryList
url = /service-pcm/pcm-catalog/versions , method = org.github.foxnic.web.pcm.controller.CatalogController.versions
url = /service-pcm/pcm-catalog/update , method = org.github.foxnic.web.pcm.controller.CatalogController.update
url = /service-pcm/pcm-catalog/save , method = org.github.foxnic.web.pcm.controller.CatalogController.save
url = /service-pcm/pcm-catalog/insert , method = org.github.foxnic.web.pcm.controller.CatalogController.insert
url = /service-pcm/pcm-catalog/search , method = org.github.foxnic.web.pcm.controller.CatalogController.search
url = /service-pcm/pcm-catalog/query-nodes , method = org.github.foxnic.web.pcm.controller.CatalogController.queryNodes
url = /service-pcm/pcm-catalog/save-hierarchy , method = org.github.foxnic.web.pcm.controller.CatalogController.changeParent
url = /service-pcm/pcm-catalog/export-excel , method = org.github.foxnic.web.pcm.controller.CatalogController.exportExcel
url = /service-pcm/pcm-catalog/export-excel-template , method = org.github.foxnic.web.pcm.controller.CatalogController.exportExcelTemplate
url = /service-pcm/pcm-catalog/import-excel , method = org.github.foxnic.web.pcm.controller.CatalogController.importExcel
url = /service-pcm/pcm-catalog/save-data , method = org.github.foxnic.web.pcm.controller.CatalogController.saveData
url = /service-pcm/pcm-catalog/storage-tables , method = org.github.foxnic.web.pcm.controller.CatalogController.storageTables
url = /service-pcm/pcm-catalog/create-version , method = org.github.foxnic.web.pcm.controller.CatalogController.createVersion
url = /service-pcm/pcm-catalog/apply-version , method = org.github.foxnic.web.pcm.controller.CatalogController.applyVersion
url = /service-pcm/pcm-catalog/query-data , method = org.github.foxnic.web.pcm.controller.CatalogController.queryData
url = /service-pcm/pcm-catalog/save-data-list , method = org.github.foxnic.web.pcm.controller.CatalogController.saveDataList
url = /service-pcm/pcm-catalog/delete-data , method = org.github.foxnic.web.pcm.controller.CatalogController.deleteData
url = /service-pcm/pcm-catalog/get-by-id , method = org.github.foxnic.web.pcm.controller.CatalogController.getById
url = /service-pcm/pcm-catalog/get-by-ids , method = org.github.foxnic.web.pcm.controller.CatalogController.getByIds
url = /service-pcm/pcm-catalog/delete , method = org.github.foxnic.web.pcm.controller.CatalogController.deleteById
url = /service-pcm/pcm-catalog/query-paged-list , method = org.github.foxnic.web.pcm.controller.CatalogController.queryPagedList
url = /service-pcm/pcm-catalog/query-list , method = org.github.foxnic.web.pcm.controller.CatalogController.queryList
url = /service-pcm/pcm-catalog/query-nodes-flatten , method = org.github.foxnic.web.pcm.controller.CatalogController.queryNodesFlatten
url = /business/pcm/catalog_attribute/catalog_attribute_form.html , method = org.github.foxnic.web.pcm.page.CatalogAttributePageController.form
url = /business/pcm/catalog_attribute/catalog_attribute_list.html , method = org.github.foxnic.web.pcm.page.CatalogAttributePageController.list
url = /business/pcm/catalog/catalog_form.html , method = org.github.foxnic.web.pcm.page.CatalogPageController.form
url = /business/pcm/catalog/catalog_list.html , method = org.github.foxnic.web.pcm.page.CatalogPageController.list
url = /service-changes/chs-change-approver/update , method = org.github.foxnic.web.changes.controller.ChangeApproverController.update
url = /service-changes/chs-change-approver/save , method = org.github.foxnic.web.changes.controller.ChangeApproverController.save
url = /service-changes/chs-change-approver/insert , method = org.github.foxnic.web.changes.controller.ChangeApproverController.insert
url = /service-changes/chs-change-approver/export-excel , method = org.github.foxnic.web.changes.controller.ChangeApproverController.exportExcel
url = /service-changes/chs-change-approver/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeApproverController.exportExcelTemplate
url = /service-changes/chs-change-approver/import-excel , method = org.github.foxnic.web.changes.controller.ChangeApproverController.importExcel
url = /service-changes/chs-change-approver/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeApproverController.getById
url = /service-changes/chs-change-approver/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeApproverController.getByIds
url = /service-changes/chs-change-approver/delete , method = org.github.foxnic.web.changes.controller.ChangeApproverController.deleteById
url = /service-changes/chs-change-approver/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeApproverController.deleteByIds
url = /service-changes/chs-change-approver/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeApproverController.queryPagedList
url = /service-changes/chs-change-approver/query-list , method = org.github.foxnic.web.changes.controller.ChangeApproverController.queryList
url = /service-changes/chs-change-data/update , method = org.github.foxnic.web.changes.controller.ChangeDataController.update
url = /service-changes/chs-change-data/save , method = org.github.foxnic.web.changes.controller.ChangeDataController.save
url = /service-changes/chs-change-data/insert , method = org.github.foxnic.web.changes.controller.ChangeDataController.insert
url = /service-changes/chs-change-data/export-excel , method = org.github.foxnic.web.changes.controller.ChangeDataController.exportExcel
url = /service-changes/chs-change-data/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeDataController.exportExcelTemplate
url = /service-changes/chs-change-data/import-excel , method = org.github.foxnic.web.changes.controller.ChangeDataController.importExcel
url = /service-changes/chs-change-data/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeDataController.getById
url = /service-changes/chs-change-data/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDataController.getByIds
url = /service-changes/chs-change-data/delete , method = org.github.foxnic.web.changes.controller.ChangeDataController.deleteById
url = /service-changes/chs-change-data/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDataController.deleteByIds
url = /service-changes/chs-change-data/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeDataController.queryPagedList
url = /service-changes/chs-change-data/query-list , method = org.github.foxnic.web.changes.controller.ChangeDataController.queryList
url = /service-changes/chs-example-order/update , method = org.github.foxnic.web.changes.controller.ExampleOrderController.update
url = /service-changes/chs-example-order/save , method = org.github.foxnic.web.changes.controller.ExampleOrderController.save
url = /service-changes/chs-example-order/insert , method = org.github.foxnic.web.changes.controller.ExampleOrderController.insert
url = /service-changes/chs-example-order/export-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderController.exportExcel
url = /service-changes/chs-example-order/export-excel-template , method = org.github.foxnic.web.changes.controller.ExampleOrderController.exportExcelTemplate
url = /service-changes/chs-example-order/import-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderController.importExcel
url = /service-changes/chs-example-order/start-process , method = org.github.foxnic.web.changes.controller.ExampleOrderController.startProcess
url = /service-changes/chs-example-order/approve , method = org.github.foxnic.web.changes.controller.ExampleOrderController.approve
url = /service-changes/chs-example-order/get-by-id , method = org.github.foxnic.web.changes.controller.ExampleOrderController.getById
url = /service-changes/chs-example-order/get-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderController.getByIds
url = /service-changes/chs-example-order/delete , method = org.github.foxnic.web.changes.controller.ExampleOrderController.deleteById
url = /service-changes/chs-example-order/delete-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderController.deleteByIds
url = /service-changes/chs-example-order/query-paged-list , method = org.github.foxnic.web.changes.controller.ExampleOrderController.queryPagedList
url = /service-changes/chs-example-order/query-list , method = org.github.foxnic.web.changes.controller.ExampleOrderController.queryList
url = /service-changes/chs-example-order-item/update , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.update
url = /service-changes/chs-example-order-item/save , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.save
url = /service-changes/chs-example-order-item/insert , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.insert
url = /service-changes/chs-example-order-item/export-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.exportExcel
url = /service-changes/chs-example-order-item/export-excel-template , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.exportExcelTemplate
url = /service-changes/chs-example-order-item/import-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.importExcel
url = /service-changes/chs-example-order-item/get-by-id , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.getById
url = /service-changes/chs-example-order-item/get-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.getByIds
url = /service-changes/chs-example-order-item/delete , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.deleteById
url = /service-changes/chs-example-order-item/delete-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.deleteByIds
url = /service-changes/chs-example-order-item/query-paged-list , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.queryPagedList
url = /service-changes/chs-example-order-item/query-list , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.queryList
url = /service-changes/chs-change-bill/update , method = org.github.foxnic.web.changes.controller.ChangeBillController.update
url = /service-changes/chs-change-bill/save , method = org.github.foxnic.web.changes.controller.ChangeBillController.save
url = /service-changes/chs-change-bill/insert , method = org.github.foxnic.web.changes.controller.ChangeBillController.insert
url = /service-changes/chs-change-bill/export-excel , method = org.github.foxnic.web.changes.controller.ChangeBillController.exportExcel
url = /service-changes/chs-change-bill/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeBillController.exportExcelTemplate
url = /service-changes/chs-change-bill/import-excel , method = org.github.foxnic.web.changes.controller.ChangeBillController.importExcel
url = /service-changes/chs-change-bill/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeBillController.getById
url = /service-changes/chs-change-bill/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeBillController.getByIds
url = /service-changes/chs-change-bill/delete , method = org.github.foxnic.web.changes.controller.ChangeBillController.deleteById
url = /service-changes/chs-change-bill/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeBillController.deleteByIds
url = /service-changes/chs-change-bill/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeBillController.queryPagedList
url = /service-changes/chs-change-bill/query-list , method = org.github.foxnic.web.changes.controller.ChangeBillController.queryList
url = /service-changes/chs-change-event/update , method = org.github.foxnic.web.changes.controller.ChangeEventController.update
url = /service-changes/chs-change-event/save , method = org.github.foxnic.web.changes.controller.ChangeEventController.save
url = /service-changes/chs-change-event/insert , method = org.github.foxnic.web.changes.controller.ChangeEventController.insert
url = /service-changes/chs-change-event/export-excel , method = org.github.foxnic.web.changes.controller.ChangeEventController.exportExcel
url = /service-changes/chs-change-event/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeEventController.exportExcelTemplate
url = /service-changes/chs-change-event/import-excel , method = org.github.foxnic.web.changes.controller.ChangeEventController.importExcel
url = /service-changes/chs-change-event/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeEventController.getById
url = /service-changes/chs-change-event/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeEventController.getByIds
url = /service-changes/chs-change-event/delete , method = org.github.foxnic.web.changes.controller.ChangeEventController.deleteById
url = /service-changes/chs-change-event/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeEventController.deleteByIds
url = /service-changes/chs-change-event/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeEventController.queryPagedList
url = /service-changes/chs-change-event/query-list , method = org.github.foxnic.web.changes.controller.ChangeEventController.queryList
url = /service-changes/chs-change-instance/request , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.request
url = /service-changes/chs-change-instance/update , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.update
url = /service-changes/chs-change-instance/save , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.save
url = /service-changes/chs-change-instance/export-excel , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.exportExcel
url = /service-changes/chs-change-instance/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.exportExcelTemplate
url = /service-changes/chs-change-instance/import-excel , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.importExcel
url = /service-changes/chs-change-instance/approve , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.approve
url = /service-changes/chs-change-instance/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.getById
url = /service-changes/chs-change-instance/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.getByIds
url = /service-changes/chs-change-instance/delete , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.deleteById
url = /service-changes/chs-change-instance/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.deleteByIds
url = /service-changes/chs-change-instance/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.queryPagedList
url = /service-changes/chs-change-instance/query-list , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.queryList
url = /service-changes/chs-change-definition/update , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.update
url = /service-changes/chs-change-definition/save , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.save
url = /service-changes/chs-change-definition/insert , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.insert
url = /service-changes/chs-change-definition/export-excel , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.exportExcel
url = /service-changes/chs-change-definition/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.exportExcelTemplate
url = /service-changes/chs-change-definition/import-excel , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.importExcel
url = /service-changes/chs-change-definition/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.getById
url = /service-changes/chs-change-definition/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.getByIds
url = /service-changes/chs-change-definition/delete , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.deleteById
url = /service-changes/chs-change-definition/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.deleteByIds
url = /service-changes/chs-change-definition/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.queryPagedList
url = /service-changes/chs-change-definition/query-list , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.queryList
url = /business/changes/change_approver/change_approver_form.html , method = org.github.foxnic.web.changes.page.ChangeApproverPageController.form
url = /business/changes/change_approver/change_approver_list.html , method = org.github.foxnic.web.changes.page.ChangeApproverPageController.list
url = /business/changes/change_bill/change_bill_form.html , method = org.github.foxnic.web.changes.page.ChangeBillPageController.form
url = /business/changes/change_bill/change_bill_list.html , method = org.github.foxnic.web.changes.page.ChangeBillPageController.list
url = /business/changes/change_data/change_data_form.html , method = org.github.foxnic.web.changes.page.ChangeDataPageController.form
url = /business/changes/change_data/change_data_list.html , method = org.github.foxnic.web.changes.page.ChangeDataPageController.list
url = /business/changes/example_order_item/example_order_item_form.html , method = org.github.foxnic.web.changes.page.ExampleOrderItemPageController.form
url = /business/changes/example_order_item/example_order_item_list.html , method = org.github.foxnic.web.changes.page.ExampleOrderItemPageController.list
url = /business/changes/change_definition/change_definition_form.html , method = org.github.foxnic.web.changes.page.ChangeDefinitionPageController.form
url = /business/changes/change_definition/change_definition_list.html , method = org.github.foxnic.web.changes.page.ChangeDefinitionPageController.list
url = /business/changes/example_order/example_order_form.html , method = org.github.foxnic.web.changes.page.ExampleOrderPageController.form
url = /business/changes/example_order/example_order_list.html , method = org.github.foxnic.web.changes.page.ExampleOrderPageController.list
url = /business/changes/change_event/change_event_form.html , method = org.github.foxnic.web.changes.page.ChangeEventPageController.form
url = /business/changes/change_event/change_event_list.html , method = org.github.foxnic.web.changes.page.ChangeEventPageController.list
url = /business/changes/change_instance/change_instance_form.html , method = org.github.foxnic.web.changes.page.ChangeInstancePageController.form
url = /business/changes/change_instance/change_instance_list.html , method = org.github.foxnic.web.changes.page.ChangeInstancePageController.list
url = /service-dataperm/dp-example-brand/update , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.update
url = /service-dataperm/dp-example-brand/save , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.save
url = /service-dataperm/dp-example-brand/insert , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.insert
url = /service-dataperm/dp-example-brand/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.exportExcel
url = /service-dataperm/dp-example-brand/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.exportExcelTemplate
url = /service-dataperm/dp-example-brand/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.importExcel
url = /service-dataperm/dp-example-brand/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.getById
url = /service-dataperm/dp-example-brand/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.getByIds
url = /service-dataperm/dp-example-brand/delete , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.deleteById
url = /service-dataperm/dp-example-brand/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.deleteByIds
url = /service-dataperm/dp-example-brand/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.queryPagedList
url = /service-dataperm/dp-example-brand/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.queryList
url = /service-dataperm/dp-example-catalog/update , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.update
url = /service-dataperm/dp-example-catalog/save , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.save
url = /service-dataperm/dp-example-catalog/insert , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.insert
url = /service-dataperm/dp-example-catalog/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.exportExcel
url = /service-dataperm/dp-example-catalog/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.exportExcelTemplate
url = /service-dataperm/dp-example-catalog/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.importExcel
url = /service-dataperm/dp-example-catalog/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.getById
url = /service-dataperm/dp-example-catalog/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.getByIds
url = /service-dataperm/dp-example-catalog/delete , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.deleteById
url = /service-dataperm/dp-example-catalog/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.deleteByIds
url = /service-dataperm/dp-example-catalog/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.queryPagedList
url = /service-dataperm/dp-example-catalog/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.queryList
url = /service-dataperm/dp-rule-range/update , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.update
url = /service-dataperm/dp-rule-range/save , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.save
url = /service-dataperm/dp-rule-range/insert , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.insert
url = /service-dataperm/dp-rule-range/export-excel , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.exportExcel
url = /service-dataperm/dp-rule-range/export-excel-template , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.exportExcelTemplate
url = /service-dataperm/dp-rule-range/import-excel , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.importExcel
url = /service-dataperm/dp-rule-range/get-by-id , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.getById
url = /service-dataperm/dp-rule-range/get-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.getByIds
url = /service-dataperm/dp-rule-range/delete , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.deleteById
url = /service-dataperm/dp-rule-range/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.deleteByIds
url = /service-dataperm/dp-rule-range/query-paged-list , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.queryPagedList
url = /service-dataperm/dp-rule-range/query-list , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.queryList
url = /service-dataperm/dp-example-order/update , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.update
url = /service-dataperm/dp-example-order/save , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.save
url = /service-dataperm/dp-example-order/insert , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.insert
url = /service-dataperm/dp-example-order/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.exportExcel
url = /service-dataperm/dp-example-order/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.exportExcelTemplate
url = /service-dataperm/dp-example-order/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.importExcel
url = /service-dataperm/dp-example-order/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.getById
url = /service-dataperm/dp-example-order/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.getByIds
url = /service-dataperm/dp-example-order/delete , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.deleteById
url = /service-dataperm/dp-example-order/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.deleteByIds
url = /service-dataperm/dp-example-order/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.queryPagedList
url = /service-dataperm/dp-example-order/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.queryList
url = /service-dataperm/dp-example-product/update , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.update
url = /service-dataperm/dp-example-product/save , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.save
url = /service-dataperm/dp-example-product/insert , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.insert
url = /service-dataperm/dp-example-product/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.exportExcel
url = /service-dataperm/dp-example-product/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.exportExcelTemplate
url = /service-dataperm/dp-example-product/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.importExcel
url = /service-dataperm/dp-example-product/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.getById
url = /service-dataperm/dp-example-product/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.getByIds
url = /service-dataperm/dp-example-product/delete , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.deleteById
url = /service-dataperm/dp-example-product/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.deleteByIds
url = /service-dataperm/dp-example-product/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.queryPagedList
url = /service-dataperm/dp-example-product/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.queryList
url = /service-dataperm/dp-example-shop/update , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.update
url = /service-dataperm/dp-example-shop/save , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.save
url = /service-dataperm/dp-example-shop/insert , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.insert
url = /service-dataperm/dp-example-shop/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.exportExcel
url = /service-dataperm/dp-example-shop/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.exportExcelTemplate
url = /service-dataperm/dp-example-shop/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.importExcel
url = /service-dataperm/dp-example-shop/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.getById
url = /service-dataperm/dp-example-shop/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.getByIds
url = /service-dataperm/dp-example-shop/delete , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.deleteById
url = /service-dataperm/dp-example-shop/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.deleteByIds
url = /service-dataperm/dp-example-shop/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.queryPagedList
url = /service-dataperm/dp-example-shop/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.queryList
url = /service-dataperm/dp-rule/update , method = org.github.foxnic.web.dataperm.controller.RuleController.update
url = /service-dataperm/dp-rule/apply , method = org.github.foxnic.web.dataperm.controller.RuleController.apply
url = /service-dataperm/dp-rule/save , method = org.github.foxnic.web.dataperm.controller.RuleController.save
url = /service-dataperm/dp-rule/insert , method = org.github.foxnic.web.dataperm.controller.RuleController.insert
url = /service-dataperm/dp-rule/export-excel , method = org.github.foxnic.web.dataperm.controller.RuleController.exportExcel
url = /service-dataperm/dp-rule/export-excel-template , method = org.github.foxnic.web.dataperm.controller.RuleController.exportExcelTemplate
url = /service-dataperm/dp-rule/import-excel , method = org.github.foxnic.web.dataperm.controller.RuleController.importExcel
url = /service-dataperm/dp-rule/query-field-list , method = org.github.foxnic.web.dataperm.controller.RuleController.queryFieldList
url = /service-dataperm/dp-rule/get-by-id , method = org.github.foxnic.web.dataperm.controller.RuleController.getById
url = /service-dataperm/dp-rule/get-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleController.getByIds
url = /service-dataperm/dp-rule/delete , method = org.github.foxnic.web.dataperm.controller.RuleController.deleteById
url = /service-dataperm/dp-rule/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleController.deleteByIds
url = /service-dataperm/dp-rule/query-paged-list , method = org.github.foxnic.web.dataperm.controller.RuleController.queryPagedList
url = /service-dataperm/dp-rule/query-list , method = org.github.foxnic.web.dataperm.controller.RuleController.queryList
url = /service-dataperm/dp-rule-condition/update , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.update
url = /service-dataperm/dp-rule-condition/save , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.save
url = /service-dataperm/dp-rule-condition/insert , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.insert
url = /service-dataperm/dp-rule-condition/query-nodes , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryNodes
url = /service-dataperm/dp-rule-condition/export-excel , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.exportExcel
url = /service-dataperm/dp-rule-condition/export-excel-template , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.exportExcelTemplate
url = /service-dataperm/dp-rule-condition/import-excel , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.importExcel
url = /service-dataperm/dp-rule-condition/query-context , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryFieldList
url = /service-dataperm/dp-rule-condition/test-spring-el , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.testSpringEL
url = /service-dataperm/dp-rule-condition/get-by-id , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.getById
url = /service-dataperm/dp-rule-condition/get-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.getByIds
url = /service-dataperm/dp-rule-condition/delete , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.deleteById
url = /service-dataperm/dp-rule-condition/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.deleteByIds
url = /service-dataperm/dp-rule-condition/query-paged-list , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryPagedList
url = /service-dataperm/dp-rule-condition/query-list , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryList
url = /business/dataperm/example_product/example_product_form.html , method = org.github.foxnic.web.dataperm.page.ExampleProductPageController.form
url = /business/dataperm/example_product/example_product_list.html , method = org.github.foxnic.web.dataperm.page.ExampleProductPageController.list
url = /business/dataperm/rule_range/rule_range_form.html , method = org.github.foxnic.web.dataperm.page.RuleRangePageController.form
url = /business/dataperm/rule_range/rule_range_list.html , method = org.github.foxnic.web.dataperm.page.RuleRangePageController.list
url = /business/dataperm/example_catalog/example_catalog_form.html , method = org.github.foxnic.web.dataperm.page.ExampleCatalogPageController.form
url = /business/dataperm/example_catalog/example_catalog_list.html , method = org.github.foxnic.web.dataperm.page.ExampleCatalogPageController.list
url = /business/dataperm/rule_condition/rule_condition_form.html , method = org.github.foxnic.web.dataperm.page.RuleConditionPageController.form
url = /business/dataperm/rule_condition/rule_condition_list.html , method = org.github.foxnic.web.dataperm.page.RuleConditionPageController.list
url = /business/dataperm/example_brand/example_brand_form.html , method = org.github.foxnic.web.dataperm.page.ExampleBrandPageController.form
url = /business/dataperm/example_brand/example_brand_list.html , method = org.github.foxnic.web.dataperm.page.ExampleBrandPageController.list
url = /business/dataperm/example_shop/example_shop_form.html , method = org.github.foxnic.web.dataperm.page.ExampleShopPageController.form
url = /business/dataperm/example_shop/example_shop_list.html , method = org.github.foxnic.web.dataperm.page.ExampleShopPageController.list
url = /business/dataperm/example_order/example_order_form.html , method = org.github.foxnic.web.dataperm.page.ExampleOrderPageController.form
url = /business/dataperm/example_order/example_order_list.html , method = org.github.foxnic.web.dataperm.page.ExampleOrderPageController.list
url = /business/dataperm/rule/rule_form.html , method = org.github.foxnic.web.dataperm.page.RulePageController.form
url = /business/dataperm/rule/rule_list.html , method = org.github.foxnic.web.dataperm.page.RulePageController.list
url = /service-eam/eam-approve-configure/update , method = com.dt.platform.eam.controller.ApproveConfigureController.update
url = /service-eam/eam-approve-configure/save , method = com.dt.platform.eam.controller.ApproveConfigureController.save
url = /service-eam/eam-approve-configure/insert , method = com.dt.platform.eam.controller.ApproveConfigureController.insert
url = /service-eam/eam-approve-configure/export-excel , method = com.dt.platform.eam.controller.ApproveConfigureController.exportExcel
url = /service-eam/eam-approve-configure/export-excel-template , method = com.dt.platform.eam.controller.ApproveConfigureController.exportExcelTemplate
url = /service-eam/eam-approve-configure/import-excel , method = com.dt.platform.eam.controller.ApproveConfigureController.importExcel
url = /service-eam/eam-approve-configure/get-by-id , method = com.dt.platform.eam.controller.ApproveConfigureController.getById
url = /service-eam/eam-approve-configure/get-by-ids , method = com.dt.platform.eam.controller.ApproveConfigureController.getByIds
url = /service-eam/eam-approve-configure/delete , method = com.dt.platform.eam.controller.ApproveConfigureController.deleteById
url = /service-eam/eam-approve-configure/delete-by-ids , method = com.dt.platform.eam.controller.ApproveConfigureController.deleteByIds
url = /service-eam/eam-approve-configure/query-paged-list , method = com.dt.platform.eam.controller.ApproveConfigureController.queryPagedList
url = /service-eam/eam-approve-configure/query-list , method = com.dt.platform.eam.controller.ApproveConfigureController.queryList
url = /service-eam/eam-area/update , method = com.dt.platform.eam.controller.AreaController.update
url = /service-eam/eam-area/save , method = com.dt.platform.eam.controller.AreaController.save
url = /service-eam/eam-area/insert , method = com.dt.platform.eam.controller.AreaController.insert
url = /service-eam/eam-area/export-excel , method = com.dt.platform.eam.controller.AreaController.exportExcel
url = /service-eam/eam-area/export-excel-template , method = com.dt.platform.eam.controller.AreaController.exportExcelTemplate
url = /service-eam/eam-area/import-excel , method = com.dt.platform.eam.controller.AreaController.importExcel
url = /service-eam/eam-area/get-by-id , method = com.dt.platform.eam.controller.AreaController.getById
url = /service-eam/eam-area/get-by-ids , method = com.dt.platform.eam.controller.AreaController.getByIds
url = /service-eam/eam-area/delete , method = com.dt.platform.eam.controller.AreaController.deleteById
url = /service-eam/eam-area/delete-by-ids , method = com.dt.platform.eam.controller.AreaController.deleteByIds
url = /service-eam/eam-area/query-paged-list , method = com.dt.platform.eam.controller.AreaController.queryPagedList
url = /service-eam/eam-area/query-list , method = com.dt.platform.eam.controller.AreaController.queryList
url = /service-eam/eam-asset-alarm/query-borrow-expiration-data , method = com.dt.platform.eam.controller.AssetAlarmController.queryBorrowExpirationData
url = /service-eam/eam-asset-alarm/query-collection-expiration-data , method = com.dt.platform.eam.controller.AssetAlarmController.queryCollectionExpirationData
url = /service-eam/eam-asset-alarm/query-maintenance-expiration-data , method = com.dt.platform.eam.controller.AssetAlarmController.queryMaintenanceExpirationData
url = /service-eam/eam-asset-alarm/query-asset-serial-number-unique , method = com.dt.platform.eam.controller.AssetAlarmController.queryAssetSerialNumberUnique
url = /service-eam/eam-asset-allocation/update , method = com.dt.platform.eam.controller.AssetAllocationController.update
url = /service-eam/eam-asset-allocation/save , method = com.dt.platform.eam.controller.AssetAllocationController.save
url = /service-eam/eam-asset-allocation/insert , method = com.dt.platform.eam.controller.AssetAllocationController.insert
url = /service-eam/eam-asset-allocation/export-excel , method = com.dt.platform.eam.controller.AssetAllocationController.exportExcel
url = /service-eam/eam-asset-allocation/export-excel-template , method = com.dt.platform.eam.controller.AssetAllocationController.exportExcelTemplate
url = /service-eam/eam-asset-allocation/import-excel , method = com.dt.platform.eam.controller.AssetAllocationController.importExcel
url = /service-eam/eam-asset-allocation/approve , method = com.dt.platform.eam.controller.AssetAllocationController.approve
url = /service-eam/eam-asset-allocation/for-approval , method = com.dt.platform.eam.controller.AssetAllocationController.forApproval
url = /service-eam/eam-asset-allocation/confirm-operation , method = com.dt.platform.eam.controller.AssetAllocationController.confirmOperation
url = /service-eam/eam-asset-allocation/revoke-operation , method = com.dt.platform.eam.controller.AssetAllocationController.revokeOperation
url = /service-eam/eam-asset-allocation/get-by-id , method = com.dt.platform.eam.controller.AssetAllocationController.getById
url = /service-eam/eam-asset-allocation/get-by-ids , method = com.dt.platform.eam.controller.AssetAllocationController.getByIds
url = /service-eam/eam-asset-allocation/delete , method = com.dt.platform.eam.controller.AssetAllocationController.deleteById
url = /service-eam/eam-asset-allocation/delete-by-ids , method = com.dt.platform.eam.controller.AssetAllocationController.deleteByIds
url = /service-eam/eam-asset-allocation/query-paged-list , method = com.dt.platform.eam.controller.AssetAllocationController.queryPagedList
url = /service-eam/eam-asset-allocation/query-list , method = com.dt.platform.eam.controller.AssetAllocationController.queryList
url = /service-eam/eam-asset-attribute/update , method = com.dt.platform.eam.controller.AssetAttributeController.update
url = /service-eam/eam-asset-attribute/save , method = com.dt.platform.eam.controller.AssetAttributeController.save
url = /service-eam/eam-asset-attribute/insert , method = com.dt.platform.eam.controller.AssetAttributeController.insert
url = /service-eam/eam-asset-attribute/export-excel , method = com.dt.platform.eam.controller.AssetAttributeController.exportExcel
url = /service-eam/eam-asset-attribute/export-excel-template , method = com.dt.platform.eam.controller.AssetAttributeController.exportExcelTemplate
url = /service-eam/eam-asset-attribute/import-excel , method = com.dt.platform.eam.controller.AssetAttributeController.importExcel
url = /service-eam/eam-asset-attribute/query-attribute-owner-list , method = com.dt.platform.eam.controller.AssetAttributeController.queryAttributeOwnerList
url = /service-eam/eam-asset-attribute/get-by-id , method = com.dt.platform.eam.controller.AssetAttributeController.getById
url = /service-eam/eam-asset-attribute/get-by-ids , method = com.dt.platform.eam.controller.AssetAttributeController.getByIds
url = /service-eam/eam-asset-attribute/delete , method = com.dt.platform.eam.controller.AssetAttributeController.deleteById
url = /service-eam/eam-asset-attribute/delete-by-ids , method = com.dt.platform.eam.controller.AssetAttributeController.deleteByIds
url = /service-eam/eam-asset-attribute/query-paged-list , method = com.dt.platform.eam.controller.AssetAttributeController.queryPagedList
url = /service-eam/eam-asset-attribute/query-list , method = com.dt.platform.eam.controller.AssetAttributeController.queryList
url = /service-eam/eam-asset-attribute-item/update , method = com.dt.platform.eam.controller.AssetAttributeItemController.update
url = /service-eam/eam-asset-attribute-item/save , method = com.dt.platform.eam.controller.AssetAttributeItemController.save
url = /service-eam/eam-asset-attribute-item/insert , method = com.dt.platform.eam.controller.AssetAttributeItemController.insert
url = /service-eam/eam-asset-attribute-item/export-excel , method = com.dt.platform.eam.controller.AssetAttributeItemController.exportExcel
url = /service-eam/eam-asset-attribute-item/export-excel-template , method = com.dt.platform.eam.controller.AssetAttributeItemController.exportExcelTemplate
url = /service-eam/eam-asset-attribute-item/import-excel , method = com.dt.platform.eam.controller.AssetAttributeItemController.importExcel
url = /service-eam/eam-asset-attribute-item/query-list-column-by-module , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule
url = /service-eam/eam-asset-attribute-item/get-by-id , method = com.dt.platform.eam.controller.AssetAttributeItemController.getById
url = /service-eam/eam-asset-attribute-item/get-by-ids , method = com.dt.platform.eam.controller.AssetAttributeItemController.getByIds
url = /service-eam/eam-asset-attribute-item/delete , method = com.dt.platform.eam.controller.AssetAttributeItemController.deleteById
url = /service-eam/eam-asset-attribute-item/delete-by-ids , method = com.dt.platform.eam.controller.AssetAttributeItemController.deleteByIds
url = /service-eam/eam-asset-attribute-item/query-paged-list , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryPagedList
url = /service-eam/eam-asset-attribute-item/query-form-column-by-module , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryFormColumnByModule
url = /service-eam/eam-asset-attribute-item/query-list , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryList
url = /service-eam/eam-asset-bill/query-asset-register-bills , method = com.dt.platform.eam.controller.AssetBillController.queryAssetRegisterBills
url = /service-eam/eam-asset-bill/query-asset-transfer-bill , method = com.dt.platform.eam.controller.AssetBillController.queryTransferBill
url = /service-eam/eam-asset-bill/query-asset-transfer-bills , method = com.dt.platform.eam.controller.AssetBillController.queryTransferBills
url = /service-eam/eam-asset-bill/query-borrow-bills , method = com.dt.platform.eam.controller.AssetBillController.queryBorrowBills
url = /service-eam/eam-asset-bill/query-borrow-bill , method = com.dt.platform.eam.controller.AssetBillController.queryBorrowBill
url = /service-eam/eam-asset-bill/query-allocation-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAllocationBill
url = /service-eam/eam-asset-bill/query-allocation-bills , method = com.dt.platform.eam.controller.AssetBillController.queryAllocationBills
url = /service-eam/eam-asset-bill/query-collection-bill , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionBill
url = /service-eam/eam-asset-bill/query-collection-bills , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionBills
url = /service-eam/eam-asset-bill/query-collection-return-bill , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionReturnBill
url = /service-eam/eam-asset-bill/query-collection-return-bills , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionReturnBills
url = /service-eam/eam-asset-bill/query-repair-bill , method = com.dt.platform.eam.controller.AssetBillController.queryRepairBill
url = /service-eam/eam-asset-bill/query-repair-bills , method = com.dt.platform.eam.controller.AssetBillController.queryRepairBills
url = /service-eam/eam-asset-bill/query-scrap-bill , method = com.dt.platform.eam.controller.AssetBillController.queryScrapBill
url = /service-eam/eam-asset-bill/query-scrap-bills , method = com.dt.platform.eam.controller.AssetBillController.queryScrapBills
url = /service-eam/eam-asset-bill/query-asset-card , method = com.dt.platform.eam.controller.AssetBillController.queryAssetCard
url = /service-eam/eam-asset-bill/query-asset-cards , method = com.dt.platform.eam.controller.AssetBillController.queryAssetCards
url = /service-eam/eam-asset-bill/query-asset-label , method = com.dt.platform.eam.controller.AssetBillController.queryAssetLabel
url = /service-eam/eam-asset-bill/query-asset-labels , method = com.dt.platform.eam.controller.AssetBillController.queryAssetLabels
url = /service-eam/eam-asset-borrow/update , method = com.dt.platform.eam.controller.AssetBorrowController.update
url = /service-eam/eam-asset-borrow/save , method = com.dt.platform.eam.controller.AssetBorrowController.save
url = /service-eam/eam-asset-borrow/insert , method = com.dt.platform.eam.controller.AssetBorrowController.insert
url = /service-eam/eam-asset-borrow/export-excel , method = com.dt.platform.eam.controller.AssetBorrowController.exportExcel
url = /service-eam/eam-asset-borrow/export-excel-template , method = com.dt.platform.eam.controller.AssetBorrowController.exportExcelTemplate
url = /service-eam/eam-asset-borrow/import-excel , method = com.dt.platform.eam.controller.AssetBorrowController.importExcel
url = /service-eam/eam-asset-borrow/for-approval , method = com.dt.platform.eam.controller.AssetBorrowController.forApproval
url = /service-eam/eam-asset-borrow/confirm-operation , method = com.dt.platform.eam.controller.AssetBorrowController.confirmOperation
url = /service-eam/eam-asset-borrow/revoke-operation , method = com.dt.platform.eam.controller.AssetBorrowController.revokeOperation
url = /service-eam/eam-asset-borrow/get-by-id , method = com.dt.platform.eam.controller.AssetBorrowController.getById
url = /service-eam/eam-asset-borrow/get-by-ids , method = com.dt.platform.eam.controller.AssetBorrowController.getByIds
url = /service-eam/eam-asset-borrow/delete , method = com.dt.platform.eam.controller.AssetBorrowController.deleteById
url = /service-eam/eam-asset-borrow/delete-by-ids , method = com.dt.platform.eam.controller.AssetBorrowController.deleteByIds
url = /service-eam/eam-asset-borrow/query-paged-list , method = com.dt.platform.eam.controller.AssetBorrowController.queryPagedList
url = /service-eam/eam-asset-borrow/asset-return , method = com.dt.platform.eam.controller.AssetBorrowController.assetReturn
url = /service-eam/eam-asset-borrow/query-list , method = com.dt.platform.eam.controller.AssetBorrowController.queryList
url = /service-eam/eam-asset-borrow-data/update , method = com.dt.platform.eam.controller.AssetBorrowDataController.update
url = /service-eam/eam-asset-borrow-data/save , method = com.dt.platform.eam.controller.AssetBorrowDataController.save
url = /service-eam/eam-asset-borrow-data/insert , method = com.dt.platform.eam.controller.AssetBorrowDataController.insert
url = /service-eam/eam-asset-borrow-data/export-excel , method = com.dt.platform.eam.controller.AssetBorrowDataController.exportExcel
url = /service-eam/eam-asset-borrow-data/export-excel-template , method = com.dt.platform.eam.controller.AssetBorrowDataController.exportExcelTemplate
url = /service-eam/eam-asset-borrow-data/import-excel , method = com.dt.platform.eam.controller.AssetBorrowDataController.importExcel
url = /service-eam/eam-asset-borrow-data/get-by-id , method = com.dt.platform.eam.controller.AssetBorrowDataController.getById
url = /service-eam/eam-asset-borrow-data/get-by-ids , method = com.dt.platform.eam.controller.AssetBorrowDataController.getByIds
url = /service-eam/eam-asset-borrow-data/delete , method = com.dt.platform.eam.controller.AssetBorrowDataController.deleteById
url = /service-eam/eam-asset-borrow-data/delete-by-ids , method = com.dt.platform.eam.controller.AssetBorrowDataController.deleteByIds
url = /service-eam/eam-asset-borrow-data/query-paged-list , method = com.dt.platform.eam.controller.AssetBorrowDataController.queryPagedList
url = /service-eam/eam-asset-borrow-data/query-list , method = com.dt.platform.eam.controller.AssetBorrowDataController.queryList
url = /service-eam/eam-asset-borrow-return/update , method = com.dt.platform.eam.controller.AssetBorrowReturnController.update
url = /service-eam/eam-asset-borrow-return/save , method = com.dt.platform.eam.controller.AssetBorrowReturnController.save
url = /service-eam/eam-asset-borrow-return/insert , method = com.dt.platform.eam.controller.AssetBorrowReturnController.insert
url = /service-eam/eam-asset-borrow-return/export-excel , method = com.dt.platform.eam.controller.AssetBorrowReturnController.exportExcel
url = /service-eam/eam-asset-borrow-return/export-excel-template , method = com.dt.platform.eam.controller.AssetBorrowReturnController.exportExcelTemplate
url = /service-eam/eam-asset-borrow-return/import-excel , method = com.dt.platform.eam.controller.AssetBorrowReturnController.importExcel
url = /service-eam/eam-asset-borrow-return/get-by-id , method = com.dt.platform.eam.controller.AssetBorrowReturnController.getById
url = /service-eam/eam-asset-borrow-return/get-by-ids , method = com.dt.platform.eam.controller.AssetBorrowReturnController.getByIds
url = /service-eam/eam-asset-borrow-return/delete , method = com.dt.platform.eam.controller.AssetBorrowReturnController.deleteById
url = /service-eam/eam-asset-borrow-return/delete-by-ids , method = com.dt.platform.eam.controller.AssetBorrowReturnController.deleteByIds
url = /service-eam/eam-asset-borrow-return/query-paged-list , method = com.dt.platform.eam.controller.AssetBorrowReturnController.queryPagedList
url = /service-eam/eam-asset-borrow-return/query-list , method = com.dt.platform.eam.controller.AssetBorrowReturnController.queryList
url = /service-eam/eam-asset-category/query-nodes , method = com.dt.platform.eam.controller.AssetCategoryController.queryNodes
url = /service-eam/eam-asset-category/query-nodes-by-code , method = com.dt.platform.eam.controller.AssetCategoryController.queryNodesByCode
url = /service-eam/eam-asset-category/query-catalog-attribute-by-asset-category , method = com.dt.platform.eam.controller.AssetCategoryController.queryCatalogAttributeByAssetCategory
url = /service-eam/eam-asset-collection/update , method = com.dt.platform.eam.controller.AssetCollectionController.update
url = /service-eam/eam-asset-collection/save , method = com.dt.platform.eam.controller.AssetCollectionController.save
url = /service-eam/eam-asset-collection/insert , method = com.dt.platform.eam.controller.AssetCollectionController.insert
url = /service-eam/eam-asset-collection/export-excel , method = com.dt.platform.eam.controller.AssetCollectionController.exportExcel
url = /service-eam/eam-asset-collection/export-excel-template , method = com.dt.platform.eam.controller.AssetCollectionController.exportExcelTemplate
url = /service-eam/eam-asset-collection/import-excel , method = com.dt.platform.eam.controller.AssetCollectionController.importExcel
url = /service-eam/eam-asset-collection/approve , method = com.dt.platform.eam.controller.AssetCollectionController.approve
url = /service-eam/eam-asset-collection/for-approval , method = com.dt.platform.eam.controller.AssetCollectionController.forApproval
url = /service-eam/eam-asset-collection/confirm-operation , method = com.dt.platform.eam.controller.AssetCollectionController.confirmOperation
url = /service-eam/eam-asset-collection/revoke-operation , method = com.dt.platform.eam.controller.AssetCollectionController.revokeOperation
url = /service-eam/eam-asset-collection/get-by-id , method = com.dt.platform.eam.controller.AssetCollectionController.getById
url = /service-eam/eam-asset-collection/get-by-ids , method = com.dt.platform.eam.controller.AssetCollectionController.getByIds
url = /service-eam/eam-asset-collection/delete , method = com.dt.platform.eam.controller.AssetCollectionController.deleteById
url = /service-eam/eam-asset-collection/delete-by-ids , method = com.dt.platform.eam.controller.AssetCollectionController.deleteByIds
url = /service-eam/eam-asset-collection/query-paged-list , method = com.dt.platform.eam.controller.AssetCollectionController.queryPagedList
url = /service-eam/eam-asset-collection/query-list , method = com.dt.platform.eam.controller.AssetCollectionController.queryList
url = /service-eam/eam-asset-collection-return/update , method = com.dt.platform.eam.controller.AssetCollectionReturnController.update
url = /service-eam/eam-asset-collection-return/save , method = com.dt.platform.eam.controller.AssetCollectionReturnController.save
url = /service-eam/eam-asset-collection-return/insert , method = com.dt.platform.eam.controller.AssetCollectionReturnController.insert
url = /service-eam/eam-asset-collection-return/export-excel , method = com.dt.platform.eam.controller.AssetCollectionReturnController.exportExcel
url = /service-eam/eam-asset-collection-return/export-excel-template , method = com.dt.platform.eam.controller.AssetCollectionReturnController.exportExcelTemplate
url = /service-eam/eam-asset-collection-return/import-excel , method = com.dt.platform.eam.controller.AssetCollectionReturnController.importExcel
url = /service-eam/eam-asset-collection-return/approve , method = com.dt.platform.eam.controller.AssetCollectionReturnController.approve
url = /service-eam/eam-asset-collection-return/for-approval , method = com.dt.platform.eam.controller.AssetCollectionReturnController.forApproval
url = /service-eam/eam-asset-collection-return/confirm-operation , method = com.dt.platform.eam.controller.AssetCollectionReturnController.confirmOperation
url = /service-eam/eam-asset-collection-return/revoke-operation , method = com.dt.platform.eam.controller.AssetCollectionReturnController.revokeOperation
url = /service-eam/eam-asset-collection-return/get-by-id , method = com.dt.platform.eam.controller.AssetCollectionReturnController.getById
url = /service-eam/eam-asset-collection-return/get-by-ids , method = com.dt.platform.eam.controller.AssetCollectionReturnController.getByIds
url = /service-eam/eam-asset-collection-return/delete , method = com.dt.platform.eam.controller.AssetCollectionReturnController.deleteById
url = /service-eam/eam-asset-collection-return/delete-by-ids , method = com.dt.platform.eam.controller.AssetCollectionReturnController.deleteByIds
url = /service-eam/eam-asset-collection-return/query-paged-list , method = com.dt.platform.eam.controller.AssetCollectionReturnController.queryPagedList
url = /service-eam/eam-asset-collection-return/query-list , method = com.dt.platform.eam.controller.AssetCollectionReturnController.queryList
url = /service-eam/eam-asset/update , method = com.dt.platform.eam.controller.AssetController.update
url = /service-eam/eam-asset/save , method = com.dt.platform.eam.controller.AssetController.save
url = /service-eam/eam-asset/insert , method = com.dt.platform.eam.controller.AssetController.insert
url = /service-eam/eam-asset/export-excel , method = com.dt.platform.eam.controller.AssetController.exportExcel
url = /service-eam/eam-asset/export-excel-template , method = com.dt.platform.eam.controller.AssetController.exportExcelTemplate
url = /service-eam/eam-asset/import-excel , method = com.dt.platform.eam.controller.AssetController.importExcel
url = /service-eam/eam-asset/approve , method = com.dt.platform.eam.controller.AssetController.approve
url = /service-eam/eam-asset/get-by-id , method = com.dt.platform.eam.controller.AssetController.getById
url = /service-eam/eam-asset/get-by-ids , method = com.dt.platform.eam.controller.AssetController.getByIds
url = /service-eam/eam-asset/delete , method = com.dt.platform.eam.controller.AssetController.deleteById
url = /service-eam/eam-asset/delete-by-ids , method = com.dt.platform.eam.controller.AssetController.deleteByIds
url = /service-eam/eam-asset/query-paged-list , method = com.dt.platform.eam.controller.AssetController.queryPagedList
url = /service-eam/eam-asset/query-list , method = com.dt.platform.eam.controller.AssetController.queryList
url = /service-eam/eam-asset/query-paged-list-by-select , method = com.dt.platform.eam.controller.AssetController.queryPagedListBySelect
url = /service-eam/eam-asset/query-paged-list-by-selected , method = com.dt.platform.eam.controller.AssetController.queryPagedListBySelected
url = /service-eam/eam-asset/for-batch-approval , method = com.dt.platform.eam.controller.AssetController.forBatchApproval
url = /service-eam/eam-asset/batch-confirm-operation , method = com.dt.platform.eam.controller.AssetController.batchConfirmOperation
url = /service-eam/eam-asset/query-asset-status-list , method = com.dt.platform.eam.controller.AssetController.queryAssetStatusList
url = /service-eam/eam-asset/query-asset-insert-approval-list , method = com.dt.platform.eam.controller.AssetController.queryAssetInsertApprovalList
url = /service-eam/eam-asset/batch-revoke-operation , method = com.dt.platform.eam.controller.AssetController.batchRevokeOperation
url = /service-eam/eam-asset-data-change/update , method = com.dt.platform.eam.controller.AssetDataChangeController.update
url = /service-eam/eam-asset-data-change/save , method = com.dt.platform.eam.controller.AssetDataChangeController.save
url = /service-eam/eam-asset-data-change/insert , method = com.dt.platform.eam.controller.AssetDataChangeController.insert
url = /service-eam/eam-asset-data-change/export-excel , method = com.dt.platform.eam.controller.AssetDataChangeController.exportExcel
url = /service-eam/eam-asset-data-change/export-excel-template , method = com.dt.platform.eam.controller.AssetDataChangeController.exportExcelTemplate
url = /service-eam/eam-asset-data-change/import-excel , method = com.dt.platform.eam.controller.AssetDataChangeController.importExcel
url = /service-eam/eam-asset-data-change/approve , method = com.dt.platform.eam.controller.AssetDataChangeController.approve
url = /service-eam/eam-asset-data-change/for-approval , method = com.dt.platform.eam.controller.AssetDataChangeController.forApproval
url = /service-eam/eam-asset-data-change/confirm-operation , method = com.dt.platform.eam.controller.AssetDataChangeController.confirmOperation
url = /service-eam/eam-asset-data-change/revoke-operation , method = com.dt.platform.eam.controller.AssetDataChangeController.revokeOperation
url = /service-eam/eam-asset-data-change/get-by-id , method = com.dt.platform.eam.controller.AssetDataChangeController.getById
url = /service-eam/eam-asset-data-change/get-by-ids , method = com.dt.platform.eam.controller.AssetDataChangeController.getByIds
url = /service-eam/eam-asset-data-change/delete , method = com.dt.platform.eam.controller.AssetDataChangeController.deleteById
url = /service-eam/eam-asset-data-change/delete-by-ids , method = com.dt.platform.eam.controller.AssetDataChangeController.deleteByIds
url = /service-eam/eam-asset-data-change/query-paged-list , method = com.dt.platform.eam.controller.AssetDataChangeController.queryPagedList
url = /service-eam/eam-asset-data-change/query-list , method = com.dt.platform.eam.controller.AssetDataChangeController.queryList
url = /service-eam/eam-asset-data-change/query-data-change-dimension-by-change-type , method = com.dt.platform.eam.controller.AssetDataChangeController.queryDataChangeDimensionByChangeType
url = /service-eam/eam-asset-data/import_asset , method = com.dt.platform.eam.controller.AssetDataController.importAsset
url = /service-eam/eam-asset-data/export-asset , method = com.dt.platform.eam.controller.AssetDataController.exportAsset
url = /service-eam/eam-asset-data/export-asset-by-ids , method = com.dt.platform.eam.controller.AssetDataController.exportAssetByIds
url = /service-eam/eam-asset-handle/update , method = com.dt.platform.eam.controller.AssetHandleController.update
url = /service-eam/eam-asset-handle/save , method = com.dt.platform.eam.controller.AssetHandleController.save
url = /service-eam/eam-asset-handle/insert , method = com.dt.platform.eam.controller.AssetHandleController.insert
url = /service-eam/eam-asset-handle/export-excel , method = com.dt.platform.eam.controller.AssetHandleController.exportExcel
url = /service-eam/eam-asset-handle/export-excel-template , method = com.dt.platform.eam.controller.AssetHandleController.exportExcelTemplate
url = /service-eam/eam-asset-handle/import-excel , method = com.dt.platform.eam.controller.AssetHandleController.importExcel
url = /service-eam/eam-asset-handle/get-by-id , method = com.dt.platform.eam.controller.AssetHandleController.getById
url = /service-eam/eam-asset-handle/get-by-ids , method = com.dt.platform.eam.controller.AssetHandleController.getByIds
url = /service-eam/eam-asset-handle/delete , method = com.dt.platform.eam.controller.AssetHandleController.deleteById
url = /service-eam/eam-asset-handle/delete-by-ids , method = com.dt.platform.eam.controller.AssetHandleController.deleteByIds
url = /service-eam/eam-asset-handle/query-paged-list , method = com.dt.platform.eam.controller.AssetHandleController.queryPagedList
url = /service-eam/eam-asset-handle/query-list , method = com.dt.platform.eam.controller.AssetHandleController.queryList
url = /service-eam/eam-asset-item/update , method = com.dt.platform.eam.controller.AssetItemController.update
url = /service-eam/eam-asset-item/save , method = com.dt.platform.eam.controller.AssetItemController.save
url = /service-eam/eam-asset-item/insert , method = com.dt.platform.eam.controller.AssetItemController.insert
url = /service-eam/eam-asset-item/export-excel , method = com.dt.platform.eam.controller.AssetItemController.exportExcel
url = /service-eam/eam-asset-item/export-excel-template , method = com.dt.platform.eam.controller.AssetItemController.exportExcelTemplate
url = /service-eam/eam-asset-item/import-excel , method = com.dt.platform.eam.controller.AssetItemController.importExcel
url = /service-eam/eam-asset-item/get-by-id , method = com.dt.platform.eam.controller.AssetItemController.getById
url = /service-eam/eam-asset-item/get-by-ids , method = com.dt.platform.eam.controller.AssetItemController.getByIds
url = /service-eam/eam-asset-item/delete , method = com.dt.platform.eam.controller.AssetItemController.deleteById
url = /service-eam/eam-asset-item/delete-by-ids , method = com.dt.platform.eam.controller.AssetItemController.deleteByIds
url = /service-eam/eam-asset-item/query-paged-list , method = com.dt.platform.eam.controller.AssetItemController.queryPagedList
url = /service-eam/eam-asset-item/query-list , method = com.dt.platform.eam.controller.AssetItemController.queryList
url = /service-eam/eam-asset-process-record/update , method = com.dt.platform.eam.controller.AssetProcessRecordController.update
url = /service-eam/eam-asset-process-record/save , method = com.dt.platform.eam.controller.AssetProcessRecordController.save
url = /service-eam/eam-asset-process-record/insert , method = com.dt.platform.eam.controller.AssetProcessRecordController.insert
url = /service-eam/eam-asset-process-record/export-excel , method = com.dt.platform.eam.controller.AssetProcessRecordController.exportExcel
url = /service-eam/eam-asset-process-record/export-excel-template , method = com.dt.platform.eam.controller.AssetProcessRecordController.exportExcelTemplate
url = /service-eam/eam-asset-process-record/import-excel , method = com.dt.platform.eam.controller.AssetProcessRecordController.importExcel
url = /service-eam/eam-asset-process-record/get-by-id , method = com.dt.platform.eam.controller.AssetProcessRecordController.getById
url = /service-eam/eam-asset-process-record/get-by-ids , method = com.dt.platform.eam.controller.AssetProcessRecordController.getByIds
url = /service-eam/eam-asset-process-record/delete , method = com.dt.platform.eam.controller.AssetProcessRecordController.deleteById
url = /service-eam/eam-asset-process-record/delete-by-ids , method = com.dt.platform.eam.controller.AssetProcessRecordController.deleteByIds
url = /service-eam/eam-asset-process-record/query-paged-list , method = com.dt.platform.eam.controller.AssetProcessRecordController.queryPagedList
url = /service-eam/eam-asset-process-record/query-list , method = com.dt.platform.eam.controller.AssetProcessRecordController.queryList
url = /service-eam/eam-asset-repair/update , method = com.dt.platform.eam.controller.AssetRepairController.update
url = /service-eam/eam-asset-repair/save , method = com.dt.platform.eam.controller.AssetRepairController.save
url = /service-eam/eam-asset-repair/insert , method = com.dt.platform.eam.controller.AssetRepairController.insert
url = /service-eam/eam-asset-repair/export-excel , method = com.dt.platform.eam.controller.AssetRepairController.exportExcel
url = /service-eam/eam-asset-repair/export-excel-template , method = com.dt.platform.eam.controller.AssetRepairController.exportExcelTemplate
url = /service-eam/eam-asset-repair/import-excel , method = com.dt.platform.eam.controller.AssetRepairController.importExcel
url = /service-eam/eam-asset-repair/approve , method = com.dt.platform.eam.controller.AssetRepairController.approve
url = /service-eam/eam-asset-repair/for-approval , method = com.dt.platform.eam.controller.AssetRepairController.forApproval
url = /service-eam/eam-asset-repair/confirm-operation , method = com.dt.platform.eam.controller.AssetRepairController.confirmOperation
url = /service-eam/eam-asset-repair/revoke-operation , method = com.dt.platform.eam.controller.AssetRepairController.revokeOperation
url = /service-eam/eam-asset-repair/get-by-id , method = com.dt.platform.eam.controller.AssetRepairController.getById
url = /service-eam/eam-asset-repair/get-by-ids , method = com.dt.platform.eam.controller.AssetRepairController.getByIds
url = /service-eam/eam-asset-repair/delete , method = com.dt.platform.eam.controller.AssetRepairController.deleteById
url = /service-eam/eam-asset-repair/delete-by-ids , method = com.dt.platform.eam.controller.AssetRepairController.deleteByIds
url = /service-eam/eam-asset-repair/query-paged-list , method = com.dt.platform.eam.controller.AssetRepairController.queryPagedList
url = /service-eam/eam-asset-repair/finish-repair , method = com.dt.platform.eam.controller.AssetRepairController.finishRepair
url = /service-eam/eam-asset-repair/query-list , method = com.dt.platform.eam.controller.AssetRepairController.queryList
url = /service-eam/eam-asset-report/query-organization-data , method = com.dt.platform.eam.controller.AssetReportController.queryOrganizationData
url = /service-eam/eam-asset-report/query-category-data , method = com.dt.platform.eam.controller.AssetReportController.queryCategoryData
url = /service-eam/eam-asset-scrap/update , method = com.dt.platform.eam.controller.AssetScrapController.update
url = /service-eam/eam-asset-scrap/save , method = com.dt.platform.eam.controller.AssetScrapController.save
url = /service-eam/eam-asset-scrap/insert , method = com.dt.platform.eam.controller.AssetScrapController.insert
url = /service-eam/eam-asset-scrap/export-excel , method = com.dt.platform.eam.controller.AssetScrapController.exportExcel
url = /service-eam/eam-asset-scrap/export-excel-template , method = com.dt.platform.eam.controller.AssetScrapController.exportExcelTemplate
url = /service-eam/eam-asset-scrap/import-excel , method = com.dt.platform.eam.controller.AssetScrapController.importExcel
url = /service-eam/eam-asset-scrap/approve , method = com.dt.platform.eam.controller.AssetScrapController.approve
url = /service-eam/eam-asset-scrap/for-approval , method = com.dt.platform.eam.controller.AssetScrapController.forApproval
url = /service-eam/eam-asset-scrap/confirm-operation , method = com.dt.platform.eam.controller.AssetScrapController.confirmOperation
url = /service-eam/eam-asset-scrap/revoke-operation , method = com.dt.platform.eam.controller.AssetScrapController.revokeOperation
url = /service-eam/eam-asset-scrap/get-by-id , method = com.dt.platform.eam.controller.AssetScrapController.getById
url = /service-eam/eam-asset-scrap/get-by-ids , method = com.dt.platform.eam.controller.AssetScrapController.getByIds
url = /service-eam/eam-asset-scrap/delete , method = com.dt.platform.eam.controller.AssetScrapController.deleteById
url = /service-eam/eam-asset-scrap/delete-by-ids , method = com.dt.platform.eam.controller.AssetScrapController.deleteByIds
url = /service-eam/eam-asset-scrap/query-paged-list , method = com.dt.platform.eam.controller.AssetScrapController.queryPagedList
url = /service-eam/eam-asset-scrap/query-list , method = com.dt.platform.eam.controller.AssetScrapController.queryList
url = /service-eam/eam-asset-selected-data/update , method = com.dt.platform.eam.controller.AssetSelectedDataController.update
url = /service-eam/eam-asset-selected-data/save , method = com.dt.platform.eam.controller.AssetSelectedDataController.save
url = /service-eam/eam-asset-selected-data/insert , method = com.dt.platform.eam.controller.AssetSelectedDataController.insert
url = /service-eam/eam-asset-selected-data/export-excel , method = com.dt.platform.eam.controller.AssetSelectedDataController.exportExcel
url = /service-eam/eam-asset-selected-data/export-excel-template , method = com.dt.platform.eam.controller.AssetSelectedDataController.exportExcelTemplate
url = /service-eam/eam-asset-selected-data/import-excel , method = com.dt.platform.eam.controller.AssetSelectedDataController.importExcel
url = /service-eam/eam-asset-selected-data/get-by-id , method = com.dt.platform.eam.controller.AssetSelectedDataController.getById
url = /service-eam/eam-asset-selected-data/delete , method = com.dt.platform.eam.controller.AssetSelectedDataController.deleteById
url = /service-eam/eam-asset-selected-data/delete-by-ids , method = com.dt.platform.eam.controller.AssetSelectedDataController.deleteByIds
url = /service-eam/eam-asset-selected-data/query-paged-list , method = com.dt.platform.eam.controller.AssetSelectedDataController.queryPagedList
url = /service-eam/eam-asset-selected-data/query-list , method = com.dt.platform.eam.controller.AssetSelectedDataController.queryList
url = /service-eam/eam-asset-selected-data/save-by-ids , method = com.dt.platform.eam.controller.AssetSelectedDataController.saveByIds
url = /service-eam/eam-asset-tranfer/update , method = com.dt.platform.eam.controller.AssetTranferController.update
url = /service-eam/eam-asset-tranfer/save , method = com.dt.platform.eam.controller.AssetTranferController.save
url = /service-eam/eam-asset-tranfer/insert , method = com.dt.platform.eam.controller.AssetTranferController.insert
url = /service-eam/eam-asset-tranfer/export-excel , method = com.dt.platform.eam.controller.AssetTranferController.exportExcel
url = /service-eam/eam-asset-tranfer/export-excel-template , method = com.dt.platform.eam.controller.AssetTranferController.exportExcelTemplate
url = /service-eam/eam-asset-tranfer/import-excel , method = com.dt.platform.eam.controller.AssetTranferController.importExcel
url = /service-eam/eam-asset-tranfer/approve , method = com.dt.platform.eam.controller.AssetTranferController.approve
url = /service-eam/eam-asset-tranfer/for-approval , method = com.dt.platform.eam.controller.AssetTranferController.forApproval
url = /service-eam/eam-asset-tranfer/confirm-operation , method = com.dt.platform.eam.controller.AssetTranferController.confirmOperation
url = /service-eam/eam-asset-tranfer/revoke-operation , method = com.dt.platform.eam.controller.AssetTranferController.revokeOperation
url = /service-eam/eam-asset-tranfer/get-by-id , method = com.dt.platform.eam.controller.AssetTranferController.getById
url = /service-eam/eam-asset-tranfer/get-by-ids , method = com.dt.platform.eam.controller.AssetTranferController.getByIds
url = /service-eam/eam-asset-tranfer/delete , method = com.dt.platform.eam.controller.AssetTranferController.deleteById
url = /service-eam/eam-asset-tranfer/delete-by-ids , method = com.dt.platform.eam.controller.AssetTranferController.deleteByIds
url = /service-eam/eam-asset-tranfer/query-paged-list , method = com.dt.platform.eam.controller.AssetTranferController.queryPagedList
url = /service-eam/eam-asset-tranfer/query-list , method = com.dt.platform.eam.controller.AssetTranferController.queryList
url = /service-eam/rfid-base-station/update , method = com.dt.platform.eam.controller.BaseStationController.update
url = /service-eam/rfid-base-station/save , method = com.dt.platform.eam.controller.BaseStationController.save
url = /service-eam/rfid-base-station/insert , method = com.dt.platform.eam.controller.BaseStationController.insert
url = /service-eam/rfid-base-station/export-excel , method = com.dt.platform.eam.controller.BaseStationController.exportExcel
url = /service-eam/rfid-base-station/export-excel-template , method = com.dt.platform.eam.controller.BaseStationController.exportExcelTemplate
url = /service-eam/rfid-base-station/import-excel , method = com.dt.platform.eam.controller.BaseStationController.importExcel
url = /service-eam/rfid-base-station/get-by-id , method = com.dt.platform.eam.controller.BaseStationController.getById
url = /service-eam/rfid-base-station/get-by-ids , method = com.dt.platform.eam.controller.BaseStationController.getByIds
url = /service-eam/rfid-base-station/delete , method = com.dt.platform.eam.controller.BaseStationController.deleteById
url = /service-eam/rfid-base-station/delete-by-ids , method = com.dt.platform.eam.controller.BaseStationController.deleteByIds
url = /service-eam/rfid-base-station/query-paged-list , method = com.dt.platform.eam.controller.BaseStationController.queryPagedList
url = /service-eam/rfid-base-station/query-list , method = com.dt.platform.eam.controller.BaseStationController.queryList
url = /service-eam/eam-brand/update , method = com.dt.platform.eam.controller.BrandController.update
url = /service-eam/eam-brand/save , method = com.dt.platform.eam.controller.BrandController.save
url = /service-eam/eam-brand/insert , method = com.dt.platform.eam.controller.BrandController.insert
url = /service-eam/eam-brand/export-excel , method = com.dt.platform.eam.controller.BrandController.exportExcel
url = /service-eam/eam-brand/export-excel-template , method = com.dt.platform.eam.controller.BrandController.exportExcelTemplate
url = /service-eam/eam-brand/import-excel , method = com.dt.platform.eam.controller.BrandController.importExcel
url = /service-eam/eam-brand/get-by-id , method = com.dt.platform.eam.controller.BrandController.getById
url = /service-eam/eam-brand/get-by-ids , method = com.dt.platform.eam.controller.BrandController.getByIds
url = /service-eam/eam-brand/delete , method = com.dt.platform.eam.controller.BrandController.deleteById
url = /service-eam/eam-brand/delete-by-ids , method = com.dt.platform.eam.controller.BrandController.deleteByIds
url = /service-eam/eam-brand/query-paged-list , method = com.dt.platform.eam.controller.BrandController.queryPagedList
url = /service-eam/eam-brand/query-list , method = com.dt.platform.eam.controller.BrandController.queryList
url = /service-eam/eam-brand-demo/update , method = com.dt.platform.eam.controller.BrandDemoController.update
url = /service-eam/eam-brand-demo/save , method = com.dt.platform.eam.controller.BrandDemoController.save
url = /service-eam/eam-brand-demo/insert , method = com.dt.platform.eam.controller.BrandDemoController.insert
url = /service-eam/eam-brand-demo/export-excel , method = com.dt.platform.eam.controller.BrandDemoController.exportExcel
url = /service-eam/eam-brand-demo/export-excel-template , method = com.dt.platform.eam.controller.BrandDemoController.exportExcelTemplate
url = /service-eam/eam-brand-demo/import-excel , method = com.dt.platform.eam.controller.BrandDemoController.importExcel
url = /service-eam/eam-brand-demo/get-by-id , method = com.dt.platform.eam.controller.BrandDemoController.getById
url = /service-eam/eam-brand-demo/get-by-ids , method = com.dt.platform.eam.controller.BrandDemoController.getByIds
url = /service-eam/eam-brand-demo/delete , method = com.dt.platform.eam.controller.BrandDemoController.deleteById
url = /service-eam/eam-brand-demo/delete-by-ids , method = com.dt.platform.eam.controller.BrandDemoController.deleteByIds
url = /service-eam/eam-brand-demo/query-paged-list , method = com.dt.platform.eam.controller.BrandDemoController.queryPagedList
url = /service-eam/eam-brand-demo/query-list , method = com.dt.platform.eam.controller.BrandDemoController.queryList
url = /service-eam/eam-category/update , method = com.dt.platform.eam.controller.CategoryController.update
url = /service-eam/eam-category/save , method = com.dt.platform.eam.controller.CategoryController.save
url = /service-eam/eam-category/insert , method = com.dt.platform.eam.controller.CategoryController.insert
url = /service-eam/eam-category/export-excel , method = com.dt.platform.eam.controller.CategoryController.exportExcel
url = /service-eam/eam-category/export-excel-template , method = com.dt.platform.eam.controller.CategoryController.exportExcelTemplate
url = /service-eam/eam-category/import-excel , method = com.dt.platform.eam.controller.CategoryController.importExcel
url = /service-eam/eam-category/get-by-id , method = com.dt.platform.eam.controller.CategoryController.getById
url = /service-eam/eam-category/get-by-ids , method = com.dt.platform.eam.controller.CategoryController.getByIds
url = /service-eam/eam-category/delete , method = com.dt.platform.eam.controller.CategoryController.deleteById
url = /service-eam/eam-category/delete-by-ids , method = com.dt.platform.eam.controller.CategoryController.deleteByIds
url = /service-eam/eam-category/query-paged-list , method = com.dt.platform.eam.controller.CategoryController.queryPagedList
url = /service-eam/eam-category/query-list , method = com.dt.platform.eam.controller.CategoryController.queryList
url = /service-eam/eam-category-finance/update , method = com.dt.platform.eam.controller.CategoryFinanceController.update
url = /service-eam/eam-category-finance/save , method = com.dt.platform.eam.controller.CategoryFinanceController.save
url = /service-eam/eam-category-finance/insert , method = com.dt.platform.eam.controller.CategoryFinanceController.insert
url = /service-eam/eam-category-finance/export-excel , method = com.dt.platform.eam.controller.CategoryFinanceController.exportExcel
url = /service-eam/eam-category-finance/export-excel-template , method = com.dt.platform.eam.controller.CategoryFinanceController.exportExcelTemplate
url = /service-eam/eam-category-finance/import-excel , method = com.dt.platform.eam.controller.CategoryFinanceController.importExcel
url = /service-eam/eam-category-finance/get-by-id , method = com.dt.platform.eam.controller.CategoryFinanceController.getById
url = /service-eam/eam-category-finance/get-by-ids , method = com.dt.platform.eam.controller.CategoryFinanceController.getByIds
url = /service-eam/eam-category-finance/delete , method = com.dt.platform.eam.controller.CategoryFinanceController.deleteById
url = /service-eam/eam-category-finance/delete-by-ids , method = com.dt.platform.eam.controller.CategoryFinanceController.deleteByIds
url = /service-eam/eam-category-finance/query-paged-list , method = com.dt.platform.eam.controller.CategoryFinanceController.queryPagedList
url = /service-eam/eam-category-finance/query-list , method = com.dt.platform.eam.controller.CategoryFinanceController.queryList
url = /service-eam/eam-goods/update , method = com.dt.platform.eam.controller.GoodsController.update
url = /service-eam/eam-goods/save , method = com.dt.platform.eam.controller.GoodsController.save
url = /service-eam/eam-goods/insert , method = com.dt.platform.eam.controller.GoodsController.insert
url = /service-eam/eam-goods/export-excel , method = com.dt.platform.eam.controller.GoodsController.exportExcel
url = /service-eam/eam-goods/export-excel-template , method = com.dt.platform.eam.controller.GoodsController.exportExcelTemplate
url = /service-eam/eam-goods/import-excel , method = com.dt.platform.eam.controller.GoodsController.importExcel
url = /service-eam/eam-goods/get-by-id , method = com.dt.platform.eam.controller.GoodsController.getById
url = /service-eam/eam-goods/get-by-ids , method = com.dt.platform.eam.controller.GoodsController.getByIds
url = /service-eam/eam-goods/delete , method = com.dt.platform.eam.controller.GoodsController.deleteById
url = /service-eam/eam-goods/delete-by-ids , method = com.dt.platform.eam.controller.GoodsController.deleteByIds
url = /service-eam/eam-goods/query-paged-list , method = com.dt.platform.eam.controller.GoodsController.queryPagedList
url = /service-eam/eam-goods/query-list , method = com.dt.platform.eam.controller.GoodsController.queryList
url = /service-eam/eam-inventory/update , method = com.dt.platform.eam.controller.InventoryController.update
url = /service-eam/eam-inventory/save , method = com.dt.platform.eam.controller.InventoryController.save
url = /service-eam/eam-inventory/insert , method = com.dt.platform.eam.controller.InventoryController.insert
url = /service-eam/eam-inventory/export-excel , method = com.dt.platform.eam.controller.InventoryController.exportExcel
url = /service-eam/eam-inventory/export-excel-template , method = com.dt.platform.eam.controller.InventoryController.exportExcelTemplate
url = /service-eam/eam-inventory/import-excel , method = com.dt.platform.eam.controller.InventoryController.importExcel
url = /service-eam/eam-inventory/get-by-id , method = com.dt.platform.eam.controller.InventoryController.getById
url = /service-eam/eam-inventory/get-by-ids , method = com.dt.platform.eam.controller.InventoryController.getByIds
url = /service-eam/eam-inventory/delete , method = com.dt.platform.eam.controller.InventoryController.deleteById
url = /service-eam/eam-inventory/delete-by-ids , method = com.dt.platform.eam.controller.InventoryController.deleteByIds
url = /service-eam/eam-inventory/query-paged-list , method = com.dt.platform.eam.controller.InventoryController.queryPagedList
url = /service-eam/eam-inventory/query-list , method = com.dt.platform.eam.controller.InventoryController.queryList
url = /service-eam/eam-inventory-user/update , method = com.dt.platform.eam.controller.InventoryUserController.update
url = /service-eam/eam-inventory-user/save , method = com.dt.platform.eam.controller.InventoryUserController.save
url = /service-eam/eam-inventory-user/insert , method = com.dt.platform.eam.controller.InventoryUserController.insert
url = /service-eam/eam-inventory-user/export-excel , method = com.dt.platform.eam.controller.InventoryUserController.exportExcel
url = /service-eam/eam-inventory-user/export-excel-template , method = com.dt.platform.eam.controller.InventoryUserController.exportExcelTemplate
url = /service-eam/eam-inventory-user/import-excel , method = com.dt.platform.eam.controller.InventoryUserController.importExcel
url = /service-eam/eam-inventory-user/get-by-id , method = com.dt.platform.eam.controller.InventoryUserController.getById
url = /service-eam/eam-inventory-user/get-by-ids , method = com.dt.platform.eam.controller.InventoryUserController.getByIds
url = /service-eam/eam-inventory-user/delete , method = com.dt.platform.eam.controller.InventoryUserController.deleteById
url = /service-eam/eam-inventory-user/delete-by-ids , method = com.dt.platform.eam.controller.InventoryUserController.deleteByIds
url = /service-eam/eam-inventory-user/query-paged-list , method = com.dt.platform.eam.controller.InventoryUserController.queryPagedList
url = /service-eam/eam-inventory-user/query-list , method = com.dt.platform.eam.controller.InventoryUserController.queryList
url = /service-eam/eam-maintainer/update , method = com.dt.platform.eam.controller.MaintainerController.update
url = /service-eam/eam-maintainer/save , method = com.dt.platform.eam.controller.MaintainerController.save
url = /service-eam/eam-maintainer/insert , method = com.dt.platform.eam.controller.MaintainerController.insert
url = /service-eam/eam-maintainer/export-excel , method = com.dt.platform.eam.controller.MaintainerController.exportExcel
url = /service-eam/eam-maintainer/export-excel-template , method = com.dt.platform.eam.controller.MaintainerController.exportExcelTemplate
url = /service-eam/eam-maintainer/import-excel , method = com.dt.platform.eam.controller.MaintainerController.importExcel
url = /service-eam/eam-maintainer/get-by-id , method = com.dt.platform.eam.controller.MaintainerController.getById
url = /service-eam/eam-maintainer/get-by-ids , method = com.dt.platform.eam.controller.MaintainerController.getByIds
url = /service-eam/eam-maintainer/delete , method = com.dt.platform.eam.controller.MaintainerController.deleteById
url = /service-eam/eam-maintainer/delete-by-ids , method = com.dt.platform.eam.controller.MaintainerController.deleteByIds
url = /service-eam/eam-maintainer/query-paged-list , method = com.dt.platform.eam.controller.MaintainerController.queryPagedList
url = /service-eam/eam-maintainer/query-list , method = com.dt.platform.eam.controller.MaintainerController.queryList
url = /service-eam/eam-manufacturer/update , method = com.dt.platform.eam.controller.ManufacturerController.update
url = /service-eam/eam-manufacturer/save , method = com.dt.platform.eam.controller.ManufacturerController.save
url = /service-eam/eam-manufacturer/insert , method = com.dt.platform.eam.controller.ManufacturerController.insert
url = /service-eam/eam-manufacturer/export-excel , method = com.dt.platform.eam.controller.ManufacturerController.exportExcel
url = /service-eam/eam-manufacturer/export-excel-template , method = com.dt.platform.eam.controller.ManufacturerController.exportExcelTemplate
url = /service-eam/eam-manufacturer/import-excel , method = com.dt.platform.eam.controller.ManufacturerController.importExcel
url = /service-eam/eam-manufacturer/get-by-id , method = com.dt.platform.eam.controller.ManufacturerController.getById
url = /service-eam/eam-manufacturer/get-by-ids , method = com.dt.platform.eam.controller.ManufacturerController.getByIds
url = /service-eam/eam-manufacturer/delete , method = com.dt.platform.eam.controller.ManufacturerController.deleteById
url = /service-eam/eam-manufacturer/delete-by-ids , method = com.dt.platform.eam.controller.ManufacturerController.deleteByIds
url = /service-eam/eam-manufacturer/query-paged-list , method = com.dt.platform.eam.controller.ManufacturerController.queryPagedList
url = /service-eam/eam-manufacturer/query-list , method = com.dt.platform.eam.controller.ManufacturerController.queryList
url = /service-eam/eam-operate/update , method = com.dt.platform.eam.controller.OperateController.update
url = /service-eam/eam-operate/save , method = com.dt.platform.eam.controller.OperateController.save
url = /service-eam/eam-operate/insert , method = com.dt.platform.eam.controller.OperateController.insert
url = /service-eam/eam-operate/export-excel , method = com.dt.platform.eam.controller.OperateController.exportExcel
url = /service-eam/eam-operate/export-excel-template , method = com.dt.platform.eam.controller.OperateController.exportExcelTemplate
url = /service-eam/eam-operate/import-excel , method = com.dt.platform.eam.controller.OperateController.importExcel
url = /service-eam/eam-operate/get-by-id , method = com.dt.platform.eam.controller.OperateController.getById
url = /service-eam/eam-operate/get-by-ids , method = com.dt.platform.eam.controller.OperateController.getByIds
url = /service-eam/eam-operate/delete , method = com.dt.platform.eam.controller.OperateController.deleteById
url = /service-eam/eam-operate/delete-by-ids , method = com.dt.platform.eam.controller.OperateController.deleteByIds
url = /service-eam/eam-operate/query-paged-list , method = com.dt.platform.eam.controller.OperateController.queryPagedList
url = /service-eam/eam-operate/approval-required , method = com.dt.platform.eam.controller.OperateController.approvalRequired
url = /service-eam/eam-operate/query-asset-direct-update-mode , method = com.dt.platform.eam.controller.OperateController.queryAssetDirectUpdateMode
url = /service-eam/eam-operate/query-asset-status-column-disable , method = com.dt.platform.eam.controller.OperateController.queryAssetStatusColumnDisable
url = /service-eam/eam-operate/query-list , method = com.dt.platform.eam.controller.OperateController.queryList
url = /service-eam/eam-position/update , method = com.dt.platform.eam.controller.PositionController.update
url = /service-eam/eam-position/save , method = com.dt.platform.eam.controller.PositionController.save
url = /service-eam/eam-position/insert , method = com.dt.platform.eam.controller.PositionController.insert
url = /service-eam/eam-position/export-excel , method = com.dt.platform.eam.controller.PositionController.exportExcel
url = /service-eam/eam-position/export-excel-template , method = com.dt.platform.eam.controller.PositionController.exportExcelTemplate
url = /service-eam/eam-position/import-excel , method = com.dt.platform.eam.controller.PositionController.importExcel
url = /service-eam/eam-position/get-by-id , method = com.dt.platform.eam.controller.PositionController.getById
url = /service-eam/eam-position/get-by-ids , method = com.dt.platform.eam.controller.PositionController.getByIds
url = /service-eam/eam-position/delete , method = com.dt.platform.eam.controller.PositionController.deleteById
url = /service-eam/eam-position/delete-by-ids , method = com.dt.platform.eam.controller.PositionController.deleteByIds
url = /service-eam/eam-position/query-paged-list , method = com.dt.platform.eam.controller.PositionController.queryPagedList
url = /service-eam/eam-position/query-list , method = com.dt.platform.eam.controller.PositionController.queryList
url = /service-eam/eam-residual-strategy/update , method = com.dt.platform.eam.controller.ResidualStrategyController.update
url = /service-eam/eam-residual-strategy/save , method = com.dt.platform.eam.controller.ResidualStrategyController.save
url = /service-eam/eam-residual-strategy/insert , method = com.dt.platform.eam.controller.ResidualStrategyController.insert
url = /service-eam/eam-residual-strategy/export-excel , method = com.dt.platform.eam.controller.ResidualStrategyController.exportExcel
url = /service-eam/eam-residual-strategy/export-excel-template , method = com.dt.platform.eam.controller.ResidualStrategyController.exportExcelTemplate
url = /service-eam/eam-residual-strategy/import-excel , method = com.dt.platform.eam.controller.ResidualStrategyController.importExcel
url = /service-eam/eam-residual-strategy/get-by-id , method = com.dt.platform.eam.controller.ResidualStrategyController.getById
url = /service-eam/eam-residual-strategy/get-by-ids , method = com.dt.platform.eam.controller.ResidualStrategyController.getByIds
url = /service-eam/eam-residual-strategy/delete , method = com.dt.platform.eam.controller.ResidualStrategyController.deleteById
url = /service-eam/eam-residual-strategy/delete-by-ids , method = com.dt.platform.eam.controller.ResidualStrategyController.deleteByIds
url = /service-eam/eam-residual-strategy/query-paged-list , method = com.dt.platform.eam.controller.ResidualStrategyController.queryPagedList
url = /service-eam/eam-residual-strategy/query-list , method = com.dt.platform.eam.controller.ResidualStrategyController.queryList
url = /service-eam/eam-safetylevel/update , method = com.dt.platform.eam.controller.SafetylevelController.update
url = /service-eam/eam-safetylevel/save , method = com.dt.platform.eam.controller.SafetylevelController.save
url = /service-eam/eam-safetylevel/insert , method = com.dt.platform.eam.controller.SafetylevelController.insert
url = /service-eam/eam-safetylevel/export-excel , method = com.dt.platform.eam.controller.SafetylevelController.exportExcel
url = /service-eam/eam-safetylevel/export-excel-template , method = com.dt.platform.eam.controller.SafetylevelController.exportExcelTemplate
url = /service-eam/eam-safetylevel/import-excel , method = com.dt.platform.eam.controller.SafetylevelController.importExcel
url = /service-eam/eam-safetylevel/get-by-id , method = com.dt.platform.eam.controller.SafetylevelController.getById
url = /service-eam/eam-safetylevel/get-by-ids , method = com.dt.platform.eam.controller.SafetylevelController.getByIds
url = /service-eam/eam-safetylevel/delete , method = com.dt.platform.eam.controller.SafetylevelController.deleteById
url = /service-eam/eam-safetylevel/delete-by-ids , method = com.dt.platform.eam.controller.SafetylevelController.deleteByIds
url = /service-eam/eam-safetylevel/query-paged-list , method = com.dt.platform.eam.controller.SafetylevelController.queryPagedList
url = /service-eam/eam-safetylevel/query-list , method = com.dt.platform.eam.controller.SafetylevelController.queryList
url = /service-eam/eam-supplier/update , method = com.dt.platform.eam.controller.SupplierController.update
url = /service-eam/eam-supplier/save , method = com.dt.platform.eam.controller.SupplierController.save
url = /service-eam/eam-supplier/insert , method = com.dt.platform.eam.controller.SupplierController.insert
url = /service-eam/eam-supplier/export-excel , method = com.dt.platform.eam.controller.SupplierController.exportExcel
url = /service-eam/eam-supplier/export-excel-template , method = com.dt.platform.eam.controller.SupplierController.exportExcelTemplate
url = /service-eam/eam-supplier/import-excel , method = com.dt.platform.eam.controller.SupplierController.importExcel
url = /service-eam/eam-supplier/get-by-id , method = com.dt.platform.eam.controller.SupplierController.getById
url = /service-eam/eam-supplier/get-by-ids , method = com.dt.platform.eam.controller.SupplierController.getByIds
url = /service-eam/eam-supplier/delete , method = com.dt.platform.eam.controller.SupplierController.deleteById
url = /service-eam/eam-supplier/delete-by-ids , method = com.dt.platform.eam.controller.SupplierController.deleteByIds
url = /service-eam/eam-supplier/query-paged-list , method = com.dt.platform.eam.controller.SupplierController.queryPagedList
url = /service-eam/eam-supplier/query-list , method = com.dt.platform.eam.controller.SupplierController.queryList
url = /service-eam/eam-tpl-file/update , method = com.dt.platform.eam.controller.TplFileController.update
url = /service-eam/eam-tpl-file/save , method = com.dt.platform.eam.controller.TplFileController.save
url = /service-eam/eam-tpl-file/insert , method = com.dt.platform.eam.controller.TplFileController.insert
url = /service-eam/eam-tpl-file/export-excel , method = com.dt.platform.eam.controller.TplFileController.exportExcel
url = /service-eam/eam-tpl-file/export-excel-template , method = com.dt.platform.eam.controller.TplFileController.exportExcelTemplate
url = /service-eam/eam-tpl-file/import-excel , method = com.dt.platform.eam.controller.TplFileController.importExcel
url = /service-eam/eam-tpl-file/get-by-id , method = com.dt.platform.eam.controller.TplFileController.getById
url = /service-eam/eam-tpl-file/get-by-ids , method = com.dt.platform.eam.controller.TplFileController.getByIds
url = /service-eam/eam-tpl-file/delete , method = com.dt.platform.eam.controller.TplFileController.deleteById
url = /service-eam/eam-tpl-file/delete-by-ids , method = com.dt.platform.eam.controller.TplFileController.deleteByIds
url = /service-eam/eam-tpl-file/query-paged-list , method = com.dt.platform.eam.controller.TplFileController.queryPagedList
url = /service-eam/eam-tpl-file/query-list , method = com.dt.platform.eam.controller.TplFileController.queryList
url = /service-eam/eam-warehouse/update , method = com.dt.platform.eam.controller.WarehouseController.update
url = /service-eam/eam-warehouse/save , method = com.dt.platform.eam.controller.WarehouseController.save
url = /service-eam/eam-warehouse/insert , method = com.dt.platform.eam.controller.WarehouseController.insert
url = /service-eam/eam-warehouse/export-excel , method = com.dt.platform.eam.controller.WarehouseController.exportExcel
url = /service-eam/eam-warehouse/export-excel-template , method = com.dt.platform.eam.controller.WarehouseController.exportExcelTemplate
url = /service-eam/eam-warehouse/import-excel , method = com.dt.platform.eam.controller.WarehouseController.importExcel
url = /service-eam/eam-warehouse/get-by-id , method = com.dt.platform.eam.controller.WarehouseController.getById
url = /service-eam/eam-warehouse/get-by-ids , method = com.dt.platform.eam.controller.WarehouseController.getByIds
url = /service-eam/eam-warehouse/delete , method = com.dt.platform.eam.controller.WarehouseController.deleteById
url = /service-eam/eam-warehouse/delete-by-ids , method = com.dt.platform.eam.controller.WarehouseController.deleteByIds
url = /service-eam/eam-warehouse/query-paged-list , method = com.dt.platform.eam.controller.WarehouseController.queryPagedList
url = /service-eam/eam-warehouse/query-list , method = com.dt.platform.eam.controller.WarehouseController.queryList
url = /business/eam/approve_configure/approve_configure_form.html , method = com.dt.platform.eam.page.ApproveConfigurePageController.form
url = /business/eam/approve_configure/approve_configure_list.html , method = com.dt.platform.eam.page.ApproveConfigurePageController.list
url = /business/eam/area/area_form.html , method = com.dt.platform.eam.page.AreaPageController.form
url = /business/eam/area/area_list.html , method = com.dt.platform.eam.page.AreaPageController.list
url = /business/eam/asset_alarm/allocation_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.allocationList
url = /business/eam/asset_alarm/borrow_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.borrowList
url = /business/eam/asset_alarm/maintenance_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.maintenanceList
url = /business/eam/asset_alarm/asset_sn_unique_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.assetSnUniqueList
url = /business/eam/asset_allocation/asset_allocation_form.html , method = com.dt.platform.eam.page.AssetAllocationPageController.form
url = /business/eam/asset_allocation/asset_allocation_list.html , method = com.dt.platform.eam.page.AssetAllocationPageController.list
url = /business/eam/asset_attribute_item/asset_attribute_item_form.html , method = com.dt.platform.eam.page.AssetAttributeItemPageController.form
url = /business/eam/asset_attribute_item/asset_attribute_item_list.html , method = com.dt.platform.eam.page.AssetAttributeItemPageController.list
url = /business/eam/asset_attribute/asset_attribute_form.html , method = com.dt.platform.eam.page.AssetAttributePageController.form
url = /business/eam/asset_attribute/asset_attribute_list.html , method = com.dt.platform.eam.page.AssetAttributePageController.list
url = /business/eam/asset_borrow_data/asset_borrow_data_form.html , method = com.dt.platform.eam.page.AssetBorrowDataPageController.form
url = /business/eam/asset_borrow_data/asset_borrow_data_list.html , method = com.dt.platform.eam.page.AssetBorrowDataPageController.list
url = /business/eam/asset_borrow/asset_borrow_form.html , method = com.dt.platform.eam.page.AssetBorrowPageController.form
url = /business/eam/asset_borrow/asset_borrow_list.html , method = com.dt.platform.eam.page.AssetBorrowPageController.list
url = /business/eam/asset_borrow_return/asset_borrow_return_form.html , method = com.dt.platform.eam.page.AssetBorrowReturnPageController.form
url = /business/eam/asset_borrow_return/asset_borrow_return_list.html , method = com.dt.platform.eam.page.AssetBorrowReturnPageController.list
url = /business/eam/asset_collection/asset_collection_form.html , method = com.dt.platform.eam.page.AssetCollectionPageController.form
url = /business/eam/asset_collection/asset_collection_list.html , method = com.dt.platform.eam.page.AssetCollectionPageController.list
url = /business/eam/asset_collection_return/asset_collection_return_form.html , method = com.dt.platform.eam.page.AssetCollectionReturnPageController.form
url = /business/eam/asset_collection_return/asset_collection_return_list.html , method = com.dt.platform.eam.page.AssetCollectionReturnPageController.list
url = /business/eam/asset_data_change/asset_data_change_form.html , method = com.dt.platform.eam.page.AssetDataChangePageController.form
url = /business/eam/asset_data_change/asset_data_change_list.html , method = com.dt.platform.eam.page.AssetDataChangePageController.list
url = /business/eam/asset_handle/asset_handle_form.html , method = com.dt.platform.eam.page.AssetHandlePageController.form
url = /business/eam/asset_handle/asset_handle_list.html , method = com.dt.platform.eam.page.AssetHandlePageController.list
url = /business/eam/asset_item/asset_item_form.html , method = com.dt.platform.eam.page.AssetItemPageController.form
url = /business/eam/asset_item/asset_item_list.html , method = com.dt.platform.eam.page.AssetItemPageController.list
url = /business/eam/asset/asset_form.html , method = com.dt.platform.eam.page.AssetPageController.form
url = /business/eam/asset/asset_list.html , method = com.dt.platform.eam.page.AssetPageController.list
url = /business/eam/asset/asset_search/org_tree.html , method = com.dt.platform.eam.page.AssetPageController.orgTree
url = /business/eam/asset/asset_info_list.html , method = com.dt.platform.eam.page.AssetPageController.infoList
url = /business/eam/asset/asset_info_form.html , method = com.dt.platform.eam.page.AssetPageController.infoForm
url = /business/eam/asset/asset_select_basic_list.html , method = com.dt.platform.eam.page.AssetPageController.basicLlist
url = /business/eam/asset/asset_selected_list.html , method = com.dt.platform.eam.page.AssetPageController.selectedList
url = /business/eam/asset/asset_select_list.html , method = com.dt.platform.eam.page.AssetPageController.selectLlist
url = /business/eam/asset/asset_search/employee_assetInfo_list.html , method = com.dt.platform.eam.page.AssetPageController.employeeAssetInfoList
url = /business/eam/asset/asset_search/employee_tree.html , method = com.dt.platform.eam.page.AssetPageController.employeeTree
url = /business/eam/asset/asset_search/category_tree.html , method = com.dt.platform.eam.page.AssetPageController.categoryTree
url = /business/eam/asset/asset_search/belong_org_tree.html , method = com.dt.platform.eam.page.AssetPageController.belongOrgTree
url = /business/eam/asset/asset_search/position_tree.html , method = com.dt.platform.eam.page.AssetPageController.positionTree
url = /business/eam/asset/asset_search/asset_search.html , method = com.dt.platform.eam.page.AssetPageController.searchList
url = /business/eam/asset/approval/asset_register_list.html , method = com.dt.platform.eam.page.AssetPageController.assetApprove
url = /business/eam/asset/asset_data_export_list.html , method = com.dt.platform.eam.page.AssetPageController.dataExportList
url = /business/eam/asset/asset_search/employee_list.html , method = com.dt.platform.eam.page.AssetPageController.employeeList
url = /business/eam/asset_process_record/asset_process_record_form.html , method = com.dt.platform.eam.page.AssetProcessRecordPageController.form
url = /business/eam/asset_process_record/asset_process_record_list.html , method = com.dt.platform.eam.page.AssetProcessRecordPageController.list
url = /business/eam/asset_repair/asset_repair_form.html , method = com.dt.platform.eam.page.AssetRepairPageController.form
url = /business/eam/asset_repair/asset_repair_list.html , method = com.dt.platform.eam.page.AssetRepairPageController.list
url = /business/eam/asset_report/org_report_list.html , method = com.dt.platform.eam.page.AssetReportPageController.orgReportList
url = /business/eam/asset_report/category_report_list.html , method = com.dt.platform.eam.page.AssetReportPageController.categoryReportList
url = /business/eam/asset_scrap/asset_scrap_form.html , method = com.dt.platform.eam.page.AssetScrapPageController.form
url = /business/eam/asset_scrap/asset_scrap_list.html , method = com.dt.platform.eam.page.AssetScrapPageController.list
url = /business/eam/asset_selected_data/asset_selected_data_form.html , method = com.dt.platform.eam.page.AssetSelectedDataPageController.form
url = /business/eam/asset_selected_data/asset_selected_data_list.html , method = com.dt.platform.eam.page.AssetSelectedDataPageController.list
url = /business/eam/asset_tranfer/asset_tranfer_form.html , method = com.dt.platform.eam.page.AssetTranferPageController.form
url = /business/eam/asset_tranfer/asset_tranfer_list.html , method = com.dt.platform.eam.page.AssetTranferPageController.list
url = /business/eam/base_station/base_station_form.html , method = com.dt.platform.eam.page.BaseStationPageController.form
url = /business/eam/base_station/base_station_list.html , method = com.dt.platform.eam.page.BaseStationPageController.list
url = /business/eam/brand_demo/brand_demo_form.html , method = com.dt.platform.eam.page.BrandDemoPageController.form
url = /business/eam/brand_demo/brand_demo_list.html , method = com.dt.platform.eam.page.BrandDemoPageController.list
url = /business/eam/brand/brand_form.html , method = com.dt.platform.eam.page.BrandPageController.form
url = /business/eam/brand/brand_list.html , method = com.dt.platform.eam.page.BrandPageController.list
url = /business/eam/category_finance/category_finance_form.html , method = com.dt.platform.eam.page.CategoryFinancePageController.form
url = /business/eam/category_finance/category_finance_list.html , method = com.dt.platform.eam.page.CategoryFinancePageController.list
url = /business/eam/category/category_form.html , method = com.dt.platform.eam.page.CategoryPageController.form
url = /business/eam/category/category_list.html , method = com.dt.platform.eam.page.CategoryPageController.list
url = /business/eam/daily_management/myAsset_list.html , method = com.dt.platform.eam.page.DailyManagementPageController.list
url = /business/eam/goods/goods_form.html , method = com.dt.platform.eam.page.GoodsPageController.form
url = /business/eam/goods/goods_list.html , method = com.dt.platform.eam.page.GoodsPageController.list
url = /business/eam/inventory/inventory_form.html , method = com.dt.platform.eam.page.InventoryPageController.form
url = /business/eam/inventory/inventory_list.html , method = com.dt.platform.eam.page.InventoryPageController.list
url = /business/eam/inventory_user/inventory_user_form.html , method = com.dt.platform.eam.page.InventoryUserPageController.form
url = /business/eam/inventory_user/inventory_user_list.html , method = com.dt.platform.eam.page.InventoryUserPageController.list
url = /business/eam/maintainer/maintainer_form.html , method = com.dt.platform.eam.page.MaintainerPageController.form
url = /business/eam/maintainer/maintainer_list.html , method = com.dt.platform.eam.page.MaintainerPageController.list
url = /business/eam/manufacturer/manufacturer_form.html , method = com.dt.platform.eam.page.ManufacturerPageController.form
url = /business/eam/manufacturer/manufacturer_list.html , method = com.dt.platform.eam.page.ManufacturerPageController.list
url = /business/eam/my_business/done_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.doneList
url = /business/eam/my_business/assetInsert_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.assetInsertList
url = /business/eam/my_business/todo_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.todoList
url = /business/eam/my_business/changeMaintenance_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.changeMaintenanceList
url = /business/eam/my_business/changeBaseInfo_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.changeBaseInfoList
url = /business/eam/my_business/changeFinance_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.changeFinanceList
url = /business/eam/operate/operate_form.html , method = com.dt.platform.eam.page.OperatePageController.form
url = /business/eam/operate/operate_list.html , method = com.dt.platform.eam.page.OperatePageController.list
url = /business/eam/position/position_form.html , method = com.dt.platform.eam.page.PositionPageController.form
url = /business/eam/position/position_list.html , method = com.dt.platform.eam.page.PositionPageController.list
url = /business/eam/residual_strategy/residual_strategy_form.html , method = com.dt.platform.eam.page.ResidualStrategyPageController.form
url = /business/eam/residual_strategy/residual_strategy_list.html , method = com.dt.platform.eam.page.ResidualStrategyPageController.list
url = /business/eam/safetylevel/safetylevel_form.html , method = com.dt.platform.eam.page.SafetylevelPageController.form
url = /business/eam/safetylevel/safetylevel_list.html , method = com.dt.platform.eam.page.SafetylevelPageController.list
url = /business/eam/supplier/supplier_form.html , method = com.dt.platform.eam.page.SupplierPageController.form
url = /business/eam/supplier/supplier_list.html , method = com.dt.platform.eam.page.SupplierPageController.list
url = /business/eam/tpl_file/tpl_file_form.html , method = com.dt.platform.eam.page.TplFilePageController.form
url = /business/eam/tpl_file/tpl_file_list.html , method = com.dt.platform.eam.page.TplFilePageController.list
url = /business/eam/warehouse/warehouse_form.html , method = com.dt.platform.eam.page.WarehousePageController.form
url = /business/eam/warehouse/warehouse_list.html , method = com.dt.platform.eam.page.WarehousePageController.list
url = /service-datacenter/dc-area/update , method = com.dt.platform.datacenter.controller.AreaController.update
url = /service-datacenter/dc-area/save , method = com.dt.platform.datacenter.controller.AreaController.save
url = /service-datacenter/dc-area/insert , method = com.dt.platform.datacenter.controller.AreaController.insert
url = /service-datacenter/dc-area/export-excel , method = com.dt.platform.datacenter.controller.AreaController.exportExcel
url = /service-datacenter/dc-area/export-excel-template , method = com.dt.platform.datacenter.controller.AreaController.exportExcelTemplate
url = /service-datacenter/dc-area/import-excel , method = com.dt.platform.datacenter.controller.AreaController.importExcel
url = /service-datacenter/dc-area/get-by-id , method = com.dt.platform.datacenter.controller.AreaController.getById
url = /service-datacenter/dc-area/get-by-ids , method = com.dt.platform.datacenter.controller.AreaController.getByIds
url = /service-datacenter/dc-area/delete , method = com.dt.platform.datacenter.controller.AreaController.deleteById
url = /service-datacenter/dc-area/delete-by-ids , method = com.dt.platform.datacenter.controller.AreaController.deleteByIds
url = /service-datacenter/dc-area/query-paged-list , method = com.dt.platform.datacenter.controller.AreaController.queryPagedList
url = /service-datacenter/dc-area/query-list , method = com.dt.platform.datacenter.controller.AreaController.queryList
url = /service-datacenter/dc-layer/update , method = com.dt.platform.datacenter.controller.LayerController.update
url = /service-datacenter/dc-layer/save , method = com.dt.platform.datacenter.controller.LayerController.save
url = /service-datacenter/dc-layer/insert , method = com.dt.platform.datacenter.controller.LayerController.insert
url = /service-datacenter/dc-layer/export-excel , method = com.dt.platform.datacenter.controller.LayerController.exportExcel
url = /service-datacenter/dc-layer/export-excel-template , method = com.dt.platform.datacenter.controller.LayerController.exportExcelTemplate
url = /service-datacenter/dc-layer/import-excel , method = com.dt.platform.datacenter.controller.LayerController.importExcel
url = /service-datacenter/dc-layer/get-by-id , method = com.dt.platform.datacenter.controller.LayerController.getById
url = /service-datacenter/dc-layer/get-by-ids , method = com.dt.platform.datacenter.controller.LayerController.getByIds
url = /service-datacenter/dc-layer/delete , method = com.dt.platform.datacenter.controller.LayerController.deleteById
url = /service-datacenter/dc-layer/delete-by-ids , method = com.dt.platform.datacenter.controller.LayerController.deleteByIds
url = /service-datacenter/dc-layer/query-paged-list , method = com.dt.platform.datacenter.controller.LayerController.queryPagedList
url = /service-datacenter/dc-layer/query-list , method = com.dt.platform.datacenter.controller.LayerController.queryList
url = /service-datacenter/dc-rack/update , method = com.dt.platform.datacenter.controller.RackController.update
url = /service-datacenter/dc-rack/save , method = com.dt.platform.datacenter.controller.RackController.save
url = /service-datacenter/dc-rack/insert , method = com.dt.platform.datacenter.controller.RackController.insert
url = /service-datacenter/dc-rack/export-excel , method = com.dt.platform.datacenter.controller.RackController.exportExcel
url = /service-datacenter/dc-rack/export-excel-template , method = com.dt.platform.datacenter.controller.RackController.exportExcelTemplate
url = /service-datacenter/dc-rack/import-excel , method = com.dt.platform.datacenter.controller.RackController.importExcel
url = /service-datacenter/dc-rack/get-by-id , method = com.dt.platform.datacenter.controller.RackController.getById
url = /service-datacenter/dc-rack/get-by-ids , method = com.dt.platform.datacenter.controller.RackController.getByIds
url = /service-datacenter/dc-rack/delete , method = com.dt.platform.datacenter.controller.RackController.deleteById
url = /service-datacenter/dc-rack/delete-by-ids , method = com.dt.platform.datacenter.controller.RackController.deleteByIds
url = /service-datacenter/dc-rack/query-paged-list , method = com.dt.platform.datacenter.controller.RackController.queryPagedList
url = /service-datacenter/dc-rack/query-list , method = com.dt.platform.datacenter.controller.RackController.queryList
url = /business/datacenter/area/area_form.html , method = com.dt.platform.datacenter.page.AreaPageController.form
url = /business/datacenter/area/area_list.html , method = com.dt.platform.datacenter.page.AreaPageController.list
url = /business/datacenter/layer/layer_form.html , method = com.dt.platform.datacenter.page.LayerPageController.form
url = /business/datacenter/layer/layer_list.html , method = com.dt.platform.datacenter.page.LayerPageController.list
url = /business/datacenter/rack/rack_form.html , method = com.dt.platform.datacenter.page.RackPageController.form
url = /business/datacenter/rack/rack_list.html , method = com.dt.platform.datacenter.page.RackPageController.list
url = /service-ops/ops-db-instance/update , method = com.dt.platform.ops.controller.DbInstanceController.update
url = /service-ops/ops-db-instance/save , method = com.dt.platform.ops.controller.DbInstanceController.save
url = /service-ops/ops-db-instance/insert , method = com.dt.platform.ops.controller.DbInstanceController.insert
url = /service-ops/ops-db-instance/export-excel , method = com.dt.platform.ops.controller.DbInstanceController.exportExcel
url = /service-ops/ops-db-instance/export-excel-template , method = com.dt.platform.ops.controller.DbInstanceController.exportExcelTemplate
url = /service-ops/ops-db-instance/import-excel , method = com.dt.platform.ops.controller.DbInstanceController.importExcel
url = /service-ops/ops-db-instance/get-by-id , method = com.dt.platform.ops.controller.DbInstanceController.getById
url = /service-ops/ops-db-instance/get-by-ids , method = com.dt.platform.ops.controller.DbInstanceController.getByIds
url = /service-ops/ops-db-instance/delete , method = com.dt.platform.ops.controller.DbInstanceController.deleteById
url = /service-ops/ops-db-instance/delete-by-ids , method = com.dt.platform.ops.controller.DbInstanceController.deleteByIds
url = /service-ops/ops-db-instance/query-paged-list , method = com.dt.platform.ops.controller.DbInstanceController.queryPagedList
url = /service-ops/ops-db-instance/query-list , method = com.dt.platform.ops.controller.DbInstanceController.queryList
url = /service-ops/ops-host/update , method = com.dt.platform.ops.controller.HostController.update
url = /service-ops/ops-host/save , method = com.dt.platform.ops.controller.HostController.save
url = /service-ops/ops-host/insert , method = com.dt.platform.ops.controller.HostController.insert
url = /service-ops/ops-host/export-excel , method = com.dt.platform.ops.controller.HostController.exportExcel
url = /service-ops/ops-host/export-excel-template , method = com.dt.platform.ops.controller.HostController.exportExcelTemplate
url = /service-ops/ops-host/import-excel , method = com.dt.platform.ops.controller.HostController.importExcel
url = /service-ops/ops-host/get-by-id , method = com.dt.platform.ops.controller.HostController.getById
url = /service-ops/ops-host/get-by-ids , method = com.dt.platform.ops.controller.HostController.getByIds
url = /service-ops/ops-host/delete , method = com.dt.platform.ops.controller.HostController.deleteById
url = /service-ops/ops-host/delete-by-ids , method = com.dt.platform.ops.controller.HostController.deleteByIds
url = /service-ops/ops-host/query-paged-list , method = com.dt.platform.ops.controller.HostController.queryPagedList
url = /service-ops/ops-host/query-list , method = com.dt.platform.ops.controller.HostController.queryList
url = /service-ops/ops-host-db/update , method = com.dt.platform.ops.controller.HostDbController.update
url = /service-ops/ops-host-db/save , method = com.dt.platform.ops.controller.HostDbController.save
url = /service-ops/ops-host-db/insert , method = com.dt.platform.ops.controller.HostDbController.insert
url = /service-ops/ops-host-db/export-excel , method = com.dt.platform.ops.controller.HostDbController.exportExcel
url = /service-ops/ops-host-db/export-excel-template , method = com.dt.platform.ops.controller.HostDbController.exportExcelTemplate
url = /service-ops/ops-host-db/import-excel , method = com.dt.platform.ops.controller.HostDbController.importExcel
url = /service-ops/ops-host-db/get-by-id , method = com.dt.platform.ops.controller.HostDbController.getById
url = /service-ops/ops-host-db/get-by-ids , method = com.dt.platform.ops.controller.HostDbController.getByIds
url = /service-ops/ops-host-db/delete , method = com.dt.platform.ops.controller.HostDbController.deleteById
url = /service-ops/ops-host-db/delete-by-ids , method = com.dt.platform.ops.controller.HostDbController.deleteByIds
url = /service-ops/ops-host-db/query-paged-list , method = com.dt.platform.ops.controller.HostDbController.queryPagedList
url = /service-ops/ops-host-db/query-list , method = com.dt.platform.ops.controller.HostDbController.queryList
url = /service-ops/ops-host-mid/update , method = com.dt.platform.ops.controller.HostMidController.update
url = /service-ops/ops-host-mid/save , method = com.dt.platform.ops.controller.HostMidController.save
url = /service-ops/ops-host-mid/insert , method = com.dt.platform.ops.controller.HostMidController.insert
url = /service-ops/ops-host-mid/export-excel , method = com.dt.platform.ops.controller.HostMidController.exportExcel
url = /service-ops/ops-host-mid/export-excel-template , method = com.dt.platform.ops.controller.HostMidController.exportExcelTemplate
url = /service-ops/ops-host-mid/import-excel , method = com.dt.platform.ops.controller.HostMidController.importExcel
url = /service-ops/ops-host-mid/get-by-id , method = com.dt.platform.ops.controller.HostMidController.getById
url = /service-ops/ops-host-mid/get-by-ids , method = com.dt.platform.ops.controller.HostMidController.getByIds
url = /service-ops/ops-host-mid/delete , method = com.dt.platform.ops.controller.HostMidController.deleteById
url = /service-ops/ops-host-mid/delete-by-ids , method = com.dt.platform.ops.controller.HostMidController.deleteByIds
url = /service-ops/ops-host-mid/query-paged-list , method = com.dt.platform.ops.controller.HostMidController.queryPagedList
url = /service-ops/ops-host-mid/query-list , method = com.dt.platform.ops.controller.HostMidController.queryList
url = /service-ops/ops-host-os/update , method = com.dt.platform.ops.controller.HostOsController.update
url = /service-ops/ops-host-os/save , method = com.dt.platform.ops.controller.HostOsController.save
url = /service-ops/ops-host-os/insert , method = com.dt.platform.ops.controller.HostOsController.insert
url = /service-ops/ops-host-os/export-excel , method = com.dt.platform.ops.controller.HostOsController.exportExcel
url = /service-ops/ops-host-os/export-excel-template , method = com.dt.platform.ops.controller.HostOsController.exportExcelTemplate
url = /service-ops/ops-host-os/import-excel , method = com.dt.platform.ops.controller.HostOsController.importExcel
url = /service-ops/ops-host-os/get-by-id , method = com.dt.platform.ops.controller.HostOsController.getById
url = /service-ops/ops-host-os/get-by-ids , method = com.dt.platform.ops.controller.HostOsController.getByIds
url = /service-ops/ops-host-os/delete , method = com.dt.platform.ops.controller.HostOsController.deleteById
url = /service-ops/ops-host-os/delete-by-ids , method = com.dt.platform.ops.controller.HostOsController.deleteByIds
url = /service-ops/ops-host-os/query-paged-list , method = com.dt.platform.ops.controller.HostOsController.queryPagedList
url = /service-ops/ops-host-os/query-list , method = com.dt.platform.ops.controller.HostOsController.queryList
url = /service-ops/ops-host-position/update , method = com.dt.platform.ops.controller.HostPositionController.update
url = /service-ops/ops-host-position/save , method = com.dt.platform.ops.controller.HostPositionController.save
url = /service-ops/ops-host-position/insert , method = com.dt.platform.ops.controller.HostPositionController.insert
url = /service-ops/ops-host-position/export-excel , method = com.dt.platform.ops.controller.HostPositionController.exportExcel
url = /service-ops/ops-host-position/export-excel-template , method = com.dt.platform.ops.controller.HostPositionController.exportExcelTemplate
url = /service-ops/ops-host-position/import-excel , method = com.dt.platform.ops.controller.HostPositionController.importExcel
url = /service-ops/ops-host-position/get-by-id , method = com.dt.platform.ops.controller.HostPositionController.getById
url = /service-ops/ops-host-position/get-by-ids , method = com.dt.platform.ops.controller.HostPositionController.getByIds
url = /service-ops/ops-host-position/delete , method = com.dt.platform.ops.controller.HostPositionController.deleteById
url = /service-ops/ops-host-position/delete-by-ids , method = com.dt.platform.ops.controller.HostPositionController.deleteByIds
url = /service-ops/ops-host-position/query-paged-list , method = com.dt.platform.ops.controller.HostPositionController.queryPagedList
url = /service-ops/ops-host-position/query-list , method = com.dt.platform.ops.controller.HostPositionController.queryList
url = /service-ops/ops-information-system/update , method = com.dt.platform.ops.controller.InformationSystemController.update
url = /service-ops/ops-information-system/save , method = com.dt.platform.ops.controller.InformationSystemController.save
url = /service-ops/ops-information-system/insert , method = com.dt.platform.ops.controller.InformationSystemController.insert
url = /service-ops/ops-information-system/export-excel , method = com.dt.platform.ops.controller.InformationSystemController.exportExcel
url = /service-ops/ops-information-system/export-excel-template , method = com.dt.platform.ops.controller.InformationSystemController.exportExcelTemplate
url = /service-ops/ops-information-system/import-excel , method = com.dt.platform.ops.controller.InformationSystemController.importExcel
url = /service-ops/ops-information-system/get-by-id , method = com.dt.platform.ops.controller.InformationSystemController.getById
url = /service-ops/ops-information-system/get-by-ids , method = com.dt.platform.ops.controller.InformationSystemController.getByIds
url = /service-ops/ops-information-system/delete , method = com.dt.platform.ops.controller.InformationSystemController.deleteById
url = /service-ops/ops-information-system/delete-by-ids , method = com.dt.platform.ops.controller.InformationSystemController.deleteByIds
url = /service-ops/ops-information-system/query-paged-list , method = com.dt.platform.ops.controller.InformationSystemController.queryPagedList
url = /service-ops/ops-information-system/query-list , method = com.dt.platform.ops.controller.InformationSystemController.queryList
url = /service-ops/ops-data/export-host , method = com.dt.platform.ops.controller.OpsDataController.exportHost
url = /service-ops/ops-data/export-information-system , method = com.dt.platform.ops.controller.OpsDataController.exportInformationSystem
url = /service-ops/ops-data/export-database-instance , method = com.dt.platform.ops.controller.OpsDataController.exportDatabaseInstance
url = /service-ops/ops-service-category/update , method = com.dt.platform.ops.controller.ServiceCategoryController.update
url = /service-ops/ops-service-category/save , method = com.dt.platform.ops.controller.ServiceCategoryController.save
url = /service-ops/ops-service-category/insert , method = com.dt.platform.ops.controller.ServiceCategoryController.insert
url = /service-ops/ops-service-category/export-excel , method = com.dt.platform.ops.controller.ServiceCategoryController.exportExcel
url = /service-ops/ops-service-category/export-excel-template , method = com.dt.platform.ops.controller.ServiceCategoryController.exportExcelTemplate
url = /service-ops/ops-service-category/import-excel , method = com.dt.platform.ops.controller.ServiceCategoryController.importExcel
url = /service-ops/ops-service-category/get-by-id , method = com.dt.platform.ops.controller.ServiceCategoryController.getById
url = /service-ops/ops-service-category/get-by-ids , method = com.dt.platform.ops.controller.ServiceCategoryController.getByIds
url = /service-ops/ops-service-category/delete , method = com.dt.platform.ops.controller.ServiceCategoryController.deleteById
url = /service-ops/ops-service-category/delete-by-ids , method = com.dt.platform.ops.controller.ServiceCategoryController.deleteByIds
url = /service-ops/ops-service-category/query-paged-list , method = com.dt.platform.ops.controller.ServiceCategoryController.queryPagedList
url = /service-ops/ops-service-category/query-list , method = com.dt.platform.ops.controller.ServiceCategoryController.queryList
url = /service-ops/ops-service-group/update , method = com.dt.platform.ops.controller.ServiceGroupController.update
url = /service-ops/ops-service-group/save , method = com.dt.platform.ops.controller.ServiceGroupController.save
url = /service-ops/ops-service-group/insert , method = com.dt.platform.ops.controller.ServiceGroupController.insert
url = /service-ops/ops-service-group/export-excel , method = com.dt.platform.ops.controller.ServiceGroupController.exportExcel
url = /service-ops/ops-service-group/export-excel-template , method = com.dt.platform.ops.controller.ServiceGroupController.exportExcelTemplate
url = /service-ops/ops-service-group/import-excel , method = com.dt.platform.ops.controller.ServiceGroupController.importExcel
url = /service-ops/ops-service-group/get-by-id , method = com.dt.platform.ops.controller.ServiceGroupController.getById
url = /service-ops/ops-service-group/get-by-ids , method = com.dt.platform.ops.controller.ServiceGroupController.getByIds
url = /service-ops/ops-service-group/delete , method = com.dt.platform.ops.controller.ServiceGroupController.deleteById
url = /service-ops/ops-service-group/delete-by-ids , method = com.dt.platform.ops.controller.ServiceGroupController.deleteByIds
url = /service-ops/ops-service-group/query-paged-list , method = com.dt.platform.ops.controller.ServiceGroupController.queryPagedList
url = /service-ops/ops-service-group/query-list , method = com.dt.platform.ops.controller.ServiceGroupController.queryList
url = /service-ops/ops-service-info/update , method = com.dt.platform.ops.controller.ServiceInfoController.update
url = /service-ops/ops-service-info/save , method = com.dt.platform.ops.controller.ServiceInfoController.save
url = /service-ops/ops-service-info/insert , method = com.dt.platform.ops.controller.ServiceInfoController.insert
url = /service-ops/ops-service-info/export-excel , method = com.dt.platform.ops.controller.ServiceInfoController.exportExcel
url = /service-ops/ops-service-info/export-excel-template , method = com.dt.platform.ops.controller.ServiceInfoController.exportExcelTemplate
url = /service-ops/ops-service-info/import-excel , method = com.dt.platform.ops.controller.ServiceInfoController.importExcel
url = /service-ops/ops-service-info/get-by-id , method = com.dt.platform.ops.controller.ServiceInfoController.getById
url = /service-ops/ops-service-info/get-by-ids , method = com.dt.platform.ops.controller.ServiceInfoController.getByIds
url = /service-ops/ops-service-info/delete , method = com.dt.platform.ops.controller.ServiceInfoController.deleteById
url = /service-ops/ops-service-info/delete-by-ids , method = com.dt.platform.ops.controller.ServiceInfoController.deleteByIds
url = /service-ops/ops-service-info/query-paged-list , method = com.dt.platform.ops.controller.ServiceInfoController.queryPagedList
url = /service-ops/ops-service-info/query-list , method = com.dt.platform.ops.controller.ServiceInfoController.queryList
url = /service-ops/ops-voucher/update , method = com.dt.platform.ops.controller.VoucherController.update
url = /service-ops/ops-voucher/save , method = com.dt.platform.ops.controller.VoucherController.save
url = /service-ops/ops-voucher/insert , method = com.dt.platform.ops.controller.VoucherController.insert
url = /service-ops/ops-voucher/export-excel , method = com.dt.platform.ops.controller.VoucherController.exportExcel
url = /service-ops/ops-voucher/export-excel-template , method = com.dt.platform.ops.controller.VoucherController.exportExcelTemplate
url = /service-ops/ops-voucher/import-excel , method = com.dt.platform.ops.controller.VoucherController.importExcel
url = /service-ops/ops-voucher/get-by-id , method = com.dt.platform.ops.controller.VoucherController.getById
url = /service-ops/ops-voucher/get-by-ids , method = com.dt.platform.ops.controller.VoucherController.getByIds
url = /service-ops/ops-voucher/delete , method = com.dt.platform.ops.controller.VoucherController.deleteById
url = /service-ops/ops-voucher/delete-by-ids , method = com.dt.platform.ops.controller.VoucherController.deleteByIds
url = /service-ops/ops-voucher/query-paged-list , method = com.dt.platform.ops.controller.VoucherController.queryPagedList
url = /service-ops/ops-voucher/query-list , method = com.dt.platform.ops.controller.VoucherController.queryList
url = /service-ops/ops-voucher-history/update , method = com.dt.platform.ops.controller.VoucherHistoryController.update
url = /service-ops/ops-voucher-history/save , method = com.dt.platform.ops.controller.VoucherHistoryController.save
url = /service-ops/ops-voucher-history/insert , method = com.dt.platform.ops.controller.VoucherHistoryController.insert
url = /service-ops/ops-voucher-history/export-excel , method = com.dt.platform.ops.controller.VoucherHistoryController.exportExcel
url = /service-ops/ops-voucher-history/export-excel-template , method = com.dt.platform.ops.controller.VoucherHistoryController.exportExcelTemplate
url = /service-ops/ops-voucher-history/import-excel , method = com.dt.platform.ops.controller.VoucherHistoryController.importExcel
url = /service-ops/ops-voucher-history/get-by-id , method = com.dt.platform.ops.controller.VoucherHistoryController.getById
url = /service-ops/ops-voucher-history/get-by-ids , method = com.dt.platform.ops.controller.VoucherHistoryController.getByIds
url = /service-ops/ops-voucher-history/delete , method = com.dt.platform.ops.controller.VoucherHistoryController.deleteById
url = /service-ops/ops-voucher-history/delete-by-ids , method = com.dt.platform.ops.controller.VoucherHistoryController.deleteByIds
url = /service-ops/ops-voucher-history/query-paged-list , method = com.dt.platform.ops.controller.VoucherHistoryController.queryPagedList
url = /service-ops/ops-voucher-history/query-list , method = com.dt.platform.ops.controller.VoucherHistoryController.queryList
url = /service-ops/ops-voucher-owner/update , method = com.dt.platform.ops.controller.VoucherOwnerController.update
url = /service-ops/ops-voucher-owner/save , method = com.dt.platform.ops.controller.VoucherOwnerController.save
url = /service-ops/ops-voucher-owner/insert , method = com.dt.platform.ops.controller.VoucherOwnerController.insert
url = /service-ops/ops-voucher-owner/export-excel , method = com.dt.platform.ops.controller.VoucherOwnerController.exportExcel
url = /service-ops/ops-voucher-owner/export-excel-template , method = com.dt.platform.ops.controller.VoucherOwnerController.exportExcelTemplate
url = /service-ops/ops-voucher-owner/import-excel , method = com.dt.platform.ops.controller.VoucherOwnerController.importExcel
url = /service-ops/ops-voucher-owner/get-by-id , method = com.dt.platform.ops.controller.VoucherOwnerController.getById
url = /service-ops/ops-voucher-owner/get-by-ids , method = com.dt.platform.ops.controller.VoucherOwnerController.getByIds
url = /service-ops/ops-voucher-owner/delete , method = com.dt.platform.ops.controller.VoucherOwnerController.deleteById
url = /service-ops/ops-voucher-owner/delete-by-ids , method = com.dt.platform.ops.controller.VoucherOwnerController.deleteByIds
url = /service-ops/ops-voucher-owner/query-paged-list , method = com.dt.platform.ops.controller.VoucherOwnerController.queryPagedList
url = /service-ops/ops-voucher-owner/query-list , method = com.dt.platform.ops.controller.VoucherOwnerController.queryList
url = /service-ops/ops-voucher-priv/update , method = com.dt.platform.ops.controller.VoucherPrivController.update
url = /service-ops/ops-voucher-priv/save , method = com.dt.platform.ops.controller.VoucherPrivController.save
url = /service-ops/ops-voucher-priv/insert , method = com.dt.platform.ops.controller.VoucherPrivController.insert
url = /service-ops/ops-voucher-priv/query-type-list , method = com.dt.platform.ops.controller.VoucherPrivController.queryVoucherTypeList
url = /service-ops/ops-voucher-priv/export-excel , method = com.dt.platform.ops.controller.VoucherPrivController.exportExcel
url = /service-ops/ops-voucher-priv/export-excel-template , method = com.dt.platform.ops.controller.VoucherPrivController.exportExcelTemplate
url = /service-ops/ops-voucher-priv/import-excel , method = com.dt.platform.ops.controller.VoucherPrivController.importExcel
url = /service-ops/ops-voucher-priv/get-by-id , method = com.dt.platform.ops.controller.VoucherPrivController.getById
url = /service-ops/ops-voucher-priv/get-by-ids , method = com.dt.platform.ops.controller.VoucherPrivController.getByIds
url = /service-ops/ops-voucher-priv/delete , method = com.dt.platform.ops.controller.VoucherPrivController.deleteById
url = /service-ops/ops-voucher-priv/delete-by-ids , method = com.dt.platform.ops.controller.VoucherPrivController.deleteByIds
url = /service-ops/ops-voucher-priv/query-paged-list , method = com.dt.platform.ops.controller.VoucherPrivController.queryPagedList
url = /service-ops/ops-voucher-priv/query-list , method = com.dt.platform.ops.controller.VoucherPrivController.queryList
url = /service-ops/workorder-category/update , method = com.dt.platform.ops.controller.WorkorderCategoryController.update
url = /service-ops/workorder-category/save , method = com.dt.platform.ops.controller.WorkorderCategoryController.save
url = /service-ops/workorder-category/insert , method = com.dt.platform.ops.controller.WorkorderCategoryController.insert
url = /service-ops/workorder-category/export-excel , method = com.dt.platform.ops.controller.WorkorderCategoryController.exportExcel
url = /service-ops/workorder-category/export-excel-template , method = com.dt.platform.ops.controller.WorkorderCategoryController.exportExcelTemplate
url = /service-ops/workorder-category/import-excel , method = com.dt.platform.ops.controller.WorkorderCategoryController.importExcel
url = /service-ops/workorder-category/get-by-id , method = com.dt.platform.ops.controller.WorkorderCategoryController.getById
url = /service-ops/workorder-category/get-by-ids , method = com.dt.platform.ops.controller.WorkorderCategoryController.getByIds
url = /service-ops/workorder-category/delete , method = com.dt.platform.ops.controller.WorkorderCategoryController.deleteById
url = /service-ops/workorder-category/delete-by-ids , method = com.dt.platform.ops.controller.WorkorderCategoryController.deleteByIds
url = /service-ops/workorder-category/query-paged-list , method = com.dt.platform.ops.controller.WorkorderCategoryController.queryPagedList
url = /service-ops/workorder-category/query-list , method = com.dt.platform.ops.controller.WorkorderCategoryController.queryList
url = /business/ops/db_instance/db_instance_form.html , method = com.dt.platform.ops.page.DbInstancePageController.form
url = /business/ops/db_instance/db_instance_list.html , method = com.dt.platform.ops.page.DbInstancePageController.list
url = /business/ops/host_db/host_db_form.html , method = com.dt.platform.ops.page.HostDbPageController.form
url = /business/ops/host_db/host_db_list.html , method = com.dt.platform.ops.page.HostDbPageController.list
url = /business/ops/host_mid/host_mid_form.html , method = com.dt.platform.ops.page.HostMidPageController.form
url = /business/ops/host_mid/host_mid_list.html , method = com.dt.platform.ops.page.HostMidPageController.list
url = /business/ops/host_os/host_os_form.html , method = com.dt.platform.ops.page.HostOsPageController.form
url = /business/ops/host_os/host_os_list.html , method = com.dt.platform.ops.page.HostOsPageController.list
url = /business/ops/host/host_form.html , method = com.dt.platform.ops.page.HostPageController.form
url = /business/ops/host/host_list.html , method = com.dt.platform.ops.page.HostPageController.list
url = /business/ops/host_position/host_position_form.html , method = com.dt.platform.ops.page.HostPositionPageController.form
url = /business/ops/host_position/host_position_list.html , method = com.dt.platform.ops.page.HostPositionPageController.list
url = /business/ops/information_system/information_system_form.html , method = com.dt.platform.ops.page.InformationSystemPageController.form
url = /business/ops/information_system/information_system_list.html , method = com.dt.platform.ops.page.InformationSystemPageController.list
url = /business/ops/service_category/service_category_form.html , method = com.dt.platform.ops.page.ServiceCategoryPageController.form
url = /business/ops/service_category/service_category_list.html , method = com.dt.platform.ops.page.ServiceCategoryPageController.list
url = /business/ops/service_group/service_group_form.html , method = com.dt.platform.ops.page.ServiceGroupPageController.form
url = /business/ops/service_group/service_group_list.html , method = com.dt.platform.ops.page.ServiceGroupPageController.list
url = /business/ops/service_info/service_info_form.html , method = com.dt.platform.ops.page.ServiceInfoPageController.form
url = /business/ops/service_info/service_info_list.html , method = com.dt.platform.ops.page.ServiceInfoPageController.list
url = /business/ops/voucher_history/voucher_history_form.html , method = com.dt.platform.ops.page.VoucherHistoryPageController.form
url = /business/ops/voucher_history/voucher_history_list.html , method = com.dt.platform.ops.page.VoucherHistoryPageController.list
url = /business/ops/voucher_owner/voucher_owner_form.html , method = com.dt.platform.ops.page.VoucherOwnerPageController.form
url = /business/ops/voucher_owner/voucher_owner_list.html , method = com.dt.platform.ops.page.VoucherOwnerPageController.list
url = /business/ops/voucher/voucher_form.html , method = com.dt.platform.ops.page.VoucherPageController.form
url = /business/ops/voucher/voucher_list.html , method = com.dt.platform.ops.page.VoucherPageController.list
url = /business/ops/voucher_priv/voucher_priv_form.html , method = com.dt.platform.ops.page.VoucherPrivPageController.form
url = /business/ops/voucher_priv/voucher_priv_list.html , method = com.dt.platform.ops.page.VoucherPrivPageController.list
url = /business/ops/workorder_category/workorder_category_form.html , method = com.dt.platform.ops.page.WorkorderCategoryPageController.form
url = /business/ops/workorder_category/workorder_category_list.html , method = com.dt.platform.ops.page.WorkorderCategoryPageController.list
url = /service-common/sys-code-allocation/update , method = com.dt.platform.common.controller.CodeAllocationController.update
url = /service-common/sys-code-allocation/save , method = com.dt.platform.common.controller.CodeAllocationController.save
url = /service-common/sys-code-allocation/insert , method = com.dt.platform.common.controller.CodeAllocationController.insert
url = /service-common/sys-code-allocation/export-excel , method = com.dt.platform.common.controller.CodeAllocationController.exportExcel
url = /service-common/sys-code-allocation/export-excel-template , method = com.dt.platform.common.controller.CodeAllocationController.exportExcelTemplate
url = /service-common/sys-code-allocation/import-excel , method = com.dt.platform.common.controller.CodeAllocationController.importExcel
url = /service-common/sys-code-allocation/get-by-id , method = com.dt.platform.common.controller.CodeAllocationController.getById
url = /service-common/sys-code-allocation/get-by-ids , method = com.dt.platform.common.controller.CodeAllocationController.getByIds
url = /service-common/sys-code-allocation/delete , method = com.dt.platform.common.controller.CodeAllocationController.deleteById
url = /service-common/sys-code-allocation/delete-by-ids , method = com.dt.platform.common.controller.CodeAllocationController.deleteByIds
url = /service-common/sys-code-allocation/query-paged-list , method = com.dt.platform.common.controller.CodeAllocationController.queryPagedList
url = /service-common/sys-code-allocation/query-list , method = com.dt.platform.common.controller.CodeAllocationController.queryList
url = /service-common/sys-code-attr/update , method = com.dt.platform.common.controller.CodeAttrController.update
url = /service-common/sys-code-attr/save , method = com.dt.platform.common.controller.CodeAttrController.save
url = /service-common/sys-code-attr/insert , method = com.dt.platform.common.controller.CodeAttrController.insert
url = /service-common/sys-code-attr/export-excel , method = com.dt.platform.common.controller.CodeAttrController.exportExcel
url = /service-common/sys-code-attr/export-excel-template , method = com.dt.platform.common.controller.CodeAttrController.exportExcelTemplate
url = /service-common/sys-code-attr/import-excel , method = com.dt.platform.common.controller.CodeAttrController.importExcel
url = /service-common/sys-code-attr/get-by-id , method = com.dt.platform.common.controller.CodeAttrController.getById
url = /service-common/sys-code-attr/get-by-ids , method = com.dt.platform.common.controller.CodeAttrController.getByIds
url = /service-common/sys-code-attr/delete , method = com.dt.platform.common.controller.CodeAttrController.deleteById
url = /service-common/sys-code-attr/delete-by-ids , method = com.dt.platform.common.controller.CodeAttrController.deleteByIds
url = /service-common/sys-code-attr/query-paged-list , method = com.dt.platform.common.controller.CodeAttrController.queryPagedList
url = /service-common/sys-code-attr/query-list , method = com.dt.platform.common.controller.CodeAttrController.queryList
url = /service-common/sys-code-module/generate-code , method = com.dt.platform.common.controller.CodeModuleController.generateCode
url = /service-common/sys-code-register/update , method = com.dt.platform.common.controller.CodeRegisterController.update
url = /service-common/sys-code-register/save , method = com.dt.platform.common.controller.CodeRegisterController.save
url = /service-common/sys-code-register/insert , method = com.dt.platform.common.controller.CodeRegisterController.insert
url = /service-common/sys-code-register/export-excel , method = com.dt.platform.common.controller.CodeRegisterController.exportExcel
url = /service-common/sys-code-register/export-excel-template , method = com.dt.platform.common.controller.CodeRegisterController.exportExcelTemplate
url = /service-common/sys-code-register/import-excel , method = com.dt.platform.common.controller.CodeRegisterController.importExcel
url = /service-common/sys-code-register/get-by-id , method = com.dt.platform.common.controller.CodeRegisterController.getById
url = /service-common/sys-code-register/get-by-ids , method = com.dt.platform.common.controller.CodeRegisterController.getByIds
url = /service-common/sys-code-register/delete , method = com.dt.platform.common.controller.CodeRegisterController.deleteById
url = /service-common/sys-code-register/delete-by-ids , method = com.dt.platform.common.controller.CodeRegisterController.deleteByIds
url = /service-common/sys-code-register/query-paged-list , method = com.dt.platform.common.controller.CodeRegisterController.queryPagedList
url = /service-common/sys-code-register/query-list , method = com.dt.platform.common.controller.CodeRegisterController.queryList
url = /service-common/sys-code-rule/update , method = com.dt.platform.common.controller.CodeRuleController.update
url = /service-common/sys-code-rule/save , method = com.dt.platform.common.controller.CodeRuleController.save
url = /service-common/sys-code-rule/insert , method = com.dt.platform.common.controller.CodeRuleController.insert
url = /service-common/sys-code-rule/export-excel , method = com.dt.platform.common.controller.CodeRuleController.exportExcel
url = /service-common/sys-code-rule/export-excel-template , method = com.dt.platform.common.controller.CodeRuleController.exportExcelTemplate
url = /service-common/sys-code-rule/import-excel , method = com.dt.platform.common.controller.CodeRuleController.importExcel
url = /service-common/sys-code-rule/get-by-id , method = com.dt.platform.common.controller.CodeRuleController.getById
url = /service-common/sys-code-rule/get-by-ids , method = com.dt.platform.common.controller.CodeRuleController.getByIds
url = /service-common/sys-code-rule/delete , method = com.dt.platform.common.controller.CodeRuleController.deleteById
url = /service-common/sys-code-rule/delete-by-ids , method = com.dt.platform.common.controller.CodeRuleController.deleteByIds
url = /service-common/sys-code-rule/query-paged-list , method = com.dt.platform.common.controller.CodeRuleController.queryPagedList
url = /service-common/sys-code-rule/query-list , method = com.dt.platform.common.controller.CodeRuleController.queryList
url = /service-common/sys-tpl-file/update , method = com.dt.platform.common.controller.TplFileController.update
url = /service-common/sys-tpl-file/save , method = com.dt.platform.common.controller.TplFileController.save
url = /service-common/sys-tpl-file/insert , method = com.dt.platform.common.controller.TplFileController.insert
url = /service-common/sys-tpl-file/export-excel , method = com.dt.platform.common.controller.TplFileController.exportExcel
url = /service-common/sys-tpl-file/export-excel-template , method = com.dt.platform.common.controller.TplFileController.exportExcelTemplate
url = /service-common/sys-tpl-file/import-excel , method = com.dt.platform.common.controller.TplFileController.importExcel
url = /service-common/sys-tpl-file/get-by-id , method = com.dt.platform.common.controller.TplFileController.getById
url = /service-common/sys-tpl-file/get-by-ids , method = com.dt.platform.common.controller.TplFileController.getByIds
url = /service-common/sys-tpl-file/delete , method = com.dt.platform.common.controller.TplFileController.deleteById
url = /service-common/sys-tpl-file/delete-by-ids , method = com.dt.platform.common.controller.TplFileController.deleteByIds
url = /service-common/sys-tpl-file/query-paged-list , method = com.dt.platform.common.controller.TplFileController.queryPagedList
url = /service-common/sys-tpl-file/get-tpl-file-stream-by-code , method = com.dt.platform.common.controller.TplFileController.getTplFileStreamByCode
url = /service-common/sys-tpl-file/query-list , method = com.dt.platform.common.controller.TplFileController.queryList
url = /business/common/code_allocation/code_allocation_form.html , method = com.dt.platform.common.page.CodeAllocationPageController.form
url = /business/common/code_allocation/code_allocation_list.html , method = com.dt.platform.common.page.CodeAllocationPageController.list
url = /business/common/code_attr/code_attr_form.html , method = com.dt.platform.common.page.CodeAttrPageController.form
url = /business/common/code_attr/code_attr_list.html , method = com.dt.platform.common.page.CodeAttrPageController.list
url = /business/common/code_register/code_register_form.html , method = com.dt.platform.common.page.CodeRegisterPageController.form
url = /business/common/code_register/code_register_list.html , method = com.dt.platform.common.page.CodeRegisterPageController.list
url = /business/common/code_rule/code_rule_form.html , method = com.dt.platform.common.page.CodeRulePageController.form
url = /business/common/code_rule/code_rule_list.html , method = com.dt.platform.common.page.CodeRulePageController.list
url = /business/common/tpl_file/tpl_file_form.html , method = com.dt.platform.common.page.TplFilePageController.form
url = /business/common/tpl_file/tpl_file_list.html , method = com.dt.platform.common.page.TplFilePageController.list
url = /service-knowledgebase/kn-category/update , method = com.dt.platform.knowledgebase.controller.CategoryController.update
url = /service-knowledgebase/kn-category/save , method = com.dt.platform.knowledgebase.controller.CategoryController.save
url = /service-knowledgebase/kn-category/insert , method = com.dt.platform.knowledgebase.controller.CategoryController.insert
url = /service-knowledgebase/kn-category/export-excel , method = com.dt.platform.knowledgebase.controller.CategoryController.exportExcel
url = /service-knowledgebase/kn-category/export-excel-template , method = com.dt.platform.knowledgebase.controller.CategoryController.exportExcelTemplate
url = /service-knowledgebase/kn-category/import-excel , method = com.dt.platform.knowledgebase.controller.CategoryController.importExcel
url = /service-knowledgebase/kn-category/get-by-id , method = com.dt.platform.knowledgebase.controller.CategoryController.getById
url = /service-knowledgebase/kn-category/get-by-ids , method = com.dt.platform.knowledgebase.controller.CategoryController.getByIds
url = /service-knowledgebase/kn-category/delete , method = com.dt.platform.knowledgebase.controller.CategoryController.deleteById
url = /service-knowledgebase/kn-category/delete-by-ids , method = com.dt.platform.knowledgebase.controller.CategoryController.deleteByIds
url = /service-knowledgebase/kn-category/query-paged-list , method = com.dt.platform.knowledgebase.controller.CategoryController.queryPagedList
url = /service-knowledgebase/kn-category/query-list , method = com.dt.platform.knowledgebase.controller.CategoryController.queryList
url = /service-knowledgebase/kn-content/update , method = com.dt.platform.knowledgebase.controller.ContentController.update
url = /service-knowledgebase/kn-content/save , method = com.dt.platform.knowledgebase.controller.ContentController.save
url = /service-knowledgebase/kn-content/insert , method = com.dt.platform.knowledgebase.controller.ContentController.insert
url = /service-knowledgebase/kn-content/export-excel , method = com.dt.platform.knowledgebase.controller.ContentController.exportExcel
url = /service-knowledgebase/kn-content/export-excel-template , method = com.dt.platform.knowledgebase.controller.ContentController.exportExcelTemplate
url = /service-knowledgebase/kn-content/import-excel , method = com.dt.platform.knowledgebase.controller.ContentController.importExcel
url = /service-knowledgebase/kn-content/get-by-id , method = com.dt.platform.knowledgebase.controller.ContentController.getById
url = /service-knowledgebase/kn-content/get-by-ids , method = com.dt.platform.knowledgebase.controller.ContentController.getByIds
url = /service-knowledgebase/kn-content/delete , method = com.dt.platform.knowledgebase.controller.ContentController.deleteById
url = /service-knowledgebase/kn-content/delete-by-ids , method = com.dt.platform.knowledgebase.controller.ContentController.deleteByIds
url = /service-knowledgebase/kn-content/query-paged-list , method = com.dt.platform.knowledgebase.controller.ContentController.queryPagedList
url = /service-knowledgebase/kn-content/query-list , method = com.dt.platform.knowledgebase.controller.ContentController.queryList
url = /business/knowledgebase/category/category_form.html , method = com.dt.platform.knowledgebase.page.CategoryPageController.form
url = /business/knowledgebase/category/category_list.html , method = com.dt.platform.knowledgebase.page.CategoryPageController.list
url = /business/knowledgebase/content/content_form.html , method = com.dt.platform.knowledgebase.page.ContentPageController.form
url = /business/knowledgebase/content/content_list.html , method = com.dt.platform.knowledgebase.page.ContentPageController.list
url = /service-contract/cont-company/update , method = com.dt.platform.contract.controller.CompanyController.update
url = /service-contract/cont-company/save , method = com.dt.platform.contract.controller.CompanyController.save
url = /service-contract/cont-company/insert , method = com.dt.platform.contract.controller.CompanyController.insert
url = /service-contract/cont-company/export-excel , method = com.dt.platform.contract.controller.CompanyController.exportExcel
url = /service-contract/cont-company/export-excel-template , method = com.dt.platform.contract.controller.CompanyController.exportExcelTemplate
url = /service-contract/cont-company/import-excel , method = com.dt.platform.contract.controller.CompanyController.importExcel
url = /service-contract/cont-company/get-by-id , method = com.dt.platform.contract.controller.CompanyController.getById
url = /service-contract/cont-company/get-by-ids , method = com.dt.platform.contract.controller.CompanyController.getByIds
url = /service-contract/cont-company/delete , method = com.dt.platform.contract.controller.CompanyController.deleteById
url = /service-contract/cont-company/delete-by-ids , method = com.dt.platform.contract.controller.CompanyController.deleteByIds
url = /service-contract/cont-company/query-paged-list , method = com.dt.platform.contract.controller.CompanyController.queryPagedList
url = /service-contract/cont-company/query-list , method = com.dt.platform.contract.controller.CompanyController.queryList
url = /service-contract/cont-contract-category/update , method = com.dt.platform.contract.controller.ContractCategoryController.update
url = /service-contract/cont-contract-category/save , method = com.dt.platform.contract.controller.ContractCategoryController.save
url = /service-contract/cont-contract-category/insert , method = com.dt.platform.contract.controller.ContractCategoryController.insert
url = /service-contract/cont-contract-category/export-excel , method = com.dt.platform.contract.controller.ContractCategoryController.exportExcel
url = /service-contract/cont-contract-category/export-excel-template , method = com.dt.platform.contract.controller.ContractCategoryController.exportExcelTemplate
url = /service-contract/cont-contract-category/import-excel , method = com.dt.platform.contract.controller.ContractCategoryController.importExcel
url = /service-contract/cont-contract-category/get-by-id , method = com.dt.platform.contract.controller.ContractCategoryController.getById
url = /service-contract/cont-contract-category/get-by-ids , method = com.dt.platform.contract.controller.ContractCategoryController.getByIds
url = /service-contract/cont-contract-category/delete , method = com.dt.platform.contract.controller.ContractCategoryController.deleteById
url = /service-contract/cont-contract-category/delete-by-ids , method = com.dt.platform.contract.controller.ContractCategoryController.deleteByIds
url = /service-contract/cont-contract-category/query-paged-list , method = com.dt.platform.contract.controller.ContractCategoryController.queryPagedList
url = /service-contract/cont-contract-category/query-list , method = com.dt.platform.contract.controller.ContractCategoryController.queryList
url = /service-contract/cont-contract/update , method = com.dt.platform.contract.controller.ContractController.update
url = /service-contract/cont-contract/save , method = com.dt.platform.contract.controller.ContractController.save
url = /service-contract/cont-contract/insert , method = com.dt.platform.contract.controller.ContractController.insert
url = /service-contract/cont-contract/export-excel , method = com.dt.platform.contract.controller.ContractController.exportExcel
url = /service-contract/cont-contract/export-excel-template , method = com.dt.platform.contract.controller.ContractController.exportExcelTemplate
url = /service-contract/cont-contract/import-excel , method = com.dt.platform.contract.controller.ContractController.importExcel
url = /service-contract/cont-contract/get-by-id , method = com.dt.platform.contract.controller.ContractController.getById
url = /service-contract/cont-contract/get-by-ids , method = com.dt.platform.contract.controller.ContractController.getByIds
url = /service-contract/cont-contract/delete , method = com.dt.platform.contract.controller.ContractController.deleteById
url = /service-contract/cont-contract/delete-by-ids , method = com.dt.platform.contract.controller.ContractController.deleteByIds
url = /service-contract/cont-contract/query-paged-list , method = com.dt.platform.contract.controller.ContractController.queryPagedList
url = /service-contract/cont-contract/query-list , method = com.dt.platform.contract.controller.ContractController.queryList
url = /service-contract/cont-contract-fund/update , method = com.dt.platform.contract.controller.ContractFundController.update
url = /service-contract/cont-contract-fund/save , method = com.dt.platform.contract.controller.ContractFundController.save
url = /service-contract/cont-contract-fund/insert , method = com.dt.platform.contract.controller.ContractFundController.insert
url = /service-contract/cont-contract-fund/export-excel , method = com.dt.platform.contract.controller.ContractFundController.exportExcel
url = /service-contract/cont-contract-fund/export-excel-template , method = com.dt.platform.contract.controller.ContractFundController.exportExcelTemplate
url = /service-contract/cont-contract-fund/import-excel , method = com.dt.platform.contract.controller.ContractFundController.importExcel
url = /service-contract/cont-contract-fund/get-by-id , method = com.dt.platform.contract.controller.ContractFundController.getById
url = /service-contract/cont-contract-fund/get-by-ids , method = com.dt.platform.contract.controller.ContractFundController.getByIds
url = /service-contract/cont-contract-fund/delete , method = com.dt.platform.contract.controller.ContractFundController.deleteById
url = /service-contract/cont-contract-fund/delete-by-ids , method = com.dt.platform.contract.controller.ContractFundController.deleteByIds
url = /service-contract/cont-contract-fund/query-paged-list , method = com.dt.platform.contract.controller.ContractFundController.queryPagedList
url = /service-contract/cont-contract-fund/query-list , method = com.dt.platform.contract.controller.ContractFundController.queryList
url = /business/contract/company/company_form.html , method = com.dt.platform.contract.page.CompanyPageController.form
url = /business/contract/company/company_list.html , method = com.dt.platform.contract.page.CompanyPageController.list
url = /business/contract/contract_category/contract_category_form.html , method = com.dt.platform.contract.page.ContractCategoryPageController.form
url = /business/contract/contract_category/contract_category_list.html , method = com.dt.platform.contract.page.ContractCategoryPageController.list
url = /business/contract/contract_fund/contract_fund_form.html , method = com.dt.platform.contract.page.ContractFundPageController.form
url = /business/contract/contract_fund/contract_fund_list.html , method = com.dt.platform.contract.page.ContractFundPageController.list
url = /business/contract/contract/contract_form.html , method = com.dt.platform.contract.page.ContractPageController.form
url = /business/contract/contract/contract_list.html , method = com.dt.platform.contract.page.ContractPageController.list
url = /v3/api-docs , method = springfox.documentation.oas.web.OpenApiControllerWebMvc.getDocumentation
url = /error , method = org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error
url = /error , method = org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml

13:09:03.318 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,65] - url scan time : 47ms
13:09:03.322 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,84] - 

======================== FOX-NIC-WEB IS READY ========================
	Machine Id         		D7B67D75818C671B
	Process Id         		65247
	Application Name	service-all
	Active Profile			default
	Port							8089
	Boot Time				27s
	Visit Local				http://127.0.0.1:8089/
	Visit LAN(0)	http://172.20.10.3:8089/
======================== FOX-NIC-WEB IS READY ========================

13:09:03.325 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-customer
13:09:03.326 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-contract
13:09:03.327 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-knowledgebase
13:09:03.328 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-common
13:09:03.329 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-console
13:09:03.330 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-datacenter
13:09:03.331 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-eam
13:09:03.332 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-hrm
13:09:03.332 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-ops
13:09:03.420 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,72] - deploy is ready on 132 dirs
13:11:43.320 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_config","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_config'
┣ 结果： 
┣━ 耗时：59ms , start = 1637125903246
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:43.466 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.cachekey"}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey'
┣ 结果： 
┣━ 耗时：103ms , start = 1637125903357
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:43.526 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.title"}
┣ 执行：select * from sys_config WHERE code = 'system.title'
┣ 结果： 
┣━ 耗时：36ms , start = 1637125903488
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:44.075 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.version.code"}
┣ 执行：select * from sys_config WHERE code = 'system.version.code'
┣ 结果： 
┣━ 耗时：542ms , start = 1637125903528
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:44.120 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.version.name"}
┣ 执行：select * from sys_config WHERE code = 'system.version.name'
┣ 结果： 
┣━ 耗时：39ms , start = 1637125904077
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:44.171 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.version.type"}
┣ 执行：select * from sys_config WHERE code = 'system.version.type'
┣ 结果： 
┣━ 耗时：44ms , start = 1637125904124
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:44.220 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.login.default"}
┣ 执行：select * from sys_config WHERE code = 'system.login.default'
┣ 结果： 
┣━ 耗时：39ms , start = 1637125904176
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:44.271 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.text'
┣ 结果： 
┣━ 耗时：39ms , start = 1637125904226
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:44.344 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.link'
┣ 结果： 
┣━ 耗时：61ms , start = 1637125904275
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:46.108 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"EAM(测试版本_1.0.0)","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'EAM(测试版本_1.0.0)' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：52ms , start = 1637125906054
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:11:46.169 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"用户登录","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '用户登录' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：42ms , start = 1637125906124
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:11:46.795 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"EAM","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'EAM' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1637125906754
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:11:46.851 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"© 2021 Foxnic-Web 版权所有","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '© 2021 Foxnic-Web 版权所有' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：43ms , start = 1637125906806
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:11:51.116 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.login.captcha.any"}
┣ 执行：select * from sys_config WHERE code = 'system.login.captcha.any'
┣ 结果： 
┣━ 耗时：52ms , start = 1637125911062
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:51.374 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = 'admin' ) A
┣ 结果： 
┣━ 耗时：74ms , start = 1637125911296
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:278)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 

13:11:51.437 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = 'admin' ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1637125911385
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 

13:11:51.478 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_user WHERE name = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"admin","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_user WHERE name = 'admin' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1637125911438
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 

13:11:52.090 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role'
┣ 结果： 
┣━ 耗时：66ms , start = 1637125912024
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:52.165 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu'
┣ 结果： 
┣━ 耗时：66ms , start = 1637125912098
┣━ 返回：RcdSet,size=22
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:52.235 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_menu'
┣ 结果： 
┣━ 耗时：65ms , start = 1637125912169
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:52.293 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_menu'
┣ 结果： 
┣━ 耗时：47ms , start = 1637125912245
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:52.350 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_user_tenant","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_user_tenant'
┣ 结果： 
┣━ 耗时：48ms , start = 1637125912301
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:52.408 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_user'
┣ 结果： 
┣━ 耗时：54ms , start = 1637125912353
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:52.414 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"110588348101165911"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '110588348101165911' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：54ms , start = 1637125912359
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

13:11:52.460 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_user'
┣ 结果： 
┣━ 耗时：49ms , start = 1637125912411
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:52.473 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '110588348101165911' )
┣ 结果： 
┣━ 耗时：58ms , start = 1637125912414
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

13:11:52.531 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_user'
┣ 结果： 
┣━ 耗时：54ms , start = 1637125912476
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:52.907 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 
┣ 语句：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= ? ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"110588348101165911","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( '110588348101165911' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：428ms , start = 1637125912479
┣━ 返回：RcdSet,size=1167
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 

13:11:52.936 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( '110588348101165911' )
┣ 结果： 
┣━ 耗时：393ms , start = 1637125912542
┣━ 返回：RcdSet,size=1167
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 

13:11:53.055 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee'
┣ 结果： 
┣━ 耗时：65ms , start = 1637125912989
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.097 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：38ms , start = 1637125913059
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

13:11:53.115 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：55ms , start = 1637125913058
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.171 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：45ms , start = 1637125913125
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.204 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"500337554411757568","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '500337554411757568' )
┣ 结果： 
┣━ 耗时：69ms , start = 1637125913133
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.230 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：47ms , start = 1637125913183
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.274 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"471653531770683392","PARAM_18":"473771445873278976","PARAM_19":"501416282168492032","PARAM_10":"472023699273285632","PARAM_11":"490923211228188672","PARAM_12":"484680928828850176","PARAM_13":"490638744550907904","PARAM_14":"481119852224839680","PARAM_15":"481068382330814464","PARAM_16":"479219957951889408","PARAM_9":"491342618928611328","PARAM_8":"465893030000328704","PARAM_7":"473503433593192448","PARAM_6":"495244156847783936","PARAM_5":"[]","PARAM_4":"501072627503202304","PARAM_3":"482877676047040511","PARAM_1":0,"PARAM_20":"482583842692005888","PARAM_21":"473534962490933248","PARAM_22":"487660170021703680","PARAM_23":"490923311769849856","PARAM_24":"471666413233242112","PARAM_25":"479329585473781760"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '482877676047040511' , '501072627503202304' , '[]' , '495244156847783936' , '473503433593192448' , '465893030000328704' , '491342618928611328' , '472023699273285632' , '490923211228188672' , '484680928828850176' , '490638744550907904' , '481119852224839680' , '481068382330814464' , '479219957951889408' , '471653531770683392' , '473771445873278976' , '501416282168492032' , '482583842692005888' , '473534962490933248' , '487660170021703680' , '490923311769849856' , '471666413233242112' , '479329585473781760' )
┣ 结果： 
┣━ 耗时：57ms , start = 1637125913216
┣━ 返回：RcdSet,size=22
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.286 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：51ms , start = 1637125913233
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.290 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"490803384081711104","PARAM_18":"485888529612668928","PARAM_19":"473733250494234624","PARAM_10":"494904212426063872","PARAM_11":"487568361882910720","PARAM_12":"472023108039999488","PARAM_13":"498885073529995264","PARAM_14":"508300419328376832","PARAM_15":"481749744998154240","PARAM_16":"485741088418562048","PARAM_9":"463429350247628800","PARAM_8":"475954735753461760","PARAM_7":"463400823506862080","PARAM_6":"494904448380829696","PARAM_5":"[]","PARAM_4":"483218056047230976","PARAM_3":"494597317773492224","PARAM_1":0,"PARAM_20":"478585173336653824","PARAM_21":"489818737319346176","PARAM_22":"480377913464586240","PARAM_23":"511607133662347264","PARAM_24":"463400000391479296","PARAM_25":"479956459375820800"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '494597317773492224' , '483218056047230976' , '[]' , '494904448380829696' , '463400823506862080' , '475954735753461760' , '463429350247628800' , '494904212426063872' , '487568361882910720' , '472023108039999488' , '498885073529995264' , '508300419328376832' , '481749744998154240' , '485741088418562048' , '490803384081711104' , '485888529612668928' , '473733250494234624' , '478585173336653824' , '489818737319346176' , '480377913464586240' , '511607133662347264' , '463400000391479296' , '479956459375820800' )
┣ 结果： 
┣━ 耗时：56ms , start = 1637125913233
┣━ 返回：RcdSet,size=22
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.328 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"510887820433293312","PARAM_8":"463401580721340416","PARAM_10":"473626745103187968","PARAM_7":"463401807993896960","PARAM_6":"481749145309151232","PARAM_5":"501072373705867264","PARAM_4":"479959564171608064","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '479959564171608064' , '501072373705867264' , '481749145309151232' , '463401807993896960' , '463401580721340416' , '510887820433293312' , '473626745103187968' )
┣ 结果： 
┣━ 耗时：49ms , start = 1637125913278
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.343 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"463399683914465280","PARAM_11":"498885073529995264","PARAM_12":"480389130912530432","PARAM_13":"478688762159693824","PARAM_14":"476673967462023168","PARAM_15":"482581320229191680","PARAM_16":"490923970208468992","PARAM_9":"473609125796773888","PARAM_8":"480137007553576960","PARAM_7":"482573207459594240","PARAM_6":"498582527229820928","PARAM_5":"486313018175520768","PARAM_4":"510887580426829824","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '510887580426829824' , '486313018175520768' , '498582527229820928' , '482573207459594240' , '480137007553576960' , '473609125796773888' , '463399683914465280' , '498885073529995264' , '480389130912530432' , '478688762159693824' , '476673967462023168' , '482581320229191680' , '490923970208468992' )
┣ 结果： 
┣━ 耗时：42ms , start = 1637125913297
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.357 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：64ms , start = 1637125913290
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.381 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"481338861117505536","PARAM_8":"476319981961740288","PARAM_10":"478956684543262720","PARAM_7":"480492959255494656","PARAM_11":"489077805078806528","PARAM_6":"[]","PARAM_5":"498885073529995264","PARAM_4":"492410573934297088","PARAM_3":"478922681358483456"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '478922681358483456' , '492410573934297088' , '498885073529995264' , '[]' , '480492959255494656' , '476319981961740288' , '481338861117505536' , '478956684543262720' , '489077805078806528' )
┣ 结果： 
┣━ 耗时：46ms , start = 1637125913332
┣━ 返回：RcdSet,size=8
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.403 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"479220705905344512","PARAM_11":"485747524208951296","PARAM_12":"492410573934297088","PARAM_13":"498885073529995264","PARAM_14":"486551839098011648","PARAM_15":"501389626531909632","PARAM_9":"476679540945453056","PARAM_8":"490803286488645632","PARAM_7":"474281113125126144","PARAM_6":"495243921824153600","PARAM_5":"[]","PARAM_4":"505300850025955328","PARAM_3":"464788438000861184"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '464788438000861184' , '505300850025955328' , '[]' , '495243921824153600' , '474281113125126144' , '490803286488645632' , '476679540945453056' , '479220705905344512' , '485747524208951296' , '492410573934297088' , '498885073529995264' , '486551839098011648' , '501389626531909632' )
┣ 结果： 
┣━ 耗时：40ms , start = 1637125913357
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.423 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"484684747155439616","PARAM_18":"479354710537535488","PARAM_19":"489922965425618944","PARAM_31":"477956217075924992","PARAM_10":"472331129437814784","PARAM_32":"485743350629007360","PARAM_11":"489901512886059008","PARAM_12":"471622514443812864","PARAM_13":"487660170021703680","PARAM_14":"479008663701291008","PARAM_15":"478603507688013824","PARAM_16":"485936556654198784","PARAM_30":"471974283854217216","PARAM_9":"487559532503891968","PARAM_8":"463402969874825216","PARAM_7":"507635144501231616","PARAM_6":"478080872159903744","PARAM_5":"463708992481263616","PARAM_4":"479388218479869952","PARAM_3":"485560933834293248","PARAM_1":0,"PARAM_28":"484687827645239296","PARAM_29":"471623107291906048","PARAM_20":"474123290672103424","PARAM_21":"477952342537273344","PARAM_22":"488696580300341248","PARAM_23":"502195284776849408","PARAM_24":"[]","PARAM_25":"501074097552228352","PARAM_26":"490888724289159168","PARAM_27":"490924065570164737"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '485560933834293248' , '479388218479869952' , '463708992481263616' , '478080872159903744' , '507635144501231616' , '463402969874825216' , '487559532503891968' , '472331129437814784' , '489901512886059008' , '471622514443812864' , '487660170021703680' , '479008663701291008' , '478603507688013824' , '485936556654198784' , '484684747155439616' , '479354710537535488' , '489922965425618944' , '474123290672103424' , '477952342537273344' , '488696580300341248' , '502195284776849408' , '[]' , '501074097552228352' , '490888724289159168' , '490924065570164737' , '484687827645239296' , '471623107291906048' , '471974283854217216' , '477956217075924992' , '485743350629007360' )
┣ 结果： 
┣━ 耗时：50ms , start = 1637125913372
┣━ 返回：RcdSet,size=29
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.433 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_tenant","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_tenant'
┣ 结果： 
┣━ 耗时：60ms , start = 1637125913372
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.439 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_8":"501072108604882944","PARAM_7":"479218751024136192","PARAM_6":"501416282168492032","PARAM_5":"463397731918938112","PARAM_4":"[]","PARAM_3":"482865228384567296"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '482865228384567296' , '[]' , '463397731918938112' , '501416282168492032' , '479218751024136192' , '501072108604882944' )
┣ 结果： 
┣━ 耗时：48ms , start = 1637125913391
┣━ 返回：RcdSet,size=5
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.488 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'T001' )
┣ 结果： 
┣━ 耗时：45ms , start = 1637125913442
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 

13:11:53.496 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：49ms , start = 1637125913446
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.510 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"481563563521998848","PARAM_11":"498885073529995264","PARAM_12":"476660938984914944","PARAM_13":"480488576534970368","PARAM_14":"480481725315547136","PARAM_15":"490803523777200128","PARAM_9":"472331321499189248","PARAM_8":"490245507570991104","PARAM_7":"463399148020826112","PARAM_6":"482864633716146176","PARAM_5":"482581092939857920","PARAM_4":"482877676047040512","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '482877676047040512' , '482581092939857920' , '482864633716146176' , '463399148020826112' , '490245507570991104' , '472331321499189248' , '481563563521998848' , '498885073529995264' , '476660938984914944' , '480488576534970368' , '480481725315547136' , '490803523777200128' )
┣ 结果： 
┣━ 耗时：57ms , start = 1637125913452
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

13:11:53.540 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：41ms , start = 1637125913498
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.598 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：52ms , start = 1637125913542
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.639 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"501072380383199232","PARAM_31":"472331135444058112","PARAM_32":"478688767939444736","PARAM_33":"495243928195301376","PARAM_34":"481119858512101376","PARAM_35":"473534967930945536","PARAM_36":"494904218386169856","PARAM_37":"479329284624744448","PARAM_38":"485743357943873536","PARAM_30":"485936562941460480","PARAM_28":"498885085060136960","PARAM_29":"479598112373997568","PARAM_20":"485560940150915072","PARAM_21":"get-current-user","PARAM_22":"463400830083530752","PARAM_23":"478080879135031296","PARAM_24":"498885082019266560","PARAM_25":"490245513522708480","PARAM_26":"489922970169376768","PARAM_27":"484684753241374720","PARAM_17":"463400823850795008","PARAM_18":"478585179489697792","PARAM_19":"482864638480875520","PARAM_97":"483218062279966720","PARAM_10":"479329591786209280","PARAM_98":"475954742317547520","PARAM_11":"494904448682819584","PARAM_99":"471666417796644864","PARAM_12":"482573213478420480","PARAM_13":"473609132373442560","PARAM_14":"477956223535153152","PARAM_15":"480389135564013568","PARAM_16":"492410580473217024","PARAM_90":"474155093021687808","PARAM_91":"474123295055151104","PARAM_92":"476673974453927936","PARAM_93":"486551845917949952","PARAM_94":"494597318092259328","PARAM_95":"494904212736442368","PARAM_96":"464788444141322240","PARAM_86":"489901521874452480","PARAM_87":"475954736080617472","PARAM_88":"501074104456052736","PARAM_89":"498769993710698497","PARAM_80":"486313025783988224","PARAM_81":"480481731707666432","PARAM_82":"473228716474892288","PARAM_83":"478922689172471808","PARAM_84":"482864640208928768","PARAM_85":"471974289361338368","PARAM_103":"480488581421334528","PARAM_104":"507635157855895552","PARAM_101":"478585177820364800","PARAM_102":"489077809105338368","PARAM_107":"483218056353415168","PARAM_108":"501416291903471616","PARAM_105":"479008669908860928","PARAM_106":"480492966025101312","PARAM_75":"471985490283724800","PARAM_76":"478585173638643712","PARAM_77":"472023108392321024","PARAM_109":"472331327836782592","PARAM_78":"479330034058788864","PARAM_79":"484683937952563200","PARAM_70":"480389137287872512","PARAM_71":"501416295116308480","PARAM_72":"484680991584026624","PARAM_73":"472023114964795392","PARAM_74":"486551844089233408","PARAM_9":"487568362436558848","PARAM_8":"508300419894607872","PARAM_7":"489077810774671360","PARAM_6":"489922971863875584","PARAM_5":"471974287931080704","PARAM_110":"478688766404329472","PARAM_4":"501072114866978816","PARAM_111":"474123296653180928","PARAM_3":"479956464534814720","PARAM_2":0,"PARAM_1":0,"PARAM_64":"485936561238573056","PARAM_65":"481749745337892864","PARAM_66":"480488583120027648","PARAM_67":"485888529902075904","PARAM_68":"495201409763901440","PARAM_69":"479956466397085696","PARAM_60":"482865234084626432","PARAM_61":"476660946173952000","PARAM_62":"479388229263425536","PARAM_63":"479959570282708992","PARAM_100":"481749749448310784","PARAM_125":"482877682514657280","PARAM_126":"472814616229969920","PARAM_123":"481749751037952000","PARAM_124":"471666419482755072","PARAM_129":"463400007958003712","PARAM_127":"471653537873395712","PARAM_128":"485741088754106368","PARAM_53":"480137014188965888","PARAM_54":"463400000727023616","PARAM_55":"510887822043906048","PARAM_56":"479956459719753728","PARAM_57":"485741095003619328","PARAM_58":"474281122537144320","PARAM_59":"480377913779159040","PARAM_50":"479218757961515008","PARAM_51":"463429355423399936","PARAM_52":"463429350570590208","PARAM_130":"463401586228461568","PARAM_114":"511607135210045440","PARAM_115":"476679546897170432","PARAM_112":"473626751956680704","PARAM_113":"482581098463756288","PARAM_118":"511607133742039040","PARAM_119":"479329291742478336","PARAM_116":"463429357021429760","PARAM_117":"484684751630761984","PARAM_42":"478603514990297088","PARAM_43":"477956221781934080","PARAM_44":"473733250888499200","PARAM_45":"481338868780498944","PARAM_46":"463397738055204864","PARAM_47":"477952350720360448","PARAM_48":"501072634599964672","PARAM_49":"463399153808965632","PARAM_40":"473771453230088192","PARAM_41":"475686686903238656","PARAM_121":"478922687092097024","PARAM_122":"489815783782744064","PARAM_120":"481749152221364224"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479956464534814720' , '501072114866978816' , '471974287931080704' , '489922971863875584' , '489077810774671360' , '508300419894607872' , '487568362436558848' , '479329591786209280' , '494904448682819584' , '482573213478420480' , '473609132373442560' , '477956223535153152' , '480389135564013568' , '492410580473217024' , '463400823850795008' , '478585179489697792' , '482864638480875520' , '485560940150915072' , 'get-current-user' , '463400830083530752' , '478080879135031296' , '498885082019266560' , '490245513522708480' , '489922970169376768' , '484684753241374720' , '498885085060136960' , '479598112373997568' , '485936562941460480' , '472331135444058112' , '478688767939444736' , '495243928195301376' , '481119858512101376' , '473534967930945536' , '494904218386169856' , '479329284624744448' , '485743357943873536' , '501072380383199232' , '473771453230088192' , '475686686903238656' , '478603514990297088' , '477956221781934080' , '473733250888499200' , '481338868780498944' , '463397738055204864' , '477952350720360448' , '501072634599964672' , '463399153808965632' , '479218757961515008' , '463429355423399936' , '463429350570590208' , '480137014188965888' , '463400000727023616' , '510887822043906048' , '479956459719753728' , '485741095003619328' , '474281122537144320' , '480377913779159040' , '482865234084626432' , '476660946173952000' , '479388229263425536' , '479959570282708992' , '485936561238573056' , '481749745337892864' , '480488583120027648' , '485888529902075904' , '495201409763901440' , '479956466397085696' , '480389137287872512' , '501416295116308480' , '484680991584026624' , '472023114964795392' , '486551844089233408' , '471985490283724800' , '478585173638643712' , '472023108392321024' , '479330034058788864' , '484683937952563200' , '486313025783988224' , '480481731707666432' , '473228716474892288' , '478922689172471808' , '482864640208928768' , '471974289361338368' , '489901521874452480' , '475954736080617472' , '501074104456052736' , '498769993710698497' , '474155093021687808' , '474123295055151104' , '476673974453927936' , '486551845917949952' , '494597318092259328' , '494904212736442368' , '464788444141322240' , '483218062279966720' , '475954742317547520' , '471666417796644864' , '481749749448310784' , '478585177820364800' , '489077809105338368' , '480488581421334528' , '507635157855895552' , '479008669908860928' , '480492966025101312' , '483218056353415168' , '501416291903471616' , '472331327836782592' , '478688766404329472' , '474123296653180928' , '473626751956680704' , '482581098463756288' , '511607135210045440' , '476679546897170432' , '463429357021429760' , '484684751630761984' , '511607133742039040' , '479329291742478336' , '481749152221364224' , '478922687092097024' , '489815783782744064' , '481749751037952000' , '471666419482755072' , '482877682514657280' , '472814616229969920' , '471653537873395712' , '485741088754106368' , '463400007958003712' , '463401586228461568' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：127ms , start = 1637125913507
┣━ 返回：RcdSet,size=141
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.662 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：53ms , start = 1637125913608
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.695 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_17":"497513389245857793","PARAM_10":"497490986344120320","PARAM_11":"498472886441353216","PARAM_12":"500338282807173120","PARAM_13":"464827137099038721","PARAM_14":"478598694187307009","PARAM_15":"491206513122086913","PARAM_16":"486485770673065984","PARAM_9":"490920008524763136","PARAM_8":"498963857323065345","PARAM_7":"473612688681861120","PARAM_6":"499954030739460097","PARAM_5":"501073274482987009","PARAM_4":"498474569439387649","PARAM_3":"498962218231005184","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '498962218231005184' , '498474569439387649' , '501073274482987009' , '499954030739460097' , '473612688681861120' , '498963857323065345' , '490920008524763136' , '497490986344120320' , '498472886441353216' , '500338282807173120' , '464827137099038721' , '478598694187307009' , '491206513122086913' , '486485770673065984' , '497513389245857793' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：85ms , start = 1637125913609
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.716 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"490245507856203776","PARAM_31":"eam","PARAM_32":"476517102736375808","PARAM_33":"473733259285495808","PARAM_34":"481563573261172736","PARAM_35":"477952352276447232","PARAM_36":"510887582641422336","PARAM_37":"490245515401756672","PARAM_38":"501072116880244736","PARAM_30":"478922691353509888","PARAM_28":"472036243182452736","PARAM_29":"479208678382108672","PARAM_20":"479598113862975488","PARAM_21":"481749153626456064","PARAM_22":"472810496475529216","PARAM_23":"482581327950905344","PARAM_24":"482581093229264896","PARAM_25":"492410582486482944","PARAM_26":"485888537137250304","PARAM_27":"479956468586512384","PARAM_17":"484683939244408832","PARAM_18":"489922973885530112","PARAM_19":"475686688278970368","PARAM_97":"494903523763298304","PARAM_10":"478603517087449088","PARAM_98":"473609134411874304","PARAM_11":"463429358598488064","PARAM_99":"478603516361834496","PARAM_12":"479388413435314177","PARAM_13":"485741096391933952","PARAM_14":"479220714138763264","PARAM_15":"473771454769397760","PARAM_16":"471623115881840640","PARAM_90":"472331321801179136","PARAM_91":"481119859787169792","PARAM_92":"482581328609411072","PARAM_93":"501416298853433344","PARAM_94":"463402977026113536","PARAM_95":"472023707355709440","PARAM_96":"479008671368478720","PARAM_86":"494597325411319808","PARAM_87":"485395845907230720","PARAM_88":"479219966495686656","PARAM_89":"471666421412134912","PARAM_80":"477956225548419072","PARAM_81":"484684755145588736","PARAM_82":"485936564942143488","PARAM_83":"480377921387626496","PARAM_84":"473733260023693312","PARAM_85":"474123298494480384","PARAM_103":"471623115152031744","PARAM_104":"479219965778460672","PARAM_101":"479329294410055680","PARAM_102":"486551847834746880","PARAM_107":"498770477079068673","PARAM_108":"482877676386779136","PARAM_105":"481068389998002176","PARAM_106":"480481725646897152","PARAM_75":"485743359831310336","PARAM_76":"494904455913799680","PARAM_77":"480488585066184704","PARAM_109":"495244164963762176","PARAM_78":"510887822513668096","PARAM_79":"489815791709978624","PARAM_70":"478585181314220032","PARAM_71":"487568378521714688","PARAM_72":"481563563891097600","PARAM_73":"485560941274988544","PARAM_74":"482583850279501824","PARAM_9":"479354718158585856","PARAM_8":"464788445420584960","PARAM_7":"479598114576007168","PARAM_6":"479329293776715776","PARAM_5":"482573215365857280","PARAM_110":"476660939324653568","PARAM_4":"487559548404498432","PARAM_111":"483218064226123776","PARAM_3":"484683939894525952","PARAM_2":0,"PARAM_1":0,"PARAM_64":"482864634051690496","PARAM_65":"489901523275350016","PARAM_66":"475686688891338752","PARAM_67":"482865235867205632","PARAM_68":"479008671947292672","PARAM_69":"484681017538379776","PARAM_60":"510887582830166016","PARAM_61":"472023706713980928","PARAM_62":"482583850896064512","PARAM_63":"478688769768161280","PARAM_100":"482864642218000384","PARAM_125":"478624924152365056","PARAM_126":"477952352960118784","PARAM_123":"485560941845413888","PARAM_124":"479220714860183552","PARAM_129":"481749154318516224","PARAM_127":"476679548117712896","PARAM_128":"471974290984534016","PARAM_53":"471653539840524288","PARAM_54":"489077812460781568","PARAM_55":"481749752891834368","PARAM_56":"489901523904495616","PARAM_57":"476679548692332544","PARAM_58":"480488576866320384","PARAM_59":"481068389410799616","PARAM_50":"494904455314014208","PARAM_51":"487568377175343104","PARAM_52":"473771455499206656","PARAM_130":"498885088876953600","PARAM_114":"501072116167213056","PARAM_115":"471653539131686912","PARAM_112":"473503441142939648","PARAM_113":"479354718896783360","PARAM_118":"481119860437286912","PARAM_119":"507635161886621696","PARAM_116":"488696597023031296","PARAM_117":"475954744494391296","PARAM_42":"463399148318621696","PARAM_43":"471622522614317056","PARAM_44":"480389139313721344","PARAM_45":"475954743840079872","PARAM_46":"501074106590953472","PARAM_47":"479329593644285952","PARAM_48":"482877684532117504","PARAM_49":"486313028048912384","PARAM_40":"479388232048443392","PARAM_41":"485741097058828288","PARAM_121":"472357984110903296","PARAM_122":"464788446058119168","PARAM_120":"488696595773128704"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '484683939894525952' , '487559548404498432' , '482573215365857280' , '479329293776715776' , '479598114576007168' , '464788445420584960' , '479354718158585856' , '478603517087449088' , '463429358598488064' , '479388413435314177' , '485741096391933952' , '479220714138763264' , '473771454769397760' , '471623115881840640' , '484683939244408832' , '489922973885530112' , '475686688278970368' , '479598113862975488' , '481749153626456064' , '472810496475529216' , '482581327950905344' , '482581093229264896' , '492410582486482944' , '485888537137250304' , '479956468586512384' , '472036243182452736' , '479208678382108672' , '478922691353509888' , 'eam' , '476517102736375808' , '473733259285495808' , '481563573261172736' , '477952352276447232' , '510887582641422336' , '490245515401756672' , '501072116880244736' , '490245507856203776' , '479388232048443392' , '485741097058828288' , '463399148318621696' , '471622522614317056' , '480389139313721344' , '475954743840079872' , '501074106590953472' , '479329593644285952' , '482877684532117504' , '486313028048912384' , '494904455314014208' , '487568377175343104' , '473771455499206656' , '471653539840524288' , '489077812460781568' , '481749752891834368' , '489901523904495616' , '476679548692332544' , '480488576866320384' , '481068389410799616' , '510887582830166016' , '472023706713980928' , '482583850896064512' , '478688769768161280' , '482864634051690496' , '489901523275350016' , '475686688891338752' , '482865235867205632' , '479008671947292672' , '484681017538379776' , '478585181314220032' , '487568378521714688' , '481563563891097600' , '485560941274988544' , '482583850279501824' , '485743359831310336' , '494904455913799680' , '480488585066184704' , '510887822513668096' , '489815791709978624' , '477956225548419072' , '484684755145588736' , '485936564942143488' , '480377921387626496' , '473733260023693312' , '474123298494480384' , '494597325411319808' , '485395845907230720' , '479219966495686656' , '471666421412134912' , '472331321801179136' , '481119859787169792' , '482581328609411072' , '501416298853433344' , '463402977026113536' , '472023707355709440' , '479008671368478720' , '494903523763298304' , '473609134411874304' , '478603516361834496' , '482864642218000384' , '479329294410055680' , '486551847834746880' , '471623115152031744' , '479219965778460672' , '481068389998002176' , '480481725646897152' , '498770477079068673' , '482877676386779136' , '495244164963762176' , '476660939324653568' , '483218064226123776' , '473503441142939648' , '479354718896783360' , '501072116167213056' , '471653539131686912' , '488696597023031296' , '475954744494391296' , '481119860437286912' , '507635161886621696' , '488696595773128704' , '472357984110903296' , '464788446058119168' , '485560941845413888' , '479220714860183552' , '478624924152365056' , '477952352960118784' , '476679548117712896' , '471974290984534016' , '481749154318516224' , '498885088876953600' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：196ms , start = 1637125913519
┣━ 返回：RcdSet,size=188
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.717 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：47ms , start = 1637125913669
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.797 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"510887581764812800","PARAM_31":"489922965769551872","PARAM_32":"478080877377617920","PARAM_33":"463401812293058560","PARAM_34":"474159090990317568","PARAM_35":"479330038903209984","PARAM_36":"485743356169682944","PARAM_37":"485936556943605760","PARAM_38":"475954740530774016","PARAM_30":"474123290978287616","PARAM_28":"472331133846028288","PARAM_29":"473534966525853696","PARAM_20":"472331129806913536","PARAM_21":"473626750312513536","PARAM_22":"index","PARAM_23":"495244161406992384","PARAM_24":"484683936333561856","PARAM_25":"473733255862943744","PARAM_26":"474281120842645504","PARAM_27":"479388227191439360","PARAM_17":"501072632922243072","PARAM_18":"472023113178021888","PARAM_19":"473503437766524928","PARAM_97":"472331326201004032","PARAM_10":"479354710923411456","PARAM_98":"463401584798203904","PARAM_11":"482573211888779264","PARAM_99":"498769910416015360","PARAM_12":"481749150413619200","PARAM_13":"481119856855351296","PARAM_14":"463397133957988352","PARAM_15":"484684747470012416","PARAM_16":"472818971712684033","PARAM_90":"464788442501349376","PARAM_91":"477952342965092352","PARAM_92":"471986331946319872","PARAM_93":"476679545236226048","PARAM_94":"478626344431779840","PARAM_95":"490245511899512832","PARAM_96":"494597321997156352","PARAM_86":"482877680811769856","PARAM_87":"471623112182464512","PARAM_88":"495243926484025344","PARAM_89":"485743351006494720","PARAM_80":"484683932139257856","PARAM_81":"471622514821300224","PARAM_82":"476660944341041152","PARAM_83":"473609130683138048","PARAM_84":"471974284126846976","PARAM_85":"486313023716196352","PARAM_103":"508300428283215872","PARAM_104":"485747528893988864","PARAM_101":"507635145327509504","PARAM_102":"479354715398733824","PARAM_107":"489901513284517888","PARAM_108":"487559541341290496","PARAM_105":"480377918011211776","PARAM_106":"502170004054085633","PARAM_75":"473771451304902656","PARAM_76":"492410578774523904","PARAM_77":"475686681035407360","PARAM_109":"482581324939395072","PARAM_78":"483218060644188160","PARAM_79":"484680990048911360","PARAM_70":"481068386625781760","PARAM_71":"471622519044964352","PARAM_72":"485560938628382720","PARAM_73":"482865232566288384","PARAM_74":"478080872541585408","PARAM_9":"488696580921098240","PARAM_8":"481338866817564672","PARAM_7":"478603508019363840","PARAM_6":"463400006318030848","PARAM_5":"479959568621764608","PARAM_110":"501074097912938496","PARAM_4":"511607134790615040","PARAM_111":"507635154248794112","PARAM_3":"463402973779722240","PARAM_2":0,"PARAM_1":0,"PARAM_64":"472037131183718400","PARAM_65":"485415810584555521","PARAM_66":"478603513186746368","PARAM_67":"489901519739551744","PARAM_68":"482581096999944192","PARAM_69":"488696589599113216","PARAM_60":"479219962657898496","PARAM_61":"494904216788140032","PARAM_62":"479598110457200640","PARAM_63":"463399152273850368","PARAM_100":"463402970206175232","PARAM_125":"479329590288842752","PARAM_126":"490924383968169985","PARAM_123":"475686685250682880","PARAM_124":"501074102618947584","PARAM_129":"463399687542538240","PARAM_127":"479329289888595968","PARAM_128":"487559533120454656","PARAM_53":"472819614665932801","PARAM_54":"482583847255408640","PARAM_55":"472023703798939648","PARAM_56":"479218756208295936","PARAM_57":"471620638545543168","PARAM_58":"479008668327608320","PARAM_59":"485560934119505920","PARAM_50":"481563568920068096","PARAM_51":"480492964435460096","PARAM_52":"480481730000584704","PARAM_130":"501072113185062912","PARAM_114":"480137012393803776","PARAM_115":"473228835811229696","PARAM_112":"494904452583522304","PARAM_113":"477952348665151488","PARAM_118":"471623107698753536","PARAM_119":"489815788086099968","PARAM_116":"485888533777612800","PARAM_117":"463400828363866112","PARAM_42":"477956217403080704","PARAM_43":"510887821632864256","PARAM_44":"476673972792983552","PARAM_45":"471653536266977280","PARAM_46":"463397736541061120","PARAM_47":"479388218932854784","PARAM_48":"479220710963675136","PARAM_49":"487568371366232064","PARAM_40":"485741093254594560","PARAM_41":"479008663990697984","PARAM_121":"501072378579648512","PARAM_122":"476319986613223424","PARAM_120":"478956689802919936"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463402973779722240' , '511607134790615040' , '479959568621764608' , '463400006318030848' , '478603508019363840' , '481338866817564672' , '488696580921098240' , '479354710923411456' , '482573211888779264' , '481749150413619200' , '481119856855351296' , '463397133957988352' , '484684747470012416' , '472818971712684033' , '501072632922243072' , '472023113178021888' , '473503437766524928' , '472331129806913536' , '473626750312513536' , 'index' , '495244161406992384' , '484683936333561856' , '473733255862943744' , '474281120842645504' , '479388227191439360' , '472331133846028288' , '473534966525853696' , '474123290978287616' , '489922965769551872' , '478080877377617920' , '463401812293058560' , '474159090990317568' , '479330038903209984' , '485743356169682944' , '485936556943605760' , '475954740530774016' , '510887581764812800' , '485741093254594560' , '479008663990697984' , '477956217403080704' , '510887821632864256' , '476673972792983552' , '471653536266977280' , '463397736541061120' , '479388218932854784' , '479220710963675136' , '487568371366232064' , '481563568920068096' , '480492964435460096' , '480481730000584704' , '472819614665932801' , '482583847255408640' , '472023703798939648' , '479218756208295936' , '471620638545543168' , '479008668327608320' , '485560934119505920' , '479219962657898496' , '494904216788140032' , '479598110457200640' , '463399152273850368' , '472037131183718400' , '485415810584555521' , '478603513186746368' , '489901519739551744' , '482581096999944192' , '488696589599113216' , '481068386625781760' , '471622519044964352' , '485560938628382720' , '482865232566288384' , '478080872541585408' , '473771451304902656' , '492410578774523904' , '475686681035407360' , '483218060644188160' , '484680990048911360' , '484683932139257856' , '471622514821300224' , '476660944341041152' , '473609130683138048' , '471974284126846976' , '486313023716196352' , '482877680811769856' , '471623112182464512' , '495243926484025344' , '485743351006494720' , '464788442501349376' , '477952342965092352' , '471986331946319872' , '476679545236226048' , '478626344431779840' , '490245511899512832' , '494597321997156352' , '472331326201004032' , '463401584798203904' , '498769910416015360' , '463402970206175232' , '507635145327509504' , '479354715398733824' , '508300428283215872' , '485747528893988864' , '480377918011211776' , '502170004054085633' , '489901513284517888' , '487559541341290496' , '482581324939395072' , '501074097912938496' , '507635154248794112' , '494904452583522304' , '477952348665151488' , '480137012393803776' , '473228835811229696' , '485888533777612800' , '463400828363866112' , '471623107698753536' , '489815788086099968' , '478956689802919936' , '501072378579648512' , '476319986613223424' , '475686685250682880' , '501074102618947584' , '479329590288842752' , '490924383968169985' , '479329289888595968' , '487559533120454656' , '463399687542538240' , '501072113185062912' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：246ms , start = 1637125913544
┣━ 返回：RcdSet,size=277
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.794 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"485747524523524096","PARAM_31":"463402976384385024","PARAM_32":"494597324853477376","PARAM_33":"463399154698158080","PARAM_34":"482581099617189888","PARAM_35":"486551847209795584","PARAM_36":"481563572455866368","PARAM_37":"474123297894694912","PARAM_38":"484681008940056576","PARAM_30":"486551846547095552","PARAM_28":"479956467907035136","PARAM_29":"463400008926887936","PARAM_20":"473626753412104192","PARAM_21":"476679541226471424","PARAM_22":"479218759370801152","PARAM_23":"478688769155792896","PARAM_24":"479330042220904448","PARAM_25":"486313027243606016","PARAM_26":"482573214082400256","PARAM_27":"472331136572325888","PARAM_17":"480481733238587392","PARAM_18":"495243928853807104","PARAM_19":"473534968501370880","PARAM_97":"489815791064055808","PARAM_10":"485936564371718144","PARAM_98":"478625116503146496","PARAM_11":"481338870340780032","PARAM_99":"463400831098552320","PARAM_12":"480389138625855488","PARAM_13":"477956224147521536","PARAM_14":"485853808635678720","PARAM_15":"473503440530571264","PARAM_16":"463397133957988354","PARAM_90":"471974290447663104","PARAM_91":"472331329199931392","PARAM_92":"477956224856358912","PARAM_93":"478922689868726272","PARAM_94":"501072381054287872","PARAM_95":"479388230924369920","PARAM_96":"463401814696394752","PARAM_86":"hrm","PARAM_87":"464788438315433984","PARAM_88":"476660947629375488","PARAM_89":"501072635946336256","PARAM_80":"473534969071796224","PARAM_81":"474281123879321600","PARAM_82":"476673976400084992","PARAM_83":"501416296345239552","PARAM_84":"484684753866326016","PARAM_85":"479329592423743488","PARAM_103":"510887822199095296","PARAM_104":"498885087492833280","PARAM_101":"485747532043911168","PARAM_102":"507635160540250112","PARAM_107":"478585180710240256","PARAM_108":"471622521846759424","PARAM_105":"472023116420218880","PARAM_106":"479959571725549568","PARAM_75":"479959570941214720","PARAM_76":"480488584403484672","PARAM_77":"482877683861028864","PARAM_109":"501389817515347968","PARAM_78":"474158815193858049","PARAM_79":"498770254759985153","PARAM_70":"479220706257666048","PARAM_71":"494904219631878144","PARAM_72":"484684754508054528","PARAM_73":"507635159172907008","PARAM_74":"489922973222830080","PARAM_9":"492410581156888576","PARAM_8":"481749752275271680","PARAM_7":"508300433685479424","PARAM_6":"476319989616345088","PARAM_5":"478080879852257280","PARAM_110":"495244164322033664","PARAM_4":"482865235280003072","PARAM_111":"486551839387418624","PARAM_3":"479329592994168832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"463397739233804288","PARAM_65":"478080880531734528","PARAM_66":"471666420770406400","PARAM_67":"463401587079905280","PARAM_68":"485888536512299008","PARAM_69":"482865234667634688","PARAM_60":"473609133057114112","PARAM_61":"501074105877921792","PARAM_62":"482864641542717440","PARAM_63":"489077811793887232","PARAM_100":"486313026476048384","PARAM_125":"482573214719934464","PARAM_126":"501072381725376512","PARAM_123":"474123297290715136","PARAM_124":"483218063576006656","PARAM_129":"490245514197991424","PARAM_127":"479956467156254720","PARAM_128":"474281123241787392","PARAM_53":"480481732412309504","PARAM_54":"495243922151309312","PARAM_55":"480389137958961152","PARAM_56":"485743358573019136","PARAM_57":"489922972543352832","PARAM_58":"498885074154946560","PARAM_59":"480492967241449472","PARAM_50":"474281113531973632","PARAM_51":"479388230056148992","PARAM_52":"480137015552114688","PARAM_130":"501416297607725056","PARAM_114":"480377920796229632","PARAM_115":"511607135537201152","PARAM_112":"498770119770505217","PARAM_113":"478922690648866816","PARAM_118":"490245514780999680","PARAM_119":"495243929508118528","PARAM_116":"492410581827977216","PARAM_117":"485743359244107776","PARAM_42":"463429357977731072","PARAM_43":"481749751662903296","PARAM_44":"476660946866012160","PARAM_45":"510887822354284544","PARAM_46":"489077811454148608","PARAM_47":"473609133728202752","PARAM_48":"463399689744547840","PARAM_49":"482877683189940224","PARAM_40":"492410574299201536","PARAM_41":"478956693149974528","PARAM_121":"484681000786329600","PARAM_122":"501074105164890112","PARAM_120":"487559547058126848"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479329592994168832' , '482865235280003072' , '478080879852257280' , '476319989616345088' , '508300433685479424' , '481749752275271680' , '492410581156888576' , '485936564371718144' , '481338870340780032' , '480389138625855488' , '477956224147521536' , '485853808635678720' , '473503440530571264' , '463397133957988354' , '480481733238587392' , '495243928853807104' , '473534968501370880' , '473626753412104192' , '476679541226471424' , '479218759370801152' , '478688769155792896' , '479330042220904448' , '486313027243606016' , '482573214082400256' , '472331136572325888' , '479956467907035136' , '463400008926887936' , '486551846547095552' , '463402976384385024' , '494597324853477376' , '463399154698158080' , '482581099617189888' , '486551847209795584' , '481563572455866368' , '474123297894694912' , '484681008940056576' , '485747524523524096' , '492410574299201536' , '478956693149974528' , '463429357977731072' , '481749751662903296' , '476660946866012160' , '510887822354284544' , '489077811454148608' , '473609133728202752' , '463399689744547840' , '482877683189940224' , '474281113531973632' , '479388230056148992' , '480137015552114688' , '480481732412309504' , '495243922151309312' , '480389137958961152' , '485743358573019136' , '489922972543352832' , '498885074154946560' , '480492967241449472' , '473609133057114112' , '501074105877921792' , '482864641542717440' , '489077811793887232' , '463397739233804288' , '478080880531734528' , '471666420770406400' , '463401587079905280' , '485888536512299008' , '482865234667634688' , '479220706257666048' , '494904219631878144' , '484684754508054528' , '507635159172907008' , '489922973222830080' , '479959570941214720' , '480488584403484672' , '482877683861028864' , '474158815193858049' , '498770254759985153' , '473534969071796224' , '474281123879321600' , '476673976400084992' , '501416296345239552' , '484684753866326016' , '479329592423743488' , 'hrm' , '464788438315433984' , '476660947629375488' , '501072635946336256' , '471974290447663104' , '472331329199931392' , '477956224856358912' , '478922689868726272' , '501072381054287872' , '479388230924369920' , '463401814696394752' , '489815791064055808' , '478625116503146496' , '463400831098552320' , '486313026476048384' , '485747532043911168' , '507635160540250112' , '510887822199095296' , '498885087492833280' , '472023116420218880' , '479959571725549568' , '478585180710240256' , '471622521846759424' , '501389817515347968' , '495244164322033664' , '486551839387418624' , '498770119770505217' , '478922690648866816' , '480377920796229632' , '511607135537201152' , '492410581827977216' , '485743359244107776' , '490245514780999680' , '495243929508118528' , '487559547058126848' , '484681000786329600' , '501074105164890112' , '474123297290715136' , '483218063576006656' , '482573214719934464' , '501072381725376512' , '479956467156254720' , '474281123241787392' , '490245514197991424' , '501416297607725056' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：121ms , start = 1637125913670
┣━ 返回：RcdSet,size=113
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.848 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"485888538064191488","PARAM_31":"501416282843774976","PARAM_32":"463401587662913536","PARAM_33":"463400010562666496","PARAM_34":"486313029152014336","PARAM_35":"476673978719535104","PARAM_36":"489815792691445760","PARAM_37":"474281125611569152","PARAM_38":"463399691099308032","PARAM_30":"473626754943025152","PARAM_28":"477956226529886208","PARAM_29":"494904221175382016","PARAM_20":"473733261147766784","PARAM_21":"472036556115279872","PARAM_22":"476660948308852736","PARAM_23":"471653540754882560","PARAM_24":"508300436529217536","PARAM_25":"479220715891982336","PARAM_26":"476673977113116672","PARAM_27":"473534969646415872","PARAM_17":"501072637603086336","PARAM_18":"479388233323511808","PARAM_19":"463399156178747392","PARAM_97":"480481733892898816","PARAM_10":"463397732229316608","PARAM_98":"463401588501774336","PARAM_11":"484681028040916992","PARAM_99":"476679549543776256","PARAM_12":"482877685547139072","PARAM_13":"479218760989802496","PARAM_14":"472023708303622144","PARAM_15":"463401815308763136","PARAM_16":"478080882322702336","PARAM_90":"479330042942324736","PARAM_91":"511607135692390400","PARAM_92":"480137016143511552","PARAM_93":"483218065169842176","PARAM_94":"482865228682362880","PARAM_95":"490245516341280768","PARAM_96":"463399155289554944","PARAM_86":"492410583505698816","PARAM_87":"472331329841659904","PARAM_88":"485741098057072640","PARAM_89":"479218751359680512","PARAM_80":"478080881207017472","PARAM_81":"501072636617424896","PARAM_82":"485747532740165632","PARAM_83":"495243930166624256","PARAM_84":"494597326321483776","PARAM_85":"495244165920063488","PARAM_103":"481068390891388928","PARAM_104":"479354719760809984","PARAM_101":"476660949365817344","PARAM_102":"477952353941585920","PARAM_107":"476319991407312896","PARAM_108":"508300434876661760","PARAM_105":"480481734924697600","PARAM_106":"478956693833646080","PARAM_75":"463401816202149888","PARAM_76":"473771456543588352","PARAM_77":"480492968805924864","PARAM_109":"488696599002742784","PARAM_78":"481749155358703616","PARAM_79":"482581101043253248","PARAM_70":"463402977978220544","PARAM_71":"494904220248440832","PARAM_72":"485743360800194560","PARAM_73":"479959573277442048","PARAM_74":"479218759966392320","PARAM_9":"495243931164868608","PARAM_8":"481338872328880128","PARAM_7":"489901525628354560","PARAM_6":"485747533784547328","PARAM_5":"481338871154475008","PARAM_110":"489077813450637312","PARAM_4":"474123299400450048","PARAM_111":"482865236752203776","PARAM_3":"501072108940427264","PARAM_2":0,"PARAM_1":0,"PARAM_64":"471622523520286720","PARAM_65":"510887583106990080","PARAM_66":"479008672874233856","PARAM_67":"484683940846632960","PARAM_68":"480377922318761984","PARAM_69":"507635163908276224","PARAM_60":"464788447014420480","PARAM_61":"479330044003483648","PARAM_62":"482581100191809536","PARAM_63":"475954745446498304","PARAM_100":"510887822752743424","PARAM_125":"511607135931465728","PARAM_126":"482583851852365824","PARAM_123":"479219967531679744","PARAM_124":"480137017104007168","PARAM_129":"501072382371299328","PARAM_127":"478956694827696128","PARAM_128":"472331138002583552","PARAM_53":"473534970493665280","PARAM_54":"463400831778029568","PARAM_55":"479329594474758144","PARAM_56":"479598115674914816","PARAM_57":"481563574288777216","PARAM_58":"487568380539174912","PARAM_59":"472819784346501121","PARAM_50":"463400009585393664","PARAM_51":"472331330856681472","PARAM_52":"494904456811380736","PARAM_130":"463397739833589760","PARAM_114":"475686689822474240","PARAM_115":"474281124533633024","PARAM_112":"486551848799436800","PARAM_113":"484684756085112832","PARAM_118":"463397740718587904","PARAM_119":"487559550405181440","PARAM_116":"463400832793051136","PARAM_117":"472023118244741120","PARAM_42":"472331137151139840","PARAM_43":"471623117005914112","PARAM_44":"479959572333723648","PARAM_45":"476319990312599552","PARAM_46":"482581329603461120","PARAM_47":"482573216284409856","PARAM_48":"473626754091581440","PARAM_49":"473609135473033216","PARAM_40":"480492967832846336","PARAM_41":"485560942738800640","PARAM_121":"463399690289807360","PARAM_122":"501072383491178496","PARAM_120":"472023117196165120"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501072108940427264' , '474123299400450048' , '481338871154475008' , '485747533784547328' , '489901525628354560' , '481338872328880128' , '495243931164868608' , '463397732229316608' , '484681028040916992' , '482877685547139072' , '479218760989802496' , '472023708303622144' , '463401815308763136' , '478080882322702336' , '501072637603086336' , '479388233323511808' , '463399156178747392' , '473733261147766784' , '472036556115279872' , '476660948308852736' , '471653540754882560' , '508300436529217536' , '479220715891982336' , '476673977113116672' , '473534969646415872' , '477956226529886208' , '494904221175382016' , '473626754943025152' , '501416282843774976' , '463401587662913536' , '463400010562666496' , '486313029152014336' , '476673978719535104' , '489815792691445760' , '474281125611569152' , '463399691099308032' , '485888538064191488' , '480492967832846336' , '485560942738800640' , '472331137151139840' , '471623117005914112' , '479959572333723648' , '476319990312599552' , '482581329603461120' , '482573216284409856' , '473626754091581440' , '473609135473033216' , '463400009585393664' , '472331330856681472' , '494904456811380736' , '473534970493665280' , '463400831778029568' , '479329594474758144' , '479598115674914816' , '481563574288777216' , '487568380539174912' , '472819784346501121' , '464788447014420480' , '479330044003483648' , '482581100191809536' , '475954745446498304' , '471622523520286720' , '510887583106990080' , '479008672874233856' , '484683940846632960' , '480377922318761984' , '507635163908276224' , '463402977978220544' , '494904220248440832' , '485743360800194560' , '479959573277442048' , '479218759966392320' , '463401816202149888' , '473771456543588352' , '480492968805924864' , '481749155358703616' , '482581101043253248' , '478080881207017472' , '501072636617424896' , '485747532740165632' , '495243930166624256' , '494597326321483776' , '495244165920063488' , '492410583505698816' , '472331329841659904' , '485741098057072640' , '479218751359680512' , '479330042942324736' , '511607135692390400' , '480137016143511552' , '483218065169842176' , '482865228682362880' , '490245516341280768' , '463399155289554944' , '480481733892898816' , '463401588501774336' , '476679549543776256' , '510887822752743424' , '476660949365817344' , '477952353941585920' , '481068390891388928' , '479354719760809984' , '480481734924697600' , '478956693833646080' , '476319991407312896' , '508300434876661760' , '488696599002742784' , '489077813450637312' , '482865236752203776' , '486551848799436800' , '484684756085112832' , '475686689822474240' , '474281124533633024' , '463400832793051136' , '472023118244741120' , '463397740718587904' , '487559550405181440' , '472023117196165120' , '463399690289807360' , '501072383491178496' , '479219967531679744' , '480137017104007168' , '511607135931465728' , '482583851852365824' , '478956694827696128' , '472331138002583552' , '501072382371299328' , '463397739833589760' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：313ms , start = 1637125913519
┣━ 返回：RcdSet,size=336
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.853 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"490638839023411200","PARAM_31":"501072627838746624","PARAM_32":"479219958253879296","PARAM_33":"498472737438703616","PARAM_34":"486485883655032833","PARAM_35":"471653532135587840","PARAM_36":"498780101593268225","PARAM_37":"498963858317115392","PARAM_38":"499939063264968705","PARAM_30":"501653165884575744","PARAM_28":"490909222070915073","PARAM_29":"474159041438810113","PARAM_20":"498780063144083457","PARAM_21":"490920319637262337","PARAM_22":"498472430189158400","PARAM_23":"498809674066296832","PARAM_24":"498808937571680257","PARAM_25":"485819338599706624","PARAM_26":"498780092948807681","PARAM_27":"472814706734661633","PARAM_17":"501653323472965633","PARAM_18":"497513282840559617","PARAM_19":"499940744069382145","PARAM_97":"501424056243851264","PARAM_10":"497513009569071104","PARAM_98":"498809056404701185","PARAM_11":"464827069453303809","PARAM_99":"498963847839744001","PARAM_12":"490925002938388480","PARAM_13":"501390061263130624","PARAM_14":"499939051860656128","PARAM_15":"474157822892834817","PARAM_16":"485415687787917312","PARAM_90":"497513348733075457","PARAM_91":"478598569259962368","PARAM_92":"486487652200091649","PARAM_93":"463779099165327360","PARAM_94":"498963891439534081","PARAM_95":"498963844891148289","PARAM_96":"503188930321977344","PARAM_86":"499954055192252417","PARAM_87":"501653226060255233","PARAM_88":"465893287996162048","PARAM_89":"504683060067840001","PARAM_80":"472036614189613057","PARAM_81":"471666413560397824","PARAM_82":"498809287695400961","PARAM_83":"498473113529360385","PARAM_84":"498963890651004929","PARAM_85":"499954026838757376","PARAM_103":"486485877028032513","PARAM_104":"491342702357512192","PARAM_101":"495244157174939648","PARAM_102":"490908208253112321","PARAM_107":"478625384087158785","PARAM_108":"490915625305116672","PARAM_105":"498963895084384257","PARAM_106":"463779102176837633","PARAM_75":"498963846124273665","PARAM_76":"478625404161097728","PARAM_77":"504060697101996032","PARAM_109":"481068382628610048","PARAM_78":"489424103724285952","PARAM_79":"498472529019543553","PARAM_70":"498472318377402368","PARAM_71":"498809154048098304","PARAM_72":"498963856643588097","PARAM_73":"464827257593004033","PARAM_74":"498779937252048897","PARAM_9":"498971349855764481","PARAM_8":"502170156177297409","PARAM_7":"473227868306931712","PARAM_6":"498962211822108672","PARAM_5":"478626411003772928","PARAM_110":"480486574191026176","PARAM_4":"498473196719185920","PARAM_111":"497513458128912385","PARAM_3":"504412977160523776","PARAM_2":0,"PARAM_1":0,"PARAM_64":"467361506980265985","PARAM_65":"498809237418278912","PARAM_66":"499954038733803521","PARAM_67":"490907983723630592","PARAM_68":"498970926130397185","PARAM_69":"490909866307620865","PARAM_60":"473550018758836225","PARAM_61":"472814243020800001","PARAM_62":"472023699592052736","PARAM_63":"497513204994277377","PARAM_100":"498971162877886465","PARAM_125":"484680929105674240","PARAM_126":"472811546343374849","PARAM_123":"473771446246572032","PARAM_124":"499954050071007232","PARAM_129":"498582106398523393","PARAM_127":"499939062635823104","PARAM_128":"499939072706347008","PARAM_53":"498808864725008384","PARAM_54":"498472974811144192","PARAM_55":"490908428638621696","PARAM_56":"498474299326210049","PARAM_57":"499954049295060993","PARAM_58":"498780083792642049","PARAM_59":"478625395923484673","PARAM_50":"473503433886793728","PARAM_51":"483567801252978688","PARAM_52":"498809191108968448","PARAM_130":"474158850757361665","PARAM_114":"474158954033709056","PARAM_115":"472025257461415936","PARAM_112":"499940736691601409","PARAM_113":"474155529355132929","PARAM_118":"499939054448541696","PARAM_119":"491206464543657984","PARAM_116":"498970914482814977","PARAM_117":"479329585788354560","PARAM_42":"482583842985607168","PARAM_43":"501653242430623745","PARAM_44":"473534962767757312","PARAM_45":"464828186346127361","PARAM_46":"499940724104495105","PARAM_47":"497514241515847681","PARAM_48":"498962214124781568","PARAM_49":"473612721665867776","PARAM_40":"501653361645326336","PARAM_41":"501653278359031809","PARAM_121":"496813531019083776","PARAM_122":"499939072068812801","PARAM_120":"481119852547801088"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '504412977160523776' , '498473196719185920' , '478626411003772928' , '498962211822108672' , '473227868306931712' , '502170156177297409' , '498971349855764481' , '497513009569071104' , '464827069453303809' , '490925002938388480' , '501390061263130624' , '499939051860656128' , '474157822892834817' , '485415687787917312' , '501653323472965633' , '497513282840559617' , '499940744069382145' , '498780063144083457' , '490920319637262337' , '498472430189158400' , '498809674066296832' , '498808937571680257' , '485819338599706624' , '498780092948807681' , '472814706734661633' , '490909222070915073' , '474159041438810113' , '501653165884575744' , '501072627838746624' , '479219958253879296' , '498472737438703616' , '486485883655032833' , '471653532135587840' , '498780101593268225' , '498963858317115392' , '499939063264968705' , '490638839023411200' , '501653361645326336' , '501653278359031809' , '482583842985607168' , '501653242430623745' , '473534962767757312' , '464828186346127361' , '499940724104495105' , '497514241515847681' , '498962214124781568' , '473612721665867776' , '473503433886793728' , '483567801252978688' , '498809191108968448' , '498808864725008384' , '498472974811144192' , '490908428638621696' , '498474299326210049' , '499954049295060993' , '498780083792642049' , '478625395923484673' , '473550018758836225' , '472814243020800001' , '472023699592052736' , '497513204994277377' , '467361506980265985' , '498809237418278912' , '499954038733803521' , '490907983723630592' , '498970926130397185' , '490909866307620865' , '498472318377402368' , '498809154048098304' , '498963856643588097' , '464827257593004033' , '498779937252048897' , '498963846124273665' , '478625404161097728' , '504060697101996032' , '489424103724285952' , '498472529019543553' , '472036614189613057' , '471666413560397824' , '498809287695400961' , '498473113529360385' , '498963890651004929' , '499954026838757376' , '499954055192252417' , '501653226060255233' , '465893287996162048' , '504683060067840001' , '497513348733075457' , '478598569259962368' , '486487652200091649' , '463779099165327360' , '498963891439534081' , '498963844891148289' , '503188930321977344' , '501424056243851264' , '498809056404701185' , '498963847839744001' , '498971162877886465' , '495244157174939648' , '490908208253112321' , '486485877028032513' , '491342702357512192' , '498963895084384257' , '463779102176837633' , '478625384087158785' , '490915625305116672' , '481068382628610048' , '480486574191026176' , '497513458128912385' , '499940736691601409' , '474155529355132929' , '474158954033709056' , '472025257461415936' , '498970914482814977' , '479329585788354560' , '499939054448541696' , '491206464543657984' , '481119852547801088' , '496813531019083776' , '499939072068812801' , '473771446246572032' , '499954050071007232' , '484680929105674240' , '472811546343374849' , '499939062635823104' , '499939072706347008' , '498582106398523393' , '474158850757361665' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：151ms , start = 1637125913699
┣━ 返回：RcdSet,size=123
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.873 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"473503443139428352","PARAM_31":"480492970060021760","PARAM_32":"480137018328743936","PARAM_33":"486551850187751424","PARAM_34":"510887583488671744","PARAM_35":"490245517545046016","PARAM_36":"479329296838557696","PARAM_37":"482581102209269760","PARAM_38":"478585182215995392","PARAM_30":"479959574523150336","PARAM_28":"498890640633892865","PARAM_29":"495244167178354688","PARAM_20":"479329295395717120","PARAM_21":"471974292850999296","PARAM_22":"498885090605006848","PARAM_23":"489901527587094528","PARAM_24":"482877686885122048","PARAM_25":"495243932481880064","PARAM_26":"488696601678708736","PARAM_27":"478603519541116928","PARAM_17":"485741099411832832","PARAM_18":"463399691917197312","PARAM_19":"478922694239191040","PARAM_97":"478585183470092288","PARAM_10":"485560943879651328","PARAM_98":"480389141578645504","PARAM_11":"481749753835552768","PARAM_99":"479220717896859648","PARAM_12":"498770298326220801","PARAM_13":"478922681874382848","PARAM_14":"479218762373922816","PARAM_15":"474281126987300864","PARAM_16":"489922974875385856","PARAM_90":"479354721128153088","PARAM_91":"482864644558422016","PARAM_92":"463400011548327936","PARAM_93":"473626756130013184","PARAM_94":"480492959574261760","PARAM_95":"463400833808072704","PARAM_96":"476319982246952960","PARAM_86":"481338874124042240","PARAM_87":"477956227867869184","PARAM_88":"478603518131830784","PARAM_89":"475686691072376832","PARAM_80":"492410584894013440","PARAM_81":"489077814461464576","PARAM_82":"501072119862394880","PARAM_83":"463402978934521856","PARAM_84":"489077805410156544","PARAM_85":"480488586022486016","PARAM_103":"463429359550595072","PARAM_104":"473609136769073152","PARAM_101":"501074109107535872","PARAM_102":"479330045333078016","PARAM_107":"479329595586248704","PARAM_108":"480481736321400832","PARAM_105":"480488587389829120","PARAM_106":"483218066432327680","PARAM_75":"475954746797064192","PARAM_76":"484684757343404032","PARAM_77":"511607136254427136","PARAM_109":"479956469668642816","PARAM_78":"463397741918158848","PARAM_79":"485747535109947392","PARAM_70":"471666422389407744","PARAM_71":"487559553085341696","PARAM_72":"478922692477583360","PARAM_73":"478956684903972864","PARAM_74":"472023119704358912","PARAM_9":"485936567093821440","PARAM_8":"478688770657353728","PARAM_7":"482573217517535232","PARAM_6":"485936565877473280","PARAM_5":"463429360842440704","PARAM_110":"481338861507575808","PARAM_4":"476673980116238336","PARAM_111":"478080883799097344","PARAM_3":"463401589349023744","PARAM_2":0,"PARAM_1":0,"PARAM_64":"507635166470995968","PARAM_65":"472331139210543104","PARAM_66":"501416300740870144","PARAM_67":"474123300629381120","PARAM_68":"478956696207622144","PARAM_69":"494597327642689536","PARAM_60":"501416303421030400","PARAM_61":"472023709545136128","PARAM_62":"510887823079899136","PARAM_63":"481119861406171136","PARAM_100":"501072384963379200","PARAM_125":"498778136893194240","PARAM_126":"473503441981800448","PARAM_123":"481119862664462336","PARAM_124":"464788448306266112","PARAM_129":"479956471090511872","PARAM_127":"484681029190156288","PARAM_128":"480389140282605568","PARAM_53":"478688771848536064","PARAM_54":"508300439058382848","PARAM_55":"471974291777257472","PARAM_56":"485743362016542720","PARAM_57":"494904222408507392","PARAM_58":"501072117886877696","PARAM_59":"479388237341655040","PARAM_50":"463401817099730944","PARAM_51":"501072639033344000","PARAM_52":"482865237926608896","PARAM_130":"480377923652550656","PARAM_114":"471620891906670593","PARAM_115":"486313030599049216","PARAM_112":"482864643224633344","PARAM_113":"489922976217563136","PARAM_118":"484683942113312768","PARAM_119":"498885092861542400","PARAM_116":"463399157072134144","PARAM_117":"471653541992202240","PARAM_42":"476660950745743360","PARAM_43":"473771458015789056","PARAM_44":"482583853127434240","PARAM_45":"481749156772184064","PARAM_46":"501074107681472512","PARAM_47":"471985681850171393","PARAM_48":"471666423702224896","PARAM_49":"470155869825269760","PARAM_40":"479598117155504128","PARAM_41":"477952355304734720","PARAM_121":"473534971609350144","PARAM_122":"481749755081261056","PARAM_120":"479008674094776320"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463401589349023744' , '476673980116238336' , '463429360842440704' , '485936565877473280' , '482573217517535232' , '478688770657353728' , '485936567093821440' , '485560943879651328' , '481749753835552768' , '498770298326220801' , '478922681874382848' , '479218762373922816' , '474281126987300864' , '489922974875385856' , '485741099411832832' , '463399691917197312' , '478922694239191040' , '479329295395717120' , '471974292850999296' , '498885090605006848' , '489901527587094528' , '482877686885122048' , '495243932481880064' , '488696601678708736' , '478603519541116928' , '498890640633892865' , '495244167178354688' , '479959574523150336' , '480492970060021760' , '480137018328743936' , '486551850187751424' , '510887583488671744' , '490245517545046016' , '479329296838557696' , '482581102209269760' , '478585182215995392' , '473503443139428352' , '479598117155504128' , '477952355304734720' , '476660950745743360' , '473771458015789056' , '482583853127434240' , '481749156772184064' , '501074107681472512' , '471985681850171393' , '471666423702224896' , '470155869825269760' , '463401817099730944' , '501072639033344000' , '482865237926608896' , '478688771848536064' , '508300439058382848' , '471974291777257472' , '485743362016542720' , '494904222408507392' , '501072117886877696' , '479388237341655040' , '501416303421030400' , '472023709545136128' , '510887823079899136' , '481119861406171136' , '507635166470995968' , '472331139210543104' , '501416300740870144' , '474123300629381120' , '478956696207622144' , '494597327642689536' , '471666422389407744' , '487559553085341696' , '478922692477583360' , '478956684903972864' , '472023119704358912' , '475954746797064192' , '484684757343404032' , '511607136254427136' , '463397741918158848' , '485747535109947392' , '492410584894013440' , '489077814461464576' , '501072119862394880' , '463402978934521856' , '489077805410156544' , '480488586022486016' , '481338874124042240' , '477956227867869184' , '478603518131830784' , '475686691072376832' , '479354721128153088' , '482864644558422016' , '463400011548327936' , '473626756130013184' , '480492959574261760' , '463400833808072704' , '476319982246952960' , '478585183470092288' , '480389141578645504' , '479220717896859648' , '501072384963379200' , '501074109107535872' , '479330045333078016' , '463429359550595072' , '473609136769073152' , '480488587389829120' , '483218066432327680' , '479329595586248704' , '480481736321400832' , '479956469668642816' , '481338861507575808' , '478080883799097344' , '482864643224633344' , '489922976217563136' , '471620891906670593' , '486313030599049216' , '463399157072134144' , '471653541992202240' , '484683942113312768' , '498885092861542400' , '479008674094776320' , '473534971609350144' , '481749755081261056' , '481119862664462336' , '464788448306266112' , '498778136893194240' , '473503441981800448' , '484681029190156288' , '480389140282605568' , '479956471090511872' , '480377923652550656' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：349ms , start = 1637125913521
┣━ 返回：RcdSet,size=383
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.889 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"475686692922064896","PARAM_31":"485560945016307712","PARAM_32":"476673982108532736","PARAM_33":"471623119124037632","PARAM_34":"489815795505823744","PARAM_35":"482865239109402624","PARAM_36":"489922978209857536","PARAM_37":"479219970283143168","PARAM_38":"471623119950315520","PARAM_30":"472331333301960704","PARAM_28":"473733264192831488","PARAM_29":"481563575630954496","PARAM_20":"481749158206636032","PARAM_21":"478688773647892480","PARAM_22":"471623117999964160","PARAM_23":"473534972766978048","PARAM_24":"501072386309750784","PARAM_25":"463429362776014848","PARAM_26":"471666425635799040","PARAM_27":"501072640497156096","PARAM_17":"485560945611898880","PARAM_18":"463400013167329280","PARAM_19":"471622524862464000","PARAM_97":"487568383219335168","PARAM_10":"474123302428737536","PARAM_98":"481749145669861376","PARAM_11":"487559557153816576","PARAM_99":"471653543871250432","PARAM_12":"481749158911279104","PARAM_13":"479956472495603712","PARAM_14":"489077816151769088","PARAM_15":"478585184673857536","PARAM_16":"487559555773890560","PARAM_90":"463402979890823168","PARAM_91":"463400012525600768","PARAM_92":"495244168478588928","PARAM_93":"471986344285962240","PARAM_94":"479959575810801664","PARAM_95":"474123301828952064","PARAM_96":"463399157952937984","PARAM_86":"487568385933049856","PARAM_87":"489922977547157504","PARAM_88":"478603520921042944","PARAM_89":"475955437510852608","PARAM_80":"482877688223105024","PARAM_81":"471622526116560896","PARAM_82":"485888539251179520","PARAM_83":"463401590787670016","PARAM_84":"510887820517179392","PARAM_85":"472023711478710272","PARAM_103":"471974294486777856","PARAM_104":"471622526703763456","PARAM_101":"475686692318085120","PARAM_102":"463399158544334848","PARAM_107":"479959564469403648","PARAM_108":"476660952759009280","PARAM_105":"472358185009676289","PARAM_106":"482581330920472576","PARAM_75":"482877688894193664","PARAM_76":"501072641218576384","PARAM_77":"477956229193269248","PARAM_109":"481749756972892160","PARAM_78":"479959576465113088","PARAM_79":"463399692735086592","PARAM_70":"476660952100503552","PARAM_71":"481749756356329472","PARAM_72":"482865239696605184","PARAM_73":"463399693292929024","PARAM_74":"484683104078794753","PARAM_9":"487568387254255616","PARAM_8":"472036810977968129","PARAM_7":"463429362113314816","PARAM_6":"495243933782114304","PARAM_5":"479218764370411520","PARAM_110":"473036391530364929","PARAM_4":"463401808295886848","PARAM_111":"463397743117729792","PARAM_3":"472331140393336832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"463401817988923392","PARAM_65":"495244169128706048","PARAM_66":"501072374041411584","PARAM_67":"473534973345792000","PARAM_68":"489815794193006592","PARAM_69":"472331332110778368","PARAM_60":"463397743721709568","PARAM_61":"476673981483581440","PARAM_62":"482581103345926144","PARAM_63":"476679550688821248","PARAM_100":"479956473208635392","PARAM_125":"489077815459708928","PARAM_126":"482581332891795456","PARAM_123":"478688773039718400","PARAM_124":"478585185282031616","PARAM_129":"473549948382609408","PARAM_127":"473733262674493440","PARAM_128":"479220719629107200","PARAM_53":"481068392111931392","PARAM_54":"471666424977293312","PARAM_55":"463401581010747392","PARAM_56":"463401590217244672","PARAM_57":"482581103912157184","PARAM_58":"476319992707547136","PARAM_59":"473733264926834688","PARAM_50":"489815796164329472","PARAM_51":"495924945906302976","PARAM_52":"494904458010951680","PARAM_130":"477956229818220544","PARAM_114":"463401818576125952","PARAM_115":"463402980524163072","PARAM_112":"472331141001510912","PARAM_113":"479220720316973056","PARAM_118":"482864645908987904","PARAM_119":"495243934444814336","PARAM_116":"471974293945712640","PARAM_117":"472331333985632256","PARAM_42":"479218763728683008","PARAM_43":"463400835502571520","PARAM_44":"473626745392594944","PARAM_45":"463400834823094272","PARAM_46":"501072386968256512","PARAM_47":"482581332237484032","PARAM_48":"472023710841176064","PARAM_49":"479219970929065984","PARAM_40":"471653543221133312","PARAM_41":"479219968966131712","PARAM_121":"478603521634074624","PARAM_122":"482864646571687936","PARAM_120":"471986431431016449"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '472331140393336832' , '463401808295886848' , '479218764370411520' , '495243933782114304' , '463429362113314816' , '472036810977968129' , '487568387254255616' , '474123302428737536' , '487559557153816576' , '481749158911279104' , '479956472495603712' , '489077816151769088' , '478585184673857536' , '487559555773890560' , '485560945611898880' , '463400013167329280' , '471622524862464000' , '481749158206636032' , '478688773647892480' , '471623117999964160' , '473534972766978048' , '501072386309750784' , '463429362776014848' , '471666425635799040' , '501072640497156096' , '473733264192831488' , '481563575630954496' , '472331333301960704' , '485560945016307712' , '476673982108532736' , '471623119124037632' , '489815795505823744' , '482865239109402624' , '489922978209857536' , '479219970283143168' , '471623119950315520' , '475686692922064896' , '471653543221133312' , '479219968966131712' , '479218763728683008' , '463400835502571520' , '473626745392594944' , '463400834823094272' , '501072386968256512' , '482581332237484032' , '472023710841176064' , '479219970929065984' , '489815796164329472' , '495924945906302976' , '494904458010951680' , '481068392111931392' , '471666424977293312' , '463401581010747392' , '463401590217244672' , '482581103912157184' , '476319992707547136' , '473733264926834688' , '463397743721709568' , '476673981483581440' , '482581103345926144' , '476679550688821248' , '463401817988923392' , '495244169128706048' , '501072374041411584' , '473534973345792000' , '489815794193006592' , '472331332110778368' , '476660952100503552' , '481749756356329472' , '482865239696605184' , '463399693292929024' , '484683104078794753' , '482877688894193664' , '501072641218576384' , '477956229193269248' , '479959576465113088' , '463399692735086592' , '482877688223105024' , '471622526116560896' , '485888539251179520' , '463401590787670016' , '510887820517179392' , '472023711478710272' , '487568385933049856' , '489922977547157504' , '478603520921042944' , '475955437510852608' , '463402979890823168' , '463400012525600768' , '495244168478588928' , '471986344285962240' , '479959575810801664' , '474123301828952064' , '463399157952937984' , '487568383219335168' , '481749145669861376' , '471653543871250432' , '479956473208635392' , '475686692318085120' , '463399158544334848' , '471974294486777856' , '471622526703763456' , '472358185009676289' , '482581330920472576' , '479959564469403648' , '476660952759009280' , '481749756972892160' , '473036391530364929' , '463397743117729792' , '472331141001510912' , '479220720316973056' , '463401818576125952' , '463402980524163072' , '471974293945712640' , '472331333985632256' , '482864645908987904' , '495243934444814336' , '471986431431016449' , '478603521634074624' , '482864646571687936' , '478688773039718400' , '478585185282031616' , '489077815459708928' , '482581332891795456' , '473733262674493440' , '479220719629107200' , '473549948382609408' , '477956229818220544' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：205ms , start = 1637125913681
┣━ 返回：RcdSet,size=190
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.892 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"474158548662616065","PARAM_31":"463399684191289344","PARAM_32":"488696594527420416","PARAM_33":"478956691585499136","PARAM_34":"482581326621310976","PARAM_35":"479219964406923264","PARAM_36":"510887582259740672","PARAM_37":"481338869564833792","PARAM_38":"483218062917500928","PARAM_30":"472023705464078336","PARAM_28":"479354717013540864","PARAM_29":"486313018553008128","PARAM_20":"485888535333699584","PARAM_21":"480377919596658688","PARAM_22":"471623114069901312","PARAM_23":"480137007910092800","PARAM_24":"473733257758769152","PARAM_25":"478688762461683712","PARAM_26":"system_config","PARAM_27":"485936563683852288","PARAM_17":"471653538498347008","PARAM_18":"463401814398599168","PARAM_19":"482583848937324544","PARAM_97":"475954743139631104","PARAM_10":"498581971681673216","PARAM_98":"471986628336812032","PARAM_11":"472023115707187200","PARAM_99":"463402976065617920","PARAM_12":"485747530676568064","PARAM_13":"463399154400362496","PARAM_14":"475686687532384256","PARAM_15":"485888535908319232","PARAM_16":"480488583736590336","PARAM_90":"495244163676110848","PARAM_91":"479220713446703104","PARAM_92":"482581320564736000","PARAM_93":"481119859145441280","PARAM_94":"482864640871628800","PARAM_95":"463397738646601728","PARAM_96":"478956692394999808","PARAM_86":"488696593290100736","PARAM_87":"501072635275247616","PARAM_88":"471623114736795648","PARAM_89":"471622521137922048","PARAM_80":"471666420116094976","PARAM_81":"477952351441780736","PARAM_82":"479218758599049216","PARAM_83":"479329292388401152","PARAM_84":"510887580523298816","PARAM_85":"479598105545670656","PARAM_103":"476673975825465344","PARAM_104":"472331328520454144","PARAM_101":"463401586794692608","PARAM_102":"472331135993511936","PARAM_107":"494597324215943168","PARAM_108":"487559544579293184","PARAM_105":"489815790388772864","PARAM_106":"472023706080641024","PARAM_75":"504682762972704768","PARAM_76":"473771454031200256","PARAM_77":"476319988295139328","PARAM_109":"511607135369428992","PARAM_78":"479330040773869568","PARAM_79":"489901522558124032","PARAM_70":"481749152917618688","PARAM_71":"480377920209027072","PARAM_72":"481563571654754304","PARAM_73":"484683938606874624","PARAM_74":"487568375958994944","PARAM_9":"494597323653906432","PARAM_8":"485560940721340416","PARAM_7":"480137014788751360","PARAM_6":"495244163038576640","PARAM_5":"471622520550719488","PARAM_110":"463399689467723776","PARAM_4":"481068388223811584","PARAM_111":"508300431265366016","PARAM_3":"479354717600743424","PARAM_2":0,"PARAM_1":0,"PARAM_64":"463401813807202304","PARAM_65":"464788444783050752","PARAM_66":"463400830758813696","PARAM_67":"485741095674707968","PARAM_68":"478603515636219904","PARAM_69":"498885086280679424","PARAM_60":"473503439867871232","PARAM_61":"473503439284862976","PARAM_62":"463399688926658560","PARAM_63":"473626752741015552","PARAM_100":"472818410917462016","PARAM_125":"472358699843715073","PARAM_126":"481068388831985664","PARAM_123":"494904454714228736","PARAM_124":"479598113124777984","PARAM_129":"494904219002732544","PARAM_127":"478178015856033792","PARAM_128":"476319988987199488","PARAM_53":"485747531372822528","PARAM_54":"487559545757892608","PARAM_55":"463429357650575360","PARAM_56":"478585180114649088","PARAM_57":"489815789730267136","PARAM_58":"476679547505344512","PARAM_59":"510887582448484352","PARAM_50":"473733258505355264","PARAM_51":"474154919352336384","PARAM_52":"482581327279816704","PARAM_130":"482573207753195520","PARAM_114":"472811438801420289","PARAM_115":"480492966641664000","PARAM_112":"487568374700703744","PARAM_113":"479008670655447040","PARAM_118":"481563570933334016","PARAM_119":"494904454114443264","PARAM_116":"oauth","PARAM_117":"463400008603926528","PARAM_42":"479220712784003072","PARAM_43":"478688768535035904","PARAM_44":"480389131239686144","PARAM_45":"482583849616801792","PARAM_46":"463402975415500800","PARAM_47":"476673967776595968","PARAM_48":"479330041516261376","PARAM_49":"473609126128123904","PARAM_40":"482581099034181632","PARAM_41":"501072115496124416","PARAM_121":"471974289902403584","PARAM_122":"508300432511074304","PARAM_120":"479219965136732160"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479354717600743424' , '481068388223811584' , '471622520550719488' , '495244163038576640' , '480137014788751360' , '485560940721340416' , '494597323653906432' , '498581971681673216' , '472023115707187200' , '485747530676568064' , '463399154400362496' , '475686687532384256' , '485888535908319232' , '480488583736590336' , '471653538498347008' , '463401814398599168' , '482583848937324544' , '485888535333699584' , '480377919596658688' , '471623114069901312' , '480137007910092800' , '473733257758769152' , '478688762461683712' , 'system_config' , '485936563683852288' , '479354717013540864' , '486313018553008128' , '472023705464078336' , '463399684191289344' , '488696594527420416' , '478956691585499136' , '482581326621310976' , '479219964406923264' , '510887582259740672' , '481338869564833792' , '483218062917500928' , '474158548662616065' , '482581099034181632' , '501072115496124416' , '479220712784003072' , '478688768535035904' , '480389131239686144' , '482583849616801792' , '463402975415500800' , '476673967776595968' , '479330041516261376' , '473609126128123904' , '473733258505355264' , '474154919352336384' , '482581327279816704' , '485747531372822528' , '487559545757892608' , '463429357650575360' , '478585180114649088' , '489815789730267136' , '476679547505344512' , '510887582448484352' , '473503439867871232' , '473503439284862976' , '463399688926658560' , '473626752741015552' , '463401813807202304' , '464788444783050752' , '463400830758813696' , '485741095674707968' , '478603515636219904' , '498885086280679424' , '481749152917618688' , '480377920209027072' , '481563571654754304' , '484683938606874624' , '487568375958994944' , '504682762972704768' , '473771454031200256' , '476319988295139328' , '479330040773869568' , '489901522558124032' , '471666420116094976' , '477952351441780736' , '479218758599049216' , '479329292388401152' , '510887580523298816' , '479598105545670656' , '488696593290100736' , '501072635275247616' , '471623114736795648' , '471622521137922048' , '495244163676110848' , '479220713446703104' , '482581320564736000' , '481119859145441280' , '482864640871628800' , '463397738646601728' , '478956692394999808' , '475954743139631104' , '471986628336812032' , '463402976065617920' , '472818410917462016' , '463401586794692608' , '472331135993511936' , '476673975825465344' , '472331328520454144' , '489815790388772864' , '472023706080641024' , '494597324215943168' , '487559544579293184' , '511607135369428992' , '463399689467723776' , '508300431265366016' , '487568374700703744' , '479008670655447040' , '472811438801420289' , '480492966641664000' , 'oauth' , '463400008603926528' , '481563570933334016' , '494904454114443264' , '479219965136732160' , '471974289902403584' , '508300432511074304' , '494904454714228736' , '479598113124777984' , '472358699843715073' , '481068388831985664' , '478178015856033792' , '476319988987199488' , '494904219002732544' , '482573207753195520' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：169ms , start = 1637125913721
┣━ 返回：RcdSet,size=101
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

13:11:53.952 [ForkJoinPool-2-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_company","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_company'
┣ 结果： 
┣━ 耗时：43ms , start = 1637125913908
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:53.999 [ForkJoinPool-2-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"002"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '002' )
┣ 结果： 
┣━ 耗时：43ms , start = 1637125913955
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 

13:11:54.004 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_organization","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_organization'
┣ 结果： 
┣━ 耗时：50ms , start = 1637125913953
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:54.075 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_person","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_person'
┣ 结果： 
┣━ 耗时：67ms , start = 1637125914007
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:54.139 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_busi_role","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_busi_role'
┣ 结果： 
┣━ 耗时：47ms , start = 1637125914090
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:54.148 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"P001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'P001' )
┣ 结果： 
┣━ 耗时：53ms , start = 1637125914095
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

13:11:54.188 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_position'
┣ 结果： 
┣━ 耗时：46ms , start = 1637125914141
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:54.242 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_busi_role_member","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_busi_role_member'
┣ 结果： 
┣━ 耗时：50ms , start = 1637125914191
┣━ 返回：RcdSet,size=6
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:54.289 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":"employee"}
┣ 执行：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = 'employee' ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：39ms , start = 1637125914249
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 

13:11:54.314 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_position'
┣ 结果： 
┣━ 耗时：62ms , start = 1637125914251
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:54.373 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee_position'
┣ 结果： 
┣━ 耗时：53ms , start = 1637125914320
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:54.418 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee_position'
┣ 结果： 
┣━ 耗时：42ms , start = 1637125914376
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:54.429 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：51ms , start = 1637125914377
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 

13:11:54.470 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"E001","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：47ms , start = 1637125914421
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 

13:11:54.494 [XNIO-1 task-1] - [] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 3011ms
13:11:54.706 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 
┣ 语句：UPDATE sys_user SET last_login_time = ? WHERE id = ?
┣ 参数：{"PARAM_1":1637125914649,"PARAM_2":"110588348101165911"}
┣ 执行：UPDATE sys_user SET last_login_time = str_to_date('2021-11-17 13:11:54','%Y-%m-%d %H:%i:%s') WHERE id = '110588348101165911'
┣ 结果： 
┣━ 耗时：44ms , start = 1637125914651
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.update(UserServiceImpl.java:202)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:81)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 

13:11:54.758 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_session_online","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_session_online'
┣ 结果： 
┣━ 耗时：44ms , start = 1637125914711
┣━ 返回：RcdSet,size=19
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:88)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:54.810 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_session_online WHERE id = ?
┣ 参数：{"PARAM_1":"_RMWBREssaGVbIdnix9WdfqqFXBRfa6aUULAsuI4"}
┣ 执行：select * from sys_session_online WHERE id = '_RMWBREssaGVbIdnix9WdfqqFXBRfa6aUULAsuI4'
┣ 结果： 
┣━ 耗时：36ms , start = 1637125914773
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:88)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 

13:11:54.874 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 
┣ 语句：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"_RMWBREssaGVbIdnix9WdfqqFXBRfa6aUULAsuI4","PARAM_9":"76-2caebfcffb-4c13","PARAM_8":"D7B67D75818C671B","PARAM_10":"110588348101165911","PARAM_7":1,"PARAM_11":1637125914822,"PARAM_6":1200,"PARAM_12":1,"PARAM_5":1637125914812,"PARAM_4":1637125914812,"PARAM_3":"110588348101165911","PARAM_2":"HVqhO4N1MN7FaKBITEbkzVD08ycSEChqm8st2pic"}
┣ 执行：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( '_RMWBREssaGVbIdnix9WdfqqFXBRfa6aUULAsuI4' , 'HVqhO4N1MN7FaKBITEbkzVD08ycSEChqm8st2pic' , '110588348101165911' , str_to_date('2021-11-17 13:11:54','%Y-%m-%d %H:%i:%s') , str_to_date('2021-11-17 13:11:54','%Y-%m-%d %H:%i:%s') , 1200 , 1 , 'D7B67D75818C671B' , '76-2caebfcffb-4c13' , '110588348101165911' , str_to_date('2021-11-17 13:11:54','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：50ms , start = 1637125914823
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.insert(SessionOnlineServiceImpl.java:74)
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 

13:11:55.930 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_token","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_token'
┣ 结果： 
┣━ 耗时：60ms , start = 1637125915868
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:56.020 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 
┣ 语句：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513340513680625664","PARAM_9":0,"PARAM_8":1637127915839,"PARAM_10":"110588348101165911","PARAM_7":0,"PARAM_11":1637125915932,"PARAM_6":1637127714877,"PARAM_12":1,"PARAM_5":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTM6NDU6MTUiLCJpYXQiOiIyMDIxLTExLTE3IDEzOjExOjU1IiwianRpIjoiZWFkN2I2NjMtNWVkMy00YmEzLWIyMTQtMTZlYWM4MDgzYTEwIn0.UxWdhvFsE5lspDuu0v2MHrOXCmgXwmaEYGvuFbm_NNuJIRuaHiikNvZjPg0Te-FIsnv8E-C9ZU6BMn4j4osJ4CYBfSXHkaBgdrbEwBT3xV5r-DdiT8Z3G8Rv_jmRiOLCzWcZDrAqDPWVeafJVj7_h5iWE_zItu8OCKorfDkq9CpnMwRPev-2XEXWNRB_lziJUs9Fjrxj-A5lrbzFYUg1tIr_E-lDsux41VIhsAcLZvniH3YjfcKE0f6PnX6s6givXygtLdHXcc32g1ORkk3R_BGB8ueXmJnSSz4iAH_PGXaUDNfgr3qQ3lSZwbF9fi9dGdZKjBNaC29wz6kHdCEkhw","PARAM_4":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTM6NDE6NTQiLCJpYXQiOiIyMDIxLTExLTE3IDEzOjExOjU0IiwianRpIjoiZWFkN2I2NjMtNWVkMy00YmEzLWIyMTQtMTZlYWM4MDgzYTEwIn0.ABSVNvE-_RgBt3FwLLNscg5Jdb7v9n3tzCC40K2kQd1ofCY9Zy18xnQBBlSJ0-3X0JICeRzD3MvSo5GlGoxf4ax-13QowLQahT8kYdD-NcwSFJsy9DaAgyZAFGdVYPmOCLpBzqC00zLhVRxnwpi-k8wJZDMWSb9gQdv0Gb6eOtoUL30DgILbrNiPiFi-2L0Ytge2pJvcWIPxbAkkROAr5WeCfrnreYMuqwTj3r3RcqbC46OjLyBjdePzVqp1gIZM6YBX5c_08IS7sRWxSZD3A5x3LXa47zLQSSaNrCSZGNTZNRhaqgFqQK9lj3B4EdTKjPl1rkx869C1BcU7w_6aGQ","PARAM_3":"ead7b663-5ed3-4ba3-b214-16eac8083a10","PARAM_2":"110588348101165911"}
┣ 执行：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( '513340513680625664' , '110588348101165911' , 'ead7b663-5ed3-4ba3-b214-16eac8083a10' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTM6NDE6NTQiLCJpYXQiOiIyMDIxLTExLTE3IDEzOjExOjU0IiwianRpIjoiZWFkN2I2NjMtNWVkMy00YmEzLWIyMTQtMTZlYWM4MDgzYTEwIn0.ABSVNvE-_RgBt3FwLLNscg5Jdb7v9n3tzCC40K2kQd1ofCY9Zy18xnQBBlSJ0-3X0JICeRzD3MvSo5GlGoxf4ax-13QowLQahT8kYdD-NcwSFJsy9DaAgyZAFGdVYPmOCLpBzqC00zLhVRxnwpi-k8wJZDMWSb9gQdv0Gb6eOtoUL30DgILbrNiPiFi-2L0Ytge2pJvcWIPxbAkkROAr5WeCfrnreYMuqwTj3r3RcqbC46OjLyBjdePzVqp1gIZM6YBX5c_08IS7sRWxSZD3A5x3LXa47zLQSSaNrCSZGNTZNRhaqgFqQK9lj3B4EdTKjPl1rkx869C1BcU7w_6aGQ' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTM6NDU6MTUiLCJpYXQiOiIyMDIxLTExLTE3IDEzOjExOjU1IiwianRpIjoiZWFkN2I2NjMtNWVkMy00YmEzLWIyMTQtMTZlYWM4MDgzYTEwIn0.UxWdhvFsE5lspDuu0v2MHrOXCmgXwmaEYGvuFbm_NNuJIRuaHiikNvZjPg0Te-FIsnv8E-C9ZU6BMn4j4osJ4CYBfSXHkaBgdrbEwBT3xV5r-DdiT8Z3G8Rv_jmRiOLCzWcZDrAqDPWVeafJVj7_h5iWE_zItu8OCKorfDkq9CpnMwRPev-2XEXWNRB_lziJUs9Fjrxj-A5lrbzFYUg1tIr_E-lDsux41VIhsAcLZvniH3YjfcKE0f6PnX6s6givXygtLdHXcc32g1ORkk3R_BGB8ueXmJnSSz4iAH_PGXaUDNfgr3qQ3lSZwbF9fi9dGdZKjBNaC29wz6kHdCEkhw' , str_to_date('2021-11-17 13:41:54','%Y-%m-%d %H:%i:%s') , 0 , str_to_date('2021-11-17 13:45:15','%Y-%m-%d %H:%i:%s') , 0 , '110588348101165911' , str_to_date('2021-11-17 13:11:55','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：81ms , start = 1637125915933
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 

13:11:57.507 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 
┣ 语句：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= ?
┣ 参数：{"PARAM_1":0}
┣ 执行：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：728ms , start = 1637125916778
┣━ 返回：RcdSet,size=1618
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:188)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:173)
    org.github.foxnic.web.oauth.service.impl.ResourzeServiceImpl.getMatchd(ResourzeServiceImpl.java:293)
┣ TID：null
┗━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 

13:11:57.942 [XNIO-1 task-1] - [513340521452670976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_lang","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_lang'
┣ 结果： 
┣━ 耗时：63ms , start = 1637125917877
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513340521452670976
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:11:58.112 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 
┣ 语句：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= ?
┣ 参数：{"PARAM_1":0}
┣ 执行：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：624ms , start = 1637125917487
┣━ 返回：RcdSet,size=1618
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:188)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:173)
    org.github.foxnic.web.oauth.service.impl.ResourzeServiceImpl.getMatchd(ResourzeServiceImpl.java:293)
┣ TID：null
┗━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 

13:11:58.201 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE code = 'system.portal.module.enable'
┣ 结果： 
┣━ 耗时：46ms , start = 1637125918150
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

13:11:58.290 [XNIO-1 task-1] - [513340521452670976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：329ms , start = 1637125917958
┣━ 返回：RcdSet,size=1266
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：513340521452670976
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

13:12:00.705 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：237ms , start = 1637125920466
┣━ 返回：RcdSet,size=1266
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：513340532966035456
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

13:12:22.784 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_operate","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_operate'
┣ 结果： 
┣━ 耗时：44ms , start = 1637125942732
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getDBTableMeta(SuperService.java:59)
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:222)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:22.854 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_borrow","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_borrow' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：47ms , start = 1637125942802
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513340532966035456
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

13:12:22.932 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产借用","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产借用' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1637125942880
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:22.976 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_borrow","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_borrow' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：32ms , start = 1637125942940
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：null
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

13:12:23.050 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"办理状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '办理状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：56ms , start = 1637125942989
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.035 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"办理状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '办理状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：57ms , start = 1637125942947
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.147 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：53ms , start = 1637125943083
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.151 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：36ms , start = 1637125943110
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.200 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"借用人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '借用人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1637125943152
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.203 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"借用人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '借用人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1637125943154
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.249 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1637125943205
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.249 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：43ms , start = 1637125943203
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.306 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"借出说明","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '借出说明' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1637125943255
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.305 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"借出说明","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '借出说明' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1637125943255
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.368 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"借出时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '借出时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1637125943318
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.370 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"借出时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '借出时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：38ms , start = 1637125943316
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.430 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"开始日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '开始日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：59ms , start = 1637125943370
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.478 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"开始日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '开始日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：96ms , start = 1637125943373
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.547 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"结束日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '结束日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：110ms , start = 1637125943432
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.568 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"结束日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '结束日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：85ms , start = 1637125943481
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.624 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"搜索","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '搜索' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：71ms , start = 1637125943551
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.647 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"搜索","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '搜索' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：77ms , start = 1637125943569
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.686 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"新建","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '新建' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：48ms , start = 1637125943632
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.693 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"新建","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '新建' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1637125943650
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.736 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"归还","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '归还' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1637125943690
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.753 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"归还","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '归还' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：50ms , start = 1637125943696
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.793 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"查看","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '查看' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：38ms , start = 1637125943748
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.815 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"查看","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '查看' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：50ms , start = 1637125943759
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.843 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1637125943800
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.865 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1637125943821
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.890 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1637125943845
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.931 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：56ms , start = 1637125943867
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:23.947 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"送审","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '送审' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1637125943893
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:24.004 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"送审","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '送审' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：59ms , start = 1637125943943
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:24.011 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"确认","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '确认' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1637125943962
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:24.050 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"确认","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '确认' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1637125944007
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:24.053 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"撤销","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '撤销' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：38ms , start = 1637125944013
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:24.090 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"撤销","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '撤销' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：35ms , start = 1637125944051
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:24.099 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"单据","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '单据' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1637125944055
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:24.151 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"单据","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '单据' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1637125944093
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:24.233 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:12:24.233 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:12:24.296 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_db_cache","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_db_cache'
┣ 结果： 
┣━ 耗时：43ms , start = 1637125944251
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513340532966035456
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:24.348 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_db_cache","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_db_cache'
┣ 结果： 
┣━ 耗时：41ms , start = 1637125944301
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:24.350 [XNIO-1 task-4] - [513340532966035456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_borrow/asset_borrow_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_borrow/asset_borrow_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：40ms , start = 1637125944302
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513340532966035456
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

13:12:24.419 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_borrow/asset_borrow_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_borrow/asset_borrow_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：49ms , start = 1637125944367
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：null
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

13:12:25.498 [XNIO-1 task-4] - [513340637441953792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_borrow","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_borrow'
┣ 结果： 
┣━ 耗时：43ms , start = 1637125945453
┣━ 返回：RcdSet,size=24
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetBorrowServiceImpl.queryPagedList(AssetBorrowServiceImpl.java:565)
┣ TID：513340637441953792
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:25.568 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_borrow","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_borrow'
┣ 结果： 
┣━ 耗时：64ms , start = 1637125945502
┣━ 返回：RcdSet,size=24
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetBorrowServiceImpl.queryPagedList(AssetBorrowServiceImpl.java:565)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:25.571 [XNIO-1 task-4] - [513340637441953792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_borrow t WHERE t.deleted = :PA... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_borrow t
WHERE t.deleted = ? AND t.tenant_id = ? AND t.originator_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_borrow t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND t.originator_id = 'E001' ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1637125945521
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetBorrowServiceImpl.queryPagedList(AssetBorrowServiceImpl.java:565)
┣ TID：513340637441953792
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_borrow t WHERE t.deleted = :PA... ] ━━━━━ 

13:12:25.628 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_borrow t WHERE t.deleted = :PA... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_borrow t
WHERE t.deleted = ? AND t.tenant_id = ? AND t.originator_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_borrow t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND t.originator_id = 'E001' ) A
┣ 结果： 
┣━ 耗时：47ms , start = 1637125945578
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetBorrowServiceImpl.queryPagedList(AssetBorrowServiceImpl.java:565)
┣ TID：513340637714583552
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_borrow t WHERE t.deleted = :PA... ] ━━━━━ 

13:12:27.964 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务名称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务名称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1637125947911
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:28.082 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请输入","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请输入' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：81ms , start = 1637125947997
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:28.153 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1637125948099
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:28.235 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"预计归还时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '预计归还时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：69ms , start = 1637125948159
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:28.352 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"取消","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '取消' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1637125948303
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:28.402 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"保存","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '保存' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1637125948357
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:29.145 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_attribute_item","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_attribute_item'
┣ 结果： 
┣━ 耗时：60ms , start = 1637125949064
┣━ 返回：RcdSet,size=22
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:29.279 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_bill","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_bill' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：53ms , start = 1637125949222
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513340637714583552
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

13:12:29.408 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_attribute","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_attribute'
┣ 结果： 
┣━ 耗时：83ms , start = 1637125949300
┣━ 返回：RcdSet,size=23
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:29.557 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：74ms , start = 1637125949480
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

13:12:29.685 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：75ms , start = 1637125949601
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:29.773 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"选择资产","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '选择资产' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：48ms , start = 1637125949723
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340637714583552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:29.831 [XNIO-1 task-5] - [513340637714583552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_selected_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_selected_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：52ms , start = 1637125949777
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513340637714583552
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

13:12:30.409 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset'
┣ 结果： 
┣━ 耗时：90ms , start = 1637125950317
┣━ 返回：RcdSet,size=97
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:274)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:30.492 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND id IN (
		SELECT asset_id
		FROM eam_asset_selected_data
		WHERE deleted = 0
			AND asset_selected_code = ? )) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"1637125948000","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND id IN (
		SELECT asset_id
		FROM eam_asset_selected_data
		WHERE deleted = 0
			AND asset_selected_code = '1637125948000' )) A
┣ 结果： 
┣━ 耗时：44ms , start = 1637125950447
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:274)
┣ TID：513340658027597824
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

13:12:31.447 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"pcm_catalog","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'pcm_catalog'
┣ 结果： 
┣━ 耗时：75ms , start = 1637125951329
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:31.528 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：39ms , start = 1637125951486
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513340658027597824
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

13:12:31.591 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"分类查询资产","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '分类查询资产' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：53ms , start = 1637125951537
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:31.652 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"确定","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '确定' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：52ms , start = 1637125951596
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:31.994 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_select","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_select' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：36ms , start = 1637125951956
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513340658027597824
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

13:12:32.066 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：51ms , start = 1637125951997
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

13:12:32.168 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：50ms , start = 1637125952111
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.217 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1637125952173
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.303 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"来源","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '来源' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1637125952247
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.366 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"位置","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '位置' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1637125952315
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.412 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"名称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '名称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1637125952370
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.457 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"规格型号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '规格型号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1637125952414
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.588 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"序列号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '序列号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1637125952461
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.683 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1637125952619
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.737 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"厂商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '厂商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：43ms , start = 1637125952691
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.804 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"维保商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '维保商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：50ms , start = 1637125952748
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.854 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"采购日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '采购日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1637125952807
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.902 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所属公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所属公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：42ms , start = 1637125952859
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:32.980 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：66ms , start = 1637125952908
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:33.074 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：53ms , start = 1637125953019
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:33.113 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择组织节点","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择组织节点' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：30ms , start = 1637125953081
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:33.171 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"管理人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '管理人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：52ms , start = 1637125953117
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:33.217 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：30ms , start = 1637125953185
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:33.279 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"更多","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '更多' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：56ms , start = 1637125953220
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513340658027597824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

13:12:33.337 [XNIO-1 task-5] - [513340658027597824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_select_basic_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_select_basic_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：48ms , start = 1637125953284
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513340658027597824
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

13:12:33.897 [XNIO-1 task-3] - [513340672812519424] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：53ms , start = 1637125953841
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513340672812519424
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

13:12:34.392 [XNIO-1 task-3] - [513340674733510656] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_manufacturer","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_manufacturer'
┣ 结果： 
┣━ 耗时：68ms , start = 1637125954321
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513340674733510656
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:34.481 [XNIO-1 task-5] - [513340675077443584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_position'
┣ 结果： 
┣━ 耗时：62ms , start = 1637125954416
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513340675077443584
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:34.486 [XNIO-1 task-3] - [513340674733510656] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：68ms , start = 1637125954414
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：513340674733510656
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

13:12:34.530 [XNIO-1 task-5] - [513340675077443584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：36ms , start = 1637125954490
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513340675077443584
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

13:12:34.591 [XNIO-1 task-5] - [513340675077443584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：55ms , start = 1637125954531
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513340675077443584
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

13:12:34.726 [XNIO-1 task-1] - [513340675694006272] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_dict_item","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_dict_item'
┣ 结果： 
┣━ 耗时：180ms , start = 1637125954542
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513340675694006272
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:34.727 [XNIO-1 task-5] - [513340675077443584] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 0ms
13:12:34.864 [XNIO-1 task-1] - [513340675694006272] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam_source"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'eam_source' ))
┣ 结果： 
┣━ 耗时：128ms , start = 1637125954734
┣━ 返回：RcdSet,size=6
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513340675694006272
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

13:12:34.868 [XNIO-1 task-4] - [513340676075687936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_maintainer","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_maintainer'
┣ 结果： 
┣━ 耗时：109ms , start = 1637125954757
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513340676075687936
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

13:12:34.917 [XNIO-1 task-2] - [513340677229121536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND status = ? AND (id NOT IN (
			SELECT asset_id
			FROM eam_asset_selected_data
			WHERE deleted = 0
				AND asset_selected_code = ? )
		AND owner_code = ? AND asset_status IN ( ? , ? ))) A
┣ 参数：{"PARAM_1":0,"PARAM_7":"idle","PARAM_6":"using","PARAM_5":"asset","PARAM_4":"1637125948000","PARAM_3":"complete","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND status = 'complete' AND (id NOT IN (
			SELECT asset_id
			FROM eam_asset_selected_data
			WHERE deleted = 0
				AND asset_selected_code = '1637125948000' )
		AND owner_code = 'asset' AND asset_status IN ( 'using' , 'idle' ))) A
┣ 结果： 
┣━ 耗时：45ms , start = 1637125954866
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:274)
┣ TID：513340677229121536
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

13:12:35.152 [XNIO-1 task-4] - [513340676075687936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：45ms , start = 1637125955106
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：513340676075687936
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

13:12:54.232 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:12:54.233 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:13:24.238 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:13:24.239 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:13:54.233 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:13:54.234 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:14:24.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:14:24.234 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:14:54.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:14:54.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:15:24.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:15:24.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:15:54.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:15:54.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:16:24.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:16:24.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:16:54.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:16:54.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:17:24.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:17:24.227 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:17:54.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:17:54.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:18:24.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:18:24.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:18:54.224 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:18:54.225 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:19:24.226 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:19:24.226 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:19:54.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:19:54.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:20:24.223 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:20:24.225 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:20:54.221 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:20:54.225 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:21:24.222 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:21:24.222 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:21:54.222 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:21:54.222 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:22:24.219 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:22:24.219 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:22:54.219 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:22:54.221 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:23:24.218 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:23:24.219 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:23:54.224 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:23:54.224 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:24:24.219 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:24:24.219 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:24:54.218 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:24:54.218 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:25:24.217 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:25:24.219 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:25:54.217 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:25:54.217 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:26:24.219 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:26:24.219 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:26:54.214 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

13:26:54.214 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:28:50.583 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarting,55] - Starting WrapperAllApp on lankdeMacBook-Pro-2.local with PID 66378 (/Users/lank/IdeaProjectsnew/eam/eam/wrapper/wrapper-all/target/classes started by lank in /Users/lank/IdeaProjectsnew/eam)
14:28:50.609 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStartupProfileInfo,651] - No active profile set, falling back to default profiles: default
14:28:54.267 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [setApplicationContext,49] - service-all(default) is ready on port 8089
14:29:10.545 [main] - [] - INFO  c.d.p.f.d.DAOConfig - [primaryDAO,73] - dao is ready : 

user=root
url=jdbc:mysql://121.43.103.102:3306/eam?useSSL=false&serverTimezone=Hongkong&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowPublicKeyRetrieval=true&tinyInt1isBit=false

14:29:10.649 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,215] - TQL Scan Complete
14:29:10.650 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,217] - default sql count : 29
14:29:11.438 [main] - [] - INFO  c.g.f.s.m.ControllerAspector - [init,56] - ControllerAspector Init
14:29:15.208 [main] - [] - INFO  o.g.f.w.f.v.a.PageAspector - [init,67] - PageAspector Init
14:29:18.365 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES W... ] ━━━━━ 
┣ 语句：SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN( ? ,UPPER( ? ))
┣ 参数：{"PARAM_1":"eam","PARAM_2":"eam"}
┣ 执行：SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' ))
┣ 结果： 
┣━ 耗时：33ms , start = 1637130558254
┣━ 返回：RcdSet,size=139
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：null
┗━━━━━ SQL [ SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES W... ] ━━━━━ 

14:29:18.566 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule'
┣ 结果： 
┣━ 耗时：25ms , start = 1637130558537
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:29:18.743 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( valid = :PARAM... ] ━━━━━ 
┣ 语句：select t.* from dp_rule t WHERE ( ( t.deleted= ? ) AND ( valid = ? ) AND ( deleted = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":1}
┣ 执行：select t.* from dp_rule t WHERE ( ( t.deleted= 0 ) AND ( valid = 1 ) AND ( deleted = 0 ))
┣ 结果： 
┣━ 耗时：19ms , start = 1637130558723
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.queryList(RuleServiceImpl.java:244)
┣ TID：null
┗━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( valid = :PARAM... ] ━━━━━ 

14:29:18.814 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule_range","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule_range'
┣ 结果： 
┣━ 耗时：25ms , start = 1637130558788
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.applyAll(RuleServiceImpl.java:426)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl$1.run(RuleServiceImpl.java:87)
    com.github.foxnic.commons.concurrent.task.SimpleTaskManager$1.run(SimpleTaskManager.java:132)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:29:18.850 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.rule_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"509650653266575361","PARAM_18":"509647933944102912","PARAM_19":"509655484735684608","PARAM_10":"509657055074713600","PARAM_11":"505378699583950848","PARAM_12":"509656547438100480","PARAM_13":"505378833612935169","PARAM_14":"509655566583332865","PARAM_15":"509650758551994368","PARAM_16":"506776075892690944","PARAM_9":"509655623806222337","PARAM_8":"509650369479966720","PARAM_7":"509650558735351808","PARAM_6":"509656923604254721","PARAM_5":"506777407038951424","PARAM_4":"509650440854437889","PARAM_3":"509650043460911104","PARAM_2":"509650212042571776"}
┣ 执行：SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.rule_id IN ( '509650212042571776' , '509650043460911104' , '509650440854437889' , '506777407038951424' , '509656923604254721' , '509650558735351808' , '509650369479966720' , '509655623806222337' , '509657055074713600' , '505378699583950848' , '509656547438100480' , '505378833612935169' , '509655566583332865' , '509650758551994368' , '506776075892690944' , '509650653266575361' , '509647933944102912' , '509655484735684608' )
┣ 结果： 
┣━ 耗时：19ms , start = 1637130558830
┣━ 返回：RcdSet,size=19
┣ 调用栈：
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.applyAll(RuleServiceImpl.java:426)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl$1.run(RuleServiceImpl.java:87)
    com.github.foxnic.commons.concurrent.task.SimpleTaskManager$1.run(SimpleTaskManager.java:132)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( d... ] ━━━━━ 

14:29:18.896 [ForkJoinPool-2-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule_condition","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule_condition'
┣ 结果： 
┣━ 耗时：15ms , start = 1637130558880
┣━ 返回：RcdSet,size=24
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:29:18.937 [ForkJoinPool-2-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.range_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"510025118479552512","PARAM_18":"510025732596961280","PARAM_19":"507546341619007488","PARAM_20":"510024900207972352","PARAM_10":"509648598934224896","PARAM_11":"509653130233774080","PARAM_12":"509283833821007872","PARAM_13":"510025213606367232","PARAM_14":"510373868452450304","PARAM_15":"507545845873246208","PARAM_16":"510026172998881280","PARAM_9":"507519270167511040","PARAM_8":"510373972957728768","PARAM_7":"510024950115995648","PARAM_6":"510024837347938304","PARAM_5":"510026109497118720","PARAM_4":"510025000925794304","PARAM_3":"509042008610836480","PARAM_2":"510373932180705280"}
┣ 执行：SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.range_id IN ( '510373932180705280' , '509042008610836480' , '510025000925794304' , '510026109497118720' , '510024837347938304' , '510024950115995648' , '510373972957728768' , '507519270167511040' , '509648598934224896' , '509653130233774080' , '509283833821007872' , '510025213606367232' , '510373868452450304' , '507545845873246208' , '510026172998881280' , '510025118479552512' , '510025732596961280' , '507546341619007488' , '510024900207972352' )
┣ 结果： 
┣━ 耗时：33ms , start = 1637130558903
┣━ 返回：RcdSet,size=57
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHER... ] ━━━━━ 

14:29:18.971 [simple-parallel-task] - [] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 191ms
14:29:19.034 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我起草的流程(chs_instance_drafted) 成功
14:29:19.038 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我待审的流程(chs_instance_approving) 成功
14:29:19.042 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我办结的流程(chs_instance_approved) 成功
14:29:19.045 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我参与的流程(默认)(chs_instance_joined) 成功
14:29:19.045 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本登记审批(eam_asset_insert_approving) 成功
14:29:19.047 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产调拨单据(eam_asset_allocate) 成功
14:29:19.049 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产转移单据(eam_asset_tranfer) 成功
14:29:19.052 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维修单据(eam_asset_repair) 成功
14:29:19.055 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产借用单据(eam_asset_borrow) 成功
14:29:19.057 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产领用单据(eam_asset_collection) 成功
14:29:19.065 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产退库单据(eam_asset_collection_return) 成功
14:29:19.067 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产报废单据(eam_asset_scrap) 成功
14:29:19.069 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本变更(eam_asset_change_base_info) 成功
14:29:19.070 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维保变更(eam_asset_change_maintenance) 成功
14:29:19.071 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产财务变更(eam_asset_change_financial) 成功
14:29:19.072 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产财务变更审批(eam_asset_change_financial_approving) 成功
14:29:19.076 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维保变更审批(eam_asset_change_maintenance_approving) 成功
14:29:19.077 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本变更审批(eam_asset_change_base_info_approving) 成功
14:29:24.518 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarted,61] - Started WrapperAllApp in 35.554 seconds (JVM running for 39.095)
14:29:24.627 [main] - [] - INFO  c.g.f.s.w.WebContext - [gatherUrlMapping,130] - Request Mappings: 

url = /v2/api-docs , method = springfox.documentation.swagger2.web.Swagger2ControllerWebMvc.getDocumentation
url = /swagger-resources/configuration/security , method = springfox.documentation.swagger.web.ApiResourceController.securityConfiguration
url = /swagger-resources/configuration/ui , method = springfox.documentation.swagger.web.ApiResourceController.uiConfiguration
url = /swagger-resources , method = springfox.documentation.swagger.web.ApiResourceController.swaggerResources
url = /service-storage/sys-file/image , method = org.github.foxnic.web.storage.controller.FileController.image
url = /service-storage/sys-file/get-by-ids , method = org.github.foxnic.web.storage.controller.FileController.getByIds
url = /service-storage/sys-file/query-list , method = org.github.foxnic.web.storage.controller.FileController.queryList
url = /service-storage/sys-file/get-by-id , method = org.github.foxnic.web.storage.controller.FileController.getById
url = /service-storage/sys-file/upload , method = org.github.foxnic.web.storage.controller.FileController.upload
url = /service-storage/sys-file/download , method = org.github.foxnic.web.storage.controller.FileController.download
url = /service-storage/sys-file/delete , method = org.github.foxnic.web.storage.controller.FileController.deleteById
url = /service-storage/sys-file/batch-delete , method = org.github.foxnic.web.storage.controller.FileController.deleteByIds
url = /service-storage/sys-file/data , method = org.github.foxnic.web.storage.controller.FileController.getFileData
url = /service-storage/sys-file/query-paged-list , method = org.github.foxnic.web.storage.controller.FileController.queryPagedList
url = /business/storage/file/file_form.html , method = org.github.foxnic.web.storage.page.FilePageController.form
url = /business/storage/file/file_list.html , method = org.github.foxnic.web.storage.page.FilePageController.list
url = /service-system/sys-busi-role/update , method = org.github.foxnic.web.system.controller.BusiRoleController.update
url = /service-system/sys-busi-role/save , method = org.github.foxnic.web.system.controller.BusiRoleController.save
url = /service-system/sys-busi-role/insert , method = org.github.foxnic.web.system.controller.BusiRoleController.insert
url = /service-system/sys-busi-role/get-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleController.getByIds
url = /service-system/sys-busi-role/query-list , method = org.github.foxnic.web.system.controller.BusiRoleController.queryList
url = /service-system/sys-busi-role/get-by-id , method = org.github.foxnic.web.system.controller.BusiRoleController.getById
url = /service-system/sys-busi-role/delete , method = org.github.foxnic.web.system.controller.BusiRoleController.deleteById
url = /service-system/sys-busi-role/delete-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleController.deleteByIds
url = /service-system/sys-busi-role/query-paged-list , method = org.github.foxnic.web.system.controller.BusiRoleController.queryPagedList
url = /service-system/sys-busi-role/export-excel , method = org.github.foxnic.web.system.controller.BusiRoleController.exportExcel
url = /service-system/sys-busi-role/export-excel-template , method = org.github.foxnic.web.system.controller.BusiRoleController.exportExcelTemplate
url = /service-system/sys-busi-role/import-excel , method = org.github.foxnic.web.system.controller.BusiRoleController.importExcel
url = /service-system/sys-busi-role/get-employee-roles , method = org.github.foxnic.web.system.controller.BusiRoleController.getEmployeeRoles
url = /service-system/sys-busi-role/get-by-codes , method = org.github.foxnic.web.system.controller.BusiRoleController.getByCodes
url = /service-system/sys-db-cache/update , method = org.github.foxnic.web.system.controller.DbCacheController.update
url = /service-system/sys-db-cache/save , method = org.github.foxnic.web.system.controller.DbCacheController.save
url = /service-system/sys-db-cache/insert , method = org.github.foxnic.web.system.controller.DbCacheController.insert
url = /service-system/sys-db-cache/query-list , method = org.github.foxnic.web.system.controller.DbCacheController.queryList
url = /service-system/sys-db-cache/get-by-id , method = org.github.foxnic.web.system.controller.DbCacheController.getById
url = /service-system/sys-db-cache/delete , method = org.github.foxnic.web.system.controller.DbCacheController.deleteById
url = /service-system/sys-db-cache/delete-by-ids , method = org.github.foxnic.web.system.controller.DbCacheController.deleteByIds
url = /service-system/sys-db-cache/query-paged-list , method = org.github.foxnic.web.system.controller.DbCacheController.queryPagedList
url = /service-system/sys-db-cache/export-excel , method = org.github.foxnic.web.system.controller.DbCacheController.exportExcel
url = /service-system/sys-db-cache/export-excel-template , method = org.github.foxnic.web.system.controller.DbCacheController.exportExcelTemplate
url = /service-system/sys-db-cache/import-excel , method = org.github.foxnic.web.system.controller.DbCacheController.importExcel
url = /service-system/sys-node/update , method = org.github.foxnic.web.system.controller.NodeController.update
url = /service-system/sys-node/save , method = org.github.foxnic.web.system.controller.NodeController.save
url = /service-system/sys-node/insert , method = org.github.foxnic.web.system.controller.NodeController.insert
url = /service-system/sys-node/get-by-ids , method = org.github.foxnic.web.system.controller.NodeController.getByIds
url = /service-system/sys-node/query-list , method = org.github.foxnic.web.system.controller.NodeController.queryList
url = /service-system/sys-node/get-by-id , method = org.github.foxnic.web.system.controller.NodeController.getById
url = /service-system/sys-node/delete , method = org.github.foxnic.web.system.controller.NodeController.deleteById
url = /service-system/sys-node/delete-by-ids , method = org.github.foxnic.web.system.controller.NodeController.deleteByIds
url = /service-system/sys-node/query-paged-list , method = org.github.foxnic.web.system.controller.NodeController.queryPagedList
url = /service-system/sys-node/export-excel , method = org.github.foxnic.web.system.controller.NodeController.exportExcel
url = /service-system/sys-node/export-excel-template , method = org.github.foxnic.web.system.controller.NodeController.exportExcelTemplate
url = /service-system/sys-node/import-excel , method = org.github.foxnic.web.system.controller.NodeController.importExcel
url = /service-system/sys-code-example-car/update , method = org.github.foxnic.web.system.controller.CodeExampleCarController.update
url = /service-system/sys-code-example-car/save , method = org.github.foxnic.web.system.controller.CodeExampleCarController.save
url = /service-system/sys-code-example-car/insert , method = org.github.foxnic.web.system.controller.CodeExampleCarController.insert
url = /service-system/sys-code-example-car/get-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleCarController.getByIds
url = /service-system/sys-code-example-car/query-list , method = org.github.foxnic.web.system.controller.CodeExampleCarController.queryList
url = /service-system/sys-code-example-car/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleCarController.getById
url = /service-system/sys-code-example-car/delete , method = org.github.foxnic.web.system.controller.CodeExampleCarController.deleteById
url = /service-system/sys-code-example-car/delete-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleCarController.deleteByIds
url = /service-system/sys-code-example-car/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleCarController.queryPagedList
url = /service-system/sys-code-example-car/export-excel , method = org.github.foxnic.web.system.controller.CodeExampleCarController.exportExcel
url = /service-system/sys-code-example-car/export-excel-template , method = org.github.foxnic.web.system.controller.CodeExampleCarController.exportExcelTemplate
url = /service-system/sys-code-example-car/import-excel , method = org.github.foxnic.web.system.controller.CodeExampleCarController.importExcel
url = /service-system/sys-dict/update , method = org.github.foxnic.web.system.controller.DictController.update
url = /service-system/sys-dict/save , method = org.github.foxnic.web.system.controller.DictController.save
url = /service-system/sys-dict/insert , method = org.github.foxnic.web.system.controller.DictController.insert
url = /service-system/sys-dict/get-by-ids , method = org.github.foxnic.web.system.controller.DictController.getByIds
url = /service-system/sys-dict/query-list , method = org.github.foxnic.web.system.controller.DictController.queryList
url = /service-system/sys-dict/get-by-id , method = org.github.foxnic.web.system.controller.DictController.getById
url = /service-system/sys-dict/delete , method = org.github.foxnic.web.system.controller.DictController.deleteById
url = /service-system/sys-dict/delete-by-ids , method = org.github.foxnic.web.system.controller.DictController.deleteByIds
url = /service-system/sys-dict/query-paged-list , method = org.github.foxnic.web.system.controller.DictController.queryPagedList
url = /service-system/sys-dict/export-excel , method = org.github.foxnic.web.system.controller.DictController.exportExcel
url = /service-system/sys-dict/export-excel-template , method = org.github.foxnic.web.system.controller.DictController.exportExcelTemplate
url = /service-system/sys-dict/import-excel , method = org.github.foxnic.web.system.controller.DictController.importExcel
url = /service-system/sys-user-tenant/update , method = org.github.foxnic.web.system.controller.UserTenantController.update
url = /service-system/sys-user-tenant/save , method = org.github.foxnic.web.system.controller.UserTenantController.save
url = /service-system/sys-user-tenant/insert , method = org.github.foxnic.web.system.controller.UserTenantController.insert
url = /service-system/sys-user-tenant/get-by-ids , method = org.github.foxnic.web.system.controller.UserTenantController.getByIds
url = /service-system/sys-user-tenant/query-list , method = org.github.foxnic.web.system.controller.UserTenantController.queryList
url = /service-system/sys-user-tenant/get-by-id , method = org.github.foxnic.web.system.controller.UserTenantController.getById
url = /service-system/sys-user-tenant/delete , method = org.github.foxnic.web.system.controller.UserTenantController.deleteById
url = /service-system/sys-user-tenant/delete-by-ids , method = org.github.foxnic.web.system.controller.UserTenantController.deleteByIds
url = /service-system/sys-user-tenant/query-paged-list , method = org.github.foxnic.web.system.controller.UserTenantController.queryPagedList
url = /service-system/sys-user-tenant/export-excel , method = org.github.foxnic.web.system.controller.UserTenantController.exportExcel
url = /service-system/sys-user-tenant/export-excel-template , method = org.github.foxnic.web.system.controller.UserTenantController.exportExcelTemplate
url = /service-system/sys-user-tenant/import-excel , method = org.github.foxnic.web.system.controller.UserTenantController.importExcel
url = /service-system/sys-busi-role-member/update , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.update
url = /service-system/sys-busi-role-member/save , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.save
url = /service-system/sys-busi-role-member/insert , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.insert
url = /service-system/sys-busi-role-member/get-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.getByIds
url = /service-system/sys-busi-role-member/query-list , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.queryList
url = /service-system/sys-busi-role-member/get-by-id , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.getById
url = /service-system/sys-busi-role-member/delete , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.deleteById
url = /service-system/sys-busi-role-member/delete-by-ids , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.deleteByIds
url = /service-system/sys-busi-role-member/query-paged-list , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.queryPagedList
url = /service-system/sys-busi-role-member/export-excel , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.exportExcel
url = /service-system/sys-busi-role-member/export-excel-template , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.exportExcelTemplate
url = /service-system/sys-busi-role-member/import-excel , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.importExcel
url = /service-system/sys-busi-role-member/inserts , method = org.github.foxnic.web.system.controller.BusiRoleMemberController.inserts
url = /service-system/sys-dict-item/update , method = org.github.foxnic.web.system.controller.DictItemController.update
url = /service-system/sys-dict-item/save , method = org.github.foxnic.web.system.controller.DictItemController.save
url = /service-system/sys-dict-item/insert , method = org.github.foxnic.web.system.controller.DictItemController.insert
url = /service-system/sys-dict-item/get-by-ids , method = org.github.foxnic.web.system.controller.DictItemController.getByIds
url = /service-system/sys-dict-item/query-list , method = org.github.foxnic.web.system.controller.DictItemController.queryList
url = /service-system/sys-dict-item/get-by-id , method = org.github.foxnic.web.system.controller.DictItemController.getById
url = /service-system/sys-dict-item/delete , method = org.github.foxnic.web.system.controller.DictItemController.deleteById
url = /service-system/sys-dict-item/delete-by-ids , method = org.github.foxnic.web.system.controller.DictItemController.deleteByIds
url = /service-system/sys-dict-item/query-paged-list , method = org.github.foxnic.web.system.controller.DictItemController.queryPagedList
url = /service-system/sys-dict-item/export-excel , method = org.github.foxnic.web.system.controller.DictItemController.exportExcel
url = /service-system/sys-dict-item/export-excel-template , method = org.github.foxnic.web.system.controller.DictItemController.exportExcelTemplate
url = /service-system/sys-dict-item/import-excel , method = org.github.foxnic.web.system.controller.DictItemController.importExcel
url = /service-system/sys-code-example/update , method = org.github.foxnic.web.system.controller.CodeExampleController.update
url = /service-system/sys-code-example/save , method = org.github.foxnic.web.system.controller.CodeExampleController.save
url = /service-system/sys-code-example/insert , method = org.github.foxnic.web.system.controller.CodeExampleController.insert
url = /service-system/sys-code-example/get-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleController.getByIds
url = /service-system/sys-code-example/query-list , method = org.github.foxnic.web.system.controller.CodeExampleController.queryList
url = /service-system/sys-code-example/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleController.getById
url = /service-system/sys-code-example/delete , method = org.github.foxnic.web.system.controller.CodeExampleController.deleteById
url = /service-system/sys-code-example/delete-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleController.deleteByIds
url = /service-system/sys-code-example/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleController.queryPagedList
url = /service-system/sys-code-example/export-excel , method = org.github.foxnic.web.system.controller.CodeExampleController.exportExcel
url = /service-system/sys-code-example/export-excel-template , method = org.github.foxnic.web.system.controller.CodeExampleController.exportExcelTemplate
url = /service-system/sys-code-example/import-excel , method = org.github.foxnic.web.system.controller.CodeExampleController.importExcel
url = /service-system/sys-invoke-log/update , method = org.github.foxnic.web.system.controller.InvokeLogController.update
url = /service-system/sys-invoke-log/save , method = org.github.foxnic.web.system.controller.InvokeLogController.save
url = /service-system/sys-invoke-log/insert , method = org.github.foxnic.web.system.controller.InvokeLogController.insert
url = /service-system/sys-invoke-log/get-by-ids , method = org.github.foxnic.web.system.controller.InvokeLogController.getByIds
url = /service-system/sys-invoke-log/query-list , method = org.github.foxnic.web.system.controller.InvokeLogController.queryList
url = /service-system/sys-invoke-log/get-by-id , method = org.github.foxnic.web.system.controller.InvokeLogController.getById
url = /service-system/sys-invoke-log/delete , method = org.github.foxnic.web.system.controller.InvokeLogController.deleteById
url = /service-system/sys-invoke-log/delete-by-ids , method = org.github.foxnic.web.system.controller.InvokeLogController.deleteByIds
url = /service-system/sys-invoke-log/query-paged-list , method = org.github.foxnic.web.system.controller.InvokeLogController.queryPagedList
url = /service-system/sys-invoke-log/export-excel , method = org.github.foxnic.web.system.controller.InvokeLogController.exportExcel
url = /service-system/sys-invoke-log/export-excel-template , method = org.github.foxnic.web.system.controller.InvokeLogController.exportExcelTemplate
url = /service-system/sys-invoke-log/import-excel , method = org.github.foxnic.web.system.controller.InvokeLogController.importExcel
url = /service-system/sys-lang/update , method = org.github.foxnic.web.system.controller.LangController.update
url = /service-system/sys-lang/save , method = org.github.foxnic.web.system.controller.LangController.save
url = /service-system/sys-lang/insert , method = org.github.foxnic.web.system.controller.LangController.insert
url = /service-system/sys-lang/query-list , method = org.github.foxnic.web.system.controller.LangController.queryList
url = /service-system/sys-lang/get-by-id , method = org.github.foxnic.web.system.controller.LangController.getById
url = /service-system/sys-lang/delete , method = org.github.foxnic.web.system.controller.LangController.deleteById
url = /service-system/sys-lang/batch-delete , method = org.github.foxnic.web.system.controller.LangController.deleteByIds
url = /service-system/sys-lang/query-paged-list , method = org.github.foxnic.web.system.controller.LangController.queryPagedList
url = /service-system/sys-lang/export-excel , method = org.github.foxnic.web.system.controller.LangController.exportExcel
url = /service-system/sys-lang/export-excel-template , method = org.github.foxnic.web.system.controller.LangController.exportExcelTemplate
url = /service-system/sys-lang/import-excel , method = org.github.foxnic.web.system.controller.LangController.importExcel
url = /service-system/sys-code-example-student/update , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.update
url = /service-system/sys-code-example-student/save , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.save
url = /service-system/sys-code-example-student/insert , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.insert
url = /service-system/sys-code-example-student/get-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.getByIds
url = /service-system/sys-code-example-student/query-list , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.queryList
url = /service-system/sys-code-example-student/get-by-id , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.getById
url = /service-system/sys-code-example-student/delete , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.deleteById
url = /service-system/sys-code-example-student/delete-by-ids , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.deleteByIds
url = /service-system/sys-code-example-student/query-paged-list , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.queryPagedList
url = /service-system/sys-code-example-student/export-excel , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.exportExcel
url = /service-system/sys-code-example-student/export-excel-template , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.exportExcelTemplate
url = /service-system/sys-code-example-student/import-excel , method = org.github.foxnic.web.system.controller.CodeExampleStudentController.importExcel
url = /service-system/sys-config/update , method = org.github.foxnic.web.system.controller.ConfigController.update
url = /service-system/sys-config/save , method = org.github.foxnic.web.system.controller.ConfigController.save
url = /service-system/sys-config/insert , method = org.github.foxnic.web.system.controller.ConfigController.insert
url = /service-system/sys-config/query-list , method = org.github.foxnic.web.system.controller.ConfigController.queryList
url = /service-system/sys-config/get-by-id , method = org.github.foxnic.web.system.controller.ConfigController.getById
url = /service-system/sys-config/delete , method = org.github.foxnic.web.system.controller.ConfigController.deleteById
url = /service-system/sys-config/batch-delete , method = org.github.foxnic.web.system.controller.ConfigController.deleteByIds
url = /service-system/sys-config/query-paged-list , method = org.github.foxnic.web.system.controller.ConfigController.queryPagedList
url = /service-system/sys-config/export-excel , method = org.github.foxnic.web.system.controller.ConfigController.exportExcel
url = /service-system/sys-config/export-excel-template , method = org.github.foxnic.web.system.controller.ConfigController.exportExcelTemplate
url = /service-system/sys-config/import-excel , method = org.github.foxnic.web.system.controller.ConfigController.importExcel
url = /service-system/sys-sequence/update , method = org.github.foxnic.web.system.controller.SequenceController.update
url = /service-system/sys-sequence/save , method = org.github.foxnic.web.system.controller.SequenceController.save
url = /service-system/sys-sequence/insert , method = org.github.foxnic.web.system.controller.SequenceController.insert
url = /service-system/sys-sequence/get-by-ids , method = org.github.foxnic.web.system.controller.SequenceController.getByIds
url = /service-system/sys-sequence/query-list , method = org.github.foxnic.web.system.controller.SequenceController.queryList
url = /service-system/sys-sequence/get-by-id , method = org.github.foxnic.web.system.controller.SequenceController.getById
url = /service-system/sys-sequence/delete , method = org.github.foxnic.web.system.controller.SequenceController.deleteById
url = /service-system/sys-sequence/delete-by-ids , method = org.github.foxnic.web.system.controller.SequenceController.deleteByIds
url = /service-system/sys-sequence/query-paged-list , method = org.github.foxnic.web.system.controller.SequenceController.queryPagedList
url = /service-system/sys-sequence/export-excel , method = org.github.foxnic.web.system.controller.SequenceController.exportExcel
url = /service-system/sys-sequence/export-excel-template , method = org.github.foxnic.web.system.controller.SequenceController.exportExcelTemplate
url = /service-system/sys-sequence/import-excel , method = org.github.foxnic.web.system.controller.SequenceController.importExcel
url = /service-system/sys-tenant/update , method = org.github.foxnic.web.system.controller.TenantController.update
url = /service-system/sys-tenant/save , method = org.github.foxnic.web.system.controller.TenantController.save
url = /service-system/sys-tenant/insert , method = org.github.foxnic.web.system.controller.TenantController.insert
url = /service-system/sys-tenant/get-by-ids , method = org.github.foxnic.web.system.controller.TenantController.getByIds
url = /service-system/sys-tenant/query-list , method = org.github.foxnic.web.system.controller.TenantController.queryList
url = /service-system/sys-tenant/get-by-id , method = org.github.foxnic.web.system.controller.TenantController.getById
url = /service-system/sys-tenant/delete , method = org.github.foxnic.web.system.controller.TenantController.deleteById
url = /service-system/sys-tenant/delete-by-ids , method = org.github.foxnic.web.system.controller.TenantController.deleteByIds
url = /service-system/sys-tenant/query-paged-list , method = org.github.foxnic.web.system.controller.TenantController.queryPagedList
url = /service-system/sys-tenant/export-excel , method = org.github.foxnic.web.system.controller.TenantController.exportExcel
url = /service-system/sys-tenant/export-excel-template , method = org.github.foxnic.web.system.controller.TenantController.exportExcelTemplate
url = /service-system/sys-tenant/import-excel , method = org.github.foxnic.web.system.controller.TenantController.importExcel
url = /business/system/busi_role_member/busi_role_member_form.html , method = org.github.foxnic.web.system.page.BusiRoleMemberPageController.form
url = /business/system/busi_role_member/busi_role_member_list.html , method = org.github.foxnic.web.system.page.BusiRoleMemberPageController.list
url = /business/system/db_cache/db_cache_form.html , method = org.github.foxnic.web.system.page.DbCachePageController.form
url = /business/system/db_cache/db_cache_list.html , method = org.github.foxnic.web.system.page.DbCachePageController.list
url = /business/system/dict/dict_form.html , method = org.github.foxnic.web.system.page.DictPageController.form
url = /business/system/dict/dict_list.html , method = org.github.foxnic.web.system.page.DictPageController.list
url = /login.html , method = org.github.foxnic.web.system.page.PortalPageController.login
url = /index.html , method = org.github.foxnic.web.system.page.PortalPageController.index
url = / , method = org.github.foxnic.web.system.page.PortalPageController.index
url = /business/system/busi_role/busi_role_form.html , method = org.github.foxnic.web.system.page.BusiRolePageController.form
url = /business/system/busi_role/busi_role_list.html , method = org.github.foxnic.web.system.page.BusiRolePageController.list
url = /business/system/lang/lang_form.html , method = org.github.foxnic.web.system.page.LangPageController.form
url = /business/system/lang/lang_list.html , method = org.github.foxnic.web.system.page.LangPageController.list
url = /business/system/config/config_form.html , method = org.github.foxnic.web.system.page.ConfigPageController.form
url = /business/system/config/config_list.html , method = org.github.foxnic.web.system.page.ConfigPageController.list
url = /business/system/dict_item/dict_item_form.html , method = org.github.foxnic.web.system.page.DictItemPageController.form
url = /business/system/dict_item/dict_item_list.html , method = org.github.foxnic.web.system.page.DictItemPageController.list
url = /business/system/user_tenant/user_tenant_form.html , method = org.github.foxnic.web.system.page.UserTenantPageController.form
url = /business/system/user_tenant/user_tenant_list.html , method = org.github.foxnic.web.system.page.UserTenantPageController.list
url = /business/system/code_example/code_example_form.html , method = org.github.foxnic.web.system.page.CodeExamplePageController.form
url = /business/system/code_example/code_example_list.html , method = org.github.foxnic.web.system.page.CodeExamplePageController.list
url = /business/system/tenant/tenant_form.html , method = org.github.foxnic.web.system.page.TenantPageController.form
url = /business/system/tenant/tenant_list.html , method = org.github.foxnic.web.system.page.TenantPageController.list
url = /business/system/code_example_car/code_example_car_form.html , method = org.github.foxnic.web.system.page.CodeExampleCarPageController.form
url = /business/system/code_example_car/code_example_car_list.html , method = org.github.foxnic.web.system.page.CodeExampleCarPageController.list
url = /business/system/invoke_log/invoke_log_form.html , method = org.github.foxnic.web.system.page.InvokeLogPageController.form
url = /business/system/invoke_log/invoke_log_list.html , method = org.github.foxnic.web.system.page.InvokeLogPageController.list
url = /business/system/sequence/sequence_form.html , method = org.github.foxnic.web.system.page.SequencePageController.form
url = /business/system/sequence/sequence_list.html , method = org.github.foxnic.web.system.page.SequencePageController.list
url = /business/system/code_example_student/code_example_student_form.html , method = org.github.foxnic.web.system.page.CodeExampleStudentPageController.form
url = /business/system/code_example_student/code_example_student_list.html , method = org.github.foxnic.web.system.page.CodeExampleStudentPageController.list
url = /business/system/node/node_form.html , method = org.github.foxnic.web.system.page.NodePageController.form
url = /business/system/node/node_list.html , method = org.github.foxnic.web.system.page.NodePageController.list
url = /service-oauth/sys-menu/update , method = org.github.foxnic.web.oauth.controller.MenuController.update
url = /service-oauth/sys-menu/save , method = org.github.foxnic.web.oauth.controller.MenuController.save
url = /service-oauth/sys-menu/insert , method = org.github.foxnic.web.oauth.controller.MenuController.insert
url = /service-oauth/sys-menu/search , method = org.github.foxnic.web.oauth.controller.MenuController.search
url = /service-oauth/sys-menu/query-list , method = org.github.foxnic.web.oauth.controller.MenuController.queryList
url = /service-oauth/sys-menu/get-by-id , method = org.github.foxnic.web.oauth.controller.MenuController.getById
url = /service-oauth/sys-menu/delete , method = org.github.foxnic.web.oauth.controller.MenuController.deleteById
url = /service-oauth/sys-menu/batch-delete , method = org.github.foxnic.web.oauth.controller.MenuController.deleteByIds
url = /service-oauth/sys-menu/query-paged-list , method = org.github.foxnic.web.oauth.controller.MenuController.queryPagedList
url = /service-oauth/sys-menu/query-nodes , method = org.github.foxnic.web.oauth.controller.MenuController.queryNodes
url = /service-oauth/sys-menu/save-hierarchy , method = org.github.foxnic.web.oauth.controller.MenuController.changeParent
url = /service-oauth/sys-resourze/update , method = org.github.foxnic.web.oauth.controller.ResourzeController.update
url = /service-oauth/sys-resourze/save , method = org.github.foxnic.web.oauth.controller.ResourzeController.save
url = /service-oauth/sys-resourze/insert , method = org.github.foxnic.web.oauth.controller.ResourzeController.insert
url = /service-oauth/sys-resourze/get-by-ids , method = org.github.foxnic.web.oauth.controller.ResourzeController.getByIds
url = /service-oauth/sys-resourze/query-list , method = org.github.foxnic.web.oauth.controller.ResourzeController.queryList
url = /service-oauth/sys-resourze/get-by-id , method = org.github.foxnic.web.oauth.controller.ResourzeController.getById
url = /service-oauth/sys-resourze/delete , method = org.github.foxnic.web.oauth.controller.ResourzeController.deleteById
url = /service-oauth/sys-resourze/delete-by-ids , method = org.github.foxnic.web.oauth.controller.ResourzeController.deleteByIds
url = /service-oauth/sys-resourze/query-paged-list , method = org.github.foxnic.web.oauth.controller.ResourzeController.queryPagedList
url = /service-oauth/sys-resourze/export-excel , method = org.github.foxnic.web.oauth.controller.ResourzeController.exportExcel
url = /service-oauth/sys-resourze/export-excel-template , method = org.github.foxnic.web.oauth.controller.ResourzeController.exportExcelTemplate
url = /service-oauth/sys-resourze/import-excel , method = org.github.foxnic.web.oauth.controller.ResourzeController.importExcel
url = /service-oauth/sys-session-online/update , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.update
url = /service-oauth/sys-session-online/save , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.save
url = /service-oauth/sys-session-online/insert , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.insert
url = /service-oauth/sys-session-online/query-list , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.queryList
url = /service-oauth/sys-session-online/get-by-id , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.getById
url = /service-oauth/sys-session-online/delete , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.deleteById
url = /service-oauth/sys-session-online/batch-delete , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.deleteByIds
url = /service-oauth/sys-session-online/query-paged-list , method = org.github.foxnic.web.oauth.controller.SessionOnlineController.queryPagedList
url = /service-oauth/sys-user/update , method = org.github.foxnic.web.oauth.controller.UserController.update
url = /service-oauth/sys-user/save , method = org.github.foxnic.web.oauth.controller.UserController.save
url = /service-oauth/sys-user/insert , method = org.github.foxnic.web.oauth.controller.UserController.insert
url = /service-oauth/sys-user/query-list , method = org.github.foxnic.web.oauth.controller.UserController.queryList
url = /service-oauth/sys-user/get-by-id , method = org.github.foxnic.web.oauth.controller.UserController.getById
url = /service-oauth/sys-user/delete , method = org.github.foxnic.web.oauth.controller.UserController.deleteById
url = /service-oauth/sys-user/batch-delete , method = org.github.foxnic.web.oauth.controller.UserController.deleteByIds
url = /service-oauth/sys-user/query-paged-list , method = org.github.foxnic.web.oauth.controller.UserController.queryPagedList
url = /security/get-session-user , method = org.github.foxnic.web.oauth.controller.UserController.getSessionUser
url = /service-oauth/sys-user/change-passwd , method = org.github.foxnic.web.oauth.controller.UserController.changePasswd
url = /security/captcha/image/{browserId} , method = org.github.foxnic.web.oauth.controller.CaptchaController.createCode
url = /service-oauth/sys-role/update , method = org.github.foxnic.web.oauth.controller.RoleController.update
url = /service-oauth/sys-role/save , method = org.github.foxnic.web.oauth.controller.RoleController.save
url = /service-oauth/sys-role/insert , method = org.github.foxnic.web.oauth.controller.RoleController.insert
url = /service-oauth/sys-role/get-by-ids , method = org.github.foxnic.web.oauth.controller.RoleController.getByIds
url = /service-oauth/sys-role/query-list , method = org.github.foxnic.web.oauth.controller.RoleController.queryList
url = /service-oauth/sys-role/get-by-id , method = org.github.foxnic.web.oauth.controller.RoleController.getById
url = /service-oauth/sys-role/delete , method = org.github.foxnic.web.oauth.controller.RoleController.deleteById
url = /service-oauth/sys-role/delete-by-ids , method = org.github.foxnic.web.oauth.controller.RoleController.deleteByIds
url = /service-oauth/sys-role/query-paged-list , method = org.github.foxnic.web.oauth.controller.RoleController.queryPagedList
url = /service-oauth/sys-role/export-excel , method = org.github.foxnic.web.oauth.controller.RoleController.exportExcel
url = /service-oauth/sys-role/export-excel-template , method = org.github.foxnic.web.oauth.controller.RoleController.exportExcelTemplate
url = /service-oauth/sys-role/import-excel , method = org.github.foxnic.web.oauth.controller.RoleController.importExcel
url = /business/oauth/session_online/session_online_form.html , method = org.github.foxnic.web.oauth.page.SessionOnlinePageController.form
url = /business/oauth/session_online/session_online_list.html , method = org.github.foxnic.web.oauth.page.SessionOnlinePageController.list
url = /business/oauth/token/token_form.html , method = org.github.foxnic.web.oauth.page.TokenPageController.form
url = /business/oauth/token/token_list.html , method = org.github.foxnic.web.oauth.page.TokenPageController.list
url = /business/oauth/role/role_form.html , method = org.github.foxnic.web.oauth.page.RolePageController.form
url = /business/oauth/role/role_list.html , method = org.github.foxnic.web.oauth.page.RolePageController.list
url = /business/oauth/oauth_client/oauth_client_form.html , method = org.github.foxnic.web.oauth.page.OauthClientPageController.form
url = /business/oauth/oauth_client/oauth_client_list.html , method = org.github.foxnic.web.oauth.page.OauthClientPageController.list
url = /business/oauth/menu/menu_form.html , method = org.github.foxnic.web.oauth.page.MenuPageController.form
url = /business/oauth/menu/menu_list.html , method = org.github.foxnic.web.oauth.page.MenuPageController.list
url = /business/oauth/menu/menu_dialog.html , method = org.github.foxnic.web.oauth.page.MenuPageController.dialog
url = /business/oauth/user/user_form.html , method = org.github.foxnic.web.oauth.page.UserPageController.form
url = /business/oauth/user/user_list.html , method = org.github.foxnic.web.oauth.page.UserPageController.list
url = /business/oauth/resourze/resourze_form.html , method = org.github.foxnic.web.oauth.page.ResourzePageController.form
url = /business/oauth/resourze/resourze_list.html , method = org.github.foxnic.web.oauth.page.ResourzePageController.list
url = /service-hrm/hrm-company/update , method = org.github.foxnic.web.hrm.controller.CompanyController.update
url = /service-hrm/hrm-company/save , method = org.github.foxnic.web.hrm.controller.CompanyController.save
url = /service-hrm/hrm-company/insert , method = org.github.foxnic.web.hrm.controller.CompanyController.insert
url = /service-hrm/hrm-company/get-by-ids , method = org.github.foxnic.web.hrm.controller.CompanyController.getByIds
url = /service-hrm/hrm-company/query-list , method = org.github.foxnic.web.hrm.controller.CompanyController.queryList
url = /service-hrm/hrm-company/get-by-id , method = org.github.foxnic.web.hrm.controller.CompanyController.getById
url = /service-hrm/hrm-company/delete , method = org.github.foxnic.web.hrm.controller.CompanyController.deleteById
url = /service-hrm/hrm-company/delete-by-ids , method = org.github.foxnic.web.hrm.controller.CompanyController.deleteByIds
url = /service-hrm/hrm-company/query-paged-list , method = org.github.foxnic.web.hrm.controller.CompanyController.queryPagedList
url = /service-hrm/hrm-company/export-excel , method = org.github.foxnic.web.hrm.controller.CompanyController.exportExcel
url = /service-hrm/hrm-company/export-excel-template , method = org.github.foxnic.web.hrm.controller.CompanyController.exportExcelTemplate
url = /service-hrm/hrm-company/import-excel , method = org.github.foxnic.web.hrm.controller.CompanyController.importExcel
url = /service-hrm/hrm-position/update , method = org.github.foxnic.web.hrm.controller.PositionController.update
url = /service-hrm/hrm-position/save , method = org.github.foxnic.web.hrm.controller.PositionController.save
url = /service-hrm/hrm-position/insert , method = org.github.foxnic.web.hrm.controller.PositionController.insert
url = /service-hrm/hrm-position/get-by-ids , method = org.github.foxnic.web.hrm.controller.PositionController.getByIds
url = /service-hrm/hrm-position/query-list , method = org.github.foxnic.web.hrm.controller.PositionController.queryList
url = /service-hrm/hrm-position/get-by-id , method = org.github.foxnic.web.hrm.controller.PositionController.getById
url = /service-hrm/hrm-position/delete , method = org.github.foxnic.web.hrm.controller.PositionController.deleteById
url = /service-hrm/hrm-position/delete-by-ids , method = org.github.foxnic.web.hrm.controller.PositionController.deleteByIds
url = /service-hrm/hrm-position/query-paged-list , method = org.github.foxnic.web.hrm.controller.PositionController.queryPagedList
url = /service-hrm/hrm-position/export-excel , method = org.github.foxnic.web.hrm.controller.PositionController.exportExcel
url = /service-hrm/hrm-position/export-excel-template , method = org.github.foxnic.web.hrm.controller.PositionController.exportExcelTemplate
url = /service-hrm/hrm-position/import-excel , method = org.github.foxnic.web.hrm.controller.PositionController.importExcel
url = /service-hrm/hrm-employee/update , method = org.github.foxnic.web.hrm.controller.EmployeeController.update
url = /service-hrm/hrm-employee/save , method = org.github.foxnic.web.hrm.controller.EmployeeController.save
url = /service-hrm/hrm-employee/insert , method = org.github.foxnic.web.hrm.controller.EmployeeController.insert
url = /service-hrm/hrm-employee/get-by-ids , method = org.github.foxnic.web.hrm.controller.EmployeeController.getByIds
url = /service-hrm/hrm-employee/query-list , method = org.github.foxnic.web.hrm.controller.EmployeeController.queryList
url = /service-hrm/hrm-employee/get-by-id , method = org.github.foxnic.web.hrm.controller.EmployeeController.getById
url = /service-hrm/hrm-employee/delete , method = org.github.foxnic.web.hrm.controller.EmployeeController.deleteById
url = /service-hrm/hrm-employee/delete-by-ids , method = org.github.foxnic.web.hrm.controller.EmployeeController.deleteByIds
url = /service-hrm/hrm-employee/query-paged-list , method = org.github.foxnic.web.hrm.controller.EmployeeController.queryPagedList
url = /service-hrm/hrm-employee/get-by-badge , method = org.github.foxnic.web.hrm.controller.EmployeeController.getByBadge
url = /service-hrm/hrm-employee/get-by-badges , method = org.github.foxnic.web.hrm.controller.EmployeeController.getByBadges
url = /service-hrm/hrm-employee/export-excel , method = org.github.foxnic.web.hrm.controller.EmployeeController.exportExcel
url = /service-hrm/hrm-employee/export-excel-template , method = org.github.foxnic.web.hrm.controller.EmployeeController.exportExcelTemplate
url = /service-hrm/hrm-employee/import-excel , method = org.github.foxnic.web.hrm.controller.EmployeeController.importExcel
url = /service-hrm/hrm-favourite-group/update , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.update
url = /service-hrm/hrm-favourite-group/save , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.save
url = /service-hrm/hrm-favourite-group/insert , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.insert
url = /service-hrm/hrm-favourite-group/get-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.getByIds
url = /service-hrm/hrm-favourite-group/query-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.queryList
url = /service-hrm/hrm-favourite-group/get-by-id , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.getById
url = /service-hrm/hrm-favourite-group/delete , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.deleteById
url = /service-hrm/hrm-favourite-group/delete-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.deleteByIds
url = /service-hrm/hrm-favourite-group/query-paged-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.queryPagedList
url = /service-hrm/hrm-favourite-group/export-excel , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.exportExcel
url = /service-hrm/hrm-favourite-group/export-excel-template , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.exportExcelTemplate
url = /service-hrm/hrm-favourite-group/import-excel , method = org.github.foxnic.web.hrm.controller.FavouriteGroupController.importExcel
url = /service-hrm/hrm-favourite-group-item/update , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.update
url = /service-hrm/hrm-favourite-group-item/save , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.save
url = /service-hrm/hrm-favourite-group-item/inserts , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.insert
url = /service-hrm/hrm-favourite-group-item/insert , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.insert
url = /service-hrm/hrm-favourite-group-item/remove-all , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.removeAll
url = /service-hrm/hrm-favourite-group-item/get-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.getByIds
url = /service-hrm/hrm-favourite-group-item/query-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.queryList
url = /service-hrm/hrm-favourite-group-item/get-by-id , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.getById
url = /service-hrm/hrm-favourite-group-item/delete , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.deleteById
url = /service-hrm/hrm-favourite-group-item/delete-by-ids , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.deleteByIds
url = /service-hrm/hrm-favourite-group-item/query-paged-list , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.queryPagedList
url = /service-hrm/hrm-favourite-group-item/export-excel , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.exportExcel
url = /service-hrm/hrm-favourite-group-item/export-excel-template , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.exportExcelTemplate
url = /service-hrm/hrm-favourite-group-item/import-excel , method = org.github.foxnic.web.hrm.controller.FavouriteGroupItemController.importExcel
url = /service-hrm/hrm-organization/update , method = org.github.foxnic.web.hrm.controller.OrganizationController.update
url = /service-hrm/hrm-organization/save , method = org.github.foxnic.web.hrm.controller.OrganizationController.save
url = /service-hrm/hrm-organization/insert , method = org.github.foxnic.web.hrm.controller.OrganizationController.insert
url = /service-hrm/hrm-organization/search , method = org.github.foxnic.web.hrm.controller.OrganizationController.search
url = /service-hrm/hrm-organization/get-by-ids , method = org.github.foxnic.web.hrm.controller.OrganizationController.getByIds
url = /service-hrm/hrm-organization/query-list , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryList
url = /service-hrm/hrm-organization/get-by-id , method = org.github.foxnic.web.hrm.controller.OrganizationController.getById
url = /service-hrm/hrm-organization/delete , method = org.github.foxnic.web.hrm.controller.OrganizationController.deleteById
url = /service-hrm/hrm-organization/delete-by-ids , method = org.github.foxnic.web.hrm.controller.OrganizationController.deleteByIds
url = /service-hrm/hrm-organization/query-paged-list , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryPagedList
url = /service-hrm/hrm-organization/query-nodes-flatten , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryNodesFlatten
url = /service-hrm/hrm-organization/export-excel , method = org.github.foxnic.web.hrm.controller.OrganizationController.exportExcel
url = /service-hrm/hrm-organization/export-excel-template , method = org.github.foxnic.web.hrm.controller.OrganizationController.exportExcelTemplate
url = /service-hrm/hrm-organization/import-excel , method = org.github.foxnic.web.hrm.controller.OrganizationController.importExcel
url = /service-hrm/hrm-organization/query-nodes , method = org.github.foxnic.web.hrm.controller.OrganizationController.queryNodes
url = /service-hrm/hrm-organization/save-hierarchy , method = org.github.foxnic.web.hrm.controller.OrganizationController.changeParent
url = /service-hrm/hrm-person/update , method = org.github.foxnic.web.hrm.controller.PersonController.update
url = /service-hrm/hrm-person/save , method = org.github.foxnic.web.hrm.controller.PersonController.save
url = /service-hrm/hrm-person/insert , method = org.github.foxnic.web.hrm.controller.PersonController.insert
url = /service-hrm/hrm-person/get-by-ids , method = org.github.foxnic.web.hrm.controller.PersonController.getByIds
url = /service-hrm/hrm-person/query-list , method = org.github.foxnic.web.hrm.controller.PersonController.queryList
url = /service-hrm/hrm-person/get-by-id , method = org.github.foxnic.web.hrm.controller.PersonController.getById
url = /service-hrm/hrm-person/delete , method = org.github.foxnic.web.hrm.controller.PersonController.deleteById
url = /service-hrm/hrm-person/delete-by-ids , method = org.github.foxnic.web.hrm.controller.PersonController.deleteByIds
url = /service-hrm/hrm-person/query-paged-list , method = org.github.foxnic.web.hrm.controller.PersonController.queryPagedList
url = /service-hrm/hrm-person/export-excel , method = org.github.foxnic.web.hrm.controller.PersonController.exportExcel
url = /service-hrm/hrm-person/export-excel-template , method = org.github.foxnic.web.hrm.controller.PersonController.exportExcelTemplate
url = /service-hrm/hrm-person/import-excel , method = org.github.foxnic.web.hrm.controller.PersonController.importExcel
url = /business/hrm/company/company_form.html , method = org.github.foxnic.web.hrm.page.CompanyPageController.form
url = /business/hrm/company/company_list.html , method = org.github.foxnic.web.hrm.page.CompanyPageController.list
url = /business/hrm/person/person_form.html , method = org.github.foxnic.web.hrm.page.PersonPageController.form
url = /business/hrm/person/person_list.html , method = org.github.foxnic.web.hrm.page.PersonPageController.list
url = /business/hrm/employee/employee_form.html , method = org.github.foxnic.web.hrm.page.EmployeePageController.form
url = /business/hrm/employee/employee_list.html , method = org.github.foxnic.web.hrm.page.EmployeePageController.list
url = /business/hrm/position/position_form.html , method = org.github.foxnic.web.hrm.page.PositionPageController.form
url = /business/hrm/position/position_list.html , method = org.github.foxnic.web.hrm.page.PositionPageController.list
url = /business/hrm/organization/organization_form.html , method = org.github.foxnic.web.hrm.page.OrganizationPageController.form
url = /business/hrm/organization/organization_list.html , method = org.github.foxnic.web.hrm.page.OrganizationPageController.list
url = /business/hrm/favourite_group_item/favourite_group_item_form.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupItemPageController.form
url = /business/hrm/favourite_group_item/favourite_group_item_list.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupItemPageController.list
url = /business/hrm/favourite_group/favourite_group_form.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupPageController.form
url = /business/hrm/favourite_group/favourite_group_list.html , method = org.github.foxnic.web.hrm.page.FavouriteGroupPageController.list
url = /service-pcm/pcm-catalog-attribute/update , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.update
url = /service-pcm/pcm-catalog-attribute/save , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.save
url = /service-pcm/pcm-catalog-attribute/insert , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.insert
url = /service-pcm/pcm-catalog-attribute/get-by-ids , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.getByIds
url = /service-pcm/pcm-catalog-attribute/query-list , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryList
url = /service-pcm/pcm-catalog-attribute/get-by-id , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.getById
url = /service-pcm/pcm-catalog-attribute/delete , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.deleteById
url = /service-pcm/pcm-catalog-attribute/delete-by-ids , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.deleteByIds
url = /service-pcm/pcm-catalog-attribute/query-paged-list , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryPagedList
url = /service-pcm/pcm-catalog-attribute/export-excel , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.exportExcel
url = /service-pcm/pcm-catalog-attribute/export-excel-template , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.exportExcelTemplate
url = /service-pcm/pcm-catalog-attribute/import-excel , method = org.github.foxnic.web.pcm.controller.CatalogAttributeController.importExcel
url = /service-pcm/pcm-catalog/versions , method = org.github.foxnic.web.pcm.controller.CatalogController.versions
url = /service-pcm/pcm-catalog/update , method = org.github.foxnic.web.pcm.controller.CatalogController.update
url = /service-pcm/pcm-catalog/save , method = org.github.foxnic.web.pcm.controller.CatalogController.save
url = /service-pcm/pcm-catalog/insert , method = org.github.foxnic.web.pcm.controller.CatalogController.insert
url = /service-pcm/pcm-catalog/search , method = org.github.foxnic.web.pcm.controller.CatalogController.search
url = /service-pcm/pcm-catalog/get-by-ids , method = org.github.foxnic.web.pcm.controller.CatalogController.getByIds
url = /service-pcm/pcm-catalog/query-list , method = org.github.foxnic.web.pcm.controller.CatalogController.queryList
url = /service-pcm/pcm-catalog/get-by-id , method = org.github.foxnic.web.pcm.controller.CatalogController.getById
url = /service-pcm/pcm-catalog/delete , method = org.github.foxnic.web.pcm.controller.CatalogController.deleteById
url = /service-pcm/pcm-catalog/query-paged-list , method = org.github.foxnic.web.pcm.controller.CatalogController.queryPagedList
url = /service-pcm/pcm-catalog/query-nodes-flatten , method = org.github.foxnic.web.pcm.controller.CatalogController.queryNodesFlatten
url = /service-pcm/pcm-catalog/export-excel , method = org.github.foxnic.web.pcm.controller.CatalogController.exportExcel
url = /service-pcm/pcm-catalog/export-excel-template , method = org.github.foxnic.web.pcm.controller.CatalogController.exportExcelTemplate
url = /service-pcm/pcm-catalog/import-excel , method = org.github.foxnic.web.pcm.controller.CatalogController.importExcel
url = /service-pcm/pcm-catalog/query-nodes , method = org.github.foxnic.web.pcm.controller.CatalogController.queryNodes
url = /service-pcm/pcm-catalog/save-hierarchy , method = org.github.foxnic.web.pcm.controller.CatalogController.changeParent
url = /service-pcm/pcm-catalog/save-data , method = org.github.foxnic.web.pcm.controller.CatalogController.saveData
url = /service-pcm/pcm-catalog/storage-tables , method = org.github.foxnic.web.pcm.controller.CatalogController.storageTables
url = /service-pcm/pcm-catalog/create-version , method = org.github.foxnic.web.pcm.controller.CatalogController.createVersion
url = /service-pcm/pcm-catalog/apply-version , method = org.github.foxnic.web.pcm.controller.CatalogController.applyVersion
url = /service-pcm/pcm-catalog/query-data , method = org.github.foxnic.web.pcm.controller.CatalogController.queryData
url = /service-pcm/pcm-catalog/save-data-list , method = org.github.foxnic.web.pcm.controller.CatalogController.saveDataList
url = /service-pcm/pcm-catalog/delete-data , method = org.github.foxnic.web.pcm.controller.CatalogController.deleteData
url = /business/pcm/catalog_attribute/catalog_attribute_form.html , method = org.github.foxnic.web.pcm.page.CatalogAttributePageController.form
url = /business/pcm/catalog_attribute/catalog_attribute_list.html , method = org.github.foxnic.web.pcm.page.CatalogAttributePageController.list
url = /business/pcm/catalog/catalog_form.html , method = org.github.foxnic.web.pcm.page.CatalogPageController.form
url = /business/pcm/catalog/catalog_list.html , method = org.github.foxnic.web.pcm.page.CatalogPageController.list
url = /service-changes/chs-change-approver/update , method = org.github.foxnic.web.changes.controller.ChangeApproverController.update
url = /service-changes/chs-change-approver/save , method = org.github.foxnic.web.changes.controller.ChangeApproverController.save
url = /service-changes/chs-change-approver/insert , method = org.github.foxnic.web.changes.controller.ChangeApproverController.insert
url = /service-changes/chs-change-approver/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeApproverController.getByIds
url = /service-changes/chs-change-approver/query-list , method = org.github.foxnic.web.changes.controller.ChangeApproverController.queryList
url = /service-changes/chs-change-approver/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeApproverController.getById
url = /service-changes/chs-change-approver/delete , method = org.github.foxnic.web.changes.controller.ChangeApproverController.deleteById
url = /service-changes/chs-change-approver/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeApproverController.deleteByIds
url = /service-changes/chs-change-approver/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeApproverController.queryPagedList
url = /service-changes/chs-change-approver/export-excel , method = org.github.foxnic.web.changes.controller.ChangeApproverController.exportExcel
url = /service-changes/chs-change-approver/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeApproverController.exportExcelTemplate
url = /service-changes/chs-change-approver/import-excel , method = org.github.foxnic.web.changes.controller.ChangeApproverController.importExcel
url = /service-changes/chs-change-data/update , method = org.github.foxnic.web.changes.controller.ChangeDataController.update
url = /service-changes/chs-change-data/save , method = org.github.foxnic.web.changes.controller.ChangeDataController.save
url = /service-changes/chs-change-data/insert , method = org.github.foxnic.web.changes.controller.ChangeDataController.insert
url = /service-changes/chs-change-data/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDataController.getByIds
url = /service-changes/chs-change-data/query-list , method = org.github.foxnic.web.changes.controller.ChangeDataController.queryList
url = /service-changes/chs-change-data/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeDataController.getById
url = /service-changes/chs-change-data/delete , method = org.github.foxnic.web.changes.controller.ChangeDataController.deleteById
url = /service-changes/chs-change-data/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDataController.deleteByIds
url = /service-changes/chs-change-data/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeDataController.queryPagedList
url = /service-changes/chs-change-data/export-excel , method = org.github.foxnic.web.changes.controller.ChangeDataController.exportExcel
url = /service-changes/chs-change-data/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeDataController.exportExcelTemplate
url = /service-changes/chs-change-data/import-excel , method = org.github.foxnic.web.changes.controller.ChangeDataController.importExcel
url = /service-changes/chs-example-order/update , method = org.github.foxnic.web.changes.controller.ExampleOrderController.update
url = /service-changes/chs-example-order/save , method = org.github.foxnic.web.changes.controller.ExampleOrderController.save
url = /service-changes/chs-example-order/insert , method = org.github.foxnic.web.changes.controller.ExampleOrderController.insert
url = /service-changes/chs-example-order/get-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderController.getByIds
url = /service-changes/chs-example-order/query-list , method = org.github.foxnic.web.changes.controller.ExampleOrderController.queryList
url = /service-changes/chs-example-order/get-by-id , method = org.github.foxnic.web.changes.controller.ExampleOrderController.getById
url = /service-changes/chs-example-order/delete , method = org.github.foxnic.web.changes.controller.ExampleOrderController.deleteById
url = /service-changes/chs-example-order/delete-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderController.deleteByIds
url = /service-changes/chs-example-order/query-paged-list , method = org.github.foxnic.web.changes.controller.ExampleOrderController.queryPagedList
url = /service-changes/chs-example-order/approve , method = org.github.foxnic.web.changes.controller.ExampleOrderController.approve
url = /service-changes/chs-example-order/start-process , method = org.github.foxnic.web.changes.controller.ExampleOrderController.startProcess
url = /service-changes/chs-example-order/export-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderController.exportExcel
url = /service-changes/chs-example-order/export-excel-template , method = org.github.foxnic.web.changes.controller.ExampleOrderController.exportExcelTemplate
url = /service-changes/chs-example-order/import-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderController.importExcel
url = /service-changes/chs-example-order-item/update , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.update
url = /service-changes/chs-example-order-item/save , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.save
url = /service-changes/chs-example-order-item/insert , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.insert
url = /service-changes/chs-example-order-item/get-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.getByIds
url = /service-changes/chs-example-order-item/query-list , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.queryList
url = /service-changes/chs-example-order-item/get-by-id , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.getById
url = /service-changes/chs-example-order-item/delete , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.deleteById
url = /service-changes/chs-example-order-item/delete-by-ids , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.deleteByIds
url = /service-changes/chs-example-order-item/query-paged-list , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.queryPagedList
url = /service-changes/chs-example-order-item/export-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.exportExcel
url = /service-changes/chs-example-order-item/export-excel-template , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.exportExcelTemplate
url = /service-changes/chs-example-order-item/import-excel , method = org.github.foxnic.web.changes.controller.ExampleOrderItemController.importExcel
url = /service-changes/chs-change-bill/update , method = org.github.foxnic.web.changes.controller.ChangeBillController.update
url = /service-changes/chs-change-bill/save , method = org.github.foxnic.web.changes.controller.ChangeBillController.save
url = /service-changes/chs-change-bill/insert , method = org.github.foxnic.web.changes.controller.ChangeBillController.insert
url = /service-changes/chs-change-bill/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeBillController.getByIds
url = /service-changes/chs-change-bill/query-list , method = org.github.foxnic.web.changes.controller.ChangeBillController.queryList
url = /service-changes/chs-change-bill/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeBillController.getById
url = /service-changes/chs-change-bill/delete , method = org.github.foxnic.web.changes.controller.ChangeBillController.deleteById
url = /service-changes/chs-change-bill/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeBillController.deleteByIds
url = /service-changes/chs-change-bill/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeBillController.queryPagedList
url = /service-changes/chs-change-bill/export-excel , method = org.github.foxnic.web.changes.controller.ChangeBillController.exportExcel
url = /service-changes/chs-change-bill/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeBillController.exportExcelTemplate
url = /service-changes/chs-change-bill/import-excel , method = org.github.foxnic.web.changes.controller.ChangeBillController.importExcel
url = /service-changes/chs-change-event/update , method = org.github.foxnic.web.changes.controller.ChangeEventController.update
url = /service-changes/chs-change-event/save , method = org.github.foxnic.web.changes.controller.ChangeEventController.save
url = /service-changes/chs-change-event/insert , method = org.github.foxnic.web.changes.controller.ChangeEventController.insert
url = /service-changes/chs-change-event/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeEventController.getByIds
url = /service-changes/chs-change-event/query-list , method = org.github.foxnic.web.changes.controller.ChangeEventController.queryList
url = /service-changes/chs-change-event/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeEventController.getById
url = /service-changes/chs-change-event/delete , method = org.github.foxnic.web.changes.controller.ChangeEventController.deleteById
url = /service-changes/chs-change-event/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeEventController.deleteByIds
url = /service-changes/chs-change-event/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeEventController.queryPagedList
url = /service-changes/chs-change-event/export-excel , method = org.github.foxnic.web.changes.controller.ChangeEventController.exportExcel
url = /service-changes/chs-change-event/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeEventController.exportExcelTemplate
url = /service-changes/chs-change-event/import-excel , method = org.github.foxnic.web.changes.controller.ChangeEventController.importExcel
url = /service-changes/chs-change-instance/request , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.request
url = /service-changes/chs-change-instance/update , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.update
url = /service-changes/chs-change-instance/save , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.save
url = /service-changes/chs-change-instance/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.getByIds
url = /service-changes/chs-change-instance/query-list , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.queryList
url = /service-changes/chs-change-instance/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.getById
url = /service-changes/chs-change-instance/delete , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.deleteById
url = /service-changes/chs-change-instance/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.deleteByIds
url = /service-changes/chs-change-instance/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.queryPagedList
url = /service-changes/chs-change-instance/approve , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.approve
url = /service-changes/chs-change-instance/export-excel , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.exportExcel
url = /service-changes/chs-change-instance/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.exportExcelTemplate
url = /service-changes/chs-change-instance/import-excel , method = org.github.foxnic.web.changes.controller.ChangeInstanceController.importExcel
url = /service-changes/chs-change-definition/update , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.update
url = /service-changes/chs-change-definition/save , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.save
url = /service-changes/chs-change-definition/insert , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.insert
url = /service-changes/chs-change-definition/get-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.getByIds
url = /service-changes/chs-change-definition/query-list , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.queryList
url = /service-changes/chs-change-definition/get-by-id , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.getById
url = /service-changes/chs-change-definition/delete , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.deleteById
url = /service-changes/chs-change-definition/delete-by-ids , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.deleteByIds
url = /service-changes/chs-change-definition/query-paged-list , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.queryPagedList
url = /service-changes/chs-change-definition/export-excel , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.exportExcel
url = /service-changes/chs-change-definition/export-excel-template , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.exportExcelTemplate
url = /service-changes/chs-change-definition/import-excel , method = org.github.foxnic.web.changes.controller.ChangeDefinitionController.importExcel
url = /business/changes/change_approver/change_approver_form.html , method = org.github.foxnic.web.changes.page.ChangeApproverPageController.form
url = /business/changes/change_approver/change_approver_list.html , method = org.github.foxnic.web.changes.page.ChangeApproverPageController.list
url = /business/changes/change_bill/change_bill_form.html , method = org.github.foxnic.web.changes.page.ChangeBillPageController.form
url = /business/changes/change_bill/change_bill_list.html , method = org.github.foxnic.web.changes.page.ChangeBillPageController.list
url = /business/changes/change_data/change_data_form.html , method = org.github.foxnic.web.changes.page.ChangeDataPageController.form
url = /business/changes/change_data/change_data_list.html , method = org.github.foxnic.web.changes.page.ChangeDataPageController.list
url = /business/changes/example_order_item/example_order_item_form.html , method = org.github.foxnic.web.changes.page.ExampleOrderItemPageController.form
url = /business/changes/example_order_item/example_order_item_list.html , method = org.github.foxnic.web.changes.page.ExampleOrderItemPageController.list
url = /business/changes/change_definition/change_definition_form.html , method = org.github.foxnic.web.changes.page.ChangeDefinitionPageController.form
url = /business/changes/change_definition/change_definition_list.html , method = org.github.foxnic.web.changes.page.ChangeDefinitionPageController.list
url = /business/changes/example_order/example_order_form.html , method = org.github.foxnic.web.changes.page.ExampleOrderPageController.form
url = /business/changes/example_order/example_order_list.html , method = org.github.foxnic.web.changes.page.ExampleOrderPageController.list
url = /business/changes/change_event/change_event_form.html , method = org.github.foxnic.web.changes.page.ChangeEventPageController.form
url = /business/changes/change_event/change_event_list.html , method = org.github.foxnic.web.changes.page.ChangeEventPageController.list
url = /business/changes/change_instance/change_instance_form.html , method = org.github.foxnic.web.changes.page.ChangeInstancePageController.form
url = /business/changes/change_instance/change_instance_list.html , method = org.github.foxnic.web.changes.page.ChangeInstancePageController.list
url = /service-dataperm/dp-example-brand/update , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.update
url = /service-dataperm/dp-example-brand/save , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.save
url = /service-dataperm/dp-example-brand/insert , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.insert
url = /service-dataperm/dp-example-brand/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.getByIds
url = /service-dataperm/dp-example-brand/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.queryList
url = /service-dataperm/dp-example-brand/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.getById
url = /service-dataperm/dp-example-brand/delete , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.deleteById
url = /service-dataperm/dp-example-brand/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.deleteByIds
url = /service-dataperm/dp-example-brand/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.queryPagedList
url = /service-dataperm/dp-example-brand/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.exportExcel
url = /service-dataperm/dp-example-brand/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.exportExcelTemplate
url = /service-dataperm/dp-example-brand/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleBrandController.importExcel
url = /service-dataperm/dp-example-catalog/update , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.update
url = /service-dataperm/dp-example-catalog/save , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.save
url = /service-dataperm/dp-example-catalog/insert , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.insert
url = /service-dataperm/dp-example-catalog/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.getByIds
url = /service-dataperm/dp-example-catalog/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.queryList
url = /service-dataperm/dp-example-catalog/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.getById
url = /service-dataperm/dp-example-catalog/delete , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.deleteById
url = /service-dataperm/dp-example-catalog/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.deleteByIds
url = /service-dataperm/dp-example-catalog/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.queryPagedList
url = /service-dataperm/dp-example-catalog/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.exportExcel
url = /service-dataperm/dp-example-catalog/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.exportExcelTemplate
url = /service-dataperm/dp-example-catalog/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleCatalogController.importExcel
url = /service-dataperm/dp-rule-range/update , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.update
url = /service-dataperm/dp-rule-range/save , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.save
url = /service-dataperm/dp-rule-range/insert , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.insert
url = /service-dataperm/dp-rule-range/get-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.getByIds
url = /service-dataperm/dp-rule-range/query-list , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.queryList
url = /service-dataperm/dp-rule-range/get-by-id , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.getById
url = /service-dataperm/dp-rule-range/delete , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.deleteById
url = /service-dataperm/dp-rule-range/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.deleteByIds
url = /service-dataperm/dp-rule-range/query-paged-list , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.queryPagedList
url = /service-dataperm/dp-rule-range/export-excel , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.exportExcel
url = /service-dataperm/dp-rule-range/export-excel-template , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.exportExcelTemplate
url = /service-dataperm/dp-rule-range/import-excel , method = org.github.foxnic.web.dataperm.controller.RuleRangeController.importExcel
url = /service-dataperm/dp-example-order/update , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.update
url = /service-dataperm/dp-example-order/save , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.save
url = /service-dataperm/dp-example-order/insert , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.insert
url = /service-dataperm/dp-example-order/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.getByIds
url = /service-dataperm/dp-example-order/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.queryList
url = /service-dataperm/dp-example-order/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.getById
url = /service-dataperm/dp-example-order/delete , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.deleteById
url = /service-dataperm/dp-example-order/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.deleteByIds
url = /service-dataperm/dp-example-order/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.queryPagedList
url = /service-dataperm/dp-example-order/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.exportExcel
url = /service-dataperm/dp-example-order/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.exportExcelTemplate
url = /service-dataperm/dp-example-order/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleOrderController.importExcel
url = /service-dataperm/dp-example-product/update , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.update
url = /service-dataperm/dp-example-product/save , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.save
url = /service-dataperm/dp-example-product/insert , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.insert
url = /service-dataperm/dp-example-product/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.getByIds
url = /service-dataperm/dp-example-product/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.queryList
url = /service-dataperm/dp-example-product/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.getById
url = /service-dataperm/dp-example-product/delete , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.deleteById
url = /service-dataperm/dp-example-product/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.deleteByIds
url = /service-dataperm/dp-example-product/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.queryPagedList
url = /service-dataperm/dp-example-product/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.exportExcel
url = /service-dataperm/dp-example-product/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.exportExcelTemplate
url = /service-dataperm/dp-example-product/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleProductController.importExcel
url = /service-dataperm/dp-example-shop/update , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.update
url = /service-dataperm/dp-example-shop/save , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.save
url = /service-dataperm/dp-example-shop/insert , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.insert
url = /service-dataperm/dp-example-shop/get-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.getByIds
url = /service-dataperm/dp-example-shop/query-list , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.queryList
url = /service-dataperm/dp-example-shop/get-by-id , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.getById
url = /service-dataperm/dp-example-shop/delete , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.deleteById
url = /service-dataperm/dp-example-shop/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.deleteByIds
url = /service-dataperm/dp-example-shop/query-paged-list , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.queryPagedList
url = /service-dataperm/dp-example-shop/export-excel , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.exportExcel
url = /service-dataperm/dp-example-shop/export-excel-template , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.exportExcelTemplate
url = /service-dataperm/dp-example-shop/import-excel , method = org.github.foxnic.web.dataperm.controller.ExampleShopController.importExcel
url = /service-dataperm/dp-rule/update , method = org.github.foxnic.web.dataperm.controller.RuleController.update
url = /service-dataperm/dp-rule/apply , method = org.github.foxnic.web.dataperm.controller.RuleController.apply
url = /service-dataperm/dp-rule/save , method = org.github.foxnic.web.dataperm.controller.RuleController.save
url = /service-dataperm/dp-rule/insert , method = org.github.foxnic.web.dataperm.controller.RuleController.insert
url = /service-dataperm/dp-rule/get-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleController.getByIds
url = /service-dataperm/dp-rule/query-list , method = org.github.foxnic.web.dataperm.controller.RuleController.queryList
url = /service-dataperm/dp-rule/get-by-id , method = org.github.foxnic.web.dataperm.controller.RuleController.getById
url = /service-dataperm/dp-rule/delete , method = org.github.foxnic.web.dataperm.controller.RuleController.deleteById
url = /service-dataperm/dp-rule/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleController.deleteByIds
url = /service-dataperm/dp-rule/query-paged-list , method = org.github.foxnic.web.dataperm.controller.RuleController.queryPagedList
url = /service-dataperm/dp-rule/export-excel , method = org.github.foxnic.web.dataperm.controller.RuleController.exportExcel
url = /service-dataperm/dp-rule/export-excel-template , method = org.github.foxnic.web.dataperm.controller.RuleController.exportExcelTemplate
url = /service-dataperm/dp-rule/import-excel , method = org.github.foxnic.web.dataperm.controller.RuleController.importExcel
url = /service-dataperm/dp-rule/query-field-list , method = org.github.foxnic.web.dataperm.controller.RuleController.queryFieldList
url = /service-dataperm/dp-rule-condition/update , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.update
url = /service-dataperm/dp-rule-condition/save , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.save
url = /service-dataperm/dp-rule-condition/insert , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.insert
url = /service-dataperm/dp-rule-condition/get-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.getByIds
url = /service-dataperm/dp-rule-condition/query-list , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryList
url = /service-dataperm/dp-rule-condition/get-by-id , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.getById
url = /service-dataperm/dp-rule-condition/delete , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.deleteById
url = /service-dataperm/dp-rule-condition/delete-by-ids , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.deleteByIds
url = /service-dataperm/dp-rule-condition/query-paged-list , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryPagedList
url = /service-dataperm/dp-rule-condition/export-excel , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.exportExcel
url = /service-dataperm/dp-rule-condition/export-excel-template , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.exportExcelTemplate
url = /service-dataperm/dp-rule-condition/import-excel , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.importExcel
url = /service-dataperm/dp-rule-condition/query-nodes , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryNodes
url = /service-dataperm/dp-rule-condition/query-context , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.queryFieldList
url = /service-dataperm/dp-rule-condition/test-spring-el , method = org.github.foxnic.web.dataperm.controller.RuleConditionController.testSpringEL
url = /business/dataperm/example_product/example_product_form.html , method = org.github.foxnic.web.dataperm.page.ExampleProductPageController.form
url = /business/dataperm/example_product/example_product_list.html , method = org.github.foxnic.web.dataperm.page.ExampleProductPageController.list
url = /business/dataperm/rule_range/rule_range_form.html , method = org.github.foxnic.web.dataperm.page.RuleRangePageController.form
url = /business/dataperm/rule_range/rule_range_list.html , method = org.github.foxnic.web.dataperm.page.RuleRangePageController.list
url = /business/dataperm/example_catalog/example_catalog_form.html , method = org.github.foxnic.web.dataperm.page.ExampleCatalogPageController.form
url = /business/dataperm/example_catalog/example_catalog_list.html , method = org.github.foxnic.web.dataperm.page.ExampleCatalogPageController.list
url = /business/dataperm/rule_condition/rule_condition_form.html , method = org.github.foxnic.web.dataperm.page.RuleConditionPageController.form
url = /business/dataperm/rule_condition/rule_condition_list.html , method = org.github.foxnic.web.dataperm.page.RuleConditionPageController.list
url = /business/dataperm/example_brand/example_brand_form.html , method = org.github.foxnic.web.dataperm.page.ExampleBrandPageController.form
url = /business/dataperm/example_brand/example_brand_list.html , method = org.github.foxnic.web.dataperm.page.ExampleBrandPageController.list
url = /business/dataperm/example_shop/example_shop_form.html , method = org.github.foxnic.web.dataperm.page.ExampleShopPageController.form
url = /business/dataperm/example_shop/example_shop_list.html , method = org.github.foxnic.web.dataperm.page.ExampleShopPageController.list
url = /business/dataperm/example_order/example_order_form.html , method = org.github.foxnic.web.dataperm.page.ExampleOrderPageController.form
url = /business/dataperm/example_order/example_order_list.html , method = org.github.foxnic.web.dataperm.page.ExampleOrderPageController.list
url = /business/dataperm/rule/rule_form.html , method = org.github.foxnic.web.dataperm.page.RulePageController.form
url = /business/dataperm/rule/rule_list.html , method = org.github.foxnic.web.dataperm.page.RulePageController.list
url = /service-eam/eam-approve-configure/update , method = com.dt.platform.eam.controller.ApproveConfigureController.update
url = /service-eam/eam-approve-configure/save , method = com.dt.platform.eam.controller.ApproveConfigureController.save
url = /service-eam/eam-approve-configure/insert , method = com.dt.platform.eam.controller.ApproveConfigureController.insert
url = /service-eam/eam-approve-configure/get-by-ids , method = com.dt.platform.eam.controller.ApproveConfigureController.getByIds
url = /service-eam/eam-approve-configure/query-list , method = com.dt.platform.eam.controller.ApproveConfigureController.queryList
url = /service-eam/eam-approve-configure/get-by-id , method = com.dt.platform.eam.controller.ApproveConfigureController.getById
url = /service-eam/eam-approve-configure/delete , method = com.dt.platform.eam.controller.ApproveConfigureController.deleteById
url = /service-eam/eam-approve-configure/delete-by-ids , method = com.dt.platform.eam.controller.ApproveConfigureController.deleteByIds
url = /service-eam/eam-approve-configure/query-paged-list , method = com.dt.platform.eam.controller.ApproveConfigureController.queryPagedList
url = /service-eam/eam-approve-configure/export-excel , method = com.dt.platform.eam.controller.ApproveConfigureController.exportExcel
url = /service-eam/eam-approve-configure/export-excel-template , method = com.dt.platform.eam.controller.ApproveConfigureController.exportExcelTemplate
url = /service-eam/eam-approve-configure/import-excel , method = com.dt.platform.eam.controller.ApproveConfigureController.importExcel
url = /service-eam/eam-area/update , method = com.dt.platform.eam.controller.AreaController.update
url = /service-eam/eam-area/save , method = com.dt.platform.eam.controller.AreaController.save
url = /service-eam/eam-area/insert , method = com.dt.platform.eam.controller.AreaController.insert
url = /service-eam/eam-area/get-by-ids , method = com.dt.platform.eam.controller.AreaController.getByIds
url = /service-eam/eam-area/query-list , method = com.dt.platform.eam.controller.AreaController.queryList
url = /service-eam/eam-area/get-by-id , method = com.dt.platform.eam.controller.AreaController.getById
url = /service-eam/eam-area/delete , method = com.dt.platform.eam.controller.AreaController.deleteById
url = /service-eam/eam-area/delete-by-ids , method = com.dt.platform.eam.controller.AreaController.deleteByIds
url = /service-eam/eam-area/query-paged-list , method = com.dt.platform.eam.controller.AreaController.queryPagedList
url = /service-eam/eam-area/export-excel , method = com.dt.platform.eam.controller.AreaController.exportExcel
url = /service-eam/eam-area/export-excel-template , method = com.dt.platform.eam.controller.AreaController.exportExcelTemplate
url = /service-eam/eam-area/import-excel , method = com.dt.platform.eam.controller.AreaController.importExcel
url = /service-eam/eam-asset-alarm/query-borrow-expiration-data , method = com.dt.platform.eam.controller.AssetAlarmController.queryBorrowExpirationData
url = /service-eam/eam-asset-alarm/query-collection-expiration-data , method = com.dt.platform.eam.controller.AssetAlarmController.queryCollectionExpirationData
url = /service-eam/eam-asset-alarm/query-maintenance-expiration-data , method = com.dt.platform.eam.controller.AssetAlarmController.queryMaintenanceExpirationData
url = /service-eam/eam-asset-alarm/query-asset-serial-number-unique , method = com.dt.platform.eam.controller.AssetAlarmController.queryAssetSerialNumberUnique
url = /service-eam/eam-asset-allocation/update , method = com.dt.platform.eam.controller.AssetAllocationController.update
url = /service-eam/eam-asset-allocation/save , method = com.dt.platform.eam.controller.AssetAllocationController.save
url = /service-eam/eam-asset-allocation/insert , method = com.dt.platform.eam.controller.AssetAllocationController.insert
url = /service-eam/eam-asset-allocation/get-by-ids , method = com.dt.platform.eam.controller.AssetAllocationController.getByIds
url = /service-eam/eam-asset-allocation/query-list , method = com.dt.platform.eam.controller.AssetAllocationController.queryList
url = /service-eam/eam-asset-allocation/get-by-id , method = com.dt.platform.eam.controller.AssetAllocationController.getById
url = /service-eam/eam-asset-allocation/delete , method = com.dt.platform.eam.controller.AssetAllocationController.deleteById
url = /service-eam/eam-asset-allocation/delete-by-ids , method = com.dt.platform.eam.controller.AssetAllocationController.deleteByIds
url = /service-eam/eam-asset-allocation/query-paged-list , method = com.dt.platform.eam.controller.AssetAllocationController.queryPagedList
url = /service-eam/eam-asset-allocation/approve , method = com.dt.platform.eam.controller.AssetAllocationController.approve
url = /service-eam/eam-asset-allocation/export-excel , method = com.dt.platform.eam.controller.AssetAllocationController.exportExcel
url = /service-eam/eam-asset-allocation/export-excel-template , method = com.dt.platform.eam.controller.AssetAllocationController.exportExcelTemplate
url = /service-eam/eam-asset-allocation/import-excel , method = com.dt.platform.eam.controller.AssetAllocationController.importExcel
url = /service-eam/eam-asset-allocation/for-approval , method = com.dt.platform.eam.controller.AssetAllocationController.forApproval
url = /service-eam/eam-asset-allocation/confirm-operation , method = com.dt.platform.eam.controller.AssetAllocationController.confirmOperation
url = /service-eam/eam-asset-allocation/revoke-operation , method = com.dt.platform.eam.controller.AssetAllocationController.revokeOperation
url = /service-eam/eam-asset-attribute/update , method = com.dt.platform.eam.controller.AssetAttributeController.update
url = /service-eam/eam-asset-attribute/save , method = com.dt.platform.eam.controller.AssetAttributeController.save
url = /service-eam/eam-asset-attribute/insert , method = com.dt.platform.eam.controller.AssetAttributeController.insert
url = /service-eam/eam-asset-attribute/get-by-ids , method = com.dt.platform.eam.controller.AssetAttributeController.getByIds
url = /service-eam/eam-asset-attribute/query-list , method = com.dt.platform.eam.controller.AssetAttributeController.queryList
url = /service-eam/eam-asset-attribute/get-by-id , method = com.dt.platform.eam.controller.AssetAttributeController.getById
url = /service-eam/eam-asset-attribute/delete , method = com.dt.platform.eam.controller.AssetAttributeController.deleteById
url = /service-eam/eam-asset-attribute/delete-by-ids , method = com.dt.platform.eam.controller.AssetAttributeController.deleteByIds
url = /service-eam/eam-asset-attribute/query-paged-list , method = com.dt.platform.eam.controller.AssetAttributeController.queryPagedList
url = /service-eam/eam-asset-attribute/export-excel , method = com.dt.platform.eam.controller.AssetAttributeController.exportExcel
url = /service-eam/eam-asset-attribute/export-excel-template , method = com.dt.platform.eam.controller.AssetAttributeController.exportExcelTemplate
url = /service-eam/eam-asset-attribute/import-excel , method = com.dt.platform.eam.controller.AssetAttributeController.importExcel
url = /service-eam/eam-asset-attribute/query-attribute-owner-list , method = com.dt.platform.eam.controller.AssetAttributeController.queryAttributeOwnerList
url = /service-eam/eam-asset-attribute-item/update , method = com.dt.platform.eam.controller.AssetAttributeItemController.update
url = /service-eam/eam-asset-attribute-item/save , method = com.dt.platform.eam.controller.AssetAttributeItemController.save
url = /service-eam/eam-asset-attribute-item/insert , method = com.dt.platform.eam.controller.AssetAttributeItemController.insert
url = /service-eam/eam-asset-attribute-item/get-by-ids , method = com.dt.platform.eam.controller.AssetAttributeItemController.getByIds
url = /service-eam/eam-asset-attribute-item/query-list , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryList
url = /service-eam/eam-asset-attribute-item/get-by-id , method = com.dt.platform.eam.controller.AssetAttributeItemController.getById
url = /service-eam/eam-asset-attribute-item/delete , method = com.dt.platform.eam.controller.AssetAttributeItemController.deleteById
url = /service-eam/eam-asset-attribute-item/delete-by-ids , method = com.dt.platform.eam.controller.AssetAttributeItemController.deleteByIds
url = /service-eam/eam-asset-attribute-item/query-paged-list , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryPagedList
url = /service-eam/eam-asset-attribute-item/export-excel , method = com.dt.platform.eam.controller.AssetAttributeItemController.exportExcel
url = /service-eam/eam-asset-attribute-item/export-excel-template , method = com.dt.platform.eam.controller.AssetAttributeItemController.exportExcelTemplate
url = /service-eam/eam-asset-attribute-item/import-excel , method = com.dt.platform.eam.controller.AssetAttributeItemController.importExcel
url = /service-eam/eam-asset-attribute-item/query-form-column-by-module , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryFormColumnByModule
url = /service-eam/eam-asset-attribute-item/query-list-column-by-module , method = com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule
url = /service-eam/eam-asset-bill/query-asset-register-bills , method = com.dt.platform.eam.controller.AssetBillController.queryAssetRegisterBills
url = /service-eam/eam-asset-bill/query-asset-transfer-bill , method = com.dt.platform.eam.controller.AssetBillController.queryTransferBill
url = /service-eam/eam-asset-bill/query-asset-transfer-bills , method = com.dt.platform.eam.controller.AssetBillController.queryTransferBills
url = /service-eam/eam-asset-bill/query-borrow-bills , method = com.dt.platform.eam.controller.AssetBillController.queryBorrowBills
url = /service-eam/eam-asset-bill/query-borrow-bill , method = com.dt.platform.eam.controller.AssetBillController.queryBorrowBill
url = /service-eam/eam-asset-bill/query-allocation-bill , method = com.dt.platform.eam.controller.AssetBillController.queryAllocationBill
url = /service-eam/eam-asset-bill/query-allocation-bills , method = com.dt.platform.eam.controller.AssetBillController.queryAllocationBills
url = /service-eam/eam-asset-bill/query-collection-bill , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionBill
url = /service-eam/eam-asset-bill/query-collection-bills , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionBills
url = /service-eam/eam-asset-bill/query-collection-return-bill , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionReturnBill
url = /service-eam/eam-asset-bill/query-collection-return-bills , method = com.dt.platform.eam.controller.AssetBillController.queryCollectionReturnBills
url = /service-eam/eam-asset-bill/query-repair-bill , method = com.dt.platform.eam.controller.AssetBillController.queryRepairBill
url = /service-eam/eam-asset-bill/query-repair-bills , method = com.dt.platform.eam.controller.AssetBillController.queryRepairBills
url = /service-eam/eam-asset-bill/query-scrap-bill , method = com.dt.platform.eam.controller.AssetBillController.queryScrapBill
url = /service-eam/eam-asset-bill/query-scrap-bills , method = com.dt.platform.eam.controller.AssetBillController.queryScrapBills
url = /service-eam/eam-asset-bill/query-asset-card , method = com.dt.platform.eam.controller.AssetBillController.queryAssetCard
url = /service-eam/eam-asset-bill/query-asset-cards , method = com.dt.platform.eam.controller.AssetBillController.queryAssetCards
url = /service-eam/eam-asset-bill/query-asset-label , method = com.dt.platform.eam.controller.AssetBillController.queryAssetLabel
url = /service-eam/eam-asset-bill/query-asset-labels , method = com.dt.platform.eam.controller.AssetBillController.queryAssetLabels
url = /service-eam/eam-asset-borrow/update , method = com.dt.platform.eam.controller.AssetBorrowController.update
url = /service-eam/eam-asset-borrow/save , method = com.dt.platform.eam.controller.AssetBorrowController.save
url = /service-eam/eam-asset-borrow/insert , method = com.dt.platform.eam.controller.AssetBorrowController.insert
url = /service-eam/eam-asset-borrow/get-by-ids , method = com.dt.platform.eam.controller.AssetBorrowController.getByIds
url = /service-eam/eam-asset-borrow/query-list , method = com.dt.platform.eam.controller.AssetBorrowController.queryList
url = /service-eam/eam-asset-borrow/get-by-id , method = com.dt.platform.eam.controller.AssetBorrowController.getById
url = /service-eam/eam-asset-borrow/delete , method = com.dt.platform.eam.controller.AssetBorrowController.deleteById
url = /service-eam/eam-asset-borrow/delete-by-ids , method = com.dt.platform.eam.controller.AssetBorrowController.deleteByIds
url = /service-eam/eam-asset-borrow/query-paged-list , method = com.dt.platform.eam.controller.AssetBorrowController.queryPagedList
url = /service-eam/eam-asset-borrow/export-excel , method = com.dt.platform.eam.controller.AssetBorrowController.exportExcel
url = /service-eam/eam-asset-borrow/export-excel-template , method = com.dt.platform.eam.controller.AssetBorrowController.exportExcelTemplate
url = /service-eam/eam-asset-borrow/import-excel , method = com.dt.platform.eam.controller.AssetBorrowController.importExcel
url = /service-eam/eam-asset-borrow/for-approval , method = com.dt.platform.eam.controller.AssetBorrowController.forApproval
url = /service-eam/eam-asset-borrow/confirm-operation , method = com.dt.platform.eam.controller.AssetBorrowController.confirmOperation
url = /service-eam/eam-asset-borrow/revoke-operation , method = com.dt.platform.eam.controller.AssetBorrowController.revokeOperation
url = /service-eam/eam-asset-borrow/asset-return , method = com.dt.platform.eam.controller.AssetBorrowController.assetReturn
url = /service-eam/eam-asset-borrow-data/update , method = com.dt.platform.eam.controller.AssetBorrowDataController.update
url = /service-eam/eam-asset-borrow-data/save , method = com.dt.platform.eam.controller.AssetBorrowDataController.save
url = /service-eam/eam-asset-borrow-data/insert , method = com.dt.platform.eam.controller.AssetBorrowDataController.insert
url = /service-eam/eam-asset-borrow-data/get-by-ids , method = com.dt.platform.eam.controller.AssetBorrowDataController.getByIds
url = /service-eam/eam-asset-borrow-data/query-list , method = com.dt.platform.eam.controller.AssetBorrowDataController.queryList
url = /service-eam/eam-asset-borrow-data/get-by-id , method = com.dt.platform.eam.controller.AssetBorrowDataController.getById
url = /service-eam/eam-asset-borrow-data/delete , method = com.dt.platform.eam.controller.AssetBorrowDataController.deleteById
url = /service-eam/eam-asset-borrow-data/delete-by-ids , method = com.dt.platform.eam.controller.AssetBorrowDataController.deleteByIds
url = /service-eam/eam-asset-borrow-data/query-paged-list , method = com.dt.platform.eam.controller.AssetBorrowDataController.queryPagedList
url = /service-eam/eam-asset-borrow-data/export-excel , method = com.dt.platform.eam.controller.AssetBorrowDataController.exportExcel
url = /service-eam/eam-asset-borrow-data/export-excel-template , method = com.dt.platform.eam.controller.AssetBorrowDataController.exportExcelTemplate
url = /service-eam/eam-asset-borrow-data/import-excel , method = com.dt.platform.eam.controller.AssetBorrowDataController.importExcel
url = /service-eam/eam-asset-borrow-return/update , method = com.dt.platform.eam.controller.AssetBorrowReturnController.update
url = /service-eam/eam-asset-borrow-return/save , method = com.dt.platform.eam.controller.AssetBorrowReturnController.save
url = /service-eam/eam-asset-borrow-return/insert , method = com.dt.platform.eam.controller.AssetBorrowReturnController.insert
url = /service-eam/eam-asset-borrow-return/get-by-ids , method = com.dt.platform.eam.controller.AssetBorrowReturnController.getByIds
url = /service-eam/eam-asset-borrow-return/query-list , method = com.dt.platform.eam.controller.AssetBorrowReturnController.queryList
url = /service-eam/eam-asset-borrow-return/get-by-id , method = com.dt.platform.eam.controller.AssetBorrowReturnController.getById
url = /service-eam/eam-asset-borrow-return/delete , method = com.dt.platform.eam.controller.AssetBorrowReturnController.deleteById
url = /service-eam/eam-asset-borrow-return/delete-by-ids , method = com.dt.platform.eam.controller.AssetBorrowReturnController.deleteByIds
url = /service-eam/eam-asset-borrow-return/query-paged-list , method = com.dt.platform.eam.controller.AssetBorrowReturnController.queryPagedList
url = /service-eam/eam-asset-borrow-return/export-excel , method = com.dt.platform.eam.controller.AssetBorrowReturnController.exportExcel
url = /service-eam/eam-asset-borrow-return/export-excel-template , method = com.dt.platform.eam.controller.AssetBorrowReturnController.exportExcelTemplate
url = /service-eam/eam-asset-borrow-return/import-excel , method = com.dt.platform.eam.controller.AssetBorrowReturnController.importExcel
url = /service-eam/eam-asset-category/query-nodes , method = com.dt.platform.eam.controller.AssetCategoryController.queryNodes
url = /service-eam/eam-asset-category/query-nodes-by-code , method = com.dt.platform.eam.controller.AssetCategoryController.queryNodesByCode
url = /service-eam/eam-asset-category/query-catalog-attribute-by-asset-category , method = com.dt.platform.eam.controller.AssetCategoryController.queryCatalogAttributeByAssetCategory
url = /service-eam/eam-asset-collection/update , method = com.dt.platform.eam.controller.AssetCollectionController.update
url = /service-eam/eam-asset-collection/save , method = com.dt.platform.eam.controller.AssetCollectionController.save
url = /service-eam/eam-asset-collection/insert , method = com.dt.platform.eam.controller.AssetCollectionController.insert
url = /service-eam/eam-asset-collection/get-by-ids , method = com.dt.platform.eam.controller.AssetCollectionController.getByIds
url = /service-eam/eam-asset-collection/query-list , method = com.dt.platform.eam.controller.AssetCollectionController.queryList
url = /service-eam/eam-asset-collection/get-by-id , method = com.dt.platform.eam.controller.AssetCollectionController.getById
url = /service-eam/eam-asset-collection/delete , method = com.dt.platform.eam.controller.AssetCollectionController.deleteById
url = /service-eam/eam-asset-collection/delete-by-ids , method = com.dt.platform.eam.controller.AssetCollectionController.deleteByIds
url = /service-eam/eam-asset-collection/query-paged-list , method = com.dt.platform.eam.controller.AssetCollectionController.queryPagedList
url = /service-eam/eam-asset-collection/approve , method = com.dt.platform.eam.controller.AssetCollectionController.approve
url = /service-eam/eam-asset-collection/export-excel , method = com.dt.platform.eam.controller.AssetCollectionController.exportExcel
url = /service-eam/eam-asset-collection/export-excel-template , method = com.dt.platform.eam.controller.AssetCollectionController.exportExcelTemplate
url = /service-eam/eam-asset-collection/import-excel , method = com.dt.platform.eam.controller.AssetCollectionController.importExcel
url = /service-eam/eam-asset-collection/for-approval , method = com.dt.platform.eam.controller.AssetCollectionController.forApproval
url = /service-eam/eam-asset-collection/confirm-operation , method = com.dt.platform.eam.controller.AssetCollectionController.confirmOperation
url = /service-eam/eam-asset-collection/revoke-operation , method = com.dt.platform.eam.controller.AssetCollectionController.revokeOperation
url = /service-eam/eam-asset-collection-return/update , method = com.dt.platform.eam.controller.AssetCollectionReturnController.update
url = /service-eam/eam-asset-collection-return/save , method = com.dt.platform.eam.controller.AssetCollectionReturnController.save
url = /service-eam/eam-asset-collection-return/insert , method = com.dt.platform.eam.controller.AssetCollectionReturnController.insert
url = /service-eam/eam-asset-collection-return/get-by-ids , method = com.dt.platform.eam.controller.AssetCollectionReturnController.getByIds
url = /service-eam/eam-asset-collection-return/query-list , method = com.dt.platform.eam.controller.AssetCollectionReturnController.queryList
url = /service-eam/eam-asset-collection-return/get-by-id , method = com.dt.platform.eam.controller.AssetCollectionReturnController.getById
url = /service-eam/eam-asset-collection-return/delete , method = com.dt.platform.eam.controller.AssetCollectionReturnController.deleteById
url = /service-eam/eam-asset-collection-return/delete-by-ids , method = com.dt.platform.eam.controller.AssetCollectionReturnController.deleteByIds
url = /service-eam/eam-asset-collection-return/query-paged-list , method = com.dt.platform.eam.controller.AssetCollectionReturnController.queryPagedList
url = /service-eam/eam-asset-collection-return/approve , method = com.dt.platform.eam.controller.AssetCollectionReturnController.approve
url = /service-eam/eam-asset-collection-return/export-excel , method = com.dt.platform.eam.controller.AssetCollectionReturnController.exportExcel
url = /service-eam/eam-asset-collection-return/export-excel-template , method = com.dt.platform.eam.controller.AssetCollectionReturnController.exportExcelTemplate
url = /service-eam/eam-asset-collection-return/import-excel , method = com.dt.platform.eam.controller.AssetCollectionReturnController.importExcel
url = /service-eam/eam-asset-collection-return/for-approval , method = com.dt.platform.eam.controller.AssetCollectionReturnController.forApproval
url = /service-eam/eam-asset-collection-return/confirm-operation , method = com.dt.platform.eam.controller.AssetCollectionReturnController.confirmOperation
url = /service-eam/eam-asset-collection-return/revoke-operation , method = com.dt.platform.eam.controller.AssetCollectionReturnController.revokeOperation
url = /service-eam/eam-asset/update , method = com.dt.platform.eam.controller.AssetController.update
url = /service-eam/eam-asset/save , method = com.dt.platform.eam.controller.AssetController.save
url = /service-eam/eam-asset/insert , method = com.dt.platform.eam.controller.AssetController.insert
url = /service-eam/eam-asset/get-by-ids , method = com.dt.platform.eam.controller.AssetController.getByIds
url = /service-eam/eam-asset/query-list , method = com.dt.platform.eam.controller.AssetController.queryList
url = /service-eam/eam-asset/get-by-id , method = com.dt.platform.eam.controller.AssetController.getById
url = /service-eam/eam-asset/delete , method = com.dt.platform.eam.controller.AssetController.deleteById
url = /service-eam/eam-asset/delete-by-ids , method = com.dt.platform.eam.controller.AssetController.deleteByIds
url = /service-eam/eam-asset/query-paged-list , method = com.dt.platform.eam.controller.AssetController.queryPagedList
url = /service-eam/eam-asset/approve , method = com.dt.platform.eam.controller.AssetController.approve
url = /service-eam/eam-asset/export-excel , method = com.dt.platform.eam.controller.AssetController.exportExcel
url = /service-eam/eam-asset/export-excel-template , method = com.dt.platform.eam.controller.AssetController.exportExcelTemplate
url = /service-eam/eam-asset/import-excel , method = com.dt.platform.eam.controller.AssetController.importExcel
url = /service-eam/eam-asset/query-paged-list-by-select , method = com.dt.platform.eam.controller.AssetController.queryPagedListBySelect
url = /service-eam/eam-asset/query-paged-list-by-selected , method = com.dt.platform.eam.controller.AssetController.queryPagedListBySelected
url = /service-eam/eam-asset/for-batch-approval , method = com.dt.platform.eam.controller.AssetController.forBatchApproval
url = /service-eam/eam-asset/batch-confirm-operation , method = com.dt.platform.eam.controller.AssetController.batchConfirmOperation
url = /service-eam/eam-asset/query-asset-status-list , method = com.dt.platform.eam.controller.AssetController.queryAssetStatusList
url = /service-eam/eam-asset/query-asset-insert-approval-list , method = com.dt.platform.eam.controller.AssetController.queryAssetInsertApprovalList
url = /service-eam/eam-asset/batch-revoke-operation , method = com.dt.platform.eam.controller.AssetController.batchRevokeOperation
url = /service-eam/eam-asset-data-change/update , method = com.dt.platform.eam.controller.AssetDataChangeController.update
url = /service-eam/eam-asset-data-change/save , method = com.dt.platform.eam.controller.AssetDataChangeController.save
url = /service-eam/eam-asset-data-change/insert , method = com.dt.platform.eam.controller.AssetDataChangeController.insert
url = /service-eam/eam-asset-data-change/get-by-ids , method = com.dt.platform.eam.controller.AssetDataChangeController.getByIds
url = /service-eam/eam-asset-data-change/query-list , method = com.dt.platform.eam.controller.AssetDataChangeController.queryList
url = /service-eam/eam-asset-data-change/get-by-id , method = com.dt.platform.eam.controller.AssetDataChangeController.getById
url = /service-eam/eam-asset-data-change/delete , method = com.dt.platform.eam.controller.AssetDataChangeController.deleteById
url = /service-eam/eam-asset-data-change/delete-by-ids , method = com.dt.platform.eam.controller.AssetDataChangeController.deleteByIds
url = /service-eam/eam-asset-data-change/query-paged-list , method = com.dt.platform.eam.controller.AssetDataChangeController.queryPagedList
url = /service-eam/eam-asset-data-change/approve , method = com.dt.platform.eam.controller.AssetDataChangeController.approve
url = /service-eam/eam-asset-data-change/export-excel , method = com.dt.platform.eam.controller.AssetDataChangeController.exportExcel
url = /service-eam/eam-asset-data-change/export-excel-template , method = com.dt.platform.eam.controller.AssetDataChangeController.exportExcelTemplate
url = /service-eam/eam-asset-data-change/import-excel , method = com.dt.platform.eam.controller.AssetDataChangeController.importExcel
url = /service-eam/eam-asset-data-change/for-approval , method = com.dt.platform.eam.controller.AssetDataChangeController.forApproval
url = /service-eam/eam-asset-data-change/confirm-operation , method = com.dt.platform.eam.controller.AssetDataChangeController.confirmOperation
url = /service-eam/eam-asset-data-change/revoke-operation , method = com.dt.platform.eam.controller.AssetDataChangeController.revokeOperation
url = /service-eam/eam-asset-data-change/query-data-change-dimension-by-change-type , method = com.dt.platform.eam.controller.AssetDataChangeController.queryDataChangeDimensionByChangeType
url = /service-eam/eam-asset-data/import_asset , method = com.dt.platform.eam.controller.AssetDataController.importAsset
url = /service-eam/eam-asset-data/export-asset , method = com.dt.platform.eam.controller.AssetDataController.exportAsset
url = /service-eam/eam-asset-data/export-asset-by-ids , method = com.dt.platform.eam.controller.AssetDataController.exportAssetByIds
url = /service-eam/eam-asset-handle/update , method = com.dt.platform.eam.controller.AssetHandleController.update
url = /service-eam/eam-asset-handle/save , method = com.dt.platform.eam.controller.AssetHandleController.save
url = /service-eam/eam-asset-handle/insert , method = com.dt.platform.eam.controller.AssetHandleController.insert
url = /service-eam/eam-asset-handle/get-by-ids , method = com.dt.platform.eam.controller.AssetHandleController.getByIds
url = /service-eam/eam-asset-handle/query-list , method = com.dt.platform.eam.controller.AssetHandleController.queryList
url = /service-eam/eam-asset-handle/get-by-id , method = com.dt.platform.eam.controller.AssetHandleController.getById
url = /service-eam/eam-asset-handle/delete , method = com.dt.platform.eam.controller.AssetHandleController.deleteById
url = /service-eam/eam-asset-handle/delete-by-ids , method = com.dt.platform.eam.controller.AssetHandleController.deleteByIds
url = /service-eam/eam-asset-handle/query-paged-list , method = com.dt.platform.eam.controller.AssetHandleController.queryPagedList
url = /service-eam/eam-asset-handle/export-excel , method = com.dt.platform.eam.controller.AssetHandleController.exportExcel
url = /service-eam/eam-asset-handle/export-excel-template , method = com.dt.platform.eam.controller.AssetHandleController.exportExcelTemplate
url = /service-eam/eam-asset-handle/import-excel , method = com.dt.platform.eam.controller.AssetHandleController.importExcel
url = /service-eam/eam-asset-item/update , method = com.dt.platform.eam.controller.AssetItemController.update
url = /service-eam/eam-asset-item/save , method = com.dt.platform.eam.controller.AssetItemController.save
url = /service-eam/eam-asset-item/insert , method = com.dt.platform.eam.controller.AssetItemController.insert
url = /service-eam/eam-asset-item/get-by-ids , method = com.dt.platform.eam.controller.AssetItemController.getByIds
url = /service-eam/eam-asset-item/query-list , method = com.dt.platform.eam.controller.AssetItemController.queryList
url = /service-eam/eam-asset-item/get-by-id , method = com.dt.platform.eam.controller.AssetItemController.getById
url = /service-eam/eam-asset-item/delete , method = com.dt.platform.eam.controller.AssetItemController.deleteById
url = /service-eam/eam-asset-item/delete-by-ids , method = com.dt.platform.eam.controller.AssetItemController.deleteByIds
url = /service-eam/eam-asset-item/query-paged-list , method = com.dt.platform.eam.controller.AssetItemController.queryPagedList
url = /service-eam/eam-asset-item/export-excel , method = com.dt.platform.eam.controller.AssetItemController.exportExcel
url = /service-eam/eam-asset-item/export-excel-template , method = com.dt.platform.eam.controller.AssetItemController.exportExcelTemplate
url = /service-eam/eam-asset-item/import-excel , method = com.dt.platform.eam.controller.AssetItemController.importExcel
url = /service-eam/eam-asset-process-record/update , method = com.dt.platform.eam.controller.AssetProcessRecordController.update
url = /service-eam/eam-asset-process-record/save , method = com.dt.platform.eam.controller.AssetProcessRecordController.save
url = /service-eam/eam-asset-process-record/insert , method = com.dt.platform.eam.controller.AssetProcessRecordController.insert
url = /service-eam/eam-asset-process-record/get-by-ids , method = com.dt.platform.eam.controller.AssetProcessRecordController.getByIds
url = /service-eam/eam-asset-process-record/query-list , method = com.dt.platform.eam.controller.AssetProcessRecordController.queryList
url = /service-eam/eam-asset-process-record/get-by-id , method = com.dt.platform.eam.controller.AssetProcessRecordController.getById
url = /service-eam/eam-asset-process-record/delete , method = com.dt.platform.eam.controller.AssetProcessRecordController.deleteById
url = /service-eam/eam-asset-process-record/delete-by-ids , method = com.dt.platform.eam.controller.AssetProcessRecordController.deleteByIds
url = /service-eam/eam-asset-process-record/query-paged-list , method = com.dt.platform.eam.controller.AssetProcessRecordController.queryPagedList
url = /service-eam/eam-asset-process-record/export-excel , method = com.dt.platform.eam.controller.AssetProcessRecordController.exportExcel
url = /service-eam/eam-asset-process-record/export-excel-template , method = com.dt.platform.eam.controller.AssetProcessRecordController.exportExcelTemplate
url = /service-eam/eam-asset-process-record/import-excel , method = com.dt.platform.eam.controller.AssetProcessRecordController.importExcel
url = /service-eam/eam-asset-repair/update , method = com.dt.platform.eam.controller.AssetRepairController.update
url = /service-eam/eam-asset-repair/save , method = com.dt.platform.eam.controller.AssetRepairController.save
url = /service-eam/eam-asset-repair/insert , method = com.dt.platform.eam.controller.AssetRepairController.insert
url = /service-eam/eam-asset-repair/get-by-ids , method = com.dt.platform.eam.controller.AssetRepairController.getByIds
url = /service-eam/eam-asset-repair/query-list , method = com.dt.platform.eam.controller.AssetRepairController.queryList
url = /service-eam/eam-asset-repair/get-by-id , method = com.dt.platform.eam.controller.AssetRepairController.getById
url = /service-eam/eam-asset-repair/delete , method = com.dt.platform.eam.controller.AssetRepairController.deleteById
url = /service-eam/eam-asset-repair/delete-by-ids , method = com.dt.platform.eam.controller.AssetRepairController.deleteByIds
url = /service-eam/eam-asset-repair/query-paged-list , method = com.dt.platform.eam.controller.AssetRepairController.queryPagedList
url = /service-eam/eam-asset-repair/approve , method = com.dt.platform.eam.controller.AssetRepairController.approve
url = /service-eam/eam-asset-repair/export-excel , method = com.dt.platform.eam.controller.AssetRepairController.exportExcel
url = /service-eam/eam-asset-repair/export-excel-template , method = com.dt.platform.eam.controller.AssetRepairController.exportExcelTemplate
url = /service-eam/eam-asset-repair/import-excel , method = com.dt.platform.eam.controller.AssetRepairController.importExcel
url = /service-eam/eam-asset-repair/for-approval , method = com.dt.platform.eam.controller.AssetRepairController.forApproval
url = /service-eam/eam-asset-repair/confirm-operation , method = com.dt.platform.eam.controller.AssetRepairController.confirmOperation
url = /service-eam/eam-asset-repair/revoke-operation , method = com.dt.platform.eam.controller.AssetRepairController.revokeOperation
url = /service-eam/eam-asset-repair/finish-repair , method = com.dt.platform.eam.controller.AssetRepairController.finishRepair
url = /service-eam/eam-asset-report/query-organization-data , method = com.dt.platform.eam.controller.AssetReportController.queryOrganizationData
url = /service-eam/eam-asset-report/query-category-data , method = com.dt.platform.eam.controller.AssetReportController.queryCategoryData
url = /service-eam/eam-asset-scrap/update , method = com.dt.platform.eam.controller.AssetScrapController.update
url = /service-eam/eam-asset-scrap/save , method = com.dt.platform.eam.controller.AssetScrapController.save
url = /service-eam/eam-asset-scrap/insert , method = com.dt.platform.eam.controller.AssetScrapController.insert
url = /service-eam/eam-asset-scrap/get-by-ids , method = com.dt.platform.eam.controller.AssetScrapController.getByIds
url = /service-eam/eam-asset-scrap/query-list , method = com.dt.platform.eam.controller.AssetScrapController.queryList
url = /service-eam/eam-asset-scrap/get-by-id , method = com.dt.platform.eam.controller.AssetScrapController.getById
url = /service-eam/eam-asset-scrap/delete , method = com.dt.platform.eam.controller.AssetScrapController.deleteById
url = /service-eam/eam-asset-scrap/delete-by-ids , method = com.dt.platform.eam.controller.AssetScrapController.deleteByIds
url = /service-eam/eam-asset-scrap/query-paged-list , method = com.dt.platform.eam.controller.AssetScrapController.queryPagedList
url = /service-eam/eam-asset-scrap/approve , method = com.dt.platform.eam.controller.AssetScrapController.approve
url = /service-eam/eam-asset-scrap/export-excel , method = com.dt.platform.eam.controller.AssetScrapController.exportExcel
url = /service-eam/eam-asset-scrap/export-excel-template , method = com.dt.platform.eam.controller.AssetScrapController.exportExcelTemplate
url = /service-eam/eam-asset-scrap/import-excel , method = com.dt.platform.eam.controller.AssetScrapController.importExcel
url = /service-eam/eam-asset-scrap/for-approval , method = com.dt.platform.eam.controller.AssetScrapController.forApproval
url = /service-eam/eam-asset-scrap/confirm-operation , method = com.dt.platform.eam.controller.AssetScrapController.confirmOperation
url = /service-eam/eam-asset-scrap/revoke-operation , method = com.dt.platform.eam.controller.AssetScrapController.revokeOperation
url = /service-eam/eam-asset-selected-data/update , method = com.dt.platform.eam.controller.AssetSelectedDataController.update
url = /service-eam/eam-asset-selected-data/save , method = com.dt.platform.eam.controller.AssetSelectedDataController.save
url = /service-eam/eam-asset-selected-data/insert , method = com.dt.platform.eam.controller.AssetSelectedDataController.insert
url = /service-eam/eam-asset-selected-data/query-list , method = com.dt.platform.eam.controller.AssetSelectedDataController.queryList
url = /service-eam/eam-asset-selected-data/get-by-id , method = com.dt.platform.eam.controller.AssetSelectedDataController.getById
url = /service-eam/eam-asset-selected-data/delete , method = com.dt.platform.eam.controller.AssetSelectedDataController.deleteById
url = /service-eam/eam-asset-selected-data/delete-by-ids , method = com.dt.platform.eam.controller.AssetSelectedDataController.deleteByIds
url = /service-eam/eam-asset-selected-data/query-paged-list , method = com.dt.platform.eam.controller.AssetSelectedDataController.queryPagedList
url = /service-eam/eam-asset-selected-data/export-excel , method = com.dt.platform.eam.controller.AssetSelectedDataController.exportExcel
url = /service-eam/eam-asset-selected-data/export-excel-template , method = com.dt.platform.eam.controller.AssetSelectedDataController.exportExcelTemplate
url = /service-eam/eam-asset-selected-data/import-excel , method = com.dt.platform.eam.controller.AssetSelectedDataController.importExcel
url = /service-eam/eam-asset-selected-data/save-by-ids , method = com.dt.platform.eam.controller.AssetSelectedDataController.saveByIds
url = /service-eam/eam-asset-tranfer/update , method = com.dt.platform.eam.controller.AssetTranferController.update
url = /service-eam/eam-asset-tranfer/save , method = com.dt.platform.eam.controller.AssetTranferController.save
url = /service-eam/eam-asset-tranfer/insert , method = com.dt.platform.eam.controller.AssetTranferController.insert
url = /service-eam/eam-asset-tranfer/get-by-ids , method = com.dt.platform.eam.controller.AssetTranferController.getByIds
url = /service-eam/eam-asset-tranfer/query-list , method = com.dt.platform.eam.controller.AssetTranferController.queryList
url = /service-eam/eam-asset-tranfer/get-by-id , method = com.dt.platform.eam.controller.AssetTranferController.getById
url = /service-eam/eam-asset-tranfer/delete , method = com.dt.platform.eam.controller.AssetTranferController.deleteById
url = /service-eam/eam-asset-tranfer/delete-by-ids , method = com.dt.platform.eam.controller.AssetTranferController.deleteByIds
url = /service-eam/eam-asset-tranfer/query-paged-list , method = com.dt.platform.eam.controller.AssetTranferController.queryPagedList
url = /service-eam/eam-asset-tranfer/approve , method = com.dt.platform.eam.controller.AssetTranferController.approve
url = /service-eam/eam-asset-tranfer/export-excel , method = com.dt.platform.eam.controller.AssetTranferController.exportExcel
url = /service-eam/eam-asset-tranfer/export-excel-template , method = com.dt.platform.eam.controller.AssetTranferController.exportExcelTemplate
url = /service-eam/eam-asset-tranfer/import-excel , method = com.dt.platform.eam.controller.AssetTranferController.importExcel
url = /service-eam/eam-asset-tranfer/for-approval , method = com.dt.platform.eam.controller.AssetTranferController.forApproval
url = /service-eam/eam-asset-tranfer/confirm-operation , method = com.dt.platform.eam.controller.AssetTranferController.confirmOperation
url = /service-eam/eam-asset-tranfer/revoke-operation , method = com.dt.platform.eam.controller.AssetTranferController.revokeOperation
url = /service-eam/rfid-base-station/update , method = com.dt.platform.eam.controller.BaseStationController.update
url = /service-eam/rfid-base-station/save , method = com.dt.platform.eam.controller.BaseStationController.save
url = /service-eam/rfid-base-station/insert , method = com.dt.platform.eam.controller.BaseStationController.insert
url = /service-eam/rfid-base-station/get-by-ids , method = com.dt.platform.eam.controller.BaseStationController.getByIds
url = /service-eam/rfid-base-station/query-list , method = com.dt.platform.eam.controller.BaseStationController.queryList
url = /service-eam/rfid-base-station/get-by-id , method = com.dt.platform.eam.controller.BaseStationController.getById
url = /service-eam/rfid-base-station/delete , method = com.dt.platform.eam.controller.BaseStationController.deleteById
url = /service-eam/rfid-base-station/delete-by-ids , method = com.dt.platform.eam.controller.BaseStationController.deleteByIds
url = /service-eam/rfid-base-station/query-paged-list , method = com.dt.platform.eam.controller.BaseStationController.queryPagedList
url = /service-eam/rfid-base-station/export-excel , method = com.dt.platform.eam.controller.BaseStationController.exportExcel
url = /service-eam/rfid-base-station/export-excel-template , method = com.dt.platform.eam.controller.BaseStationController.exportExcelTemplate
url = /service-eam/rfid-base-station/import-excel , method = com.dt.platform.eam.controller.BaseStationController.importExcel
url = /service-eam/eam-brand/update , method = com.dt.platform.eam.controller.BrandController.update
url = /service-eam/eam-brand/save , method = com.dt.platform.eam.controller.BrandController.save
url = /service-eam/eam-brand/insert , method = com.dt.platform.eam.controller.BrandController.insert
url = /service-eam/eam-brand/get-by-ids , method = com.dt.platform.eam.controller.BrandController.getByIds
url = /service-eam/eam-brand/query-list , method = com.dt.platform.eam.controller.BrandController.queryList
url = /service-eam/eam-brand/get-by-id , method = com.dt.platform.eam.controller.BrandController.getById
url = /service-eam/eam-brand/delete , method = com.dt.platform.eam.controller.BrandController.deleteById
url = /service-eam/eam-brand/delete-by-ids , method = com.dt.platform.eam.controller.BrandController.deleteByIds
url = /service-eam/eam-brand/query-paged-list , method = com.dt.platform.eam.controller.BrandController.queryPagedList
url = /service-eam/eam-brand/export-excel , method = com.dt.platform.eam.controller.BrandController.exportExcel
url = /service-eam/eam-brand/export-excel-template , method = com.dt.platform.eam.controller.BrandController.exportExcelTemplate
url = /service-eam/eam-brand/import-excel , method = com.dt.platform.eam.controller.BrandController.importExcel
url = /service-eam/eam-brand-demo/update , method = com.dt.platform.eam.controller.BrandDemoController.update
url = /service-eam/eam-brand-demo/save , method = com.dt.platform.eam.controller.BrandDemoController.save
url = /service-eam/eam-brand-demo/insert , method = com.dt.platform.eam.controller.BrandDemoController.insert
url = /service-eam/eam-brand-demo/get-by-ids , method = com.dt.platform.eam.controller.BrandDemoController.getByIds
url = /service-eam/eam-brand-demo/query-list , method = com.dt.platform.eam.controller.BrandDemoController.queryList
url = /service-eam/eam-brand-demo/get-by-id , method = com.dt.platform.eam.controller.BrandDemoController.getById
url = /service-eam/eam-brand-demo/delete , method = com.dt.platform.eam.controller.BrandDemoController.deleteById
url = /service-eam/eam-brand-demo/delete-by-ids , method = com.dt.platform.eam.controller.BrandDemoController.deleteByIds
url = /service-eam/eam-brand-demo/query-paged-list , method = com.dt.platform.eam.controller.BrandDemoController.queryPagedList
url = /service-eam/eam-brand-demo/export-excel , method = com.dt.platform.eam.controller.BrandDemoController.exportExcel
url = /service-eam/eam-brand-demo/export-excel-template , method = com.dt.platform.eam.controller.BrandDemoController.exportExcelTemplate
url = /service-eam/eam-brand-demo/import-excel , method = com.dt.platform.eam.controller.BrandDemoController.importExcel
url = /service-eam/eam-category/update , method = com.dt.platform.eam.controller.CategoryController.update
url = /service-eam/eam-category/save , method = com.dt.platform.eam.controller.CategoryController.save
url = /service-eam/eam-category/insert , method = com.dt.platform.eam.controller.CategoryController.insert
url = /service-eam/eam-category/get-by-ids , method = com.dt.platform.eam.controller.CategoryController.getByIds
url = /service-eam/eam-category/query-list , method = com.dt.platform.eam.controller.CategoryController.queryList
url = /service-eam/eam-category/get-by-id , method = com.dt.platform.eam.controller.CategoryController.getById
url = /service-eam/eam-category/delete , method = com.dt.platform.eam.controller.CategoryController.deleteById
url = /service-eam/eam-category/delete-by-ids , method = com.dt.platform.eam.controller.CategoryController.deleteByIds
url = /service-eam/eam-category/query-paged-list , method = com.dt.platform.eam.controller.CategoryController.queryPagedList
url = /service-eam/eam-category/export-excel , method = com.dt.platform.eam.controller.CategoryController.exportExcel
url = /service-eam/eam-category/export-excel-template , method = com.dt.platform.eam.controller.CategoryController.exportExcelTemplate
url = /service-eam/eam-category/import-excel , method = com.dt.platform.eam.controller.CategoryController.importExcel
url = /service-eam/eam-category-finance/update , method = com.dt.platform.eam.controller.CategoryFinanceController.update
url = /service-eam/eam-category-finance/save , method = com.dt.platform.eam.controller.CategoryFinanceController.save
url = /service-eam/eam-category-finance/insert , method = com.dt.platform.eam.controller.CategoryFinanceController.insert
url = /service-eam/eam-category-finance/get-by-ids , method = com.dt.platform.eam.controller.CategoryFinanceController.getByIds
url = /service-eam/eam-category-finance/query-list , method = com.dt.platform.eam.controller.CategoryFinanceController.queryList
url = /service-eam/eam-category-finance/get-by-id , method = com.dt.platform.eam.controller.CategoryFinanceController.getById
url = /service-eam/eam-category-finance/delete , method = com.dt.platform.eam.controller.CategoryFinanceController.deleteById
url = /service-eam/eam-category-finance/delete-by-ids , method = com.dt.platform.eam.controller.CategoryFinanceController.deleteByIds
url = /service-eam/eam-category-finance/query-paged-list , method = com.dt.platform.eam.controller.CategoryFinanceController.queryPagedList
url = /service-eam/eam-category-finance/export-excel , method = com.dt.platform.eam.controller.CategoryFinanceController.exportExcel
url = /service-eam/eam-category-finance/export-excel-template , method = com.dt.platform.eam.controller.CategoryFinanceController.exportExcelTemplate
url = /service-eam/eam-category-finance/import-excel , method = com.dt.platform.eam.controller.CategoryFinanceController.importExcel
url = /service-eam/eam-goods/update , method = com.dt.platform.eam.controller.GoodsController.update
url = /service-eam/eam-goods/save , method = com.dt.platform.eam.controller.GoodsController.save
url = /service-eam/eam-goods/insert , method = com.dt.platform.eam.controller.GoodsController.insert
url = /service-eam/eam-goods/get-by-ids , method = com.dt.platform.eam.controller.GoodsController.getByIds
url = /service-eam/eam-goods/query-list , method = com.dt.platform.eam.controller.GoodsController.queryList
url = /service-eam/eam-goods/get-by-id , method = com.dt.platform.eam.controller.GoodsController.getById
url = /service-eam/eam-goods/delete , method = com.dt.platform.eam.controller.GoodsController.deleteById
url = /service-eam/eam-goods/delete-by-ids , method = com.dt.platform.eam.controller.GoodsController.deleteByIds
url = /service-eam/eam-goods/query-paged-list , method = com.dt.platform.eam.controller.GoodsController.queryPagedList
url = /service-eam/eam-goods/export-excel , method = com.dt.platform.eam.controller.GoodsController.exportExcel
url = /service-eam/eam-goods/export-excel-template , method = com.dt.platform.eam.controller.GoodsController.exportExcelTemplate
url = /service-eam/eam-goods/import-excel , method = com.dt.platform.eam.controller.GoodsController.importExcel
url = /service-eam/eam-inventory/update , method = com.dt.platform.eam.controller.InventoryController.update
url = /service-eam/eam-inventory/save , method = com.dt.platform.eam.controller.InventoryController.save
url = /service-eam/eam-inventory/insert , method = com.dt.platform.eam.controller.InventoryController.insert
url = /service-eam/eam-inventory/get-by-ids , method = com.dt.platform.eam.controller.InventoryController.getByIds
url = /service-eam/eam-inventory/query-list , method = com.dt.platform.eam.controller.InventoryController.queryList
url = /service-eam/eam-inventory/get-by-id , method = com.dt.platform.eam.controller.InventoryController.getById
url = /service-eam/eam-inventory/delete , method = com.dt.platform.eam.controller.InventoryController.deleteById
url = /service-eam/eam-inventory/delete-by-ids , method = com.dt.platform.eam.controller.InventoryController.deleteByIds
url = /service-eam/eam-inventory/query-paged-list , method = com.dt.platform.eam.controller.InventoryController.queryPagedList
url = /service-eam/eam-inventory/export-excel , method = com.dt.platform.eam.controller.InventoryController.exportExcel
url = /service-eam/eam-inventory/export-excel-template , method = com.dt.platform.eam.controller.InventoryController.exportExcelTemplate
url = /service-eam/eam-inventory/import-excel , method = com.dt.platform.eam.controller.InventoryController.importExcel
url = /service-eam/eam-inventory-user/update , method = com.dt.platform.eam.controller.InventoryUserController.update
url = /service-eam/eam-inventory-user/save , method = com.dt.platform.eam.controller.InventoryUserController.save
url = /service-eam/eam-inventory-user/insert , method = com.dt.platform.eam.controller.InventoryUserController.insert
url = /service-eam/eam-inventory-user/get-by-ids , method = com.dt.platform.eam.controller.InventoryUserController.getByIds
url = /service-eam/eam-inventory-user/query-list , method = com.dt.platform.eam.controller.InventoryUserController.queryList
url = /service-eam/eam-inventory-user/get-by-id , method = com.dt.platform.eam.controller.InventoryUserController.getById
url = /service-eam/eam-inventory-user/delete , method = com.dt.platform.eam.controller.InventoryUserController.deleteById
url = /service-eam/eam-inventory-user/delete-by-ids , method = com.dt.platform.eam.controller.InventoryUserController.deleteByIds
url = /service-eam/eam-inventory-user/query-paged-list , method = com.dt.platform.eam.controller.InventoryUserController.queryPagedList
url = /service-eam/eam-inventory-user/export-excel , method = com.dt.platform.eam.controller.InventoryUserController.exportExcel
url = /service-eam/eam-inventory-user/export-excel-template , method = com.dt.platform.eam.controller.InventoryUserController.exportExcelTemplate
url = /service-eam/eam-inventory-user/import-excel , method = com.dt.platform.eam.controller.InventoryUserController.importExcel
url = /service-eam/eam-maintainer/update , method = com.dt.platform.eam.controller.MaintainerController.update
url = /service-eam/eam-maintainer/save , method = com.dt.platform.eam.controller.MaintainerController.save
url = /service-eam/eam-maintainer/insert , method = com.dt.platform.eam.controller.MaintainerController.insert
url = /service-eam/eam-maintainer/get-by-ids , method = com.dt.platform.eam.controller.MaintainerController.getByIds
url = /service-eam/eam-maintainer/query-list , method = com.dt.platform.eam.controller.MaintainerController.queryList
url = /service-eam/eam-maintainer/get-by-id , method = com.dt.platform.eam.controller.MaintainerController.getById
url = /service-eam/eam-maintainer/delete , method = com.dt.platform.eam.controller.MaintainerController.deleteById
url = /service-eam/eam-maintainer/delete-by-ids , method = com.dt.platform.eam.controller.MaintainerController.deleteByIds
url = /service-eam/eam-maintainer/query-paged-list , method = com.dt.platform.eam.controller.MaintainerController.queryPagedList
url = /service-eam/eam-maintainer/export-excel , method = com.dt.platform.eam.controller.MaintainerController.exportExcel
url = /service-eam/eam-maintainer/export-excel-template , method = com.dt.platform.eam.controller.MaintainerController.exportExcelTemplate
url = /service-eam/eam-maintainer/import-excel , method = com.dt.platform.eam.controller.MaintainerController.importExcel
url = /service-eam/eam-manufacturer/update , method = com.dt.platform.eam.controller.ManufacturerController.update
url = /service-eam/eam-manufacturer/save , method = com.dt.platform.eam.controller.ManufacturerController.save
url = /service-eam/eam-manufacturer/insert , method = com.dt.platform.eam.controller.ManufacturerController.insert
url = /service-eam/eam-manufacturer/get-by-ids , method = com.dt.platform.eam.controller.ManufacturerController.getByIds
url = /service-eam/eam-manufacturer/query-list , method = com.dt.platform.eam.controller.ManufacturerController.queryList
url = /service-eam/eam-manufacturer/get-by-id , method = com.dt.platform.eam.controller.ManufacturerController.getById
url = /service-eam/eam-manufacturer/delete , method = com.dt.platform.eam.controller.ManufacturerController.deleteById
url = /service-eam/eam-manufacturer/delete-by-ids , method = com.dt.platform.eam.controller.ManufacturerController.deleteByIds
url = /service-eam/eam-manufacturer/query-paged-list , method = com.dt.platform.eam.controller.ManufacturerController.queryPagedList
url = /service-eam/eam-manufacturer/export-excel , method = com.dt.platform.eam.controller.ManufacturerController.exportExcel
url = /service-eam/eam-manufacturer/export-excel-template , method = com.dt.platform.eam.controller.ManufacturerController.exportExcelTemplate
url = /service-eam/eam-manufacturer/import-excel , method = com.dt.platform.eam.controller.ManufacturerController.importExcel
url = /service-eam/eam-operate/update , method = com.dt.platform.eam.controller.OperateController.update
url = /service-eam/eam-operate/save , method = com.dt.platform.eam.controller.OperateController.save
url = /service-eam/eam-operate/insert , method = com.dt.platform.eam.controller.OperateController.insert
url = /service-eam/eam-operate/get-by-ids , method = com.dt.platform.eam.controller.OperateController.getByIds
url = /service-eam/eam-operate/query-list , method = com.dt.platform.eam.controller.OperateController.queryList
url = /service-eam/eam-operate/get-by-id , method = com.dt.platform.eam.controller.OperateController.getById
url = /service-eam/eam-operate/delete , method = com.dt.platform.eam.controller.OperateController.deleteById
url = /service-eam/eam-operate/delete-by-ids , method = com.dt.platform.eam.controller.OperateController.deleteByIds
url = /service-eam/eam-operate/query-paged-list , method = com.dt.platform.eam.controller.OperateController.queryPagedList
url = /service-eam/eam-operate/export-excel , method = com.dt.platform.eam.controller.OperateController.exportExcel
url = /service-eam/eam-operate/export-excel-template , method = com.dt.platform.eam.controller.OperateController.exportExcelTemplate
url = /service-eam/eam-operate/import-excel , method = com.dt.platform.eam.controller.OperateController.importExcel
url = /service-eam/eam-operate/approval-required , method = com.dt.platform.eam.controller.OperateController.approvalRequired
url = /service-eam/eam-operate/query-asset-direct-update-mode , method = com.dt.platform.eam.controller.OperateController.queryAssetDirectUpdateMode
url = /service-eam/eam-operate/query-asset-status-column-disable , method = com.dt.platform.eam.controller.OperateController.queryAssetStatusColumnDisable
url = /service-eam/eam-position/update , method = com.dt.platform.eam.controller.PositionController.update
url = /service-eam/eam-position/save , method = com.dt.platform.eam.controller.PositionController.save
url = /service-eam/eam-position/insert , method = com.dt.platform.eam.controller.PositionController.insert
url = /service-eam/eam-position/get-by-ids , method = com.dt.platform.eam.controller.PositionController.getByIds
url = /service-eam/eam-position/query-list , method = com.dt.platform.eam.controller.PositionController.queryList
url = /service-eam/eam-position/get-by-id , method = com.dt.platform.eam.controller.PositionController.getById
url = /service-eam/eam-position/delete , method = com.dt.platform.eam.controller.PositionController.deleteById
url = /service-eam/eam-position/delete-by-ids , method = com.dt.platform.eam.controller.PositionController.deleteByIds
url = /service-eam/eam-position/query-paged-list , method = com.dt.platform.eam.controller.PositionController.queryPagedList
url = /service-eam/eam-position/export-excel , method = com.dt.platform.eam.controller.PositionController.exportExcel
url = /service-eam/eam-position/export-excel-template , method = com.dt.platform.eam.controller.PositionController.exportExcelTemplate
url = /service-eam/eam-position/import-excel , method = com.dt.platform.eam.controller.PositionController.importExcel
url = /service-eam/eam-residual-strategy/update , method = com.dt.platform.eam.controller.ResidualStrategyController.update
url = /service-eam/eam-residual-strategy/save , method = com.dt.platform.eam.controller.ResidualStrategyController.save
url = /service-eam/eam-residual-strategy/insert , method = com.dt.platform.eam.controller.ResidualStrategyController.insert
url = /service-eam/eam-residual-strategy/get-by-ids , method = com.dt.platform.eam.controller.ResidualStrategyController.getByIds
url = /service-eam/eam-residual-strategy/query-list , method = com.dt.platform.eam.controller.ResidualStrategyController.queryList
url = /service-eam/eam-residual-strategy/get-by-id , method = com.dt.platform.eam.controller.ResidualStrategyController.getById
url = /service-eam/eam-residual-strategy/delete , method = com.dt.platform.eam.controller.ResidualStrategyController.deleteById
url = /service-eam/eam-residual-strategy/delete-by-ids , method = com.dt.platform.eam.controller.ResidualStrategyController.deleteByIds
url = /service-eam/eam-residual-strategy/query-paged-list , method = com.dt.platform.eam.controller.ResidualStrategyController.queryPagedList
url = /service-eam/eam-residual-strategy/export-excel , method = com.dt.platform.eam.controller.ResidualStrategyController.exportExcel
url = /service-eam/eam-residual-strategy/export-excel-template , method = com.dt.platform.eam.controller.ResidualStrategyController.exportExcelTemplate
url = /service-eam/eam-residual-strategy/import-excel , method = com.dt.platform.eam.controller.ResidualStrategyController.importExcel
url = /service-eam/eam-safetylevel/update , method = com.dt.platform.eam.controller.SafetylevelController.update
url = /service-eam/eam-safetylevel/save , method = com.dt.platform.eam.controller.SafetylevelController.save
url = /service-eam/eam-safetylevel/insert , method = com.dt.platform.eam.controller.SafetylevelController.insert
url = /service-eam/eam-safetylevel/get-by-ids , method = com.dt.platform.eam.controller.SafetylevelController.getByIds
url = /service-eam/eam-safetylevel/query-list , method = com.dt.platform.eam.controller.SafetylevelController.queryList
url = /service-eam/eam-safetylevel/get-by-id , method = com.dt.platform.eam.controller.SafetylevelController.getById
url = /service-eam/eam-safetylevel/delete , method = com.dt.platform.eam.controller.SafetylevelController.deleteById
url = /service-eam/eam-safetylevel/delete-by-ids , method = com.dt.platform.eam.controller.SafetylevelController.deleteByIds
url = /service-eam/eam-safetylevel/query-paged-list , method = com.dt.platform.eam.controller.SafetylevelController.queryPagedList
url = /service-eam/eam-safetylevel/export-excel , method = com.dt.platform.eam.controller.SafetylevelController.exportExcel
url = /service-eam/eam-safetylevel/export-excel-template , method = com.dt.platform.eam.controller.SafetylevelController.exportExcelTemplate
url = /service-eam/eam-safetylevel/import-excel , method = com.dt.platform.eam.controller.SafetylevelController.importExcel
url = /service-eam/eam-supplier/update , method = com.dt.platform.eam.controller.SupplierController.update
url = /service-eam/eam-supplier/save , method = com.dt.platform.eam.controller.SupplierController.save
url = /service-eam/eam-supplier/insert , method = com.dt.platform.eam.controller.SupplierController.insert
url = /service-eam/eam-supplier/get-by-ids , method = com.dt.platform.eam.controller.SupplierController.getByIds
url = /service-eam/eam-supplier/query-list , method = com.dt.platform.eam.controller.SupplierController.queryList
url = /service-eam/eam-supplier/get-by-id , method = com.dt.platform.eam.controller.SupplierController.getById
url = /service-eam/eam-supplier/delete , method = com.dt.platform.eam.controller.SupplierController.deleteById
url = /service-eam/eam-supplier/delete-by-ids , method = com.dt.platform.eam.controller.SupplierController.deleteByIds
url = /service-eam/eam-supplier/query-paged-list , method = com.dt.platform.eam.controller.SupplierController.queryPagedList
url = /service-eam/eam-supplier/export-excel , method = com.dt.platform.eam.controller.SupplierController.exportExcel
url = /service-eam/eam-supplier/export-excel-template , method = com.dt.platform.eam.controller.SupplierController.exportExcelTemplate
url = /service-eam/eam-supplier/import-excel , method = com.dt.platform.eam.controller.SupplierController.importExcel
url = /service-eam/eam-tpl-file/update , method = com.dt.platform.eam.controller.TplFileController.update
url = /service-eam/eam-tpl-file/save , method = com.dt.platform.eam.controller.TplFileController.save
url = /service-eam/eam-tpl-file/insert , method = com.dt.platform.eam.controller.TplFileController.insert
url = /service-eam/eam-tpl-file/get-by-ids , method = com.dt.platform.eam.controller.TplFileController.getByIds
url = /service-eam/eam-tpl-file/query-list , method = com.dt.platform.eam.controller.TplFileController.queryList
url = /service-eam/eam-tpl-file/get-by-id , method = com.dt.platform.eam.controller.TplFileController.getById
url = /service-eam/eam-tpl-file/delete , method = com.dt.platform.eam.controller.TplFileController.deleteById
url = /service-eam/eam-tpl-file/delete-by-ids , method = com.dt.platform.eam.controller.TplFileController.deleteByIds
url = /service-eam/eam-tpl-file/query-paged-list , method = com.dt.platform.eam.controller.TplFileController.queryPagedList
url = /service-eam/eam-tpl-file/export-excel , method = com.dt.platform.eam.controller.TplFileController.exportExcel
url = /service-eam/eam-tpl-file/export-excel-template , method = com.dt.platform.eam.controller.TplFileController.exportExcelTemplate
url = /service-eam/eam-tpl-file/import-excel , method = com.dt.platform.eam.controller.TplFileController.importExcel
url = /service-eam/eam-warehouse/update , method = com.dt.platform.eam.controller.WarehouseController.update
url = /service-eam/eam-warehouse/save , method = com.dt.platform.eam.controller.WarehouseController.save
url = /service-eam/eam-warehouse/insert , method = com.dt.platform.eam.controller.WarehouseController.insert
url = /service-eam/eam-warehouse/get-by-ids , method = com.dt.platform.eam.controller.WarehouseController.getByIds
url = /service-eam/eam-warehouse/query-list , method = com.dt.platform.eam.controller.WarehouseController.queryList
url = /service-eam/eam-warehouse/get-by-id , method = com.dt.platform.eam.controller.WarehouseController.getById
url = /service-eam/eam-warehouse/delete , method = com.dt.platform.eam.controller.WarehouseController.deleteById
url = /service-eam/eam-warehouse/delete-by-ids , method = com.dt.platform.eam.controller.WarehouseController.deleteByIds
url = /service-eam/eam-warehouse/query-paged-list , method = com.dt.platform.eam.controller.WarehouseController.queryPagedList
url = /service-eam/eam-warehouse/export-excel , method = com.dt.platform.eam.controller.WarehouseController.exportExcel
url = /service-eam/eam-warehouse/export-excel-template , method = com.dt.platform.eam.controller.WarehouseController.exportExcelTemplate
url = /service-eam/eam-warehouse/import-excel , method = com.dt.platform.eam.controller.WarehouseController.importExcel
url = /business/eam/approve_configure/approve_configure_form.html , method = com.dt.platform.eam.page.ApproveConfigurePageController.form
url = /business/eam/approve_configure/approve_configure_list.html , method = com.dt.platform.eam.page.ApproveConfigurePageController.list
url = /business/eam/area/area_form.html , method = com.dt.platform.eam.page.AreaPageController.form
url = /business/eam/area/area_list.html , method = com.dt.platform.eam.page.AreaPageController.list
url = /business/eam/asset_alarm/allocation_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.allocationList
url = /business/eam/asset_alarm/borrow_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.borrowList
url = /business/eam/asset_alarm/maintenance_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.maintenanceList
url = /business/eam/asset_alarm/asset_sn_unique_list.html , method = com.dt.platform.eam.page.AssetAlarmPageController.assetSnUniqueList
url = /business/eam/asset_allocation/asset_allocation_form.html , method = com.dt.platform.eam.page.AssetAllocationPageController.form
url = /business/eam/asset_allocation/asset_allocation_list.html , method = com.dt.platform.eam.page.AssetAllocationPageController.list
url = /business/eam/asset_attribute_item/asset_attribute_item_form.html , method = com.dt.platform.eam.page.AssetAttributeItemPageController.form
url = /business/eam/asset_attribute_item/asset_attribute_item_list.html , method = com.dt.platform.eam.page.AssetAttributeItemPageController.list
url = /business/eam/asset_attribute/asset_attribute_form.html , method = com.dt.platform.eam.page.AssetAttributePageController.form
url = /business/eam/asset_attribute/asset_attribute_list.html , method = com.dt.platform.eam.page.AssetAttributePageController.list
url = /business/eam/asset_borrow_data/asset_borrow_data_form.html , method = com.dt.platform.eam.page.AssetBorrowDataPageController.form
url = /business/eam/asset_borrow_data/asset_borrow_data_list.html , method = com.dt.platform.eam.page.AssetBorrowDataPageController.list
url = /business/eam/asset_borrow/asset_borrow_form.html , method = com.dt.platform.eam.page.AssetBorrowPageController.form
url = /business/eam/asset_borrow/asset_borrow_list.html , method = com.dt.platform.eam.page.AssetBorrowPageController.list
url = /business/eam/asset_borrow_return/asset_borrow_return_form.html , method = com.dt.platform.eam.page.AssetBorrowReturnPageController.form
url = /business/eam/asset_borrow_return/asset_borrow_return_list.html , method = com.dt.platform.eam.page.AssetBorrowReturnPageController.list
url = /business/eam/asset_collection/asset_collection_form.html , method = com.dt.platform.eam.page.AssetCollectionPageController.form
url = /business/eam/asset_collection/asset_collection_list.html , method = com.dt.platform.eam.page.AssetCollectionPageController.list
url = /business/eam/asset_collection_return/asset_collection_return_form.html , method = com.dt.platform.eam.page.AssetCollectionReturnPageController.form
url = /business/eam/asset_collection_return/asset_collection_return_list.html , method = com.dt.platform.eam.page.AssetCollectionReturnPageController.list
url = /business/eam/asset_data_change/asset_data_change_form.html , method = com.dt.platform.eam.page.AssetDataChangePageController.form
url = /business/eam/asset_data_change/asset_data_change_list.html , method = com.dt.platform.eam.page.AssetDataChangePageController.list
url = /business/eam/asset_handle/asset_handle_form.html , method = com.dt.platform.eam.page.AssetHandlePageController.form
url = /business/eam/asset_handle/asset_handle_list.html , method = com.dt.platform.eam.page.AssetHandlePageController.list
url = /business/eam/asset_item/asset_item_form.html , method = com.dt.platform.eam.page.AssetItemPageController.form
url = /business/eam/asset_item/asset_item_list.html , method = com.dt.platform.eam.page.AssetItemPageController.list
url = /business/eam/asset/asset_form.html , method = com.dt.platform.eam.page.AssetPageController.form
url = /business/eam/asset/asset_list.html , method = com.dt.platform.eam.page.AssetPageController.list
url = /business/eam/asset/asset_search/employee_list.html , method = com.dt.platform.eam.page.AssetPageController.employeeList
url = /business/eam/asset/asset_select_basic_list.html , method = com.dt.platform.eam.page.AssetPageController.basicLlist
url = /business/eam/asset/asset_search/org_tree.html , method = com.dt.platform.eam.page.AssetPageController.orgTree
url = /business/eam/asset/asset_selected_list.html , method = com.dt.platform.eam.page.AssetPageController.selectedList
url = /business/eam/asset/asset_select_list.html , method = com.dt.platform.eam.page.AssetPageController.selectLlist
url = /business/eam/asset/asset_search/employee_assetInfo_list.html , method = com.dt.platform.eam.page.AssetPageController.employeeAssetInfoList
url = /business/eam/asset/asset_search/employee_tree.html , method = com.dt.platform.eam.page.AssetPageController.employeeTree
url = /business/eam/asset/asset_search/category_tree.html , method = com.dt.platform.eam.page.AssetPageController.categoryTree
url = /business/eam/asset/asset_search/belong_org_tree.html , method = com.dt.platform.eam.page.AssetPageController.belongOrgTree
url = /business/eam/asset/asset_search/position_tree.html , method = com.dt.platform.eam.page.AssetPageController.positionTree
url = /business/eam/asset/asset_search/asset_search.html , method = com.dt.platform.eam.page.AssetPageController.searchList
url = /business/eam/asset/approval/asset_register_list.html , method = com.dt.platform.eam.page.AssetPageController.assetApprove
url = /business/eam/asset/asset_data_export_list.html , method = com.dt.platform.eam.page.AssetPageController.dataExportList
url = /business/eam/asset/asset_info_list.html , method = com.dt.platform.eam.page.AssetPageController.infoList
url = /business/eam/asset/asset_info_form.html , method = com.dt.platform.eam.page.AssetPageController.infoForm
url = /business/eam/asset_process_record/asset_process_record_form.html , method = com.dt.platform.eam.page.AssetProcessRecordPageController.form
url = /business/eam/asset_process_record/asset_process_record_list.html , method = com.dt.platform.eam.page.AssetProcessRecordPageController.list
url = /business/eam/asset_repair/asset_repair_form.html , method = com.dt.platform.eam.page.AssetRepairPageController.form
url = /business/eam/asset_repair/asset_repair_list.html , method = com.dt.platform.eam.page.AssetRepairPageController.list
url = /business/eam/asset_report/category_report_list.html , method = com.dt.platform.eam.page.AssetReportPageController.categoryReportList
url = /business/eam/asset_report/org_report_list.html , method = com.dt.platform.eam.page.AssetReportPageController.orgReportList
url = /business/eam/asset_scrap/asset_scrap_form.html , method = com.dt.platform.eam.page.AssetScrapPageController.form
url = /business/eam/asset_scrap/asset_scrap_list.html , method = com.dt.platform.eam.page.AssetScrapPageController.list
url = /business/eam/asset_selected_data/asset_selected_data_form.html , method = com.dt.platform.eam.page.AssetSelectedDataPageController.form
url = /business/eam/asset_selected_data/asset_selected_data_list.html , method = com.dt.platform.eam.page.AssetSelectedDataPageController.list
url = /business/eam/asset_tranfer/asset_tranfer_form.html , method = com.dt.platform.eam.page.AssetTranferPageController.form
url = /business/eam/asset_tranfer/asset_tranfer_list.html , method = com.dt.platform.eam.page.AssetTranferPageController.list
url = /business/eam/base_station/base_station_form.html , method = com.dt.platform.eam.page.BaseStationPageController.form
url = /business/eam/base_station/base_station_list.html , method = com.dt.platform.eam.page.BaseStationPageController.list
url = /business/eam/brand_demo/brand_demo_form.html , method = com.dt.platform.eam.page.BrandDemoPageController.form
url = /business/eam/brand_demo/brand_demo_list.html , method = com.dt.platform.eam.page.BrandDemoPageController.list
url = /business/eam/brand/brand_form.html , method = com.dt.platform.eam.page.BrandPageController.form
url = /business/eam/brand/brand_list.html , method = com.dt.platform.eam.page.BrandPageController.list
url = /business/eam/category_finance/category_finance_form.html , method = com.dt.platform.eam.page.CategoryFinancePageController.form
url = /business/eam/category_finance/category_finance_list.html , method = com.dt.platform.eam.page.CategoryFinancePageController.list
url = /business/eam/category/category_form.html , method = com.dt.platform.eam.page.CategoryPageController.form
url = /business/eam/category/category_list.html , method = com.dt.platform.eam.page.CategoryPageController.list
url = /business/eam/daily_management/myAsset_list.html , method = com.dt.platform.eam.page.DailyManagementPageController.list
url = /business/eam/goods/goods_form.html , method = com.dt.platform.eam.page.GoodsPageController.form
url = /business/eam/goods/goods_list.html , method = com.dt.platform.eam.page.GoodsPageController.list
url = /business/eam/inventory/inventory_form.html , method = com.dt.platform.eam.page.InventoryPageController.form
url = /business/eam/inventory/inventory_list.html , method = com.dt.platform.eam.page.InventoryPageController.list
url = /business/eam/inventory_user/inventory_user_form.html , method = com.dt.platform.eam.page.InventoryUserPageController.form
url = /business/eam/inventory_user/inventory_user_list.html , method = com.dt.platform.eam.page.InventoryUserPageController.list
url = /business/eam/maintainer/maintainer_form.html , method = com.dt.platform.eam.page.MaintainerPageController.form
url = /business/eam/maintainer/maintainer_list.html , method = com.dt.platform.eam.page.MaintainerPageController.list
url = /business/eam/manufacturer/manufacturer_form.html , method = com.dt.platform.eam.page.ManufacturerPageController.form
url = /business/eam/manufacturer/manufacturer_list.html , method = com.dt.platform.eam.page.ManufacturerPageController.list
url = /business/eam/my_business/done_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.doneList
url = /business/eam/my_business/todo_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.todoList
url = /business/eam/my_business/changeBaseInfo_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.changeBaseInfoList
url = /business/eam/my_business/changeFinance_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.changeFinanceList
url = /business/eam/my_business/changeMaintenance_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.changeMaintenanceList
url = /business/eam/my_business/assetInsert_list.html , method = com.dt.platform.eam.page.MyBusinessPageController.assetInsertList
url = /business/eam/operate/operate_form.html , method = com.dt.platform.eam.page.OperatePageController.form
url = /business/eam/operate/operate_list.html , method = com.dt.platform.eam.page.OperatePageController.list
url = /business/eam/position/position_form.html , method = com.dt.platform.eam.page.PositionPageController.form
url = /business/eam/position/position_list.html , method = com.dt.platform.eam.page.PositionPageController.list
url = /business/eam/residual_strategy/residual_strategy_form.html , method = com.dt.platform.eam.page.ResidualStrategyPageController.form
url = /business/eam/residual_strategy/residual_strategy_list.html , method = com.dt.platform.eam.page.ResidualStrategyPageController.list
url = /business/eam/safetylevel/safetylevel_form.html , method = com.dt.platform.eam.page.SafetylevelPageController.form
url = /business/eam/safetylevel/safetylevel_list.html , method = com.dt.platform.eam.page.SafetylevelPageController.list
url = /business/eam/supplier/supplier_form.html , method = com.dt.platform.eam.page.SupplierPageController.form
url = /business/eam/supplier/supplier_list.html , method = com.dt.platform.eam.page.SupplierPageController.list
url = /business/eam/tpl_file/tpl_file_form.html , method = com.dt.platform.eam.page.TplFilePageController.form
url = /business/eam/tpl_file/tpl_file_list.html , method = com.dt.platform.eam.page.TplFilePageController.list
url = /business/eam/warehouse/warehouse_form.html , method = com.dt.platform.eam.page.WarehousePageController.form
url = /business/eam/warehouse/warehouse_list.html , method = com.dt.platform.eam.page.WarehousePageController.list
url = /service-datacenter/dc-area/update , method = com.dt.platform.datacenter.controller.AreaController.update
url = /service-datacenter/dc-area/save , method = com.dt.platform.datacenter.controller.AreaController.save
url = /service-datacenter/dc-area/insert , method = com.dt.platform.datacenter.controller.AreaController.insert
url = /service-datacenter/dc-area/get-by-ids , method = com.dt.platform.datacenter.controller.AreaController.getByIds
url = /service-datacenter/dc-area/query-list , method = com.dt.platform.datacenter.controller.AreaController.queryList
url = /service-datacenter/dc-area/get-by-id , method = com.dt.platform.datacenter.controller.AreaController.getById
url = /service-datacenter/dc-area/delete , method = com.dt.platform.datacenter.controller.AreaController.deleteById
url = /service-datacenter/dc-area/delete-by-ids , method = com.dt.platform.datacenter.controller.AreaController.deleteByIds
url = /service-datacenter/dc-area/query-paged-list , method = com.dt.platform.datacenter.controller.AreaController.queryPagedList
url = /service-datacenter/dc-area/export-excel , method = com.dt.platform.datacenter.controller.AreaController.exportExcel
url = /service-datacenter/dc-area/export-excel-template , method = com.dt.platform.datacenter.controller.AreaController.exportExcelTemplate
url = /service-datacenter/dc-area/import-excel , method = com.dt.platform.datacenter.controller.AreaController.importExcel
url = /service-datacenter/dc-layer/update , method = com.dt.platform.datacenter.controller.LayerController.update
url = /service-datacenter/dc-layer/save , method = com.dt.platform.datacenter.controller.LayerController.save
url = /service-datacenter/dc-layer/insert , method = com.dt.platform.datacenter.controller.LayerController.insert
url = /service-datacenter/dc-layer/get-by-ids , method = com.dt.platform.datacenter.controller.LayerController.getByIds
url = /service-datacenter/dc-layer/query-list , method = com.dt.platform.datacenter.controller.LayerController.queryList
url = /service-datacenter/dc-layer/get-by-id , method = com.dt.platform.datacenter.controller.LayerController.getById
url = /service-datacenter/dc-layer/delete , method = com.dt.platform.datacenter.controller.LayerController.deleteById
url = /service-datacenter/dc-layer/delete-by-ids , method = com.dt.platform.datacenter.controller.LayerController.deleteByIds
url = /service-datacenter/dc-layer/query-paged-list , method = com.dt.platform.datacenter.controller.LayerController.queryPagedList
url = /service-datacenter/dc-layer/export-excel , method = com.dt.platform.datacenter.controller.LayerController.exportExcel
url = /service-datacenter/dc-layer/export-excel-template , method = com.dt.platform.datacenter.controller.LayerController.exportExcelTemplate
url = /service-datacenter/dc-layer/import-excel , method = com.dt.platform.datacenter.controller.LayerController.importExcel
url = /service-datacenter/dc-rack/update , method = com.dt.platform.datacenter.controller.RackController.update
url = /service-datacenter/dc-rack/save , method = com.dt.platform.datacenter.controller.RackController.save
url = /service-datacenter/dc-rack/insert , method = com.dt.platform.datacenter.controller.RackController.insert
url = /service-datacenter/dc-rack/get-by-ids , method = com.dt.platform.datacenter.controller.RackController.getByIds
url = /service-datacenter/dc-rack/query-list , method = com.dt.platform.datacenter.controller.RackController.queryList
url = /service-datacenter/dc-rack/get-by-id , method = com.dt.platform.datacenter.controller.RackController.getById
url = /service-datacenter/dc-rack/delete , method = com.dt.platform.datacenter.controller.RackController.deleteById
url = /service-datacenter/dc-rack/delete-by-ids , method = com.dt.platform.datacenter.controller.RackController.deleteByIds
url = /service-datacenter/dc-rack/query-paged-list , method = com.dt.platform.datacenter.controller.RackController.queryPagedList
url = /service-datacenter/dc-rack/export-excel , method = com.dt.platform.datacenter.controller.RackController.exportExcel
url = /service-datacenter/dc-rack/export-excel-template , method = com.dt.platform.datacenter.controller.RackController.exportExcelTemplate
url = /service-datacenter/dc-rack/import-excel , method = com.dt.platform.datacenter.controller.RackController.importExcel
url = /business/datacenter/area/area_form.html , method = com.dt.platform.datacenter.page.AreaPageController.form
url = /business/datacenter/area/area_list.html , method = com.dt.platform.datacenter.page.AreaPageController.list
url = /business/datacenter/layer/layer_form.html , method = com.dt.platform.datacenter.page.LayerPageController.form
url = /business/datacenter/layer/layer_list.html , method = com.dt.platform.datacenter.page.LayerPageController.list
url = /business/datacenter/rack/rack_form.html , method = com.dt.platform.datacenter.page.RackPageController.form
url = /business/datacenter/rack/rack_list.html , method = com.dt.platform.datacenter.page.RackPageController.list
url = /service-ops/ops-db-instance/update , method = com.dt.platform.ops.controller.DbInstanceController.update
url = /service-ops/ops-db-instance/save , method = com.dt.platform.ops.controller.DbInstanceController.save
url = /service-ops/ops-db-instance/insert , method = com.dt.platform.ops.controller.DbInstanceController.insert
url = /service-ops/ops-db-instance/get-by-ids , method = com.dt.platform.ops.controller.DbInstanceController.getByIds
url = /service-ops/ops-db-instance/query-list , method = com.dt.platform.ops.controller.DbInstanceController.queryList
url = /service-ops/ops-db-instance/get-by-id , method = com.dt.platform.ops.controller.DbInstanceController.getById
url = /service-ops/ops-db-instance/delete , method = com.dt.platform.ops.controller.DbInstanceController.deleteById
url = /service-ops/ops-db-instance/delete-by-ids , method = com.dt.platform.ops.controller.DbInstanceController.deleteByIds
url = /service-ops/ops-db-instance/query-paged-list , method = com.dt.platform.ops.controller.DbInstanceController.queryPagedList
url = /service-ops/ops-db-instance/export-excel , method = com.dt.platform.ops.controller.DbInstanceController.exportExcel
url = /service-ops/ops-db-instance/export-excel-template , method = com.dt.platform.ops.controller.DbInstanceController.exportExcelTemplate
url = /service-ops/ops-db-instance/import-excel , method = com.dt.platform.ops.controller.DbInstanceController.importExcel
url = /service-ops/ops-host/update , method = com.dt.platform.ops.controller.HostController.update
url = /service-ops/ops-host/save , method = com.dt.platform.ops.controller.HostController.save
url = /service-ops/ops-host/insert , method = com.dt.platform.ops.controller.HostController.insert
url = /service-ops/ops-host/get-by-ids , method = com.dt.platform.ops.controller.HostController.getByIds
url = /service-ops/ops-host/query-list , method = com.dt.platform.ops.controller.HostController.queryList
url = /service-ops/ops-host/get-by-id , method = com.dt.platform.ops.controller.HostController.getById
url = /service-ops/ops-host/delete , method = com.dt.platform.ops.controller.HostController.deleteById
url = /service-ops/ops-host/delete-by-ids , method = com.dt.platform.ops.controller.HostController.deleteByIds
url = /service-ops/ops-host/query-paged-list , method = com.dt.platform.ops.controller.HostController.queryPagedList
url = /service-ops/ops-host/export-excel , method = com.dt.platform.ops.controller.HostController.exportExcel
url = /service-ops/ops-host/export-excel-template , method = com.dt.platform.ops.controller.HostController.exportExcelTemplate
url = /service-ops/ops-host/import-excel , method = com.dt.platform.ops.controller.HostController.importExcel
url = /service-ops/ops-host-db/update , method = com.dt.platform.ops.controller.HostDbController.update
url = /service-ops/ops-host-db/save , method = com.dt.platform.ops.controller.HostDbController.save
url = /service-ops/ops-host-db/insert , method = com.dt.platform.ops.controller.HostDbController.insert
url = /service-ops/ops-host-db/get-by-ids , method = com.dt.platform.ops.controller.HostDbController.getByIds
url = /service-ops/ops-host-db/query-list , method = com.dt.platform.ops.controller.HostDbController.queryList
url = /service-ops/ops-host-db/get-by-id , method = com.dt.platform.ops.controller.HostDbController.getById
url = /service-ops/ops-host-db/delete , method = com.dt.platform.ops.controller.HostDbController.deleteById
url = /service-ops/ops-host-db/delete-by-ids , method = com.dt.platform.ops.controller.HostDbController.deleteByIds
url = /service-ops/ops-host-db/query-paged-list , method = com.dt.platform.ops.controller.HostDbController.queryPagedList
url = /service-ops/ops-host-db/export-excel , method = com.dt.platform.ops.controller.HostDbController.exportExcel
url = /service-ops/ops-host-db/export-excel-template , method = com.dt.platform.ops.controller.HostDbController.exportExcelTemplate
url = /service-ops/ops-host-db/import-excel , method = com.dt.platform.ops.controller.HostDbController.importExcel
url = /service-ops/ops-host-mid/update , method = com.dt.platform.ops.controller.HostMidController.update
url = /service-ops/ops-host-mid/save , method = com.dt.platform.ops.controller.HostMidController.save
url = /service-ops/ops-host-mid/insert , method = com.dt.platform.ops.controller.HostMidController.insert
url = /service-ops/ops-host-mid/get-by-ids , method = com.dt.platform.ops.controller.HostMidController.getByIds
url = /service-ops/ops-host-mid/query-list , method = com.dt.platform.ops.controller.HostMidController.queryList
url = /service-ops/ops-host-mid/get-by-id , method = com.dt.platform.ops.controller.HostMidController.getById
url = /service-ops/ops-host-mid/delete , method = com.dt.platform.ops.controller.HostMidController.deleteById
url = /service-ops/ops-host-mid/delete-by-ids , method = com.dt.platform.ops.controller.HostMidController.deleteByIds
url = /service-ops/ops-host-mid/query-paged-list , method = com.dt.platform.ops.controller.HostMidController.queryPagedList
url = /service-ops/ops-host-mid/export-excel , method = com.dt.platform.ops.controller.HostMidController.exportExcel
url = /service-ops/ops-host-mid/export-excel-template , method = com.dt.platform.ops.controller.HostMidController.exportExcelTemplate
url = /service-ops/ops-host-mid/import-excel , method = com.dt.platform.ops.controller.HostMidController.importExcel
url = /service-ops/ops-host-os/update , method = com.dt.platform.ops.controller.HostOsController.update
url = /service-ops/ops-host-os/save , method = com.dt.platform.ops.controller.HostOsController.save
url = /service-ops/ops-host-os/insert , method = com.dt.platform.ops.controller.HostOsController.insert
url = /service-ops/ops-host-os/get-by-ids , method = com.dt.platform.ops.controller.HostOsController.getByIds
url = /service-ops/ops-host-os/query-list , method = com.dt.platform.ops.controller.HostOsController.queryList
url = /service-ops/ops-host-os/get-by-id , method = com.dt.platform.ops.controller.HostOsController.getById
url = /service-ops/ops-host-os/delete , method = com.dt.platform.ops.controller.HostOsController.deleteById
url = /service-ops/ops-host-os/delete-by-ids , method = com.dt.platform.ops.controller.HostOsController.deleteByIds
url = /service-ops/ops-host-os/query-paged-list , method = com.dt.platform.ops.controller.HostOsController.queryPagedList
url = /service-ops/ops-host-os/export-excel , method = com.dt.platform.ops.controller.HostOsController.exportExcel
url = /service-ops/ops-host-os/export-excel-template , method = com.dt.platform.ops.controller.HostOsController.exportExcelTemplate
url = /service-ops/ops-host-os/import-excel , method = com.dt.platform.ops.controller.HostOsController.importExcel
url = /service-ops/ops-host-position/update , method = com.dt.platform.ops.controller.HostPositionController.update
url = /service-ops/ops-host-position/save , method = com.dt.platform.ops.controller.HostPositionController.save
url = /service-ops/ops-host-position/insert , method = com.dt.platform.ops.controller.HostPositionController.insert
url = /service-ops/ops-host-position/get-by-ids , method = com.dt.platform.ops.controller.HostPositionController.getByIds
url = /service-ops/ops-host-position/query-list , method = com.dt.platform.ops.controller.HostPositionController.queryList
url = /service-ops/ops-host-position/get-by-id , method = com.dt.platform.ops.controller.HostPositionController.getById
url = /service-ops/ops-host-position/delete , method = com.dt.platform.ops.controller.HostPositionController.deleteById
url = /service-ops/ops-host-position/delete-by-ids , method = com.dt.platform.ops.controller.HostPositionController.deleteByIds
url = /service-ops/ops-host-position/query-paged-list , method = com.dt.platform.ops.controller.HostPositionController.queryPagedList
url = /service-ops/ops-host-position/export-excel , method = com.dt.platform.ops.controller.HostPositionController.exportExcel
url = /service-ops/ops-host-position/export-excel-template , method = com.dt.platform.ops.controller.HostPositionController.exportExcelTemplate
url = /service-ops/ops-host-position/import-excel , method = com.dt.platform.ops.controller.HostPositionController.importExcel
url = /service-ops/ops-information-system/update , method = com.dt.platform.ops.controller.InformationSystemController.update
url = /service-ops/ops-information-system/save , method = com.dt.platform.ops.controller.InformationSystemController.save
url = /service-ops/ops-information-system/insert , method = com.dt.platform.ops.controller.InformationSystemController.insert
url = /service-ops/ops-information-system/get-by-ids , method = com.dt.platform.ops.controller.InformationSystemController.getByIds
url = /service-ops/ops-information-system/query-list , method = com.dt.platform.ops.controller.InformationSystemController.queryList
url = /service-ops/ops-information-system/get-by-id , method = com.dt.platform.ops.controller.InformationSystemController.getById
url = /service-ops/ops-information-system/delete , method = com.dt.platform.ops.controller.InformationSystemController.deleteById
url = /service-ops/ops-information-system/delete-by-ids , method = com.dt.platform.ops.controller.InformationSystemController.deleteByIds
url = /service-ops/ops-information-system/query-paged-list , method = com.dt.platform.ops.controller.InformationSystemController.queryPagedList
url = /service-ops/ops-information-system/export-excel , method = com.dt.platform.ops.controller.InformationSystemController.exportExcel
url = /service-ops/ops-information-system/export-excel-template , method = com.dt.platform.ops.controller.InformationSystemController.exportExcelTemplate
url = /service-ops/ops-information-system/import-excel , method = com.dt.platform.ops.controller.InformationSystemController.importExcel
url = /service-ops/ops-data/export-host , method = com.dt.platform.ops.controller.OpsDataController.exportHost
url = /service-ops/ops-data/export-information-system , method = com.dt.platform.ops.controller.OpsDataController.exportInformationSystem
url = /service-ops/ops-data/export-database-instance , method = com.dt.platform.ops.controller.OpsDataController.exportDatabaseInstance
url = /service-ops/ops-service-category/update , method = com.dt.platform.ops.controller.ServiceCategoryController.update
url = /service-ops/ops-service-category/save , method = com.dt.platform.ops.controller.ServiceCategoryController.save
url = /service-ops/ops-service-category/insert , method = com.dt.platform.ops.controller.ServiceCategoryController.insert
url = /service-ops/ops-service-category/get-by-ids , method = com.dt.platform.ops.controller.ServiceCategoryController.getByIds
url = /service-ops/ops-service-category/query-list , method = com.dt.platform.ops.controller.ServiceCategoryController.queryList
url = /service-ops/ops-service-category/get-by-id , method = com.dt.platform.ops.controller.ServiceCategoryController.getById
url = /service-ops/ops-service-category/delete , method = com.dt.platform.ops.controller.ServiceCategoryController.deleteById
url = /service-ops/ops-service-category/delete-by-ids , method = com.dt.platform.ops.controller.ServiceCategoryController.deleteByIds
url = /service-ops/ops-service-category/query-paged-list , method = com.dt.platform.ops.controller.ServiceCategoryController.queryPagedList
url = /service-ops/ops-service-category/export-excel , method = com.dt.platform.ops.controller.ServiceCategoryController.exportExcel
url = /service-ops/ops-service-category/export-excel-template , method = com.dt.platform.ops.controller.ServiceCategoryController.exportExcelTemplate
url = /service-ops/ops-service-category/import-excel , method = com.dt.platform.ops.controller.ServiceCategoryController.importExcel
url = /service-ops/ops-service-group/update , method = com.dt.platform.ops.controller.ServiceGroupController.update
url = /service-ops/ops-service-group/save , method = com.dt.platform.ops.controller.ServiceGroupController.save
url = /service-ops/ops-service-group/insert , method = com.dt.platform.ops.controller.ServiceGroupController.insert
url = /service-ops/ops-service-group/get-by-ids , method = com.dt.platform.ops.controller.ServiceGroupController.getByIds
url = /service-ops/ops-service-group/query-list , method = com.dt.platform.ops.controller.ServiceGroupController.queryList
url = /service-ops/ops-service-group/get-by-id , method = com.dt.platform.ops.controller.ServiceGroupController.getById
url = /service-ops/ops-service-group/delete , method = com.dt.platform.ops.controller.ServiceGroupController.deleteById
url = /service-ops/ops-service-group/delete-by-ids , method = com.dt.platform.ops.controller.ServiceGroupController.deleteByIds
url = /service-ops/ops-service-group/query-paged-list , method = com.dt.platform.ops.controller.ServiceGroupController.queryPagedList
url = /service-ops/ops-service-group/export-excel , method = com.dt.platform.ops.controller.ServiceGroupController.exportExcel
url = /service-ops/ops-service-group/export-excel-template , method = com.dt.platform.ops.controller.ServiceGroupController.exportExcelTemplate
url = /service-ops/ops-service-group/import-excel , method = com.dt.platform.ops.controller.ServiceGroupController.importExcel
url = /service-ops/ops-service-info/update , method = com.dt.platform.ops.controller.ServiceInfoController.update
url = /service-ops/ops-service-info/save , method = com.dt.platform.ops.controller.ServiceInfoController.save
url = /service-ops/ops-service-info/insert , method = com.dt.platform.ops.controller.ServiceInfoController.insert
url = /service-ops/ops-service-info/get-by-ids , method = com.dt.platform.ops.controller.ServiceInfoController.getByIds
url = /service-ops/ops-service-info/query-list , method = com.dt.platform.ops.controller.ServiceInfoController.queryList
url = /service-ops/ops-service-info/get-by-id , method = com.dt.platform.ops.controller.ServiceInfoController.getById
url = /service-ops/ops-service-info/delete , method = com.dt.platform.ops.controller.ServiceInfoController.deleteById
url = /service-ops/ops-service-info/delete-by-ids , method = com.dt.platform.ops.controller.ServiceInfoController.deleteByIds
url = /service-ops/ops-service-info/query-paged-list , method = com.dt.platform.ops.controller.ServiceInfoController.queryPagedList
url = /service-ops/ops-service-info/export-excel , method = com.dt.platform.ops.controller.ServiceInfoController.exportExcel
url = /service-ops/ops-service-info/export-excel-template , method = com.dt.platform.ops.controller.ServiceInfoController.exportExcelTemplate
url = /service-ops/ops-service-info/import-excel , method = com.dt.platform.ops.controller.ServiceInfoController.importExcel
url = /service-ops/ops-voucher/update , method = com.dt.platform.ops.controller.VoucherController.update
url = /service-ops/ops-voucher/save , method = com.dt.platform.ops.controller.VoucherController.save
url = /service-ops/ops-voucher/insert , method = com.dt.platform.ops.controller.VoucherController.insert
url = /service-ops/ops-voucher/get-by-ids , method = com.dt.platform.ops.controller.VoucherController.getByIds
url = /service-ops/ops-voucher/query-list , method = com.dt.platform.ops.controller.VoucherController.queryList
url = /service-ops/ops-voucher/get-by-id , method = com.dt.platform.ops.controller.VoucherController.getById
url = /service-ops/ops-voucher/delete , method = com.dt.platform.ops.controller.VoucherController.deleteById
url = /service-ops/ops-voucher/delete-by-ids , method = com.dt.platform.ops.controller.VoucherController.deleteByIds
url = /service-ops/ops-voucher/query-paged-list , method = com.dt.platform.ops.controller.VoucherController.queryPagedList
url = /service-ops/ops-voucher/export-excel , method = com.dt.platform.ops.controller.VoucherController.exportExcel
url = /service-ops/ops-voucher/export-excel-template , method = com.dt.platform.ops.controller.VoucherController.exportExcelTemplate
url = /service-ops/ops-voucher/import-excel , method = com.dt.platform.ops.controller.VoucherController.importExcel
url = /service-ops/ops-voucher-history/update , method = com.dt.platform.ops.controller.VoucherHistoryController.update
url = /service-ops/ops-voucher-history/save , method = com.dt.platform.ops.controller.VoucherHistoryController.save
url = /service-ops/ops-voucher-history/insert , method = com.dt.platform.ops.controller.VoucherHistoryController.insert
url = /service-ops/ops-voucher-history/get-by-ids , method = com.dt.platform.ops.controller.VoucherHistoryController.getByIds
url = /service-ops/ops-voucher-history/query-list , method = com.dt.platform.ops.controller.VoucherHistoryController.queryList
url = /service-ops/ops-voucher-history/get-by-id , method = com.dt.platform.ops.controller.VoucherHistoryController.getById
url = /service-ops/ops-voucher-history/delete , method = com.dt.platform.ops.controller.VoucherHistoryController.deleteById
url = /service-ops/ops-voucher-history/delete-by-ids , method = com.dt.platform.ops.controller.VoucherHistoryController.deleteByIds
url = /service-ops/ops-voucher-history/query-paged-list , method = com.dt.platform.ops.controller.VoucherHistoryController.queryPagedList
url = /service-ops/ops-voucher-history/export-excel , method = com.dt.platform.ops.controller.VoucherHistoryController.exportExcel
url = /service-ops/ops-voucher-history/export-excel-template , method = com.dt.platform.ops.controller.VoucherHistoryController.exportExcelTemplate
url = /service-ops/ops-voucher-history/import-excel , method = com.dt.platform.ops.controller.VoucherHistoryController.importExcel
url = /service-ops/ops-voucher-owner/update , method = com.dt.platform.ops.controller.VoucherOwnerController.update
url = /service-ops/ops-voucher-owner/save , method = com.dt.platform.ops.controller.VoucherOwnerController.save
url = /service-ops/ops-voucher-owner/insert , method = com.dt.platform.ops.controller.VoucherOwnerController.insert
url = /service-ops/ops-voucher-owner/get-by-ids , method = com.dt.platform.ops.controller.VoucherOwnerController.getByIds
url = /service-ops/ops-voucher-owner/query-list , method = com.dt.platform.ops.controller.VoucherOwnerController.queryList
url = /service-ops/ops-voucher-owner/get-by-id , method = com.dt.platform.ops.controller.VoucherOwnerController.getById
url = /service-ops/ops-voucher-owner/delete , method = com.dt.platform.ops.controller.VoucherOwnerController.deleteById
url = /service-ops/ops-voucher-owner/delete-by-ids , method = com.dt.platform.ops.controller.VoucherOwnerController.deleteByIds
url = /service-ops/ops-voucher-owner/query-paged-list , method = com.dt.platform.ops.controller.VoucherOwnerController.queryPagedList
url = /service-ops/ops-voucher-owner/export-excel , method = com.dt.platform.ops.controller.VoucherOwnerController.exportExcel
url = /service-ops/ops-voucher-owner/export-excel-template , method = com.dt.platform.ops.controller.VoucherOwnerController.exportExcelTemplate
url = /service-ops/ops-voucher-owner/import-excel , method = com.dt.platform.ops.controller.VoucherOwnerController.importExcel
url = /service-ops/ops-voucher-priv/update , method = com.dt.platform.ops.controller.VoucherPrivController.update
url = /service-ops/ops-voucher-priv/save , method = com.dt.platform.ops.controller.VoucherPrivController.save
url = /service-ops/ops-voucher-priv/insert , method = com.dt.platform.ops.controller.VoucherPrivController.insert
url = /service-ops/ops-voucher-priv/get-by-ids , method = com.dt.platform.ops.controller.VoucherPrivController.getByIds
url = /service-ops/ops-voucher-priv/query-list , method = com.dt.platform.ops.controller.VoucherPrivController.queryList
url = /service-ops/ops-voucher-priv/get-by-id , method = com.dt.platform.ops.controller.VoucherPrivController.getById
url = /service-ops/ops-voucher-priv/delete , method = com.dt.platform.ops.controller.VoucherPrivController.deleteById
url = /service-ops/ops-voucher-priv/delete-by-ids , method = com.dt.platform.ops.controller.VoucherPrivController.deleteByIds
url = /service-ops/ops-voucher-priv/query-paged-list , method = com.dt.platform.ops.controller.VoucherPrivController.queryPagedList
url = /service-ops/ops-voucher-priv/export-excel , method = com.dt.platform.ops.controller.VoucherPrivController.exportExcel
url = /service-ops/ops-voucher-priv/export-excel-template , method = com.dt.platform.ops.controller.VoucherPrivController.exportExcelTemplate
url = /service-ops/ops-voucher-priv/import-excel , method = com.dt.platform.ops.controller.VoucherPrivController.importExcel
url = /service-ops/ops-voucher-priv/query-type-list , method = com.dt.platform.ops.controller.VoucherPrivController.queryVoucherTypeList
url = /service-ops/workorder-category/update , method = com.dt.platform.ops.controller.WorkorderCategoryController.update
url = /service-ops/workorder-category/save , method = com.dt.platform.ops.controller.WorkorderCategoryController.save
url = /service-ops/workorder-category/insert , method = com.dt.platform.ops.controller.WorkorderCategoryController.insert
url = /service-ops/workorder-category/get-by-ids , method = com.dt.platform.ops.controller.WorkorderCategoryController.getByIds
url = /service-ops/workorder-category/query-list , method = com.dt.platform.ops.controller.WorkorderCategoryController.queryList
url = /service-ops/workorder-category/get-by-id , method = com.dt.platform.ops.controller.WorkorderCategoryController.getById
url = /service-ops/workorder-category/delete , method = com.dt.platform.ops.controller.WorkorderCategoryController.deleteById
url = /service-ops/workorder-category/delete-by-ids , method = com.dt.platform.ops.controller.WorkorderCategoryController.deleteByIds
url = /service-ops/workorder-category/query-paged-list , method = com.dt.platform.ops.controller.WorkorderCategoryController.queryPagedList
url = /service-ops/workorder-category/export-excel , method = com.dt.platform.ops.controller.WorkorderCategoryController.exportExcel
url = /service-ops/workorder-category/export-excel-template , method = com.dt.platform.ops.controller.WorkorderCategoryController.exportExcelTemplate
url = /service-ops/workorder-category/import-excel , method = com.dt.platform.ops.controller.WorkorderCategoryController.importExcel
url = /business/ops/db_instance/db_instance_form.html , method = com.dt.platform.ops.page.DbInstancePageController.form
url = /business/ops/db_instance/db_instance_list.html , method = com.dt.platform.ops.page.DbInstancePageController.list
url = /business/ops/host_db/host_db_form.html , method = com.dt.platform.ops.page.HostDbPageController.form
url = /business/ops/host_db/host_db_list.html , method = com.dt.platform.ops.page.HostDbPageController.list
url = /business/ops/host_mid/host_mid_form.html , method = com.dt.platform.ops.page.HostMidPageController.form
url = /business/ops/host_mid/host_mid_list.html , method = com.dt.platform.ops.page.HostMidPageController.list
url = /business/ops/host_os/host_os_form.html , method = com.dt.platform.ops.page.HostOsPageController.form
url = /business/ops/host_os/host_os_list.html , method = com.dt.platform.ops.page.HostOsPageController.list
url = /business/ops/host/host_form.html , method = com.dt.platform.ops.page.HostPageController.form
url = /business/ops/host/host_list.html , method = com.dt.platform.ops.page.HostPageController.list
url = /business/ops/host_position/host_position_form.html , method = com.dt.platform.ops.page.HostPositionPageController.form
url = /business/ops/host_position/host_position_list.html , method = com.dt.platform.ops.page.HostPositionPageController.list
url = /business/ops/information_system/information_system_form.html , method = com.dt.platform.ops.page.InformationSystemPageController.form
url = /business/ops/information_system/information_system_list.html , method = com.dt.platform.ops.page.InformationSystemPageController.list
url = /business/ops/service_category/service_category_form.html , method = com.dt.platform.ops.page.ServiceCategoryPageController.form
url = /business/ops/service_category/service_category_list.html , method = com.dt.platform.ops.page.ServiceCategoryPageController.list
url = /business/ops/service_group/service_group_form.html , method = com.dt.platform.ops.page.ServiceGroupPageController.form
url = /business/ops/service_group/service_group_list.html , method = com.dt.platform.ops.page.ServiceGroupPageController.list
url = /business/ops/service_info/service_info_form.html , method = com.dt.platform.ops.page.ServiceInfoPageController.form
url = /business/ops/service_info/service_info_list.html , method = com.dt.platform.ops.page.ServiceInfoPageController.list
url = /business/ops/voucher_history/voucher_history_form.html , method = com.dt.platform.ops.page.VoucherHistoryPageController.form
url = /business/ops/voucher_history/voucher_history_list.html , method = com.dt.platform.ops.page.VoucherHistoryPageController.list
url = /business/ops/voucher_owner/voucher_owner_form.html , method = com.dt.platform.ops.page.VoucherOwnerPageController.form
url = /business/ops/voucher_owner/voucher_owner_list.html , method = com.dt.platform.ops.page.VoucherOwnerPageController.list
url = /business/ops/voucher/voucher_form.html , method = com.dt.platform.ops.page.VoucherPageController.form
url = /business/ops/voucher/voucher_list.html , method = com.dt.platform.ops.page.VoucherPageController.list
url = /business/ops/voucher_priv/voucher_priv_form.html , method = com.dt.platform.ops.page.VoucherPrivPageController.form
url = /business/ops/voucher_priv/voucher_priv_list.html , method = com.dt.platform.ops.page.VoucherPrivPageController.list
url = /business/ops/workorder_category/workorder_category_form.html , method = com.dt.platform.ops.page.WorkorderCategoryPageController.form
url = /business/ops/workorder_category/workorder_category_list.html , method = com.dt.platform.ops.page.WorkorderCategoryPageController.list
url = /service-common/sys-code-allocation/update , method = com.dt.platform.common.controller.CodeAllocationController.update
url = /service-common/sys-code-allocation/save , method = com.dt.platform.common.controller.CodeAllocationController.save
url = /service-common/sys-code-allocation/insert , method = com.dt.platform.common.controller.CodeAllocationController.insert
url = /service-common/sys-code-allocation/get-by-ids , method = com.dt.platform.common.controller.CodeAllocationController.getByIds
url = /service-common/sys-code-allocation/query-list , method = com.dt.platform.common.controller.CodeAllocationController.queryList
url = /service-common/sys-code-allocation/get-by-id , method = com.dt.platform.common.controller.CodeAllocationController.getById
url = /service-common/sys-code-allocation/delete , method = com.dt.platform.common.controller.CodeAllocationController.deleteById
url = /service-common/sys-code-allocation/delete-by-ids , method = com.dt.platform.common.controller.CodeAllocationController.deleteByIds
url = /service-common/sys-code-allocation/query-paged-list , method = com.dt.platform.common.controller.CodeAllocationController.queryPagedList
url = /service-common/sys-code-allocation/export-excel , method = com.dt.platform.common.controller.CodeAllocationController.exportExcel
url = /service-common/sys-code-allocation/export-excel-template , method = com.dt.platform.common.controller.CodeAllocationController.exportExcelTemplate
url = /service-common/sys-code-allocation/import-excel , method = com.dt.platform.common.controller.CodeAllocationController.importExcel
url = /service-common/sys-code-attr/update , method = com.dt.platform.common.controller.CodeAttrController.update
url = /service-common/sys-code-attr/save , method = com.dt.platform.common.controller.CodeAttrController.save
url = /service-common/sys-code-attr/insert , method = com.dt.platform.common.controller.CodeAttrController.insert
url = /service-common/sys-code-attr/get-by-ids , method = com.dt.platform.common.controller.CodeAttrController.getByIds
url = /service-common/sys-code-attr/query-list , method = com.dt.platform.common.controller.CodeAttrController.queryList
url = /service-common/sys-code-attr/get-by-id , method = com.dt.platform.common.controller.CodeAttrController.getById
url = /service-common/sys-code-attr/delete , method = com.dt.platform.common.controller.CodeAttrController.deleteById
url = /service-common/sys-code-attr/delete-by-ids , method = com.dt.platform.common.controller.CodeAttrController.deleteByIds
url = /service-common/sys-code-attr/query-paged-list , method = com.dt.platform.common.controller.CodeAttrController.queryPagedList
url = /service-common/sys-code-attr/export-excel , method = com.dt.platform.common.controller.CodeAttrController.exportExcel
url = /service-common/sys-code-attr/export-excel-template , method = com.dt.platform.common.controller.CodeAttrController.exportExcelTemplate
url = /service-common/sys-code-attr/import-excel , method = com.dt.platform.common.controller.CodeAttrController.importExcel
url = /service-common/sys-code-module/generate-code , method = com.dt.platform.common.controller.CodeModuleController.generateCode
url = /service-common/sys-code-register/update , method = com.dt.platform.common.controller.CodeRegisterController.update
url = /service-common/sys-code-register/save , method = com.dt.platform.common.controller.CodeRegisterController.save
url = /service-common/sys-code-register/insert , method = com.dt.platform.common.controller.CodeRegisterController.insert
url = /service-common/sys-code-register/get-by-ids , method = com.dt.platform.common.controller.CodeRegisterController.getByIds
url = /service-common/sys-code-register/query-list , method = com.dt.platform.common.controller.CodeRegisterController.queryList
url = /service-common/sys-code-register/get-by-id , method = com.dt.platform.common.controller.CodeRegisterController.getById
url = /service-common/sys-code-register/delete , method = com.dt.platform.common.controller.CodeRegisterController.deleteById
url = /service-common/sys-code-register/delete-by-ids , method = com.dt.platform.common.controller.CodeRegisterController.deleteByIds
url = /service-common/sys-code-register/query-paged-list , method = com.dt.platform.common.controller.CodeRegisterController.queryPagedList
url = /service-common/sys-code-register/export-excel , method = com.dt.platform.common.controller.CodeRegisterController.exportExcel
url = /service-common/sys-code-register/export-excel-template , method = com.dt.platform.common.controller.CodeRegisterController.exportExcelTemplate
url = /service-common/sys-code-register/import-excel , method = com.dt.platform.common.controller.CodeRegisterController.importExcel
url = /service-common/sys-code-rule/update , method = com.dt.platform.common.controller.CodeRuleController.update
url = /service-common/sys-code-rule/save , method = com.dt.platform.common.controller.CodeRuleController.save
url = /service-common/sys-code-rule/insert , method = com.dt.platform.common.controller.CodeRuleController.insert
url = /service-common/sys-code-rule/get-by-ids , method = com.dt.platform.common.controller.CodeRuleController.getByIds
url = /service-common/sys-code-rule/query-list , method = com.dt.platform.common.controller.CodeRuleController.queryList
url = /service-common/sys-code-rule/get-by-id , method = com.dt.platform.common.controller.CodeRuleController.getById
url = /service-common/sys-code-rule/delete , method = com.dt.platform.common.controller.CodeRuleController.deleteById
url = /service-common/sys-code-rule/delete-by-ids , method = com.dt.platform.common.controller.CodeRuleController.deleteByIds
url = /service-common/sys-code-rule/query-paged-list , method = com.dt.platform.common.controller.CodeRuleController.queryPagedList
url = /service-common/sys-code-rule/export-excel , method = com.dt.platform.common.controller.CodeRuleController.exportExcel
url = /service-common/sys-code-rule/export-excel-template , method = com.dt.platform.common.controller.CodeRuleController.exportExcelTemplate
url = /service-common/sys-code-rule/import-excel , method = com.dt.platform.common.controller.CodeRuleController.importExcel
url = /service-common/sys-tpl-file/update , method = com.dt.platform.common.controller.TplFileController.update
url = /service-common/sys-tpl-file/save , method = com.dt.platform.common.controller.TplFileController.save
url = /service-common/sys-tpl-file/insert , method = com.dt.platform.common.controller.TplFileController.insert
url = /service-common/sys-tpl-file/get-by-ids , method = com.dt.platform.common.controller.TplFileController.getByIds
url = /service-common/sys-tpl-file/query-list , method = com.dt.platform.common.controller.TplFileController.queryList
url = /service-common/sys-tpl-file/get-by-id , method = com.dt.platform.common.controller.TplFileController.getById
url = /service-common/sys-tpl-file/delete , method = com.dt.platform.common.controller.TplFileController.deleteById
url = /service-common/sys-tpl-file/delete-by-ids , method = com.dt.platform.common.controller.TplFileController.deleteByIds
url = /service-common/sys-tpl-file/query-paged-list , method = com.dt.platform.common.controller.TplFileController.queryPagedList
url = /service-common/sys-tpl-file/export-excel , method = com.dt.platform.common.controller.TplFileController.exportExcel
url = /service-common/sys-tpl-file/export-excel-template , method = com.dt.platform.common.controller.TplFileController.exportExcelTemplate
url = /service-common/sys-tpl-file/import-excel , method = com.dt.platform.common.controller.TplFileController.importExcel
url = /service-common/sys-tpl-file/get-tpl-file-stream-by-code , method = com.dt.platform.common.controller.TplFileController.getTplFileStreamByCode
url = /business/common/code_allocation/code_allocation_form.html , method = com.dt.platform.common.page.CodeAllocationPageController.form
url = /business/common/code_allocation/code_allocation_list.html , method = com.dt.platform.common.page.CodeAllocationPageController.list
url = /business/common/code_attr/code_attr_form.html , method = com.dt.platform.common.page.CodeAttrPageController.form
url = /business/common/code_attr/code_attr_list.html , method = com.dt.platform.common.page.CodeAttrPageController.list
url = /business/common/code_register/code_register_form.html , method = com.dt.platform.common.page.CodeRegisterPageController.form
url = /business/common/code_register/code_register_list.html , method = com.dt.platform.common.page.CodeRegisterPageController.list
url = /business/common/code_rule/code_rule_form.html , method = com.dt.platform.common.page.CodeRulePageController.form
url = /business/common/code_rule/code_rule_list.html , method = com.dt.platform.common.page.CodeRulePageController.list
url = /business/common/tpl_file/tpl_file_form.html , method = com.dt.platform.common.page.TplFilePageController.form
url = /business/common/tpl_file/tpl_file_list.html , method = com.dt.platform.common.page.TplFilePageController.list
url = /service-knowledgebase/kn-category/update , method = com.dt.platform.knowledgebase.controller.CategoryController.update
url = /service-knowledgebase/kn-category/save , method = com.dt.platform.knowledgebase.controller.CategoryController.save
url = /service-knowledgebase/kn-category/insert , method = com.dt.platform.knowledgebase.controller.CategoryController.insert
url = /service-knowledgebase/kn-category/get-by-ids , method = com.dt.platform.knowledgebase.controller.CategoryController.getByIds
url = /service-knowledgebase/kn-category/query-list , method = com.dt.platform.knowledgebase.controller.CategoryController.queryList
url = /service-knowledgebase/kn-category/get-by-id , method = com.dt.platform.knowledgebase.controller.CategoryController.getById
url = /service-knowledgebase/kn-category/delete , method = com.dt.platform.knowledgebase.controller.CategoryController.deleteById
url = /service-knowledgebase/kn-category/delete-by-ids , method = com.dt.platform.knowledgebase.controller.CategoryController.deleteByIds
url = /service-knowledgebase/kn-category/query-paged-list , method = com.dt.platform.knowledgebase.controller.CategoryController.queryPagedList
url = /service-knowledgebase/kn-category/export-excel , method = com.dt.platform.knowledgebase.controller.CategoryController.exportExcel
url = /service-knowledgebase/kn-category/export-excel-template , method = com.dt.platform.knowledgebase.controller.CategoryController.exportExcelTemplate
url = /service-knowledgebase/kn-category/import-excel , method = com.dt.platform.knowledgebase.controller.CategoryController.importExcel
url = /service-knowledgebase/kn-content/update , method = com.dt.platform.knowledgebase.controller.ContentController.update
url = /service-knowledgebase/kn-content/save , method = com.dt.platform.knowledgebase.controller.ContentController.save
url = /service-knowledgebase/kn-content/insert , method = com.dt.platform.knowledgebase.controller.ContentController.insert
url = /service-knowledgebase/kn-content/get-by-ids , method = com.dt.platform.knowledgebase.controller.ContentController.getByIds
url = /service-knowledgebase/kn-content/query-list , method = com.dt.platform.knowledgebase.controller.ContentController.queryList
url = /service-knowledgebase/kn-content/get-by-id , method = com.dt.platform.knowledgebase.controller.ContentController.getById
url = /service-knowledgebase/kn-content/delete , method = com.dt.platform.knowledgebase.controller.ContentController.deleteById
url = /service-knowledgebase/kn-content/delete-by-ids , method = com.dt.platform.knowledgebase.controller.ContentController.deleteByIds
url = /service-knowledgebase/kn-content/query-paged-list , method = com.dt.platform.knowledgebase.controller.ContentController.queryPagedList
url = /service-knowledgebase/kn-content/export-excel , method = com.dt.platform.knowledgebase.controller.ContentController.exportExcel
url = /service-knowledgebase/kn-content/export-excel-template , method = com.dt.platform.knowledgebase.controller.ContentController.exportExcelTemplate
url = /service-knowledgebase/kn-content/import-excel , method = com.dt.platform.knowledgebase.controller.ContentController.importExcel
url = /business/knowledgebase/category/category_form.html , method = com.dt.platform.knowledgebase.page.CategoryPageController.form
url = /business/knowledgebase/category/category_list.html , method = com.dt.platform.knowledgebase.page.CategoryPageController.list
url = /business/knowledgebase/content/content_form.html , method = com.dt.platform.knowledgebase.page.ContentPageController.form
url = /business/knowledgebase/content/content_list.html , method = com.dt.platform.knowledgebase.page.ContentPageController.list
url = /service-contract/cont-company/update , method = com.dt.platform.contract.controller.CompanyController.update
url = /service-contract/cont-company/save , method = com.dt.platform.contract.controller.CompanyController.save
url = /service-contract/cont-company/insert , method = com.dt.platform.contract.controller.CompanyController.insert
url = /service-contract/cont-company/get-by-ids , method = com.dt.platform.contract.controller.CompanyController.getByIds
url = /service-contract/cont-company/query-list , method = com.dt.platform.contract.controller.CompanyController.queryList
url = /service-contract/cont-company/get-by-id , method = com.dt.platform.contract.controller.CompanyController.getById
url = /service-contract/cont-company/delete , method = com.dt.platform.contract.controller.CompanyController.deleteById
url = /service-contract/cont-company/delete-by-ids , method = com.dt.platform.contract.controller.CompanyController.deleteByIds
url = /service-contract/cont-company/query-paged-list , method = com.dt.platform.contract.controller.CompanyController.queryPagedList
url = /service-contract/cont-company/export-excel , method = com.dt.platform.contract.controller.CompanyController.exportExcel
url = /service-contract/cont-company/export-excel-template , method = com.dt.platform.contract.controller.CompanyController.exportExcelTemplate
url = /service-contract/cont-company/import-excel , method = com.dt.platform.contract.controller.CompanyController.importExcel
url = /service-contract/cont-contract-category/update , method = com.dt.platform.contract.controller.ContractCategoryController.update
url = /service-contract/cont-contract-category/save , method = com.dt.platform.contract.controller.ContractCategoryController.save
url = /service-contract/cont-contract-category/insert , method = com.dt.platform.contract.controller.ContractCategoryController.insert
url = /service-contract/cont-contract-category/get-by-ids , method = com.dt.platform.contract.controller.ContractCategoryController.getByIds
url = /service-contract/cont-contract-category/query-list , method = com.dt.platform.contract.controller.ContractCategoryController.queryList
url = /service-contract/cont-contract-category/get-by-id , method = com.dt.platform.contract.controller.ContractCategoryController.getById
url = /service-contract/cont-contract-category/delete , method = com.dt.platform.contract.controller.ContractCategoryController.deleteById
url = /service-contract/cont-contract-category/delete-by-ids , method = com.dt.platform.contract.controller.ContractCategoryController.deleteByIds
url = /service-contract/cont-contract-category/query-paged-list , method = com.dt.platform.contract.controller.ContractCategoryController.queryPagedList
url = /service-contract/cont-contract-category/export-excel , method = com.dt.platform.contract.controller.ContractCategoryController.exportExcel
url = /service-contract/cont-contract-category/export-excel-template , method = com.dt.platform.contract.controller.ContractCategoryController.exportExcelTemplate
url = /service-contract/cont-contract-category/import-excel , method = com.dt.platform.contract.controller.ContractCategoryController.importExcel
url = /service-contract/cont-contract/update , method = com.dt.platform.contract.controller.ContractController.update
url = /service-contract/cont-contract/save , method = com.dt.platform.contract.controller.ContractController.save
url = /service-contract/cont-contract/insert , method = com.dt.platform.contract.controller.ContractController.insert
url = /service-contract/cont-contract/get-by-ids , method = com.dt.platform.contract.controller.ContractController.getByIds
url = /service-contract/cont-contract/query-list , method = com.dt.platform.contract.controller.ContractController.queryList
url = /service-contract/cont-contract/get-by-id , method = com.dt.platform.contract.controller.ContractController.getById
url = /service-contract/cont-contract/delete , method = com.dt.platform.contract.controller.ContractController.deleteById
url = /service-contract/cont-contract/delete-by-ids , method = com.dt.platform.contract.controller.ContractController.deleteByIds
url = /service-contract/cont-contract/query-paged-list , method = com.dt.platform.contract.controller.ContractController.queryPagedList
url = /service-contract/cont-contract/export-excel , method = com.dt.platform.contract.controller.ContractController.exportExcel
url = /service-contract/cont-contract/export-excel-template , method = com.dt.platform.contract.controller.ContractController.exportExcelTemplate
url = /service-contract/cont-contract/import-excel , method = com.dt.platform.contract.controller.ContractController.importExcel
url = /service-contract/cont-contract-fund/update , method = com.dt.platform.contract.controller.ContractFundController.update
url = /service-contract/cont-contract-fund/save , method = com.dt.platform.contract.controller.ContractFundController.save
url = /service-contract/cont-contract-fund/insert , method = com.dt.platform.contract.controller.ContractFundController.insert
url = /service-contract/cont-contract-fund/get-by-ids , method = com.dt.platform.contract.controller.ContractFundController.getByIds
url = /service-contract/cont-contract-fund/query-list , method = com.dt.platform.contract.controller.ContractFundController.queryList
url = /service-contract/cont-contract-fund/get-by-id , method = com.dt.platform.contract.controller.ContractFundController.getById
url = /service-contract/cont-contract-fund/delete , method = com.dt.platform.contract.controller.ContractFundController.deleteById
url = /service-contract/cont-contract-fund/delete-by-ids , method = com.dt.platform.contract.controller.ContractFundController.deleteByIds
url = /service-contract/cont-contract-fund/query-paged-list , method = com.dt.platform.contract.controller.ContractFundController.queryPagedList
url = /service-contract/cont-contract-fund/export-excel , method = com.dt.platform.contract.controller.ContractFundController.exportExcel
url = /service-contract/cont-contract-fund/export-excel-template , method = com.dt.platform.contract.controller.ContractFundController.exportExcelTemplate
url = /service-contract/cont-contract-fund/import-excel , method = com.dt.platform.contract.controller.ContractFundController.importExcel
url = /business/contract/company/company_form.html , method = com.dt.platform.contract.page.CompanyPageController.form
url = /business/contract/company/company_list.html , method = com.dt.platform.contract.page.CompanyPageController.list
url = /business/contract/contract_category/contract_category_form.html , method = com.dt.platform.contract.page.ContractCategoryPageController.form
url = /business/contract/contract_category/contract_category_list.html , method = com.dt.platform.contract.page.ContractCategoryPageController.list
url = /business/contract/contract_fund/contract_fund_form.html , method = com.dt.platform.contract.page.ContractFundPageController.form
url = /business/contract/contract_fund/contract_fund_list.html , method = com.dt.platform.contract.page.ContractFundPageController.list
url = /business/contract/contract/contract_form.html , method = com.dt.platform.contract.page.ContractPageController.form
url = /business/contract/contract/contract_list.html , method = com.dt.platform.contract.page.ContractPageController.list
url = /v3/api-docs , method = springfox.documentation.oas.web.OpenApiControllerWebMvc.getDocumentation
url = /error , method = org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error
url = /error , method = org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml

14:29:24.634 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,65] - url scan time : 106ms
14:29:24.645 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,84] - 

======================== FOX-NIC-WEB IS READY ========================
	Machine Id         		D7B67D75818C671B
	Process Id         		66378
	Application Name	service-all
	Active Profile			default
	Port							8089
	Boot Time				30s
	Visit Local				http://127.0.0.1:8089/
	Visit LAN(0)	http://10.7.246.96:8089/
======================== FOX-NIC-WEB IS READY ========================

14:29:24.650 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-customer
14:29:24.651 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-contract
14:29:24.652 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-knowledgebase
14:29:24.653 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-common
14:29:24.654 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-console
14:29:24.654 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-datacenter
14:29:24.656 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-eam
14:29:24.658 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-hrm
14:29:24.659 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-ops
14:29:24.920 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,72] - deploy is ready on 132 dirs
14:30:02.555 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_config","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_config'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130602537
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:02.580 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.cachekey"}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey'
┣ 结果： 
┣━ 耗时：14ms , start = 1637130602564
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:02.672 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.title"}
┣ 执行：select * from sys_config WHERE code = 'system.title'
┣ 结果： 
┣━ 耗时：15ms , start = 1637130602649
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:02.697 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.version.code"}
┣ 执行：select * from sys_config WHERE code = 'system.version.code'
┣ 结果： 
┣━ 耗时：13ms , start = 1637130602681
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:02.718 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.version.name"}
┣ 执行：select * from sys_config WHERE code = 'system.version.name'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130602700
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:02.864 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.version.type"}
┣ 执行：select * from sys_config WHERE code = 'system.version.type'
┣ 结果： 
┣━ 耗时：139ms , start = 1637130602723
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:02.903 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.login.default"}
┣ 执行：select * from sys_config WHERE code = 'system.login.default'
┣ 结果： 
┣━ 耗时：21ms , start = 1637130602879
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:02.924 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.text'
┣ 结果： 
┣━ 耗时：13ms , start = 1637130602908
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:02.942 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.link'
┣ 结果： 
┣━ 耗时：14ms , start = 1637130602926
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:04.010 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"EAM(测试版本_1.0.0)","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'EAM(测试版本_1.0.0)' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637130603994
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:04.076 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"用户登录","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '用户登录' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：25ms , start = 1637130604043
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:04.619 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"EAM","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'EAM' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130604606
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:04.646 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"© 2021 Foxnic-Web 版权所有","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '© 2021 Foxnic-Web 版权所有' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637130604633
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:10.133 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.login.captcha.any"}
┣ 执行：select * from sys_config WHERE code = 'system.login.captcha.any'
┣ 结果： 
┣━ 耗时：15ms , start = 1637130610116
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:10.372 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = 'admin' ) A
┣ 结果： 
┣━ 耗时：22ms , start = 1637130610349
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:278)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 

14:30:10.389 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = 'admin' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637130610377
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 

14:30:10.418 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_user WHERE name = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"admin","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_user WHERE name = 'admin' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：18ms , start = 1637130610396
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 

14:30:10.481 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role'
┣ 结果： 
┣━ 耗时：17ms , start = 1637130610461
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:10.501 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_user'
┣ 结果： 
┣━ 耗时：14ms , start = 1637130610486
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:10.564 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_menu'
┣ 结果： 
┣━ 耗时：52ms , start = 1637130610512
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:10.588 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '110588348101165911' )
┣ 结果： 
┣━ 耗时：67ms , start = 1637130610520
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

14:30:10.754 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( '110588348101165911' )
┣ 结果： 
┣━ 耗时：167ms , start = 1637130610586
┣━ 返回：RcdSet,size=1167
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 

14:30:10.769 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_user_tenant","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_user_tenant'
┣ 结果： 
┣━ 耗时：183ms , start = 1637130610585
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:10.795 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu'
┣ 结果： 
┣━ 耗时：17ms , start = 1637130610778
┣━ 返回：RcdSet,size=22
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:10.797 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"110588348101165911"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '110588348101165911' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：15ms , start = 1637130610782
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

14:30:10.958 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 
┣ 语句：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= ? ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"110588348101165911","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( '110588348101165911' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：153ms , start = 1637130610804
┣━ 返回：RcdSet,size=1167
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 

14:30:11.142 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee'
┣ 结果： 
┣━ 耗时：28ms , start = 1637130611114
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.162 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637130611148
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

14:30:11.163 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130611146
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.184 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：15ms , start = 1637130611168
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.205 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130611188
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.210 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"487660170021703680","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '487660170021703680' )
┣ 结果： 
┣━ 耗时：20ms , start = 1637130611189
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.227 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"479956459375820800","PARAM_18":"490923970208468992","PARAM_10":"498885073529995264","PARAM_11":"481749744998154240","PARAM_12":"485741088418562048","PARAM_13":"476673967462023168","PARAM_14":"479354710537535488","PARAM_15":"478585173336653824","PARAM_16":"488696580300341248","PARAM_9":"463399683914465280","PARAM_8":"471974283854217216","PARAM_7":"489901512886059008","PARAM_6":"480137007553576960","PARAM_5":"463429350247628800","PARAM_4":"475954735753461760","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '475954735753461760' , '463429350247628800' , '480137007553576960' , '489901512886059008' , '471974283854217216' , '463399683914465280' , '498885073529995264' , '481749744998154240' , '485741088418562048' , '476673967462023168' , '479354710537535488' , '478585173336653824' , '488696580300341248' , '479956459375820800' , '490923970208468992' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637130611212
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.227 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130611211
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.235 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"487660170021703680","PARAM_18":"490923311769849856","PARAM_19":"471666413233242112","PARAM_10":"490638744550907904","PARAM_11":"481068382330814464","PARAM_12":"471653531770683392","PARAM_13":"473771445873278976","PARAM_14":"501416282168492032","PARAM_15":"482583842692005888","PARAM_16":"473534962490933248","PARAM_9":"484680928828850176","PARAM_8":"472023699273285632","PARAM_7":"465893030000328704","PARAM_6":"491342618928611328","PARAM_5":"473503433593192448","PARAM_4":"495244156847783936","PARAM_3":"482877676047040511","PARAM_1":0,"PARAM_20":"501072627503202304","PARAM_21":"[]","PARAM_22":"490923211228188672","PARAM_23":"481119852224839680","PARAM_24":"479219957951889408","PARAM_25":"500337554411757568","PARAM_26":"479329585473781760"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '482877676047040511' , '495244156847783936' , '473503433593192448' , '491342618928611328' , '465893030000328704' , '472023699273285632' , '484680928828850176' , '490638744550907904' , '481068382330814464' , '471653531770683392' , '473771445873278976' , '501416282168492032' , '482583842692005888' , '473534962490933248' , '487660170021703680' , '490923311769849856' , '471666413233242112' , '501072627503202304' , '[]' , '490923211228188672' , '481119852224839680' , '479219957951889408' , '500337554411757568' , '479329585473781760' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637130611219
┣━ 返回：RcdSet,size=23
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.254 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：22ms , start = 1637130611231
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.253 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"501389626531909632","PARAM_18":"490803384081711104","PARAM_19":"485888529612668928","PARAM_20":"473733250494234624","PARAM_10":"476679540945453056","PARAM_21":"489818737319346176","PARAM_11":"487568361882910720","PARAM_22":"480377913464586240","PARAM_12":"473609125796773888","PARAM_13":"492410573934297088","PARAM_14":"498885073529995264","PARAM_15":"480389130912530432","PARAM_16":"478688762159693824","PARAM_9":"474281113125126144","PARAM_8":"482573207459594240","PARAM_7":"498582527229820928","PARAM_6":"486313018175520768","PARAM_5":"495243921824153600","PARAM_4":"494904448380829696","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '494904448380829696' , '495243921824153600' , '486313018175520768' , '498582527229820928' , '482573207459594240' , '474281113125126144' , '476679540945453056' , '487568361882910720' , '473609125796773888' , '492410573934297088' , '498885073529995264' , '480389130912530432' , '478688762159693824' , '501389626531909632' , '490803384081711104' , '485888529612668928' , '473733250494234624' , '489818737319346176' , '480377913464586240' )
┣ 结果： 
┣━ 耗时：18ms , start = 1637130611233
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.256 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"485747524208951296","PARAM_11":"498885073529995264","PARAM_12":"486551839098011648","PARAM_13":"476660938984914944","PARAM_14":"482581320229191680","PARAM_15":"480481725315547136","PARAM_9":"472331321499189248","PARAM_8":"463399148020826112","PARAM_7":"482877676047040512","PARAM_6":"510887580426829824","PARAM_5":"[]","PARAM_4":"464788438000861184","PARAM_3":"505300850025955328"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '505300850025955328' , '464788438000861184' , '[]' , '510887580426829824' , '482877676047040512' , '463399148020826112' , '472331321499189248' , '485747524208951296' , '498885073529995264' , '486551839098011648' , '476660938984914944' , '482581320229191680' , '480481725315547136' )
┣ 结果： 
┣━ 耗时：18ms , start = 1637130611236
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.262 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"510887820433293312","PARAM_8":"463401580721340416","PARAM_10":"473626745103187968","PARAM_7":"463401807993896960","PARAM_6":"481749145309151232","PARAM_5":"501072373705867264","PARAM_4":"479959564171608064","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '479959564171608064' , '501072373705867264' , '481749145309151232' , '463401807993896960' , '463401580721340416' , '510887820433293312' , '473626745103187968' )
┣ 结果： 
┣━ 耗时：22ms , start = 1637130611239
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.282 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"490803286488645632","PARAM_8":"490245507570991104","PARAM_10":"480488576534970368","PARAM_7":"482864633716146176","PARAM_11":"479220705905344512","PARAM_6":"482581092939857920","PARAM_12":"490803523777200128","PARAM_5":"463397731918938112","PARAM_4":"[]","PARAM_3":"498885073529995264"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '498885073529995264' , '[]' , '463397731918938112' , '482581092939857920' , '482864633716146176' , '490245507570991104' , '490803286488645632' , '480488576534970368' , '479220705905344512' , '490803523777200128' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637130611266
┣━ 返回：RcdSet,size=9
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.283 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_8":"489077805078806528","PARAM_7":"481338861117505536","PARAM_6":"[]","PARAM_5":"498885073529995264","PARAM_4":"492410573934297088","PARAM_3":"478922681358483456"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '478922681358483456' , '492410573934297088' , '498885073529995264' , '[]' , '481338861117505536' , '489077805078806528' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637130611268
┣━ 返回：RcdSet,size=5
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.289 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"479008663701291008","PARAM_18":"487660170021703680","PARAM_19":"478603507688013824","PARAM_31":"490924065570164737","PARAM_10":"494904212426063872","PARAM_32":"484687827645239296","PARAM_11":"472331129437814784","PARAM_33":"472023108039999488","PARAM_12":"463402969874825216","PARAM_34":"471623107291906048","PARAM_13":"487559532503891968","PARAM_35":"477956217075924992","PARAM_14":"471622514443812864","PARAM_36":"485743350629007360","PARAM_15":"498885073529995264","PARAM_37":"511607133662347264","PARAM_16":"508300419328376832","PARAM_30":"490888724289159168","PARAM_9":"507635144501231616","PARAM_8":"478080872159903744","PARAM_7":"463400823506862080","PARAM_6":"483218056047230976","PARAM_5":"463708992481263616","PARAM_4":"479388218479869952","PARAM_3":"485560933834293248","PARAM_1":0,"PARAM_28":"[]","PARAM_29":"501074097552228352","PARAM_20":"485936556654198784","PARAM_21":"484684747155439616","PARAM_22":"489922965425618944","PARAM_23":"474123290672103424","PARAM_24":"477952342537273344","PARAM_25":"463400000391479296","PARAM_26":"494597317773492224","PARAM_27":"502195284776849408"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '485560933834293248' , '479388218479869952' , '463708992481263616' , '483218056047230976' , '463400823506862080' , '478080872159903744' , '507635144501231616' , '494904212426063872' , '472331129437814784' , '463402969874825216' , '487559532503891968' , '471622514443812864' , '498885073529995264' , '508300419328376832' , '479008663701291008' , '487660170021703680' , '478603507688013824' , '485936556654198784' , '484684747155439616' , '489922965425618944' , '474123290672103424' , '477952342537273344' , '463400000391479296' , '494597317773492224' , '502195284776849408' , '[]' , '501074097552228352' , '490888724289159168' , '490924065570164737' , '484687827645239296' , '472023108039999488' , '471623107291906048' , '477956217075924992' , '485743350629007360' , '511607133662347264' )
┣ 结果： 
┣━ 耗时：18ms , start = 1637130611269
┣━ 返回：RcdSet,size=34
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.296 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_tenant","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_tenant'
┣ 结果： 
┣━ 耗时：23ms , start = 1637130611267
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.299 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"479218751024136192","PARAM_8":"476319981961740288","PARAM_10":"501072108604882944","PARAM_7":"480492959255494656","PARAM_11":"478956684543262720","PARAM_6":"501416282168492032","PARAM_12":"481563563521998848","PARAM_5":"[]","PARAM_4":"498885073529995264","PARAM_3":"482865228384567296"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '482865228384567296' , '498885073529995264' , '[]' , '501416282168492032' , '480492959255494656' , '476319981961740288' , '479218751024136192' , '501072108604882944' , '478956684543262720' , '481563563521998848' )
┣ 结果： 
┣━ 耗时：28ms , start = 1637130611270
┣━ 返回：RcdSet,size=9
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:11.315 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'T001' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130611304
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 

14:30:11.319 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：14ms , start = 1637130611304
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.340 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：14ms , start = 1637130611322
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.377 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"479330041516261376","PARAM_31":"484681008940056576","PARAM_32":"485747524523524096","PARAM_33":"478956693149974528","PARAM_34":"481338869564833792","PARAM_35":"472036243182452736","PARAM_36":"482581099034181632","PARAM_37":"473733259285495808","PARAM_38":"476660946866012160","PARAM_30":"474123297894694912","PARAM_28":"486551847209795584","PARAM_29":"481563572455866368","PARAM_20":"486313027243606016","PARAM_21":"473771454769397760","PARAM_22":"463400008926887936","PARAM_23":"463402976384385024","PARAM_24":"system_config","PARAM_25":"494597324853477376","PARAM_26":"482581327950905344","PARAM_27":"482581099617189888","PARAM_17":"479218759370801152","PARAM_18":"479220714138763264","PARAM_19":"479330042220904448","PARAM_97":"472331321801179136","PARAM_10":"473503440530571264","PARAM_98":"476673975825465344","PARAM_11":"485853808635678720","PARAM_99":"486313026476048384","PARAM_12":"479354718158585856","PARAM_13":"480481733238587392","PARAM_14":"495243928853807104","PARAM_15":"473534968501370880","PARAM_16":"473626753412104192","PARAM_90":"463402976065617920","PARAM_91":"477956224856358912","PARAM_92":"501072381054287872","PARAM_93":"479388230924369920","PARAM_94":"463401814696394752","PARAM_95":"489815791064055808","PARAM_96":"463400831098552320","PARAM_86":"471974290447663104","PARAM_87":"482581320564736000","PARAM_88":"478956692394999808","PARAM_89":"471986628336812032","PARAM_80":"484684753866326016","PARAM_81":"479329592423743488","PARAM_82":"hrm","PARAM_83":"464788438315433984","PARAM_84":"476660947629375488","PARAM_85":"501072635946336256","PARAM_103":"479008671368478720","PARAM_104":"479959571725549568","PARAM_101":"507635160540250112","PARAM_102":"511607135369428992","PARAM_107":"486551839387418624","PARAM_108":"498770119770505217","PARAM_105":"471623115152031744","PARAM_106":"495244164322033664","PARAM_75":"485560941274988544","PARAM_76":"474281123879321600","PARAM_77":"501072635275247616","PARAM_109":"479219965778460672","PARAM_78":"482583850279501824","PARAM_79":"476673976400084992","PARAM_70":"482877683861028864","PARAM_71":"498770254759985153","PARAM_72":"479218758599049216","PARAM_73":"473534969071796224","PARAM_74":"510887580523298816","PARAM_9":"481338870340780032","PARAM_8":"480137014788751360","PARAM_7":"492410581156888576","PARAM_6":"508300433685479424","PARAM_5":"476319989616345088","PARAM_110":"480481725646897152","PARAM_4":"482865235280003072","PARAM_111":"480377920796229632","PARAM_3":"479329592994168832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"471666420770406400","PARAM_65":"485888536512299008","PARAM_66":"482865234667634688","PARAM_67":"494904219631878144","PARAM_68":"484684754508054528","PARAM_69":"479959570941214720","PARAM_60":"481068389410799616","PARAM_61":"478080880531734528","PARAM_62":"472023706713980928","PARAM_63":"463401587079905280","PARAM_100":"485747532043911168","PARAM_125":"501072381725376512","PARAM_126":"474281123241787392","PARAM_123":"483218063576006656","PARAM_124":"482573214719934464","PARAM_129":"476679548117712896","PARAM_127":"478178015856033792","PARAM_128":"476319988987199488","PARAM_53":"473503439867871232","PARAM_54":"494904455314014208","PARAM_55":"487568377175343104","PARAM_56":"473609133057114112","PARAM_57":"473626752741015552","PARAM_58":"489077811793887232","PARAM_59":"463400830758813696","PARAM_50":"485743358573019136","PARAM_51":"498885074154946560","PARAM_52":"480492967241449472","PARAM_130":"494904219002732544","PARAM_114":"511607135537201152","PARAM_115":"476660939324653568","PARAM_112":"480492966641664000","PARAM_113":"482877676386779136","PARAM_118":"490245514780999680","PARAM_119":"471653539131686912","PARAM_116":"492410581827977216","PARAM_117":"485743359244107776","PARAM_42":"485747531372822528","PARAM_43":"473609133728202752","PARAM_44":"463399689744547840","PARAM_45":"482877683189940224","PARAM_46":"480137015552114688","PARAM_47":"480481732412309504","PARAM_48":"463399148318621696","PARAM_49":"476679547505344512","PARAM_40":"510887822354284544","PARAM_41":"510887582641422336","PARAM_121":"487559547058126848","PARAM_122":"508300432511074304","PARAM_120":"495243929508118528"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479329592994168832' , '482865235280003072' , '476319989616345088' , '508300433685479424' , '492410581156888576' , '480137014788751360' , '481338870340780032' , '473503440530571264' , '485853808635678720' , '479354718158585856' , '480481733238587392' , '495243928853807104' , '473534968501370880' , '473626753412104192' , '479218759370801152' , '479220714138763264' , '479330042220904448' , '486313027243606016' , '473771454769397760' , '463400008926887936' , '463402976384385024' , 'system_config' , '494597324853477376' , '482581327950905344' , '482581099617189888' , '486551847209795584' , '481563572455866368' , '474123297894694912' , '484681008940056576' , '485747524523524096' , '478956693149974528' , '481338869564833792' , '472036243182452736' , '482581099034181632' , '473733259285495808' , '476660946866012160' , '479330041516261376' , '510887822354284544' , '510887582641422336' , '485747531372822528' , '473609133728202752' , '463399689744547840' , '482877683189940224' , '480137015552114688' , '480481732412309504' , '463399148318621696' , '476679547505344512' , '485743358573019136' , '498885074154946560' , '480492967241449472' , '473503439867871232' , '494904455314014208' , '487568377175343104' , '473609133057114112' , '473626752741015552' , '489077811793887232' , '463400830758813696' , '481068389410799616' , '478080880531734528' , '472023706713980928' , '463401587079905280' , '471666420770406400' , '485888536512299008' , '482865234667634688' , '494904219631878144' , '484684754508054528' , '479959570941214720' , '482877683861028864' , '498770254759985153' , '479218758599049216' , '473534969071796224' , '510887580523298816' , '485560941274988544' , '474281123879321600' , '501072635275247616' , '482583850279501824' , '476673976400084992' , '484684753866326016' , '479329592423743488' , 'hrm' , '464788438315433984' , '476660947629375488' , '501072635946336256' , '471974290447663104' , '482581320564736000' , '478956692394999808' , '471986628336812032' , '463402976065617920' , '477956224856358912' , '501072381054287872' , '479388230924369920' , '463401814696394752' , '489815791064055808' , '463400831098552320' , '472331321801179136' , '476673975825465344' , '486313026476048384' , '485747532043911168' , '507635160540250112' , '511607135369428992' , '479008671368478720' , '479959571725549568' , '471623115152031744' , '495244164322033664' , '486551839387418624' , '498770119770505217' , '479219965778460672' , '480481725646897152' , '480377920796229632' , '480492966641664000' , '482877676386779136' , '511607135537201152' , '476660939324653568' , '492410581827977216' , '485743359244107776' , '490245514780999680' , '471653539131686912' , '495243929508118528' , '487559547058126848' , '508300432511074304' , '483218063576006656' , '482573214719934464' , '501072381725376512' , '474281123241787392' , '478178015856033792' , '476319988987199488' , '476679548117712896' , '494904219002732544' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：43ms , start = 1637130611328
┣━ 返回：RcdSet,size=112
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.388 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：34ms , start = 1637130611353
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.411 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130611393
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.424 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"478603514990297088","PARAM_31":"486313018553008128","PARAM_32":"488696594527420416","PARAM_33":"482581326621310976","PARAM_34":"473771453230088192","PARAM_35":"479219964406923264","PARAM_36":"475686686903238656","PARAM_37":"492410574299201536","PARAM_38":"510887582259740672","PARAM_30":"481119858512101376","PARAM_28":"485936563683852288","PARAM_29":"479354717013540864","PARAM_20":"463401814398599168","PARAM_21":"482583848937324544","PARAM_22":"482573214082400256","PARAM_23":"473733257758769152","PARAM_24":"478688762461683712","PARAM_25":"486551846547095552","PARAM_26":"479598112373997568","PARAM_27":"472331135444058112","PARAM_17":"485560940150915072","PARAM_18":"480488583736590336","PARAM_19":"471653538498347008","PARAM_97":"474155093021687808","PARAM_10":"498581971681673216","PARAM_98":"481119859145441280","PARAM_11":"472023115707187200","PARAM_99":"482864640871628800","PARAM_12":"477956224147521536","PARAM_13":"475686687532384256","PARAM_14":"463399154400362496","PARAM_15":"485888535908319232","PARAM_16":"476679541226471424","PARAM_90":"471974289361338368","PARAM_91":"501416296345239552","PARAM_92":"471622521137922048","PARAM_93":"489901521874452480","PARAM_94":"495244163676110848","PARAM_95":"479220713446703104","PARAM_96":"501074104456052736","PARAM_86":"479329292388401152","PARAM_87":"479598105545670656","PARAM_88":"488696593290100736","PARAM_89":"471623114736795648","PARAM_80":"484683937952563200","PARAM_81":"471666420116094976","PARAM_82":"489901522558124032","PARAM_83":"477952351441780736","PARAM_84":"474158815193858049","PARAM_85":"473228716474892288","PARAM_103":"463401586794692608","PARAM_104":"489815790388772864","PARAM_101":"475954743139631104","PARAM_102":"478922689868726272","PARAM_107":"472023706080641024","PARAM_108":"494597324215943168","PARAM_105":"472331135993511936","PARAM_106":"472331328520454144","PARAM_75":"487568375958994944","PARAM_76":"472023114964795392","PARAM_77":"507635159172907008","PARAM_109":"475954742317547520","PARAM_78":"473771454031200256","PARAM_79":"471985490283724800","PARAM_70":"481749152917618688","PARAM_71":"485888529902075904","PARAM_72":"480377920209027072","PARAM_73":"481563571654754304","PARAM_74":"484683938606874624","PARAM_9":"494904448682819584","PARAM_8":"487568362436558848","PARAM_7":"485560940721340416","PARAM_6":"481068388223811584","PARAM_5":"479354717600743424","PARAM_110":"510887822199095296","PARAM_4":"501072114866978816","PARAM_111":"463399689467723776","PARAM_3":"478080879852257280","PARAM_2":0,"PARAM_1":0,"PARAM_64":"480377913779159040","PARAM_65":"489922972543352832","PARAM_66":"464788444783050752","PARAM_67":"485741095674707968","PARAM_68":"478603515636219904","PARAM_69":"498885086280679424","PARAM_60":"478585180114649088","PARAM_61":"510887582448484352","PARAM_62":"480389137958961152","PARAM_63":"485741095003619328","PARAM_100":"463397738646601728","PARAM_125":"479598113124777984","PARAM_126":"489815783782744064","PARAM_123":"479329291742478336","PARAM_124":"481749152221364224","PARAM_129":"490245514197991424","PARAM_127":"481068388831985664","PARAM_128":"479956467156254720","PARAM_53":"482581327279816704","PARAM_54":"489077811454148608","PARAM_55":"487559545757892608","PARAM_56":"474281113531973632","PARAM_57":"479388230056148992","PARAM_58":"463429357650575360","PARAM_59":"495243922151309312","PARAM_50":"473609126128123904","PARAM_51":"473733258505355264","PARAM_52":"474154919352336384","PARAM_130":"482573207753195520","PARAM_114":"479008670655447040","PARAM_115":"472331327836782592","PARAM_112":"501389817515347968","PARAM_113":"479008669908860928","PARAM_118":"471974289902403584","PARAM_119":"484681000786329600","PARAM_116":"463400008603926528","PARAM_117":"479219965136732160","PARAM_42":"481749751662903296","PARAM_43":"473733250888499200","PARAM_44":"501072115496124416","PARAM_45":"479220712784003072","PARAM_46":"477952350720360448","PARAM_47":"478688768535035904","PARAM_48":"480389131239686144","PARAM_49":"482583849616801792","PARAM_40":"483218062917500928","PARAM_41":"474158548662616065","PARAM_121":"501074105164890112","PARAM_122":"474123297290715136","PARAM_120":"494904454714228736"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478080879852257280' , '501072114866978816' , '479354717600743424' , '481068388223811584' , '485560940721340416' , '487568362436558848' , '494904448682819584' , '498581971681673216' , '472023115707187200' , '477956224147521536' , '475686687532384256' , '463399154400362496' , '485888535908319232' , '476679541226471424' , '485560940150915072' , '480488583736590336' , '471653538498347008' , '463401814398599168' , '482583848937324544' , '482573214082400256' , '473733257758769152' , '478688762461683712' , '486551846547095552' , '479598112373997568' , '472331135444058112' , '485936563683852288' , '479354717013540864' , '481119858512101376' , '486313018553008128' , '488696594527420416' , '482581326621310976' , '473771453230088192' , '479219964406923264' , '475686686903238656' , '492410574299201536' , '510887582259740672' , '478603514990297088' , '483218062917500928' , '474158548662616065' , '481749751662903296' , '473733250888499200' , '501072115496124416' , '479220712784003072' , '477952350720360448' , '478688768535035904' , '480389131239686144' , '482583849616801792' , '473609126128123904' , '473733258505355264' , '474154919352336384' , '482581327279816704' , '489077811454148608' , '487559545757892608' , '474281113531973632' , '479388230056148992' , '463429357650575360' , '495243922151309312' , '478585180114649088' , '510887582448484352' , '480389137958961152' , '485741095003619328' , '480377913779159040' , '489922972543352832' , '464788444783050752' , '485741095674707968' , '478603515636219904' , '498885086280679424' , '481749152917618688' , '485888529902075904' , '480377920209027072' , '481563571654754304' , '484683938606874624' , '487568375958994944' , '472023114964795392' , '507635159172907008' , '473771454031200256' , '471985490283724800' , '484683937952563200' , '471666420116094976' , '489901522558124032' , '477952351441780736' , '474158815193858049' , '473228716474892288' , '479329292388401152' , '479598105545670656' , '488696593290100736' , '471623114736795648' , '471974289361338368' , '501416296345239552' , '471622521137922048' , '489901521874452480' , '495244163676110848' , '479220713446703104' , '501074104456052736' , '474155093021687808' , '481119859145441280' , '482864640871628800' , '463397738646601728' , '475954743139631104' , '478922689868726272' , '463401586794692608' , '489815790388772864' , '472331135993511936' , '472331328520454144' , '472023706080641024' , '494597324215943168' , '475954742317547520' , '510887822199095296' , '463399689467723776' , '501389817515347968' , '479008669908860928' , '479008670655447040' , '472331327836782592' , '463400008603926528' , '479219965136732160' , '471974289902403584' , '484681000786329600' , '494904454714228736' , '501074105164890112' , '474123297290715136' , '479329291742478336' , '481749152221364224' , '479598113124777984' , '489815783782744064' , '481068388831985664' , '479956467156254720' , '490245514197991424' , '482573207753195520' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：55ms , start = 1637130611364
┣━ 返回：RcdSet,size=97
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.435 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130611417
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.440 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"463401812293058560","PARAM_31":"498885085060136960","PARAM_32":"485936562941460480","PARAM_33":"479388227191439360","PARAM_34":"478688767939444736","PARAM_35":"495243928195301376","PARAM_36":"473534967930945536","PARAM_37":"494904218386169856","PARAM_38":"478080877377617920","PARAM_30":"474281120842645504","PARAM_28":"484684753241374720","PARAM_29":"480137007910092800","PARAM_20":"get-current-user","PARAM_21":"463400830083530752","PARAM_22":"478080879135031296","PARAM_23":"490245513522708480","PARAM_24":"473626750312513536","PARAM_25":"485888535333699584","PARAM_26":"471623114069901312","PARAM_27":"480377919596658688","PARAM_17":"477956223535153152","PARAM_18":"492410580473217024","PARAM_19":"478585179489697792","PARAM_97":"498769910416015360","PARAM_10":"489077810774671360","PARAM_98":"476673974453927936","PARAM_11":"495244163038576640","PARAM_99":"486551845917949952","PARAM_12":"494597323653906432","PARAM_13":"479329591786209280","PARAM_14":"485747530676568064","PARAM_15":"482573213478420480","PARAM_16":"473609132373442560","PARAM_90":"482877680811769856","PARAM_91":"478922689172471808","PARAM_92":"495243926484025344","PARAM_93":"482864640208928768","PARAM_94":"475954736080617472","PARAM_95":"490245511899512832","PARAM_96":"498769993710698497","PARAM_86":"486313025783988224","PARAM_87":"486313023716196352","PARAM_88":"480481731707666432","PARAM_89":"471623112182464512","PARAM_80":"492410578774523904","PARAM_81":"484680990048911360","PARAM_82":"479330040773869568","PARAM_83":"476660944341041152","PARAM_84":"473609130683138048","PARAM_85":"471974284126846976","PARAM_103":"483218062279966720","PARAM_104":"487559544579293184","PARAM_101":"464788444141322240","PARAM_102":"489901513284517888","PARAM_107":"507635157855895552","PARAM_108":"480492966025101312","PARAM_105":"507635154248794112","PARAM_106":"508300431265366016","PARAM_75":"484680991584026624","PARAM_76":"504682762972704768","PARAM_77":"482865232566288384","PARAM_109":"487568374700703744","PARAM_78":"478585173638643712","PARAM_79":"476319988295139328","PARAM_70":"480488583120027648","PARAM_71":"495201409763901440","PARAM_72":"479956466397085696","PARAM_73":"480389137287872512","PARAM_74":"501416295116308480","PARAM_9":"479354710923411456","PARAM_8":"489922971863875584","PARAM_7":"471622520550719488","PARAM_6":"488696580921098240","PARAM_5":"463400006318030848","PARAM_110":"463400828363866112","PARAM_4":"479959568621764608","PARAM_111":"472811438801420289","PARAM_3":"463402973779722240","PARAM_2":0,"PARAM_1":0,"PARAM_64":"473503439284862976","PARAM_65":"463399688926658560","PARAM_66":"479388229263425536","PARAM_67":"479959570282708992","PARAM_68":"481749745337892864","PARAM_69":"463401813807202304","PARAM_60":"479956459719753728","PARAM_61":"474281122537144320","PARAM_62":"482865234084626432","PARAM_63":"476660946173952000","PARAM_100":"472818410917462016","PARAM_125":"482877682514657280","PARAM_126":"471666419482755072","PARAM_123":"481749751037952000","PARAM_124":"472358699843715073","PARAM_129":"463401586228461568","PARAM_127":"471653537873395712","PARAM_128":"485741088754106368","PARAM_53":"479218757961515008","PARAM_54":"463429350570590208","PARAM_55":"480137014188965888","PARAM_56":"480481730000584704","PARAM_57":"510887822043906048","PARAM_58":"472023703798939648","PARAM_59":"489815789730267136","PARAM_50":"476673967776595968","PARAM_51":"463399153808965632","PARAM_52":"501072634599964672","PARAM_130":"463400007958003712","PARAM_114":"473626751956680704","PARAM_115":"482581098463756288","PARAM_112":"oauth","PARAM_113":"474123296653180928","PARAM_118":"501072378579648512","PARAM_119":"511607135210045440","PARAM_116":"481563570933334016","PARAM_117":"494904454114443264","PARAM_42":"479329284624744448","PARAM_43":"485743357943873536","PARAM_44":"485743356169682944","PARAM_45":"501072380383199232","PARAM_46":"478956691585499136","PARAM_47":"463397738055204864","PARAM_48":"481338868780498944","PARAM_49":"463402975415500800","PARAM_40":"472023705464078336","PARAM_41":"463399684191289344","PARAM_121":"463429357021429760","PARAM_122":"479329590288842752","PARAM_120":"476679546897170432"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463402973779722240' , '479959568621764608' , '463400006318030848' , '488696580921098240' , '471622520550719488' , '489922971863875584' , '479354710923411456' , '489077810774671360' , '495244163038576640' , '494597323653906432' , '479329591786209280' , '485747530676568064' , '482573213478420480' , '473609132373442560' , '477956223535153152' , '492410580473217024' , '478585179489697792' , 'get-current-user' , '463400830083530752' , '478080879135031296' , '490245513522708480' , '473626750312513536' , '485888535333699584' , '471623114069901312' , '480377919596658688' , '484684753241374720' , '480137007910092800' , '474281120842645504' , '498885085060136960' , '485936562941460480' , '479388227191439360' , '478688767939444736' , '495243928195301376' , '473534967930945536' , '494904218386169856' , '478080877377617920' , '463401812293058560' , '472023705464078336' , '463399684191289344' , '479329284624744448' , '485743357943873536' , '485743356169682944' , '501072380383199232' , '478956691585499136' , '463397738055204864' , '481338868780498944' , '463402975415500800' , '476673967776595968' , '463399153808965632' , '501072634599964672' , '479218757961515008' , '463429350570590208' , '480137014188965888' , '480481730000584704' , '510887822043906048' , '472023703798939648' , '489815789730267136' , '479956459719753728' , '474281122537144320' , '482865234084626432' , '476660946173952000' , '473503439284862976' , '463399688926658560' , '479388229263425536' , '479959570282708992' , '481749745337892864' , '463401813807202304' , '480488583120027648' , '495201409763901440' , '479956466397085696' , '480389137287872512' , '501416295116308480' , '484680991584026624' , '504682762972704768' , '482865232566288384' , '478585173638643712' , '476319988295139328' , '492410578774523904' , '484680990048911360' , '479330040773869568' , '476660944341041152' , '473609130683138048' , '471974284126846976' , '486313025783988224' , '486313023716196352' , '480481731707666432' , '471623112182464512' , '482877680811769856' , '478922689172471808' , '495243926484025344' , '482864640208928768' , '475954736080617472' , '490245511899512832' , '498769993710698497' , '498769910416015360' , '476673974453927936' , '486551845917949952' , '472818410917462016' , '464788444141322240' , '489901513284517888' , '483218062279966720' , '487559544579293184' , '507635154248794112' , '508300431265366016' , '507635157855895552' , '480492966025101312' , '487568374700703744' , '463400828363866112' , '472811438801420289' , 'oauth' , '474123296653180928' , '473626751956680704' , '482581098463756288' , '481563570933334016' , '494904454114443264' , '501072378579648512' , '511607135210045440' , '476679546897170432' , '463429357021429760' , '479329590288842752' , '481749751037952000' , '472358699843715073' , '482877682514657280' , '471666419482755072' , '471653537873395712' , '485741088754106368' , '463401586228461568' , '463400007958003712' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：41ms , start = 1637130611394
┣━ 返回：RcdSet,size=154
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.475 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_17":"474158850757361665","PARAM_10":"499954050071007232","PARAM_11":"464828186346127361","PARAM_12":"498472529019543553","PARAM_13":"490925002938388480","PARAM_14":"501390061263130624","PARAM_15":"498963847839744001","PARAM_16":"497513282840559617","PARAM_9":"472814706734661633","PARAM_8":"498472318377402368","PARAM_7":"490909866307620865","PARAM_6":"498809674066296832","PARAM_5":"486487652200091649","PARAM_4":"498962211822108672","PARAM_3":"498473196719185920","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '498473196719185920' , '498962211822108672' , '486487652200091649' , '498809674066296832' , '490909866307620865' , '498472318377402368' , '472814706734661633' , '499954050071007232' , '464828186346127361' , '498472529019543553' , '490925002938388480' , '501390061263130624' , '498963847839744001' , '497513282840559617' , '474158850757361665' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：27ms , start = 1637130611446
┣━ 返回：RcdSet,size=16
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.475 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：29ms , start = 1637130611445
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.484 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"477956217403080704","PARAM_31":"489922965769551872","PARAM_32":"474159090990317568","PARAM_33":"479330038903209984","PARAM_34":"485936556943605760","PARAM_35":"475954740530774016","PARAM_36":"510887581764812800","PARAM_37":"485741093254594560","PARAM_38":"479008663990697984","PARAM_30":"474123290978287616","PARAM_28":"472331133846028288","PARAM_29":"473534966525853696","PARAM_20":"473503437766524928","PARAM_21":"472331129806913536","PARAM_22":"498885082019266560","PARAM_23":"index","PARAM_24":"495244161406992384","PARAM_25":"484683936333561856","PARAM_26":"489922970169376768","PARAM_27":"473733255862943744","PARAM_17":"501072632922243072","PARAM_18":"472818971712684033","PARAM_19":"472023113178021888","PARAM_97":"480377918011211776","PARAM_10":"482573211888779264","PARAM_98":"494904212736442368","PARAM_11":"481119856855351296","PARAM_99":"502170004054085633","PARAM_12":"463397133957988352","PARAM_13":"480389135564013568","PARAM_14":"484684747470012416","PARAM_15":"463400823850795008","PARAM_16":"482864638480875520","PARAM_90":"474123295055151104","PARAM_91":"463402970206175232","PARAM_92":"507635145327509504","PARAM_93":"479354715398733824","PARAM_94":"508300428283215872","PARAM_95":"485747528893988864","PARAM_96":"494597318092259328","PARAM_86":"478626344431779840","PARAM_87":"494597321997156352","PARAM_88":"472331326201004032","PARAM_89":"463401584798203904","PARAM_80":"471622514821300224","PARAM_81":"485743351006494720","PARAM_82":"464788442501349376","PARAM_83":"477952342965092352","PARAM_84":"476679545236226048","PARAM_85":"471986331946319872","PARAM_103":"501074097912938496","PARAM_104":"481749749448310784","PARAM_101":"482581324939395072","PARAM_102":"471666417796644864","PARAM_107":"478585177820364800","PARAM_108":"489077809105338368","PARAM_105":"494904452583522304","PARAM_106":"477952348665151488","PARAM_75":"473771451304902656","PARAM_76":"479330034058788864","PARAM_77":"483218060644188160","PARAM_109":"480137012393803776","PARAM_78":"475686681035407360","PARAM_79":"484683932139257856","PARAM_70":"471622519044964352","PARAM_71":"485560938628382720","PARAM_72":"486551844089233408","PARAM_73":"478080872541585408","PARAM_74":"472023108392321024","PARAM_9":"508300419894607872","PARAM_8":"481749150413619200","PARAM_7":"471974287931080704","PARAM_6":"481338866817564672","PARAM_5":"478603508019363840","PARAM_110":"480488581421334528","PARAM_4":"479956464534814720","PARAM_111":"473228835811229696","PARAM_3":"511607134790615040","PARAM_2":0,"PARAM_1":0,"PARAM_64":"478603513186746368","PARAM_65":"485936561238573056","PARAM_66":"489901519739551744","PARAM_67":"482581096999944192","PARAM_68":"488696589599113216","PARAM_69":"481068386625781760","PARAM_60":"479598110457200640","PARAM_61":"463399152273850368","PARAM_62":"472037131183718400","PARAM_63":"485415810584555521","PARAM_100":"487559541341290496","PARAM_125":"478922687092097024","PARAM_126":"479329289888595968","PARAM_123":"490924383968169985","PARAM_124":"511607133742039040","PARAM_129":"501072113185062912","PARAM_127":"487559533120454656","PARAM_128":"472814616229969920","PARAM_53":"482583847255408640","PARAM_54":"479218756208295936","PARAM_55":"479008668327608320","PARAM_56":"471620638545543168","PARAM_57":"485560934119505920","PARAM_58":"479219962657898496","PARAM_59":"494904216788140032","PARAM_50":"480492964435460096","PARAM_51":"463400000727023616","PARAM_52":"472819614665932801","PARAM_130":"463399687542538240","PARAM_114":"501416291903471616","PARAM_115":"478688766404329472","PARAM_112":"485888533777612800","PARAM_113":"483218056353415168","PARAM_118":"478956689802919936","PARAM_119":"476319986613223424","PARAM_116":"471623107698753536","PARAM_117":"489815788086099968","PARAM_42":"476673972792983552","PARAM_43":"471653536266977280","PARAM_44":"479388218932854784","PARAM_45":"463397736541061120","PARAM_46":"479220710963675136","PARAM_47":"487568371366232064","PARAM_48":"481563568920068096","PARAM_49":"463429355423399936","PARAM_40":"510887821632864256","PARAM_41":"477956221781934080","PARAM_121":"501074102618947584","PARAM_122":"484684751630761984","PARAM_120":"475686685250682880"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '511607134790615040' , '479956464534814720' , '478603508019363840' , '481338866817564672' , '471974287931080704' , '481749150413619200' , '508300419894607872' , '482573211888779264' , '481119856855351296' , '463397133957988352' , '480389135564013568' , '484684747470012416' , '463400823850795008' , '482864638480875520' , '501072632922243072' , '472818971712684033' , '472023113178021888' , '473503437766524928' , '472331129806913536' , '498885082019266560' , 'index' , '495244161406992384' , '484683936333561856' , '489922970169376768' , '473733255862943744' , '472331133846028288' , '473534966525853696' , '474123290978287616' , '489922965769551872' , '474159090990317568' , '479330038903209984' , '485936556943605760' , '475954740530774016' , '510887581764812800' , '485741093254594560' , '479008663990697984' , '477956217403080704' , '510887821632864256' , '477956221781934080' , '476673972792983552' , '471653536266977280' , '479388218932854784' , '463397736541061120' , '479220710963675136' , '487568371366232064' , '481563568920068096' , '463429355423399936' , '480492964435460096' , '463400000727023616' , '472819614665932801' , '482583847255408640' , '479218756208295936' , '479008668327608320' , '471620638545543168' , '485560934119505920' , '479219962657898496' , '494904216788140032' , '479598110457200640' , '463399152273850368' , '472037131183718400' , '485415810584555521' , '478603513186746368' , '485936561238573056' , '489901519739551744' , '482581096999944192' , '488696589599113216' , '481068386625781760' , '471622519044964352' , '485560938628382720' , '486551844089233408' , '478080872541585408' , '472023108392321024' , '473771451304902656' , '479330034058788864' , '483218060644188160' , '475686681035407360' , '484683932139257856' , '471622514821300224' , '485743351006494720' , '464788442501349376' , '477952342965092352' , '476679545236226048' , '471986331946319872' , '478626344431779840' , '494597321997156352' , '472331326201004032' , '463401584798203904' , '474123295055151104' , '463402970206175232' , '507635145327509504' , '479354715398733824' , '508300428283215872' , '485747528893988864' , '494597318092259328' , '480377918011211776' , '494904212736442368' , '502170004054085633' , '487559541341290496' , '482581324939395072' , '471666417796644864' , '501074097912938496' , '481749749448310784' , '494904452583522304' , '477952348665151488' , '478585177820364800' , '489077809105338368' , '480137012393803776' , '480488581421334528' , '473228835811229696' , '485888533777612800' , '483218056353415168' , '501416291903471616' , '478688766404329472' , '471623107698753536' , '489815788086099968' , '478956689802919936' , '476319986613223424' , '475686685250682880' , '501074102618947584' , '484684751630761984' , '490924383968169985' , '511607133742039040' , '478922687092097024' , '479329289888595968' , '487559533120454656' , '472814616229969920' , '501072113185062912' , '463399687542538240' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：60ms , start = 1637130611423
┣━ 返回：RcdSet,size=267
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.550 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：68ms , start = 1637130611480
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.574 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"476517102736375808","PARAM_31":"463399154698158080","PARAM_32":"482581093229264896","PARAM_33":"492410582486482944","PARAM_34":"479956468586512384","PARAM_35":"463429357977731072","PARAM_36":"472331137151139840","PARAM_37":"479208678382108672","PARAM_38":"478922691353509888","PARAM_30":"481749153626456064","PARAM_28":"479598113862975488","PARAM_29":"463401587662913536","PARAM_20":"478688769155792896","PARAM_21":"472331136572325888","PARAM_22":"471623115881840640","PARAM_23":"479956467907035136","PARAM_24":"484683939244408832","PARAM_25":"473534969646415872","PARAM_26":"489922973885530112","PARAM_27":"475686688278970368","PARAM_17":"479388413435314177","PARAM_18":"485741096391933952","PARAM_19":"476660948308852736","PARAM_97":"473609134411874304","PARAM_10":"479598114576007168","PARAM_98":"478603516361834496","PARAM_11":"480389138625855488","PARAM_99":"482864642218000384","PARAM_12":"464788445420584960","PARAM_13":"463397133957988354","PARAM_14":"478603517087449088","PARAM_15":"463401815308763136","PARAM_16":"463429358598488064","PARAM_90":"485395845907230720","PARAM_91":"478625116503146496","PARAM_92":"481119859787169792","PARAM_93":"501416298853433344","PARAM_94":"463402977026113536","PARAM_95":"472023707355709440","PARAM_96":"494903523763298304","PARAM_86":"485936564942143488","PARAM_87":"472331329841659904","PARAM_88":"474123298494480384","PARAM_89":"494597325411319808","PARAM_80":"510887822513668096","PARAM_81":"501072636617424896","PARAM_82":"478080881207017472","PARAM_83":"477956225548419072","PARAM_84":"472331329199931392","PARAM_85":"484684755145588736","PARAM_103":"472023116420218880","PARAM_104":"486551847834746880","PARAM_101":"498885087492833280","PARAM_102":"479329294410055680","PARAM_107":"471622521846759424","PARAM_108":"478922690648866816","PARAM_105":"480481733892898816","PARAM_106":"478585180710240256","PARAM_75":"479008671947292672","PARAM_76":"484681017538379776","PARAM_77":"478585181314220032","PARAM_109":"498770477079068673","PARAM_78":"485743359831310336","PARAM_79":"480488585066184704","PARAM_70":"489901523275350016","PARAM_71":"475686688891338752","PARAM_72":"482865235867205632","PARAM_73":"489922973222830080","PARAM_74":"480488584403484672","PARAM_9":"479329293776715776","PARAM_8":"482573215365857280","PARAM_7":"485936564371718144","PARAM_6":"463397732229316608","PARAM_5":"481749752275271680","PARAM_110":"479354718896783360","PARAM_4":"481338871154475008","PARAM_111":"473503441142939648","PARAM_3":"484683939894525952","PARAM_2":0,"PARAM_1":0,"PARAM_64":"480488576866320384","PARAM_65":"510887582830166016","PARAM_66":"482583850896064512","PARAM_67":"478688769768161280","PARAM_68":"479220706257666048","PARAM_69":"482864634051690496","PARAM_60":"481749752891834368","PARAM_61":"463397739233804288","PARAM_62":"472819784346501121","PARAM_63":"489901523904495616","PARAM_100":"463399155289554944","PARAM_125":"477952352960118784","PARAM_126":"463397739833589760","PARAM_123":"479220714860183552","PARAM_124":"478624924152365056","PARAM_129":"481749154318516224","PARAM_127":"501072382371299328","PARAM_128":"501416297607725056","PARAM_53":"482877684532117504","PARAM_54":"463400831778029568","PARAM_55":"486313028048912384","PARAM_56":"473771455499206656","PARAM_57":"489077812460781568","PARAM_58":"501074105877921792","PARAM_59":"482864641542717440","PARAM_50":"475954743840079872","PARAM_51":"501074106590953472","PARAM_52":"479329593644285952","PARAM_130":"498885088876953600","PARAM_114":"488696597023031296","PARAM_115":"475954744494391296","PARAM_112":"474281124533633024","PARAM_113":"501072116167213056","PARAM_118":"463399690289807360","PARAM_119":"507635161886621696","PARAM_116":"472023117196165120","PARAM_117":"481119860437286912","PARAM_42":"490245515401756672","PARAM_43":"501072116880244736","PARAM_44":"490245507856203776","PARAM_45":"479388232048443392","PARAM_46":"463400009585393664","PARAM_47":"485741097058828288","PARAM_48":"480389139313721344","PARAM_49":"471622522614317056","PARAM_40":"479959572333723648","PARAM_41":"477952352276447232","PARAM_121":"464788446058119168","PARAM_122":"485560941845413888","PARAM_120":"488696595773128704"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '484683939894525952' , '481338871154475008' , '481749752275271680' , '463397732229316608' , '485936564371718144' , '482573215365857280' , '479329293776715776' , '479598114576007168' , '480389138625855488' , '464788445420584960' , '463397133957988354' , '478603517087449088' , '463401815308763136' , '463429358598488064' , '479388413435314177' , '485741096391933952' , '476660948308852736' , '478688769155792896' , '472331136572325888' , '471623115881840640' , '479956467907035136' , '484683939244408832' , '473534969646415872' , '489922973885530112' , '475686688278970368' , '479598113862975488' , '463401587662913536' , '481749153626456064' , '463399154698158080' , '482581093229264896' , '492410582486482944' , '479956468586512384' , '463429357977731072' , '472331137151139840' , '479208678382108672' , '478922691353509888' , '476517102736375808' , '479959572333723648' , '477952352276447232' , '490245515401756672' , '501072116880244736' , '490245507856203776' , '479388232048443392' , '463400009585393664' , '485741097058828288' , '480389139313721344' , '471622522614317056' , '475954743840079872' , '501074106590953472' , '479329593644285952' , '482877684532117504' , '463400831778029568' , '486313028048912384' , '473771455499206656' , '489077812460781568' , '501074105877921792' , '482864641542717440' , '481749752891834368' , '463397739233804288' , '472819784346501121' , '489901523904495616' , '480488576866320384' , '510887582830166016' , '482583850896064512' , '478688769768161280' , '479220706257666048' , '482864634051690496' , '489901523275350016' , '475686688891338752' , '482865235867205632' , '489922973222830080' , '480488584403484672' , '479008671947292672' , '484681017538379776' , '478585181314220032' , '485743359831310336' , '480488585066184704' , '510887822513668096' , '501072636617424896' , '478080881207017472' , '477956225548419072' , '472331329199931392' , '484684755145588736' , '485936564942143488' , '472331329841659904' , '474123298494480384' , '494597325411319808' , '485395845907230720' , '478625116503146496' , '481119859787169792' , '501416298853433344' , '463402977026113536' , '472023707355709440' , '494903523763298304' , '473609134411874304' , '478603516361834496' , '482864642218000384' , '463399155289554944' , '498885087492833280' , '479329294410055680' , '472023116420218880' , '486551847834746880' , '480481733892898816' , '478585180710240256' , '471622521846759424' , '478922690648866816' , '498770477079068673' , '479354718896783360' , '473503441142939648' , '474281124533633024' , '501072116167213056' , '488696597023031296' , '475954744494391296' , '472023117196165120' , '481119860437286912' , '463399690289807360' , '507635161886621696' , '488696595773128704' , '464788446058119168' , '485560941845413888' , '479220714860183552' , '478624924152365056' , '477952352960118784' , '463397739833589760' , '501072382371299328' , '501416297607725056' , '481749154318516224' , '498885088876953600' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：89ms , start = 1637130611480
┣━ 返回：RcdSet,size=195
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.597 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"471623119950315520","PARAM_31":"485560945016307712","PARAM_32":"488696601678708736","PARAM_33":"476673982108532736","PARAM_34":"471623119124037632","PARAM_35":"489815795505823744","PARAM_36":"482865239109402624","PARAM_37":"489922978209857536","PARAM_38":"479219970283143168","PARAM_30":"472331333301960704","PARAM_28":"501072640497156096","PARAM_29":"489901527587094528","PARAM_20":"481749158206636032","PARAM_21":"478688773647892480","PARAM_22":"485741099411832832","PARAM_23":"473534972766978048","PARAM_24":"501072386309750784","PARAM_25":"471666425635799040","PARAM_26":"463429362776014848","PARAM_27":"473733264192831488","PARAM_17":"487559555773890560","PARAM_18":"485560945611898880","PARAM_19":"463400013167329280","PARAM_97":"481749145669861376","PARAM_10":"474123302428737536","PARAM_98":"471653543871250432","PARAM_11":"487559557153816576","PARAM_99":"479956473208635392","PARAM_12":"485560943879651328","PARAM_13":"481749158911279104","PARAM_14":"479956472495603712","PARAM_15":"489077816151769088","PARAM_16":"478585184673857536","PARAM_90":"475686691072376832","PARAM_91":"495244168478588928","PARAM_92":"463400012525600768","PARAM_93":"471986344285962240","PARAM_94":"474123301828952064","PARAM_95":"479959575810801664","PARAM_96":"463399157952937984","PARAM_86":"489922977547157504","PARAM_87":"478603520921042944","PARAM_88":"475955437510852608","PARAM_89":"463402979890823168","PARAM_80":"482877688223105024","PARAM_81":"471622526116560896","PARAM_82":"463401590787670016","PARAM_83":"510887820517179392","PARAM_84":"472023711478710272","PARAM_85":"487568385933049856","PARAM_103":"471974294486777856","PARAM_104":"472358185009676289","PARAM_101":"463399158544334848","PARAM_102":"471622526703763456","PARAM_107":"481749756972892160","PARAM_108":"473036391530364929","PARAM_105":"479959564469403648","PARAM_106":"476660952759009280","PARAM_75":"482877688894193664","PARAM_76":"501072641218576384","PARAM_77":"477956229193269248","PARAM_109":"463397743117729792","PARAM_78":"479959576465113088","PARAM_79":"463399692735086592","PARAM_70":"476660952100503552","PARAM_71":"475954746797064192","PARAM_72":"481749756356329472","PARAM_73":"463399693292929024","PARAM_74":"482865239696605184","PARAM_9":"487568387254255616","PARAM_8":"463429362113314816","PARAM_7":"472036810977968129","PARAM_6":"495243933782114304","PARAM_5":"479218764370411520","PARAM_110":"472331141001510912","PARAM_4":"463401808295886848","PARAM_111":"479220720316973056","PARAM_3":"472331140393336832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"463401817988923392","PARAM_65":"495244169128706048","PARAM_66":"472331139210543104","PARAM_67":"472814243020800001","PARAM_68":"501072374041411584","PARAM_69":"473534973345792000","PARAM_60":"473733264926834688","PARAM_61":"463397743721709568","PARAM_62":"476673981483581440","PARAM_63":"482581103345926144","PARAM_100":"475686692318085120","PARAM_125":"489077815459708928","PARAM_126":"482581332891795456","PARAM_123":"478688773039718400","PARAM_124":"478585185282031616","PARAM_129":"477956229818220544","PARAM_127":"479220719629107200","PARAM_128":"473549948382609408","PARAM_53":"479219970929065984","PARAM_54":"489815796164329472","PARAM_55":"495924945906302976","PARAM_56":"471666424977293312","PARAM_57":"463401581010747392","PARAM_58":"463401590217244672","PARAM_59":"482581103912157184","PARAM_50":"481749156772184064","PARAM_51":"482581332237484032","PARAM_52":"472023710841176064","PARAM_130":"480377923652550656","PARAM_114":"471974293945712640","PARAM_115":"472331333985632256","PARAM_112":"463401818576125952","PARAM_113":"463402980524163072","PARAM_118":"495243934444814336","PARAM_119":"478603521634074624","PARAM_116":"471620891906670593","PARAM_117":"482864645908987904","PARAM_42":"479598117155504128","PARAM_43":"477952355304734720","PARAM_44":"473771458015789056","PARAM_45":"479218763728683008","PARAM_46":"463400835502571520","PARAM_47":"473626745392594944","PARAM_48":"463400834823094272","PARAM_49":"501072386968256512","PARAM_40":"475686692922064896","PARAM_41":"471653543221133312","PARAM_121":"479008674094776320","PARAM_122":"482864646571687936","PARAM_120":"484683942113312768"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '472331140393336832' , '463401808295886848' , '479218764370411520' , '495243933782114304' , '472036810977968129' , '463429362113314816' , '487568387254255616' , '474123302428737536' , '487559557153816576' , '485560943879651328' , '481749158911279104' , '479956472495603712' , '489077816151769088' , '478585184673857536' , '487559555773890560' , '485560945611898880' , '463400013167329280' , '481749158206636032' , '478688773647892480' , '485741099411832832' , '473534972766978048' , '501072386309750784' , '471666425635799040' , '463429362776014848' , '473733264192831488' , '501072640497156096' , '489901527587094528' , '472331333301960704' , '485560945016307712' , '488696601678708736' , '476673982108532736' , '471623119124037632' , '489815795505823744' , '482865239109402624' , '489922978209857536' , '479219970283143168' , '471623119950315520' , '475686692922064896' , '471653543221133312' , '479598117155504128' , '477952355304734720' , '473771458015789056' , '479218763728683008' , '463400835502571520' , '473626745392594944' , '463400834823094272' , '501072386968256512' , '481749156772184064' , '482581332237484032' , '472023710841176064' , '479219970929065984' , '489815796164329472' , '495924945906302976' , '471666424977293312' , '463401581010747392' , '463401590217244672' , '482581103912157184' , '473733264926834688' , '463397743721709568' , '476673981483581440' , '482581103345926144' , '463401817988923392' , '495244169128706048' , '472331139210543104' , '472814243020800001' , '501072374041411584' , '473534973345792000' , '476660952100503552' , '475954746797064192' , '481749756356329472' , '463399693292929024' , '482865239696605184' , '482877688894193664' , '501072641218576384' , '477956229193269248' , '479959576465113088' , '463399692735086592' , '482877688223105024' , '471622526116560896' , '463401590787670016' , '510887820517179392' , '472023711478710272' , '487568385933049856' , '489922977547157504' , '478603520921042944' , '475955437510852608' , '463402979890823168' , '475686691072376832' , '495244168478588928' , '463400012525600768' , '471986344285962240' , '474123301828952064' , '479959575810801664' , '463399157952937984' , '481749145669861376' , '471653543871250432' , '479956473208635392' , '475686692318085120' , '463399158544334848' , '471622526703763456' , '471974294486777856' , '472358185009676289' , '479959564469403648' , '476660952759009280' , '481749756972892160' , '473036391530364929' , '463397743117729792' , '472331141001510912' , '479220720316973056' , '463401818576125952' , '463402980524163072' , '471974293945712640' , '472331333985632256' , '471620891906670593' , '482864645908987904' , '495243934444814336' , '478603521634074624' , '484683942113312768' , '479008674094776320' , '482864646571687936' , '478688773039718400' , '478585185282031616' , '489077815459708928' , '482581332891795456' , '479220719629107200' , '473549948382609408' , '477956229818220544' , '480377923652550656' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：139ms , start = 1637130611454
┣━ 返回：RcdSet,size=192
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.615 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"501653278359031809","PARAM_31":"498472737438703616","PARAM_32":"486485883655032833","PARAM_33":"471653532135587840","PARAM_34":"498780101593268225","PARAM_35":"498963858317115392","PARAM_36":"499939063264968705","PARAM_37":"490638839023411200","PARAM_38":"501653361645326336","PARAM_30":"479219958253879296","PARAM_28":"498472886441353216","PARAM_29":"500338282807173120","PARAM_20":"498472430189158400","PARAM_21":"498808937571680257","PARAM_22":"485819338599706624","PARAM_23":"498780092948807681","PARAM_24":"490909222070915073","PARAM_25":"474159041438810113","PARAM_26":"501653165884575744","PARAM_27":"501072627838746624","PARAM_17":"499940744069382145","PARAM_18":"498780063144083457","PARAM_19":"490920319637262337","PARAM_97":"501424056243851264","PARAM_10":"497513009569071104","PARAM_98":"498809056404701185","PARAM_11":"497490986344120320","PARAM_99":"498971162877886465","PARAM_12":"464827069453303809","PARAM_13":"499939051860656128","PARAM_14":"474157822892834817","PARAM_15":"485415687787917312","PARAM_16":"501653323472965633","PARAM_90":"497513348733075457","PARAM_91":"465893287996162048","PARAM_92":"478598569259962368","PARAM_93":"463779099165327360","PARAM_94":"498963891439534081","PARAM_95":"498963844891148289","PARAM_96":"503188930321977344","PARAM_86":"497513389245857793","PARAM_87":"501653226060255233","PARAM_88":"501073274482987009","PARAM_89":"504683060067840001","PARAM_80":"471666413560397824","PARAM_81":"498809287695400961","PARAM_82":"498473113529360385","PARAM_83":"498963890651004929","PARAM_84":"499954026838757376","PARAM_85":"499954055192252417","PARAM_103":"491342702357512192","PARAM_104":"498963895084384257","PARAM_101":"490908208253112321","PARAM_102":"486485877028032513","PARAM_107":"478625384087158785","PARAM_108":"490915625305116672","PARAM_105":"463779102176837633","PARAM_106":"490920008524763136","PARAM_75":"504060697101996032","PARAM_76":"464827137099038721","PARAM_77":"489424103724285952","PARAM_109":"481068382628610048","PARAM_78":"491206513122086913","PARAM_79":"472036614189613057","PARAM_70":"498963856643588097","PARAM_71":"464827257593004033","PARAM_72":"498963846124273665","PARAM_73":"498779937252048897","PARAM_74":"478625404161097728","PARAM_9":"498971349855764481","PARAM_8":"499954030739460097","PARAM_7":"502170156177297409","PARAM_6":"478626411003772928","PARAM_5":"473227868306931712","PARAM_110":"486485770673065984","PARAM_4":"498474569439387649","PARAM_111":"480486574191026176","PARAM_3":"504412977160523776","PARAM_2":0,"PARAM_1":0,"PARAM_64":"467361506980265985","PARAM_65":"498809237418278912","PARAM_66":"499954038733803521","PARAM_67":"490907983723630592","PARAM_68":"498970926130397185","PARAM_69":"498809154048098304","PARAM_60":"478625395923484673","PARAM_61":"473550018758836225","PARAM_62":"472023699592052736","PARAM_63":"497513204994277377","PARAM_100":"495244157174939648","PARAM_125":"473771446246572032","PARAM_126":"484680929105674240","PARAM_123":"496813531019083776","PARAM_124":"499939072068812801","PARAM_129":"499939072706347008","PARAM_127":"472811546343374849","PARAM_128":"499939062635823104","PARAM_53":"473612688681861120","PARAM_54":"498472974811144192","PARAM_55":"490908428638621696","PARAM_56":"498474299326210049","PARAM_57":"499954049295060993","PARAM_58":"498780083792642049","PARAM_59":"478598694187307009","PARAM_50":"483567801252978688","PARAM_51":"498809191108968448","PARAM_52":"498808864725008384","PARAM_130":"498582106398523393","PARAM_114":"474155529355132929","PARAM_115":"474158954033709056","PARAM_112":"497513458128912385","PARAM_113":"499940736691601409","PARAM_118":"498970914482814977","PARAM_119":"479329585788354560","PARAM_116":"472025257461415936","PARAM_117":"471986431431016449","PARAM_42":"501653242430623745","PARAM_43":"473534962767757312","PARAM_44":"499940724104495105","PARAM_45":"497514241515847681","PARAM_46":"498962214124781568","PARAM_47":"498962218231005184","PARAM_48":"473612721665867776","PARAM_49":"473503433886793728","PARAM_40":"498963857323065345","PARAM_41":"482583842985607168","PARAM_121":"491206464543657984","PARAM_122":"481119852547801088","PARAM_120":"499939054448541696"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '504412977160523776' , '498474569439387649' , '473227868306931712' , '478626411003772928' , '502170156177297409' , '499954030739460097' , '498971349855764481' , '497513009569071104' , '497490986344120320' , '464827069453303809' , '499939051860656128' , '474157822892834817' , '485415687787917312' , '501653323472965633' , '499940744069382145' , '498780063144083457' , '490920319637262337' , '498472430189158400' , '498808937571680257' , '485819338599706624' , '498780092948807681' , '490909222070915073' , '474159041438810113' , '501653165884575744' , '501072627838746624' , '498472886441353216' , '500338282807173120' , '479219958253879296' , '498472737438703616' , '486485883655032833' , '471653532135587840' , '498780101593268225' , '498963858317115392' , '499939063264968705' , '490638839023411200' , '501653361645326336' , '501653278359031809' , '498963857323065345' , '482583842985607168' , '501653242430623745' , '473534962767757312' , '499940724104495105' , '497514241515847681' , '498962214124781568' , '498962218231005184' , '473612721665867776' , '473503433886793728' , '483567801252978688' , '498809191108968448' , '498808864725008384' , '473612688681861120' , '498472974811144192' , '490908428638621696' , '498474299326210049' , '499954049295060993' , '498780083792642049' , '478598694187307009' , '478625395923484673' , '473550018758836225' , '472023699592052736' , '497513204994277377' , '467361506980265985' , '498809237418278912' , '499954038733803521' , '490907983723630592' , '498970926130397185' , '498809154048098304' , '498963856643588097' , '464827257593004033' , '498963846124273665' , '498779937252048897' , '478625404161097728' , '504060697101996032' , '464827137099038721' , '489424103724285952' , '491206513122086913' , '472036614189613057' , '471666413560397824' , '498809287695400961' , '498473113529360385' , '498963890651004929' , '499954026838757376' , '499954055192252417' , '497513389245857793' , '501653226060255233' , '501073274482987009' , '504683060067840001' , '497513348733075457' , '465893287996162048' , '478598569259962368' , '463779099165327360' , '498963891439534081' , '498963844891148289' , '503188930321977344' , '501424056243851264' , '498809056404701185' , '498971162877886465' , '495244157174939648' , '490908208253112321' , '486485877028032513' , '491342702357512192' , '498963895084384257' , '463779102176837633' , '490920008524763136' , '478625384087158785' , '490915625305116672' , '481068382628610048' , '486485770673065984' , '480486574191026176' , '497513458128912385' , '499940736691601409' , '474155529355132929' , '474158954033709056' , '472025257461415936' , '471986431431016449' , '498970914482814977' , '479329585788354560' , '499939054448541696' , '491206464543657984' , '481119852547801088' , '496813531019083776' , '499939072068812801' , '473771446246572032' , '484680929105674240' , '472811546343374849' , '499939062635823104' , '499939072706347008' , '498582106398523393' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：149ms , start = 1637130611461
┣━ 返回：RcdSet,size=117
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.677 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"473503443139428352","PARAM_31":"486313029152014336","PARAM_32":"480492970060021760","PARAM_33":"480137018328743936","PARAM_34":"486551850187751424","PARAM_35":"510887583488671744","PARAM_36":"490245517545046016","PARAM_37":"479329296838557696","PARAM_38":"482581102209269760","PARAM_30":"479959574523150336","PARAM_28":"498890640633892865","PARAM_29":"495244167178354688","PARAM_20":"478922694239191040","PARAM_21":"481563575630954496","PARAM_22":"471974292850999296","PARAM_23":"482877686885122048","PARAM_24":"495243932481880064","PARAM_25":"478603519541116928","PARAM_26":"477956226529886208","PARAM_27":"463400010562666496","PARAM_17":"471623117999964160","PARAM_18":"479388233323511808","PARAM_19":"463399691917197312","PARAM_97":"478585183470092288","PARAM_10":"482877685547139072","PARAM_98":"480389141578645504","PARAM_11":"481749753835552768","PARAM_99":"479220717896859648","PARAM_12":"478922681874382848","PARAM_13":"479218762373922816","PARAM_14":"472023708303622144","PARAM_15":"471622524862464000","PARAM_16":"474281126987300864","PARAM_90":"479354721128153088","PARAM_91":"482864644558422016","PARAM_92":"463400011548327936","PARAM_93":"473626756130013184","PARAM_94":"463400833808072704","PARAM_95":"487568383219335168","PARAM_96":"490245516341280768","PARAM_86":"489077805410156544","PARAM_87":"481338874124042240","PARAM_88":"477956227867869184","PARAM_89":"492410583505698816","PARAM_80":"489077814461464576","PARAM_81":"485743360800194560","PARAM_82":"463401816202149888","PARAM_83":"485888539251179520","PARAM_84":"501072119862394880","PARAM_85":"463402978934521856","PARAM_103":"510887822752743424","PARAM_104":"479330045333078016","PARAM_101":"501072384963379200","PARAM_102":"501074109107535872","PARAM_107":"480488587389829120","PARAM_108":"483218066432327680","PARAM_105":"482581330920472576","PARAM_106":"473609136769073152","PARAM_75":"511607136254427136","PARAM_76":"507635163908276224","PARAM_77":"463397741918158848","PARAM_109":"479329595586248704","PARAM_78":"485747535109947392","PARAM_79":"492410584894013440","PARAM_70":"472331332110778368","PARAM_71":"489815794193006592","PARAM_72":"472023119704358912","PARAM_73":"484684757343404032","PARAM_74":"484683104078794753","PARAM_9":"484681028040916992","PARAM_8":"485936567093821440","PARAM_7":"482573217517535232","PARAM_6":"463429360842440704","PARAM_5":"476673980116238336","PARAM_110":"480481736321400832","PARAM_4":"474123299400450048","PARAM_111":"481338861507575808","PARAM_3":"463401589349023744","PARAM_2":0,"PARAM_1":0,"PARAM_64":"476679550688821248","PARAM_65":"507635166470995968","PARAM_66":"474123300629381120","PARAM_67":"478956696207622144","PARAM_68":"494597327642689536","PARAM_69":"487559553085341696","PARAM_60":"479388237341655040","PARAM_61":"501416303421030400","PARAM_62":"472023709545136128","PARAM_63":"510887823079899136","PARAM_100":"463401588501774336","PARAM_125":"464788448306266112","PARAM_126":"498778136893194240","PARAM_123":"481749755081261056","PARAM_124":"481119862664462336","PARAM_129":"479956471090511872","PARAM_127":"473503441981800448","PARAM_128":"484681029190156288","PARAM_53":"482865237926608896","PARAM_54":"478688771848536064","PARAM_55":"476319992707547136","PARAM_56":"508300439058382848","PARAM_57":"479329594474758144","PARAM_58":"485743362016542720","PARAM_59":"494904222408507392","PARAM_50":"481068392111931392","PARAM_51":"473609135473033216","PARAM_52":"501072639033344000","PARAM_130":"473733262674493440","PARAM_114":"489922976217563136","PARAM_115":"482865236752203776","PARAM_112":"478080883799097344","PARAM_113":"489077813450637312","PARAM_118":"463399157072134144","PARAM_119":"486313030599049216","PARAM_116":"484684756085112832","PARAM_117":"463400832793051136","PARAM_42":"471623117005914112","PARAM_43":"479219968966131712","PARAM_44":"482583853127434240","PARAM_45":"482573216284409856","PARAM_46":"470155869825269760","PARAM_47":"471666423702224896","PARAM_48":"463401817099730944","PARAM_49":"494904458010951680","PARAM_40":"463399691099308032","PARAM_41":"476660950745743360","PARAM_121":"498885092861542400","PARAM_122":"473534971609350144","PARAM_120":"471653541992202240"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463401589349023744' , '474123299400450048' , '476673980116238336' , '463429360842440704' , '482573217517535232' , '485936567093821440' , '484681028040916992' , '482877685547139072' , '481749753835552768' , '478922681874382848' , '479218762373922816' , '472023708303622144' , '471622524862464000' , '474281126987300864' , '471623117999964160' , '479388233323511808' , '463399691917197312' , '478922694239191040' , '481563575630954496' , '471974292850999296' , '482877686885122048' , '495243932481880064' , '478603519541116928' , '477956226529886208' , '463400010562666496' , '498890640633892865' , '495244167178354688' , '479959574523150336' , '486313029152014336' , '480492970060021760' , '480137018328743936' , '486551850187751424' , '510887583488671744' , '490245517545046016' , '479329296838557696' , '482581102209269760' , '473503443139428352' , '463399691099308032' , '476660950745743360' , '471623117005914112' , '479219968966131712' , '482583853127434240' , '482573216284409856' , '470155869825269760' , '471666423702224896' , '463401817099730944' , '494904458010951680' , '481068392111931392' , '473609135473033216' , '501072639033344000' , '482865237926608896' , '478688771848536064' , '476319992707547136' , '508300439058382848' , '479329594474758144' , '485743362016542720' , '494904222408507392' , '479388237341655040' , '501416303421030400' , '472023709545136128' , '510887823079899136' , '476679550688821248' , '507635166470995968' , '474123300629381120' , '478956696207622144' , '494597327642689536' , '487559553085341696' , '472331332110778368' , '489815794193006592' , '472023119704358912' , '484684757343404032' , '484683104078794753' , '511607136254427136' , '507635163908276224' , '463397741918158848' , '485747535109947392' , '492410584894013440' , '489077814461464576' , '485743360800194560' , '463401816202149888' , '485888539251179520' , '501072119862394880' , '463402978934521856' , '489077805410156544' , '481338874124042240' , '477956227867869184' , '492410583505698816' , '479354721128153088' , '482864644558422016' , '463400011548327936' , '473626756130013184' , '463400833808072704' , '487568383219335168' , '490245516341280768' , '478585183470092288' , '480389141578645504' , '479220717896859648' , '463401588501774336' , '501072384963379200' , '501074109107535872' , '510887822752743424' , '479330045333078016' , '482581330920472576' , '473609136769073152' , '480488587389829120' , '483218066432327680' , '479329595586248704' , '480481736321400832' , '481338861507575808' , '478080883799097344' , '489077813450637312' , '489922976217563136' , '482865236752203776' , '484684756085112832' , '463400832793051136' , '463399157072134144' , '486313030599049216' , '471653541992202240' , '498885092861542400' , '473534971609350144' , '481749755081261056' , '481119862664462336' , '464788448306266112' , '498778136893194240' , '473503441981800448' , '484681029190156288' , '479956471090511872' , '473733262674493440' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：224ms , start = 1637130611452
┣━ 返回：RcdSet,size=380
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.820 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"481563573261172736","PARAM_31":"474281125611569152","PARAM_32":"478585182215995392","PARAM_33":"485888537137250304","PARAM_34":"485888538064191488","PARAM_35":"480492967832846336","PARAM_36":"485560942738800640","PARAM_37":"eam","PARAM_38":"501074107681472512","PARAM_30":"489815792691445760","PARAM_28":"472810496475529216","PARAM_29":"476673978719535104","PARAM_20":"471653540754882560","PARAM_21":"498885090605006848","PARAM_22":"508300436529217536","PARAM_23":"479220715891982336","PARAM_24":"476673977113116672","PARAM_25":"494904221175382016","PARAM_26":"473626754943025152","PARAM_27":"501416282843774976","PARAM_17":"473733261147766784","PARAM_18":"479329295395717120","PARAM_19":"472036556115279872","PARAM_97":"482865228682362880","PARAM_10":"487559548404498432","PARAM_98":"476319982246952960","PARAM_11":"479218760989802496","PARAM_99":"482581328609411072","PARAM_12":"498770298326220801","PARAM_13":"489922974875385856","PARAM_14":"478080882322702336","PARAM_15":"501072637603086336","PARAM_16":"463399156178747392","PARAM_90":"479330042942324736","PARAM_91":"511607135692390400","PARAM_92":"471666421412134912","PARAM_93":"479219966495686656","PARAM_94":"480137016143511552","PARAM_95":"483218065169842176","PARAM_96":"480492959574261760","PARAM_86":"480377921387626496","PARAM_87":"473733260023693312","PARAM_88":"485741098057072640","PARAM_89":"479218751359680512","PARAM_80":"495243930166624256","PARAM_81":"489815791709978624","PARAM_82":"494597326321483776","PARAM_83":"480488586022486016","PARAM_84":"495244165920063488","PARAM_85":"478603518131830784","PARAM_103":"463429359550595072","PARAM_104":"481068390891388928","PARAM_101":"476660949365817344","PARAM_102":"477952353941585920","PARAM_107":"480481734924697600","PARAM_108":"478956693833646080","PARAM_105":"479354719760809984","PARAM_106":"481068389998002176","PARAM_75":"480492968805924864","PARAM_76":"494904455913799680","PARAM_77":"481749155358703616","PARAM_109":"476319991407312896","PARAM_78":"482581101043253248","PARAM_79":"485747532740165632","PARAM_70":"481563563891097600","PARAM_71":"494904220248440832","PARAM_72":"479959573277442048","PARAM_73":"479218759966392320","PARAM_74":"473771456543588352","PARAM_9":"478688770657353728","PARAM_8":"495243931164868608","PARAM_7":"481338872328880128","PARAM_6":"485936565877473280","PARAM_5":"489901525628354560","PARAM_110":"479956469668642816","PARAM_4":"485747533784547328","PARAM_111":"508300434876661760","PARAM_3":"501072108940427264","PARAM_2":0,"PARAM_1":0,"PARAM_64":"471622523520286720","PARAM_65":"479008672874233856","PARAM_66":"484683940846632960","PARAM_67":"480377922318761984","PARAM_68":"487568378521714688","PARAM_69":"463402977978220544","PARAM_60":"475954745446498304","PARAM_61":"478922692477583360","PARAM_62":"478956684903972864","PARAM_63":"510887583106990080","PARAM_100":"476679549543776256","PARAM_125":"482583851852365824","PARAM_126":"472357984110903296","PARAM_123":"480137017104007168","PARAM_124":"511607135931465728","PARAM_129":"472331138002583552","PARAM_127":"478956694827696128","PARAM_128":"471974290984534016","PARAM_53":"481563574288777216","PARAM_54":"487568380539174912","PARAM_55":"476679548692332544","PARAM_56":"464788447014420480","PARAM_57":"479330044003483648","PARAM_58":"471666422389407744","PARAM_59":"482581100191809536","PARAM_50":"471653539840524288","PARAM_51":"481119861406171136","PARAM_52":"501416300740870144","PARAM_130":"480389140282605568","PARAM_114":"483218064226123776","PARAM_115":"482864643224633344","PARAM_112":"488696599002742784","PARAM_113":"495244164963762176","PARAM_118":"472023118244741120","PARAM_119":"463397740718587904","PARAM_116":"486551848799436800","PARAM_117":"475686689822474240","PARAM_42":"471985681850171393","PARAM_43":"473626754091581440","PARAM_44":"472331330856681472","PARAM_45":"494904456811380736","PARAM_46":"471974291777257472","PARAM_47":"473534970493665280","PARAM_48":"479598115674914816","PARAM_49":"501072117886877696","PARAM_40":"476319990312599552","PARAM_41":"482581329603461120","PARAM_121":"501072383491178496","PARAM_122":"479219967531679744","PARAM_120":"487559550405181440"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501072108940427264' , '485747533784547328' , '489901525628354560' , '485936565877473280' , '481338872328880128' , '495243931164868608' , '478688770657353728' , '487559548404498432' , '479218760989802496' , '498770298326220801' , '489922974875385856' , '478080882322702336' , '501072637603086336' , '463399156178747392' , '473733261147766784' , '479329295395717120' , '472036556115279872' , '471653540754882560' , '498885090605006848' , '508300436529217536' , '479220715891982336' , '476673977113116672' , '494904221175382016' , '473626754943025152' , '501416282843774976' , '472810496475529216' , '476673978719535104' , '489815792691445760' , '474281125611569152' , '478585182215995392' , '485888537137250304' , '485888538064191488' , '480492967832846336' , '485560942738800640' , 'eam' , '501074107681472512' , '481563573261172736' , '476319990312599552' , '482581329603461120' , '471985681850171393' , '473626754091581440' , '472331330856681472' , '494904456811380736' , '471974291777257472' , '473534970493665280' , '479598115674914816' , '501072117886877696' , '471653539840524288' , '481119861406171136' , '501416300740870144' , '481563574288777216' , '487568380539174912' , '476679548692332544' , '464788447014420480' , '479330044003483648' , '471666422389407744' , '482581100191809536' , '475954745446498304' , '478922692477583360' , '478956684903972864' , '510887583106990080' , '471622523520286720' , '479008672874233856' , '484683940846632960' , '480377922318761984' , '487568378521714688' , '463402977978220544' , '481563563891097600' , '494904220248440832' , '479959573277442048' , '479218759966392320' , '473771456543588352' , '480492968805924864' , '494904455913799680' , '481749155358703616' , '482581101043253248' , '485747532740165632' , '495243930166624256' , '489815791709978624' , '494597326321483776' , '480488586022486016' , '495244165920063488' , '478603518131830784' , '480377921387626496' , '473733260023693312' , '485741098057072640' , '479218751359680512' , '479330042942324736' , '511607135692390400' , '471666421412134912' , '479219966495686656' , '480137016143511552' , '483218065169842176' , '480492959574261760' , '482865228682362880' , '476319982246952960' , '482581328609411072' , '476679549543776256' , '476660949365817344' , '477952353941585920' , '463429359550595072' , '481068390891388928' , '479354719760809984' , '481068389998002176' , '480481734924697600' , '478956693833646080' , '476319991407312896' , '479956469668642816' , '508300434876661760' , '488696599002742784' , '495244164963762176' , '483218064226123776' , '482864643224633344' , '486551848799436800' , '475686689822474240' , '472023118244741120' , '463397740718587904' , '487559550405181440' , '501072383491178496' , '479219967531679744' , '480137017104007168' , '511607135931465728' , '482583851852365824' , '472357984110903296' , '478956694827696128' , '471974290984534016' , '472331138002583552' , '480389140282605568' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：251ms , start = 1637130611566
┣━ 返回：RcdSet,size=332
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:11.891 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_person","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_person'
┣ 结果： 
┣━ 耗时：18ms , start = 1637130611871
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.909 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"P001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'P001' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130611898
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

14:30:11.913 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_organization","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_organization'
┣ 结果： 
┣━ 耗时：15ms , start = 1637130611897
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.933 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_busi_role","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_busi_role'
┣ 结果： 
┣━ 耗时：17ms , start = 1637130611915
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.950 [ForkJoinPool-2-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_company","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_company'
┣ 结果： 
┣━ 耗时：13ms , start = 1637130611936
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.964 [ForkJoinPool-2-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"002"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '002' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130611953
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 

14:30:11.967 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_position'
┣ 结果： 
┣━ 耗时：14ms , start = 1637130611952
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.984 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_busi_role_member","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_busi_role_member'
┣ 结果： 
┣━ 耗时：13ms , start = 1637130611970
┣━ 返回：RcdSet,size=6
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:11.997 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":"employee"}
┣ 执行：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = 'employee' ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130611986
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 

14:30:12.000 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_position'
┣ 结果： 
┣━ 耗时：14ms , start = 1637130611985
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:12.016 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee_position'
┣ 结果： 
┣━ 耗时：14ms , start = 1637130612002
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:12.030 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130612019
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 

14:30:12.032 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee_position'
┣ 结果： 
┣━ 耗时：14ms , start = 1637130612018
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:12.052 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"E001","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637130612037
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 

14:30:13.162 [XNIO-1 task-1] - [] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 2722ms
14:30:13.318 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 
┣ 语句：UPDATE sys_user SET last_login_time = ? WHERE id = ?
┣ 参数：{"PARAM_1":1637130613301,"PARAM_2":"110588348101165911"}
┣ 执行：UPDATE sys_user SET last_login_time = str_to_date('2021-11-17 14:30:13','%Y-%m-%d %H:%i:%s') WHERE id = '110588348101165911'
┣ 结果： 
┣━ 耗时：12ms , start = 1637130613303
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.update(UserServiceImpl.java:202)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:81)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 

14:30:13.335 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_session_online","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_session_online'
┣ 结果： 
┣━ 耗时：15ms , start = 1637130613319
┣━ 返回：RcdSet,size=19
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:88)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:13.361 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_session_online WHERE id = ?
┣ 参数：{"PARAM_1":"gPywhDdhDgtpmCswZgnt9yNvHaeG-vVMQcFkI9j5"}
┣ 执行：select * from sys_session_online WHERE id = 'gPywhDdhDgtpmCswZgnt9yNvHaeG-vVMQcFkI9j5'
┣ 结果： 
┣━ 耗时：11ms , start = 1637130613345
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:88)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：null
┗━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 

14:30:13.418 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 
┣ 语句：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"gPywhDdhDgtpmCswZgnt9yNvHaeG-vVMQcFkI9j5","PARAM_9":"ed-10b7f97ade-dc59","PARAM_8":"D7B67D75818C671B","PARAM_10":"110588348101165911","PARAM_7":1,"PARAM_11":1637130613393,"PARAM_6":1200,"PARAM_12":1,"PARAM_5":1637130613364,"PARAM_4":1637130613364,"PARAM_3":"110588348101165911","PARAM_2":"x_bTxNFzTWK-0CWfDSFSq64u-j_mBV8KDEym48gT"}
┣ 执行：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( 'gPywhDdhDgtpmCswZgnt9yNvHaeG-vVMQcFkI9j5' , 'x_bTxNFzTWK-0CWfDSFSq64u-j_mBV8KDEym48gT' , '110588348101165911' , str_to_date('2021-11-17 14:30:13','%Y-%m-%d %H:%i:%s') , str_to_date('2021-11-17 14:30:13','%Y-%m-%d %H:%i:%s') , 1200 , 1 , 'D7B67D75818C671B' , 'ed-10b7f97ade-dc59' , '110588348101165911' , str_to_date('2021-11-17 14:30:13','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：17ms , start = 1637130613398
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.insert(SessionOnlineServiceImpl.java:74)
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 

14:30:13.575 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_token","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_token'
┣ 结果： 
┣━ 耗时：18ms , start = 1637130613556
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:13.594 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 
┣ 语句：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513360217216389120","PARAM_9":0,"PARAM_8":1637132613524,"PARAM_10":"110588348101165911","PARAM_7":0,"PARAM_11":1637130613579,"PARAM_6":1637132413423,"PARAM_12":1,"PARAM_5":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MDM6MzMiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjMwOjEzIiwianRpIjoiMmY1YTJlMDMtOWVkOC00ZDBjLWJjNjMtMTdmZmEzZDA0MDhmIn0.f0xwgdmWsKGCQrszAB_sUTcPRcsrAwwtp0k8NaWCJcus4qBzc0llnTb7QeH7-DEEVcva_TolhxMpCtviFe68ikM71c24LdahQiXnyalCRM-UAdxVLCNKfxFk7Cx4ucbixiyZ-ORws3jG8WBk2z8OLszjFyK-cI5vEbL3zqoCE4oh6utm2TFWsHs83BtiAwWfOFnAvi38t3KIPBTNV6hU5MCgJJAJ24AIFufE-Jhsdkxpc9ZQ3J2G_YXy4asU36L72Pz9T91SgXcxvswvpTvdL7LcJX7RN34-TJKRUhoEXBxXQ3_-ufpS0y6kgHpniBvrXV2D1ZeDhFZErWuJ1I09Xw","PARAM_4":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MDA6MTMiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjMwOjEzIiwianRpIjoiMmY1YTJlMDMtOWVkOC00ZDBjLWJjNjMtMTdmZmEzZDA0MDhmIn0.C6dNcBQ0c2DPXOZF90ae_h4oN11V_up34O223nWM4MAiw9_xWej3KdekF7JQ0PFGQmQ8oyE29wha7pDEWKB00gncLOap2Wyjd4EhCr1I9m-OuXwegPYLzw8jTFhwWOP-f6y_LmhtvMCCS1TmscDn5n7-CQAAlcVzLB_TuAj3uvKybVHXhDOTjsOnSeXysuC6r8fAu_fY5O21m5s4fi6gmkWWma7Wjw29bssJSpq9bGHunP4ne6TbqJa5xzze7Q1HjzfdudmAPE4QN_Rt5c2Kq_nXTJLpttH8aytyfI4Lc6D1clA2y8IOhv1pFbqAf77oIETVe705tKb03DEZZMWGGQ","PARAM_3":"2f5a2e03-9ed8-4d0c-bc63-17ffa3d0408f","PARAM_2":"110588348101165911"}
┣ 执行：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( '513360217216389120' , '110588348101165911' , '2f5a2e03-9ed8-4d0c-bc63-17ffa3d0408f' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MDA6MTMiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjMwOjEzIiwianRpIjoiMmY1YTJlMDMtOWVkOC00ZDBjLWJjNjMtMTdmZmEzZDA0MDhmIn0.C6dNcBQ0c2DPXOZF90ae_h4oN11V_up34O223nWM4MAiw9_xWej3KdekF7JQ0PFGQmQ8oyE29wha7pDEWKB00gncLOap2Wyjd4EhCr1I9m-OuXwegPYLzw8jTFhwWOP-f6y_LmhtvMCCS1TmscDn5n7-CQAAlcVzLB_TuAj3uvKybVHXhDOTjsOnSeXysuC6r8fAu_fY5O21m5s4fi6gmkWWma7Wjw29bssJSpq9bGHunP4ne6TbqJa5xzze7Q1HjzfdudmAPE4QN_Rt5c2Kq_nXTJLpttH8aytyfI4Lc6D1clA2y8IOhv1pFbqAf77oIETVe705tKb03DEZZMWGGQ' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MDM6MzMiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjMwOjEzIiwianRpIjoiMmY1YTJlMDMtOWVkOC00ZDBjLWJjNjMtMTdmZmEzZDA0MDhmIn0.f0xwgdmWsKGCQrszAB_sUTcPRcsrAwwtp0k8NaWCJcus4qBzc0llnTb7QeH7-DEEVcva_TolhxMpCtviFe68ikM71c24LdahQiXnyalCRM-UAdxVLCNKfxFk7Cx4ucbixiyZ-ORws3jG8WBk2z8OLszjFyK-cI5vEbL3zqoCE4oh6utm2TFWsHs83BtiAwWfOFnAvi38t3KIPBTNV6hU5MCgJJAJ24AIFufE-Jhsdkxpc9ZQ3J2G_YXy4asU36L72Pz9T91SgXcxvswvpTvdL7LcJX7RN34-TJKRUhoEXBxXQ3_-ufpS0y6kgHpniBvrXV2D1ZeDhFZErWuJ1I09Xw' , str_to_date('2021-11-17 15:00:13','%Y-%m-%d %H:%i:%s') , 0 , str_to_date('2021-11-17 15:03:33','%Y-%m-%d %H:%i:%s') , 0 , '110588348101165911' , str_to_date('2021-11-17 14:30:13','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：13ms , start = 1637130613579
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 

14:30:14.372 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 
┣ 语句：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= ?
┣ 参数：{"PARAM_1":0}
┣ 执行：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：216ms , start = 1637130614155
┣━ 返回：RcdSet,size=1618
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:188)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:173)
    org.github.foxnic.web.oauth.service.impl.ResourzeServiceImpl.getMatchd(ResourzeServiceImpl.java:293)
┣ TID：null
┗━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 

14:30:14.444 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_lang","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_lang'
┣ 结果： 
┣━ 耗时：19ms , start = 1637130614424
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:14.538 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：88ms , start = 1637130614449
┣━ 返回：RcdSet,size=1266
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：513360220823490560
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

14:30:14.890 [XNIO-1 task-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE code = 'system.portal.module.enable'
┣ 结果： 
┣━ 耗时：31ms , start = 1637130614855
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:30:15.643 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：100ms , start = 1637130615534
┣━ 返回：RcdSet,size=1266
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：513360225504333824
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

14:30:23.837 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"系统资源","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '系统资源' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637130623821
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:23.867 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"名称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '名称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637130623852
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:23.886 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"类型","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '类型' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637130623872
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:23.957 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"访问控制","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '访问控制' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637130623941
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:23.967 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"访问控制","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '访问控制' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：17ms , start = 1637130623947
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:23.979 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"地址","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '地址' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130623966
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:23.996 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"地址","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '地址' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637130623976
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:23.997 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"模块","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '模块' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637130623984
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.018 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"搜索","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '搜索' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637130624002
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.019 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"搜索","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '搜索' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637130624003
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.045 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"新建","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '新建' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637130624026
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.045 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"新建","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '新建' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：18ms , start = 1637130624026
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.062 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"查看","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '查看' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637130624050
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.067 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"查看","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '查看' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637130624053
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.083 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637130624067
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.094 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637130624072
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.113 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637130624098
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.113 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637130624100
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.244 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:30:24.244 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:30:24.382 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_db_cache","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_db_cache'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130624278
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:24.438 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_db_cache","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_db_cache'
┣ 结果： 
┣━ 耗时：15ms , start = 1637130624422
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:30:24.446 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/oauth/resourze/resourze_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/oauth/resourze/resourze_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637130624430
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513360225504333824
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:30:24.457 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/oauth/resourze/resourze_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/oauth/resourze/resourze_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637130624444
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513360220823490560
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:30:24.635 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：16ms , start = 1637130624617
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.652 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请输入关键字","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请输入关键字' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130624640
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.666 [XNIO-1 task-6] - [513360225504333824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"添加","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '添加' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637130624655
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360225504333824
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.822 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130624809
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.839 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请输入","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请输入' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130624827
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.859 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单类型","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单类型' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637130624844
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.932 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"批次号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '批次号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637130624915
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.958 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"权限","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '权限' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：17ms , start = 1637130624935
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.974 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否显示","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否显示' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130624962
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:24.990 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否隐藏","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否隐藏' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637130624978
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.004 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单图标","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单图标' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130624992
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.032 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"样式","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '样式' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：21ms , start = 1637130625007
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.047 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择图标","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择图标' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130625034
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.064 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"页面路径","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '页面路径' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130625049
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.120 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"页面参数","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '页面参数' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：36ms , start = 1637130625067
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.154 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"路由地址","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '路由地址' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637130625142
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.183 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资源清单","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资源清单' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：15ms , start = 1637130625166
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.219 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"动态控制","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '动态控制' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：20ms , start = 1637130625194
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.244 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"动态控制类","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '动态控制类' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637130625226
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.260 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"上级ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '上级ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637130625247
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:25.280 [XNIO-1 task-1] - [513360220823490560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"保存","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '保存' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637130625263
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513360220823490560
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:30:26.129 [XNIO-1 task-1] - [513360269636800512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：23ms , start = 1637130626104
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryRootNotes(MenuServiceImpl.java:263)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:274)
┣ TID：513360269636800512
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:30:26.496 [XNIO-1 task-1] - [513360271364853760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637130626481
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360271364853760
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:26.517 [XNIO-1 task-1] - [513360271364853760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：19ms , start = 1637130626497
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360271364853760
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:26.582 [XNIO-1 task-6] - [513360271780089856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：14ms , start = 1637130626566
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryRootNotes(MenuServiceImpl.java:263)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:274)
┣ TID：513360271780089856
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:30:26.830 [XNIO-1 task-1] - [513360272820277248] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637130626817
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360272820277248
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:26.846 [XNIO-1 task-1] - [513360272820277248] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：14ms , start = 1637130626831
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360272820277248
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:26.853 [XNIO-1 task-6] - [513360272920940544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637130626838
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360272920940544
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:26.880 [XNIO-1 task-6] - [513360272920940544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：25ms , start = 1637130626853
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360272920940544
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:26.896 [XNIO-1 task-1] - [513360273105489920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637130626882
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360273105489920
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:26.924 [XNIO-1 task-1] - [513360273105489920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：25ms , start = 1637130626897
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360273105489920
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:26.934 [XNIO-1 task-3] - [513360273218736128] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：23ms , start = 1637130626909
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360273218736128
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:26.985 [XNIO-1 task-3] - [513360273218736128] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：47ms , start = 1637130626936
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360273218736128
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:28.723 [XNIO-1 task-3] - [513360280722345984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"eam"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= 'eam' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：20ms , start = 1637130628698
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360280722345984
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:30:30.675 [XNIO-1 task-3] - [513360288947376128] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"471985490283724800"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '471985490283724800' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：15ms , start = 1637130630659
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360288947376128
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:30:33.274 [XNIO-1 task-3] - [513360299856760832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"480137007910092800"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '480137007910092800' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：12ms , start = 1637130633261
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360299856760832
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:30:36.341 [XNIO-1 task-3] - [513360312716496896] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"479959564469403648"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '479959564469403648' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：15ms , start = 1637130636325
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360312716496896
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:30:37.657 [XNIO-1 task-3] - [513360318211035136] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"503188930321977344"}
┣ 执行：select * from sys_menu WHERE id = '503188930321977344'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130637638
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360318211035136
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:30:37.675 [XNIO-1 task-3] - [513360318211035136] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130637662
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360318211035136
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:37.701 [XNIO-1 task-3] - [513360318211035136] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"503188930321977344","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '503188930321977344' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：21ms , start = 1637130637678
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360318211035136
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:37.807 [XNIO-1 task-3] - [513360318861152256] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637130637792
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360318861152256
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:37.824 [XNIO-1 task-3] - [513360318861152256] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：14ms , start = 1637130637808
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360318861152256
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:37.856 [XNIO-1 task-1] - [513360319041507328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：21ms , start = 1637130637834
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360319041507328
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:37.887 [XNIO-1 task-1] - [513360319041507328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：21ms , start = 1637130637857
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360319041507328
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:41.128 [XNIO-1 task-1] - [513360332752687104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"498474299326210049"}
┣ 执行：select * from sys_menu WHERE id = '498474299326210049'
┣ 结果： 
┣━ 耗时：24ms , start = 1637130641102
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360332752687104
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:30:41.139 [XNIO-1 task-1] - [513360332752687104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：9ms , start = 1637130641129
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360332752687104
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:41.154 [XNIO-1 task-1] - [513360332752687104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"498474299326210049","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '498474299326210049' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：11ms , start = 1637130641141
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360332752687104
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:41.222 [XNIO-1 task-1] - [513360333184700416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637130641207
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360333184700416
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:41.239 [XNIO-1 task-1] - [513360333184700416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：14ms , start = 1637130641223
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360333184700416
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:41.276 [XNIO-1 task-3] - [513360333394415616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：18ms , start = 1637130641256
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360333394415616
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:41.296 [XNIO-1 task-3] - [513360333394415616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：18ms , start = 1637130641277
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360333394415616
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:43.259 [XNIO-1 task-3] - [513360341745274880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"503188930321977344"}
┣ 执行：select * from sys_menu WHERE id = '503188930321977344'
┣ 结果： 
┣━ 耗时：12ms , start = 1637130643246
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360341745274880
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:30:43.275 [XNIO-1 task-3] - [513360341745274880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637130643260
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360341745274880
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:30:43.289 [XNIO-1 task-3] - [513360341745274880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"503188930321977344","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '503188930321977344' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：10ms , start = 1637130643277
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360341745274880
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:30:43.349 [XNIO-1 task-3] - [513360342118567936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637130643336
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360342118567936
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:43.366 [XNIO-1 task-3] - [513360342118567936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：15ms , start = 1637130643350
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360342118567936
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:43.387 [XNIO-1 task-1] - [513360342277951488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637130643374
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360342277951488
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:30:43.417 [XNIO-1 task-1] - [513360342277951488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：21ms , start = 1637130643389
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360342277951488
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:30:48.711 [XNIO-1 task-1] - [513360364373544960] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"479959564469403648","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1637130648696,"PARAM_14":"503188930321977344","PARAM_9":"","PARAM_8":"","PARAM_7":"[]","PARAM_6":"function","PARAM_5":"结束维修","PARAM_4":"","PARAM_3":0,"PARAM_2":"eam_asset_repair:finish"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'eam_asset_repair:finish' , hidden = 0 , css = '' , label = '结束维修' , type = 'function' , path_resource_id = '[]' , url = '' , params = '' , parent_id = '479959564469403648' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-11-17 14:30:48','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '503188930321977344'
┣ 结果： 
┣━ 耗时：13ms , start = 1637130648697
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:995)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:981)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：513360364373544960
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

14:30:48.762 [XNIO-1 task-1] - [513360364373544960] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"503188930321977344"}
┣ 执行：delete from sys_menu_resource where menu_id= '503188930321977344'
┣ 结果： 
┣━ 耗时：9ms , start = 1637130648751
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:235)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：513360364373544960
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

14:30:48.779 [XNIO-1 task-1] - [513360364373544960] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513360364906221568","PARAM_6":1,"PARAM_5":1637130648769,"PARAM_4":"110588348101165911","PARAM_3":"503188806317379584","PARAM_2":"503188930321977344"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513360364906221568' , '503188930321977344' , '503188806317379584' , '110588348101165911' , str_to_date('2021-11-17 14:30:48','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：9ms , start = 1637130648769
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513360364373544960
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:30:54.253 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:30:54.253 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:31:08.154 [XNIO-1 task-1] - [513360446166667264] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"472036810977968129"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '472036810977968129' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：11ms , start = 1637130668142
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360446166667264
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:31:09.630 [XNIO-1 task-1] - [513360452256796672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"472037131183718400"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '472037131183718400' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：31ms , start = 1637130669598
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360452256796672
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:31:11.230 [XNIO-1 task-1] - [513360459009626112] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"479008663990697984"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '479008663990697984' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：21ms , start = 1637130671205
┣━ 返回：RcdSet,size=10
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360459009626112
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:31:13.421 [XNIO-1 task-1] - [513360468232900608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"472811546343374849"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '472811546343374849' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：14ms , start = 1637130673405
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360468232900608
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:31:22.252 [XNIO-1 task-1] - [513360505218273280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：17ms , start = 1637130682232
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryRootNotes(MenuServiceImpl.java:263)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:274)
┣ TID：513360505218273280
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:31:22.701 [XNIO-1 task-1] - [513360507164430336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：13ms , start = 1637130682686
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryRootNotes(MenuServiceImpl.java:263)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:274)
┣ TID：513360507164430336
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:31:22.742 [XNIO-1 task-3] - [513360507328008192] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637130682727
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360507328008192
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:22.784 [XNIO-1 task-3] - [513360507328008192] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：37ms , start = 1637130682744
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360507328008192
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:22.821 [XNIO-1 task-1] - [513360507520946176] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：46ms , start = 1637130682771
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360507520946176
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:22.844 [XNIO-1 task-1] - [513360507520946176] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：19ms , start = 1637130682822
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360507520946176
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:22.911 [XNIO-1 task-3] - [513360507806158848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：57ms , start = 1637130682840
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360507806158848
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:22.935 [XNIO-1 task-6] - [513360508011679744] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：44ms , start = 1637130682888
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360508011679744
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:22.973 [XNIO-1 task-3] - [513360507806158848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：40ms , start = 1637130682918
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360507806158848
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:22.983 [XNIO-1 task-6] - [513360508011679744] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：43ms , start = 1637130682936
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360508011679744
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:24.247 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:31:24.247 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:31:38.257 [XNIO-1 task-6] - [513360572406829056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"472036810977968129"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '472036810977968129' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：13ms , start = 1637130698242
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360572406829056
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:31:39.350 [XNIO-1 task-6] - [513360576953454592] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"472037131183718400"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '472037131183718400' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：21ms , start = 1637130699326
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360576953454592
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:31:40.775 [XNIO-1 task-6] - [513360582804508672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"479008663990697984"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '479008663990697984' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：48ms , start = 1637130700720
┣━ 返回：RcdSet,size=10
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360582804508672
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:31:41.307 [XNIO-1 task-6] - [513360585182679040] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"479008663990697984"}
┣ 执行：select * from sys_menu WHERE id = '479008663990697984'
┣ 结果： 
┣━ 耗时：17ms , start = 1637130701287
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360585182679040
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:31:41.329 [XNIO-1 task-6] - [513360585182679040] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"479008663701291008"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '479008663701291008' )
┣ 结果： 
┣━ 耗时：12ms , start = 1637130701314
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360585182679040
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:31:41.344 [XNIO-1 task-6] - [513360585182679040] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"479008663990697984","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479008663990697984' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：11ms , start = 1637130701332
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360585182679040
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:31:41.429 [XNIO-1 task-6] - [513360585673412608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：18ms , start = 1637130701404
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360585673412608
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:41.446 [XNIO-1 task-6] - [513360585673412608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：14ms , start = 1637130701430
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360585673412608
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:41.521 [XNIO-1 task-3] - [513360585816018944] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：74ms , start = 1637130701439
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360585816018944
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:41.567 [XNIO-1 task-3] - [513360585816018944] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：24ms , start = 1637130701522
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360585816018944
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:46.010 [XNIO-1 task-3] - [513360604870742016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET label = :PARAM_1 , update_by = :PARAM_2 , update_time = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET label = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"知识内容","PARAM_4":"479008663990697984","PARAM_3":1637130705993,"PARAM_2":"110588348101165911"}
┣ 执行：UPDATE sys_menu SET label = '知识内容' , update_by = '110588348101165911' , update_time = str_to_date('2021-11-17 14:31:45','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '479008663990697984'
┣ 结果： 
┣━ 耗时：11ms , start = 1637130705993
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:995)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:981)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：513360604870742016
┗━━━━━ SQL [ UPDATE sys_menu SET label = :PARAM_1 , update_by = :PARAM_2 , update_time = :P... ] ━━━━━ 

14:31:46.077 [XNIO-1 task-3] - [513360605202092032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"479008668327608320"}
┣ 执行：select * from sys_menu WHERE id = '479008668327608320'
┣ 结果： 
┣━ 耗时：11ms , start = 1637130706060
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360605202092032
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:31:46.096 [XNIO-1 task-3] - [513360605202092032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null )
┣ 结果： 
┣━ 耗时：12ms , start = 1637130706082
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360605202092032
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:31:46.120 [XNIO-1 task-3] - [513360605202092032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"479008668327608320","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479008668327608320' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：16ms , start = 1637130706098
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360605202092032
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:31:46.136 [XNIO-1 task-6] - [513360605407612928] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"479008663990697984"}
┣ 执行：select * from sys_menu WHERE id = '479008663990697984'
┣ 结果： 
┣━ 耗时：25ms , start = 1637130706109
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360605407612928
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:31:46.150 [XNIO-1 task-6] - [513360605407612928] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"479008663701291008"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '479008663701291008' )
┣ 结果： 
┣━ 耗时：10ms , start = 1637130706138
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360605407612928
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:31:46.166 [XNIO-1 task-6] - [513360605407612928] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"479008663990697984","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479008663990697984' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：10ms , start = 1637130706152
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360605407612928
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:31:46.214 [XNIO-1 task-6] - [513360605793488896] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637130706201
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360605793488896
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:46.253 [XNIO-1 task-6] - [513360605793488896] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：25ms , start = 1637130706215
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360605793488896
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:46.323 [XNIO-1 task-3] - [513360606187753472] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637130706306
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360606187753472
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:46.356 [XNIO-1 task-3] - [513360606187753472] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：28ms , start = 1637130706324
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360606187753472
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:46.450 [XNIO-1 task-3] - [513360606728818688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637130706432
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360606728818688
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:46.480 [XNIO-1 task-3] - [513360606728818688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：18ms , start = 1637130706454
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360606728818688
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:46.568 [XNIO-1 task-3] - [513360607244718080] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637130706547
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360607244718080
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:46.592 [XNIO-1 task-3] - [513360607244718080] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：20ms , start = 1637130706569
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360607244718080
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:49.245 [XNIO-1 task-3] - [513360618456092672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"479008663990697984"}
┣ 执行：select * from sys_menu WHERE id = '479008663990697984'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130709220
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360618456092672
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:31:49.264 [XNIO-1 task-3] - [513360618456092672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"479008663701291008"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '479008663701291008' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637130709248
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360618456092672
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:31:49.288 [XNIO-1 task-3] - [513360618456092672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"479008663990697984","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479008663990697984' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：17ms , start = 1637130709266
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360618456092672
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:31:49.345 [XNIO-1 task-3] - [513360618925854720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637130709332
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360618925854720
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:49.362 [XNIO-1 task-3] - [513360618925854720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：14ms , start = 1637130709346
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360618925854720
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:49.396 [XNIO-1 task-6] - [513360619135569920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637130709382
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360619135569920
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:31:49.419 [XNIO-1 task-6] - [513360619135569920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：20ms , start = 1637130709396
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360619135569920
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:31:54.243 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:31:54.243 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:32:04.554 [XNIO-1 task-6] - [513360682712829952] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"479008663990697984"}
┣ 执行：select * from sys_menu WHERE id = '479008663990697984'
┣ 结果： 
┣━ 耗时：11ms , start = 1637130724539
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360682712829952
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:32:04.576 [XNIO-1 task-6] - [513360682712829952] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"479008663701291008"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '479008663701291008' )
┣ 结果： 
┣━ 耗时：16ms , start = 1637130724557
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360682712829952
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:32:04.624 [XNIO-1 task-6] - [513360682712829952] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"479008663990697984","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479008663990697984' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：44ms , start = 1637130724578
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360682712829952
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:32:04.714 [XNIO-1 task-6] - [513360683316809728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：24ms , start = 1637130724687
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360683316809728
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:04.757 [XNIO-1 task-6] - [513360683316809728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：37ms , start = 1637130724715
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360683316809728
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:04.760 [XNIO-1 task-3] - [513360683476193280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：35ms , start = 1637130724722
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360683476193280
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:04.781 [XNIO-1 task-3] - [513360683476193280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：16ms , start = 1637130724761
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360683476193280
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:10.638 [XNIO-1 task-3] - [513360708214198272] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , crea... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513360708218392576","PARAM_9":1,"PARAM_8":1637130730621,"PARAM_7":"110588348101165911","PARAM_6":999999,"PARAM_5":"479008663990697984","PARAM_4":"folder","PARAM_3":"新菜单-1637130730619","PARAM_2":"ef-8d2bb2fbcb-c390"}
┣ 执行：INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , create_by , create_time , version ) VALUES ( '513360708218392576' , 'ef-8d2bb2fbcb-c390' , '新菜单-1637130730619' , 'folder' , '479008663990697984' , 999999 , '110588348101165911' , str_to_date('2021-11-17 14:32:10','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：13ms , start = 1637130730621
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:83)
┣ TID：513360708214198272
┗━━━━━ SQL [ INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , crea... ] ━━━━━ 

14:32:10.652 [XNIO-1 task-3] - [513360708214198272] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu set hierarchy=id where parent_id='0' ] ━━━━━ 
┣ 语句：UPDATE sys_menu set hierarchy=id where parent_id='0'
┣ 参数：{}
┣ 执行：UPDATE sys_menu set hierarchy=id where parent_id='0'
┣ 结果： 
┣━ 耗时：10ms , start = 1637130730641
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:338)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：513360708214198272
┗━━━━━ SQL [ UPDATE sys_menu set hierarchy=id where parent_id='0' ] ━━━━━ 

14:32:10.667 [XNIO-1 task-3] - [513360708214198272] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 
┣ 语句：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 参数：{}
┣ 执行：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 结果： 
┣━ 耗时：11ms , start = 1637130730653
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:340)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：513360708214198272
┗━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 

14:32:10.682 [XNIO-1 task-3] - [513360708214198272] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 
┣ 语句：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 参数：{}
┣ 执行：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 结果： 
┣━ 耗时：11ms , start = 1637130730668
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:340)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：513360708214198272
┗━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 

14:32:11.542 [XNIO-1 task-3] - [513360711993266176] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"513360708218392576"}
┣ 执行：select * from sys_menu WHERE id = '513360708218392576'
┣ 结果： 
┣━ 耗时：13ms , start = 1637130731521
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360711993266176
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:32:11.558 [XNIO-1 task-3] - [513360711993266176] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null )
┣ 结果： 
┣━ 耗时：10ms , start = 1637130731546
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360711993266176
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:32:11.573 [XNIO-1 task-3] - [513360711993266176] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"513360708218392576","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '513360708218392576' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：10ms , start = 1637130731560
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360711993266176
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:32:11.629 [XNIO-1 task-3] - [513360712391725056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637130731616
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360712391725056
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:11.654 [XNIO-1 task-3] - [513360712391725056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：19ms , start = 1637130731630
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360712391725056
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:11.710 [XNIO-1 task-6] - [513360712584663040] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：43ms , start = 1637130731662
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360712584663040
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:11.738 [XNIO-1 task-6] - [513360712584663040] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：25ms , start = 1637130731711
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360712584663040
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:18.893 [XNIO-1 task-6] - [513360742754291712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"479008663990697984","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1637130738868,"PARAM_14":"513360708218392576","PARAM_9":"","PARAM_8":"","PARAM_7":"[]","PARAM_6":"function","PARAM_5":"预览","PARAM_4":"","PARAM_3":0,"PARAM_2":"ef-8d2bb2fbcb-c390"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'ef-8d2bb2fbcb-c390' , hidden = 0 , css = '' , label = '预览' , type = 'function' , path_resource_id = '[]' , url = '' , params = '' , parent_id = '479008663990697984' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-11-17 14:32:18','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '513360708218392576'
┣ 结果： 
┣━ 耗时：13ms , start = 1637130738868
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:995)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:981)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：513360742754291712
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

14:32:18.908 [XNIO-1 task-6] - [513360742754291712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"513360708218392576"}
┣ 执行：delete from sys_menu_resource where menu_id= '513360708218392576'
┣ 结果： 
┣━ 耗时：11ms , start = 1637130738894
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:235)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：513360742754291712
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

14:32:20.203 [XNIO-1 task-6] - [513360748307550208] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"513099088061792256"}
┣ 执行：select * from sys_menu WHERE id = '513099088061792256'
┣ 结果： 
┣━ 耗时：21ms , start = 1637130740179
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360748307550208
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:32:20.221 [XNIO-1 task-6] - [513360748307550208] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637130740204
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360748307550208
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:32:20.248 [XNIO-1 task-6] - [513360748307550208] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"513099088061792256","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '513099088061792256' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：12ms , start = 1637130740223
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360748307550208
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:32:20.373 [XNIO-1 task-6] - [513360749049942016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637130740358
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360749049942016
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:20.390 [XNIO-1 task-6] - [513360749049942016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：14ms , start = 1637130740374
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360749049942016
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:20.427 [XNIO-1 task-3] - [513360749263851520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637130740407
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360749263851520
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:20.455 [XNIO-1 task-3] - [513360749263851520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：24ms , start = 1637130740428
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360749263851520
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:24.175 [XNIO-1 task-3] - [513360765005074432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"513360708218392576"}
┣ 执行：select * from sys_menu WHERE id = '513360708218392576'
┣ 结果： 
┣━ 耗时：12ms , start = 1637130744159
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360765005074432
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:32:24.191 [XNIO-1 task-3] - [513360765005074432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130744177
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360765005074432
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:32:24.211 [XNIO-1 task-3] - [513360765005074432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"513360708218392576","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '513360708218392576' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：16ms , start = 1637130744192
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360765005074432
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:32:24.244 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:32:24.245 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:32:24.272 [XNIO-1 task-3] - [513360765420310528] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637130744259
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360765420310528
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:24.290 [XNIO-1 task-3] - [513360765420310528] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：15ms , start = 1637130744273
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360765420310528
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:24.310 [XNIO-1 task-6] - [513360765579694080] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637130744297
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360765579694080
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:24.331 [XNIO-1 task-6] - [513360765579694080] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：18ms , start = 1637130744311
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360765579694080
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:33.527 [XNIO-1 task-6] - [513360804213428224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"513099088061792256"}
┣ 执行：select * from sys_menu WHERE id = '513099088061792256'
┣ 结果： 
┣━ 耗时：15ms , start = 1637130753507
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360804213428224
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:32:33.541 [XNIO-1 task-6] - [513360804213428224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：10ms , start = 1637130753529
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360804213428224
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:32:33.555 [XNIO-1 task-6] - [513360804213428224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"513099088061792256","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '513099088061792256' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：10ms , start = 1637130753543
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360804213428224
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:32:33.629 [XNIO-1 task-6] - [513360804620275712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637130753606
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360804620275712
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:33.660 [XNIO-1 task-6] - [513360804620275712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：22ms , start = 1637130753632
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360804620275712
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:33.669 [XNIO-1 task-3] - [513360804838379520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637130753657
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360804838379520
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:33.691 [XNIO-1 task-3] - [513360804838379520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：19ms , start = 1637130753670
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360804838379520
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:35.656 [XNIO-1 task-3] - [513360813143101440] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"513360708218392576"}
┣ 执行：select * from sys_menu WHERE id = '513360708218392576'
┣ 结果： 
┣━ 耗时：17ms , start = 1637130755636
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360813143101440
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:32:35.670 [XNIO-1 task-3] - [513360813143101440] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：9ms , start = 1637130755658
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360813143101440
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:32:35.689 [XNIO-1 task-3] - [513360813143101440] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"513360708218392576","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '513360708218392576' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：14ms , start = 1637130755673
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360813143101440
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:32:35.760 [XNIO-1 task-3] - [513360813591891968] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637130755745
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360813591891968
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:35.778 [XNIO-1 task-3] - [513360813591891968] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：14ms , start = 1637130755762
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360813591891968
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:35.810 [XNIO-1 task-6] - [513360813793218560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：15ms , start = 1637130755792
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360813793218560
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:32:35.841 [XNIO-1 task-6] - [513360813793218560] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：28ms , start = 1637130755810
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360813793218560
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:32:42.502 [XNIO-1 task-6] - [513360841760837632] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"479008663990697984","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1637130762471,"PARAM_14":"513360708218392576","PARAM_9":"","PARAM_8":"","PARAM_7":"[]","PARAM_6":"function","PARAM_5":"预览","PARAM_4":"","PARAM_3":0,"PARAM_2":"kn_content:review"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'kn_content:review' , hidden = 0 , css = '' , label = '预览' , type = 'function' , path_resource_id = '[]' , url = '' , params = '' , parent_id = '479008663990697984' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-11-17 14:32:42','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '513360708218392576'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130762472
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:995)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:981)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：513360841760837632
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

14:32:42.517 [XNIO-1 task-6] - [513360841760837632] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"513360708218392576"}
┣ 执行：delete from sys_menu_resource where menu_id= '513360708218392576'
┣ 结果： 
┣━ 耗时：10ms , start = 1637130762503
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:235)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：513360841760837632
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

14:32:54.244 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:32:54.245 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:33:01.501 [XNIO-1 task-6] - [513360921532305408] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"473036391530364929"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '473036391530364929' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：17ms , start = 1637130781480
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360921532305408
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:33:04.605 [XNIO-1 task-6] - [513360934471733248] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"472036556115279872"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '472036556115279872' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：39ms , start = 1637130784564
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360934471733248
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:33:06.938 [XNIO-1 task-6] - [513360944361902080] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"472818410917462016"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '472818410917462016' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：13ms , start = 1637130786922
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360944361902080
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:33:08.267 [XNIO-1 task-6] - [513360949910966272] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"477956217403080704"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '477956217403080704' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：20ms , start = 1637130788246
┣━ 返回：RcdSet,size=10
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513360949910966272
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:33:10.007 [XNIO-1 task-6] - [513360957230026752] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"501438723657830401"}
┣ 执行：select * from sys_menu WHERE id = '501438723657830401'
┣ 结果： 
┣━ 耗时：13ms , start = 1637130789990
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360957230026752
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:33:10.034 [XNIO-1 task-6] - [513360957230026752] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：16ms , start = 1637130790016
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360957230026752
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:33:10.052 [XNIO-1 task-6] - [513360957230026752] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"501438723657830401","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501438723657830401' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：15ms , start = 1637130790035
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513360957230026752
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:33:10.137 [XNIO-1 task-6] - [513360957779480576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637130790121
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360957779480576
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:33:10.162 [XNIO-1 task-6] - [513360957779480576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：21ms , start = 1637130790139
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360957779480576
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:33:10.185 [XNIO-1 task-3] - [513360957976612864] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637130790169
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360957976612864
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:33:10.211 [XNIO-1 task-3] - [513360957976612864] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：19ms , start = 1637130790186
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513360957976612864
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:33:24.242 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:33:24.244 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:33:54.242 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:33:54.242 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:34:15.924 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"477956217403080704","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1637130855904,"PARAM_14":"501438723657830401","PARAM_9":"","PARAM_8":"","PARAM_7":"[]","PARAM_6":"function","PARAM_5":"凭证","PARAM_4":"","PARAM_3":0,"PARAM_2":"ops_host:voucher"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'ops_host:voucher' , hidden = 0 , css = '' , label = '凭证' , type = 'function' , path_resource_id = '[]' , url = '' , params = '' , parent_id = '477956217403080704' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-11-17 14:34:15','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '501438723657830401'
┣ 结果： 
┣━ 耗时：12ms , start = 1637130855904
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:995)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:981)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：513361233651437568
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

14:34:15.950 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"501438723657830401"}
┣ 执行：delete from sys_menu_resource where menu_id= '501438723657830401'
┣ 结果： 
┣━ 耗时：9ms , start = 1637130855926
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:235)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：513361233651437568
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

14:34:15.965 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361233898901504","PARAM_6":1,"PARAM_5":1637130855953,"PARAM_4":"110588348101165911","PARAM_3":"485888528941580288","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361233898901504' , '501438723657830401' , '485888528941580288' , '110588348101165911' , str_to_date('2021-11-17 14:34:15','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：9ms , start = 1637130855953
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:15.978 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361233957621760","PARAM_6":1,"PARAM_5":1637130855966,"PARAM_4":"110588348101165911","PARAM_3":"485888529612668928","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361233957621760' , '501438723657830401' , '485888529612668928' , '110588348101165911' , str_to_date('2021-11-17 14:34:15','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：9ms , start = 1637130855967
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:15.996 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361234007953408","PARAM_6":1,"PARAM_5":1637130855979,"PARAM_4":"110588348101165911","PARAM_3":"485888530547998720","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361234007953408' , '501438723657830401' , '485888530547998720' , '110588348101165911' , str_to_date('2021-11-17 14:34:15','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：9ms , start = 1637130855979
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.065 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361234096033792","PARAM_6":1,"PARAM_5":1637130855999,"PARAM_4":"110588348101165911","PARAM_3":"485888530858377216","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361234096033792' , '501438723657830401' , '485888530858377216' , '110588348101165911' , str_to_date('2021-11-17 14:34:15','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：24ms , start = 1637130855999
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.107 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361234452549632","PARAM_6":1,"PARAM_5":1637130856084,"PARAM_4":"110588348101165911","PARAM_3":"485888532905197568","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361234452549632' , '501438723657830401' , '485888532905197568' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：12ms , start = 1637130856085
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.125 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361234557407232","PARAM_6":1,"PARAM_5":1637130856109,"PARAM_4":"110588348101165911","PARAM_3":"485888533190410240","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361234557407232' , '501438723657830401' , '485888533190410240' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：9ms , start = 1637130856109
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.160 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361234632904704","PARAM_6":1,"PARAM_5":1637130856130,"PARAM_4":"110588348101165911","PARAM_3":"485888531718209536","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361234632904704' , '501438723657830401' , '485888531718209536' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：13ms , start = 1637130856130
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.182 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361234788093952","PARAM_6":1,"PARAM_5":1637130856165,"PARAM_4":"110588348101165911","PARAM_3":"485888532003422208","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361234788093952' , '501438723657830401' , '485888532003422208' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：10ms , start = 1637130856166
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.210 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361234880368640","PARAM_6":1,"PARAM_5":1637130856187,"PARAM_4":"110588348101165911","PARAM_3":"485888533484011520","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361234880368640' , '501438723657830401' , '485888533484011520' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130856187
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.233 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361234989420544","PARAM_6":1,"PARAM_5":1637130856213,"PARAM_4":"110588348101165911","PARAM_3":"485888530254397440","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361234989420544' , '501438723657830401' , '485888530254397440' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：12ms , start = 1637130856213
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.260 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361235090083840","PARAM_6":1,"PARAM_5":1637130856240,"PARAM_4":"110588348101165911","PARAM_3":"485888532301217792","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361235090083840' , '501438723657830401' , '485888532301217792' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130856241
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.281 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361235199135744","PARAM_6":1,"PARAM_5":1637130856262,"PARAM_4":"110588348101165911","PARAM_3":"485888532594819072","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361235199135744' , '501438723657830401' , '485888532594819072' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：16ms , start = 1637130856262
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.308 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361235287216128","PARAM_6":1,"PARAM_5":1637130856283,"PARAM_4":"110588348101165911","PARAM_3":"485888531432996864","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361235287216128' , '501438723657830401' , '485888531432996864' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：12ms , start = 1637130856283
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:16.323 [XNIO-1 task-3] - [513361233651437568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513361235396268032","PARAM_6":1,"PARAM_5":1637130856309,"PARAM_4":"110588348101165911","PARAM_3":"485888531147784192","PARAM_2":"501438723657830401"}
┣ 执行：INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , create_time , version ) VALUES ( '513361235396268032' , '501438723657830401' , '485888531147784192' , '110588348101165911' , str_to_date('2021-11-17 14:34:16','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：11ms , start = 1637130856309
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.insert(MenuResourceServiceImpl.java:65)
┣ TID：513361233651437568
┗━━━━━ SQL [ INSERT INTO sys_menu_resource ( id , menu_id , resource_id , create_by , creat... ] ━━━━━ 

14:34:24.240 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:34:24.240 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:34:38.905 [XNIO-1 task-3] - [513361330053320704] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"472819614665932801"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '472819614665932801' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：20ms , start = 1637130878878
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513361330053320704
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:34:39.917 [XNIO-1 task-3] - [513361334352482304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"478603508019363840"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '478603508019363840' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：11ms , start = 1637130879904
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513361334352482304
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:34:41.653 [XNIO-1 task-3] - [513361341612822528] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"501438191648116737"}
┣ 执行：select * from sys_menu WHERE id = '501438191648116737'
┣ 结果： 
┣━ 耗时：16ms , start = 1637130881633
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361341612822528
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:34:41.683 [XNIO-1 task-3] - [513361341612822528] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637130881655
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361341612822528
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:34:41.708 [XNIO-1 task-3] - [513361341612822528] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"501438191648116737","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501438191648116737' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：12ms , start = 1637130881693
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361341612822528
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:34:41.822 [XNIO-1 task-3] - [513361342338437120] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637130881808
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361342338437120
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:34:41.845 [XNIO-1 task-3] - [513361342338437120] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：20ms , start = 1637130881822
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361342338437120
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:34:41.909 [XNIO-1 task-6] - [513361342556540928] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637130881861
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361342556540928
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:34:41.947 [XNIO-1 task-6] - [513361342556540928] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：22ms , start = 1637130881914
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361342556540928
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:34:54.243 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:34:54.243 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:35:24.257 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:35:24.257 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:35:54.243 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:35:54.243 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:36:24.241 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:36:24.241 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:36:39.128 [XNIO-1 task-6] - [513361834342879232] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"501438184488439808"}
┣ 执行：select * from sys_menu WHERE id = '501438184488439808'
┣ 结果： 
┣━ 耗时：11ms , start = 1637130999111
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361834342879232
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:36:39.151 [XNIO-1 task-6] - [513361834342879232] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：16ms , start = 1637130999133
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361834342879232
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:36:39.169 [XNIO-1 task-6] - [513361834342879232] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"501438184488439808","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501438184488439808' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：14ms , start = 1637130999152
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361834342879232
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:36:39.273 [XNIO-1 task-6] - [513361834955247616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637130999257
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361834955247616
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:36:39.292 [XNIO-1 task-6] - [513361834955247616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：15ms , start = 1637130999273
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361834955247616
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:36:39.357 [XNIO-1 task-3] - [513361835307569152] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637130999340
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361835307569152
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:36:39.391 [XNIO-1 task-3] - [513361835307569152] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：22ms , start = 1637130999359
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361835307569152
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:36:39.879 [XNIO-1 task-3] - [513361837505384448] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"501438191648116737"}
┣ 执行：select * from sys_menu WHERE id = '501438191648116737'
┣ 结果： 
┣━ 耗时：12ms , start = 1637130999864
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361837505384448
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:36:39.905 [XNIO-1 task-3] - [513361837505384448] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：21ms , start = 1637130999881
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361837505384448
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:36:39.929 [XNIO-1 task-3] - [513361837505384448] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"501438191648116737","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501438191648116737' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：21ms , start = 1637130999906
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361837505384448
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:36:39.998 [XNIO-1 task-3] - [513361837996118016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637130999981
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361837996118016
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:36:40.017 [XNIO-1 task-3] - [513361837996118016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：15ms , start = 1637130999999
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361837996118016
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:36:40.093 [XNIO-1 task-6] - [513361838168084480] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：68ms , start = 1637131000023
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361838168084480
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:36:40.130 [XNIO-1 task-6] - [513361838168084480] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：28ms , start = 1637131000096
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361838168084480
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:36:54.239 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:36:54.239 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:36:54.627 [XNIO-1 task-6] - [513361899367174144] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"501438184488439808"}
┣ 执行：select * from sys_menu WHERE id = '501438184488439808'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131014612
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361899367174144
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

14:36:54.648 [XNIO-1 task-6] - [513361899367174144] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' )
┣ 结果： 
┣━ 耗时：17ms , start = 1637131014629
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361899367174144
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:36:54.665 [XNIO-1 task-6] - [513361899367174144] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":"501438184488439808","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501438184488439808' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：14ms , start = 1637131014649
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513361899367174144
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:36:54.744 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131014728
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361899849519104
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:36:54.779 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：30ms , start = 1637131014747
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:36:54.797 [XNIO-1 task-3] - [513361900076011520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131014782
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361900076011520
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:36:54.822 [XNIO-1 task-3] - [513361900076011520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：21ms , start = 1637131014798
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513361900076011520
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

14:37:17.504 [XNIO-1 task-3] - [513361995290906624] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"485853808635678720"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '485853808635678720' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：17ms , start = 1637131037485
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513361995290906624
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:37:18.870 [XNIO-1 task-3] - [513362001032908800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"485936556943605760"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '485936556943605760' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：14ms , start = 1637131038852
┣━ 返回：RcdSet,size=9
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：513362001032908800
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

14:37:24.240 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:37:24.242 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:37:54.238 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:37:54.238 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:38:06.786 [XNIO-1 task-3] - [513362001032908800] - INFO  o.g.f.w.o.l.UserLogoutHandler - [logout,33] - username: admin  is offline now
14:38:06.799 [XNIO-1 task-3] - [513362001032908800] - INFO  o.g.f.w.o.l.UserLogoutSuccessHandler - [onLogoutSuccess,42] - username: admin  is offline now
14:38:11.920 [XNIO-1 task-3] - [513362001032908800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = 'admin' ) A
┣ 结果： 
┣━ 耗时：24ms , start = 1637131091894
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:278)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362001032908800
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 

14:38:11.938 [XNIO-1 task-3] - [513362001032908800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = 'admin' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131091925
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362001032908800
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 

14:38:11.953 [XNIO-1 task-3] - [513362001032908800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_user WHERE name = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"admin","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_user WHERE name = 'admin' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131091939
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362001032908800
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 

14:38:11.969 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '110588348101165911' )
┣ 结果： 
┣━ 耗时：10ms , start = 1637131091958
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

14:38:12.091 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 
┣ 语句：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= ? ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"110588348101165911","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( '110588348101165911' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：130ms , start = 1637131091960
┣━ 返回：RcdSet,size=1167
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 

14:38:12.220 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( '110588348101165911' )
┣ 结果： 
┣━ 耗时：259ms , start = 1637131091958
┣━ 返回：RcdSet,size=1167
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 

14:38:12.235 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"110588348101165911"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '110588348101165911' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：276ms , start = 1637131091958
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

14:38:12.290 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637131092274
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

14:38:12.291 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'T001' )
┣ 结果： 
┣━ 耗时：17ms , start = 1637131092274
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 

14:38:12.305 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_5":"500337554411757568","PARAM_4":"465893030000328704","PARAM_3":"487660170021703680","PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' , '487660170021703680' , '465893030000328704' , '500337554411757568' )
┣ 结果： 
┣━ 耗时：23ms , start = 1637131092281
┣━ 返回：RcdSet,size=3
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.305 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_17":"498971162877886465","PARAM_10":"498963857323065345","PARAM_11":"501653242430623745","PARAM_12":"498779937252048897","PARAM_13":"500338282807173120","PARAM_14":"478598694187307009","PARAM_15":"486485770673065984","PARAM_16":"480486574191026176","PARAM_9":"498808864725008384","PARAM_8":"465893287996162048","PARAM_7":"502170156177297409","PARAM_6":"478626411003772928","PARAM_5":"499939063264968705","PARAM_4":"498474569439387649","PARAM_3":"498962218231005184","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '498962218231005184' , '498474569439387649' , '499939063264968705' , '478626411003772928' , '502170156177297409' , '465893287996162048' , '498808864725008384' , '498963857323065345' , '501653242430623745' , '498779937252048897' , '500338282807173120' , '478598694187307009' , '486485770673065984' , '480486574191026176' , '498971162877886465' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：22ms , start = 1637131092281
┣━ 返回：RcdSet,size=16
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.322 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"484684747155439616","PARAM_18":"479354710537535488","PARAM_19":"489922965425618944","PARAM_31":"471623107291906048","PARAM_10":"494904212426063872","PARAM_32":"471974283854217216","PARAM_11":"472331129437814784","PARAM_33":"477956217075924992","PARAM_12":"489901512886059008","PARAM_34":"485743350629007360","PARAM_13":"479008663701291008","PARAM_35":"511607133662347264","PARAM_14":"487660170021703680","PARAM_15":"478603507688013824","PARAM_16":"485936556654198784","PARAM_30":"472023108039999488","PARAM_9":"507635144501231616","PARAM_8":"478080872159903744","PARAM_7":"463400823506862080","PARAM_6":"483218056047230976","PARAM_5":"463708992481263616","PARAM_4":"479388218479869952","PARAM_3":"485560933834293248","PARAM_1":0,"PARAM_28":"490924065570164737","PARAM_29":"484687827645239296","PARAM_20":"474123290672103424","PARAM_21":"477952342537273344","PARAM_22":"488696580300341248","PARAM_23":"463400000391479296","PARAM_24":"502195284776849408","PARAM_25":"[]","PARAM_26":"501074097552228352","PARAM_27":"490888724289159168"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '485560933834293248' , '479388218479869952' , '463708992481263616' , '483218056047230976' , '463400823506862080' , '478080872159903744' , '507635144501231616' , '494904212426063872' , '472331129437814784' , '489901512886059008' , '479008663701291008' , '487660170021703680' , '478603507688013824' , '485936556654198784' , '484684747155439616' , '479354710537535488' , '489922965425618944' , '474123290672103424' , '477952342537273344' , '488696580300341248' , '463400000391479296' , '502195284776849408' , '[]' , '501074097552228352' , '490888724289159168' , '490924065570164737' , '484687827645239296' , '472023108039999488' , '471623107291906048' , '471974283854217216' , '477956217075924992' , '485743350629007360' , '511607133662347264' )
┣ 结果： 
┣━ 耗时：39ms , start = 1637131092282
┣━ 返回：RcdSet,size=32
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.374 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"485741093254594560","PARAM_31":"489922965769551872","PARAM_32":"463401812293058560","PARAM_33":"474159090990317568","PARAM_34":"479330038903209984","PARAM_35":"485743356169682944","PARAM_36":"485936556943605760","PARAM_37":"475954740530774016","PARAM_38":"510887581764812800","PARAM_30":"474123290978287616","PARAM_28":"472331133846028288","PARAM_29":"473534966525853696","PARAM_20":"472331129806913536","PARAM_21":"473503437766524928","PARAM_22":"473626750312513536","PARAM_23":"index","PARAM_24":"495244161406992384","PARAM_25":"484683936333561856","PARAM_26":"473733255862943744","PARAM_27":"474281120842645504","PARAM_17":"501072632922243072","PARAM_18":"472818971712684033","PARAM_19":"472023113178021888","PARAM_97":"507635145327509504","PARAM_10":"479354710923411456","PARAM_98":"479354715398733824","PARAM_11":"481749150413619200","PARAM_99":"508300428283215872","PARAM_12":"481119856855351296","PARAM_13":"463397133957988352","PARAM_14":"484684747470012416","PARAM_15":"463400823850795008","PARAM_16":"482864638480875520","PARAM_90":"471986331946319872","PARAM_91":"478626344431779840","PARAM_92":"494597321997156352","PARAM_93":"472331326201004032","PARAM_94":"463401584798203904","PARAM_95":"474123295055151104","PARAM_96":"498769910416015360","PARAM_86":"485743351006494720","PARAM_87":"464788442501349376","PARAM_88":"477952342965092352","PARAM_89":"476679545236226048","PARAM_80":"476660944341041152","PARAM_81":"471974284126846976","PARAM_82":"486313023716196352","PARAM_83":"482877680811769856","PARAM_84":"471623112182464512","PARAM_85":"495243926484025344","PARAM_103":"502170004054085633","PARAM_104":"489901513284517888","PARAM_101":"480377918011211776","PARAM_102":"494904212736442368","PARAM_107":"471666417796644864","PARAM_108":"501074097912938496","PARAM_105":"487559541341290496","PARAM_106":"482581324939395072","PARAM_75":"473771451304902656","PARAM_76":"492410578774523904","PARAM_77":"483218060644188160","PARAM_109":"507635154248794112","PARAM_78":"475686681035407360","PARAM_79":"484683932139257856","PARAM_70":"471622519044964352","PARAM_71":"485560938628382720","PARAM_72":"482865232566288384","PARAM_73":"478080872541585408","PARAM_74":"472023108392321024","PARAM_9":"488696580921098240","PARAM_8":"471974287931080704","PARAM_7":"481338866817564672","PARAM_6":"478603508019363840","PARAM_5":"479959568621764608","PARAM_110":"494904452583522304","PARAM_4":"511607134790615040","PARAM_111":"477952348665151488","PARAM_3":"463402973779722240","PARAM_2":0,"PARAM_1":0,"PARAM_64":"478603513186746368","PARAM_65":"485936561238573056","PARAM_66":"489901519739551744","PARAM_67":"482581096999944192","PARAM_68":"488696589599113216","PARAM_69":"481068386625781760","PARAM_60":"494904216788140032","PARAM_61":"479598110457200640","PARAM_62":"472037131183718400","PARAM_63":"485415810584555521","PARAM_100":"485747528893988864","PARAM_125":"479329590288842752","PARAM_126":"490924383968169985","PARAM_123":"475686685250682880","PARAM_124":"501074102618947584","PARAM_129":"472814616229969920","PARAM_127":"511607133742039040","PARAM_128":"479329289888595968","PARAM_53":"472819614665932801","PARAM_54":"472023703798939648","PARAM_55":"479218756208295936","PARAM_56":"471620638545543168","PARAM_57":"479008668327608320","PARAM_58":"485560934119505920","PARAM_59":"479219962657898496","PARAM_50":"480481730000584704","PARAM_51":"463400000727023616","PARAM_52":"482583847255408640","PARAM_130":"501072113185062912","PARAM_114":"480488581421334528","PARAM_115":"485888533777612800","PARAM_112":"478585177820364800","PARAM_113":"480137012393803776","PARAM_118":"471623107698753536","PARAM_119":"489815788086099968","PARAM_116":"483218056353415168","PARAM_117":"478688766404329472","PARAM_42":"476673972792983552","PARAM_43":"471653536266977280","PARAM_44":"479388218932854784","PARAM_45":"479220710963675136","PARAM_46":"487568371366232064","PARAM_47":"481563568920068096","PARAM_48":"463429355423399936","PARAM_49":"480492964435460096","PARAM_40":"479008663990697984","PARAM_41":"477956217403080704","PARAM_121":"501072378579648512","PARAM_122":"476319986613223424","PARAM_120":"478956689802919936"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463402973779722240' , '511607134790615040' , '479959568621764608' , '478603508019363840' , '481338866817564672' , '471974287931080704' , '488696580921098240' , '479354710923411456' , '481749150413619200' , '481119856855351296' , '463397133957988352' , '484684747470012416' , '463400823850795008' , '482864638480875520' , '501072632922243072' , '472818971712684033' , '472023113178021888' , '472331129806913536' , '473503437766524928' , '473626750312513536' , 'index' , '495244161406992384' , '484683936333561856' , '473733255862943744' , '474281120842645504' , '472331133846028288' , '473534966525853696' , '474123290978287616' , '489922965769551872' , '463401812293058560' , '474159090990317568' , '479330038903209984' , '485743356169682944' , '485936556943605760' , '475954740530774016' , '510887581764812800' , '485741093254594560' , '479008663990697984' , '477956217403080704' , '476673972792983552' , '471653536266977280' , '479388218932854784' , '479220710963675136' , '487568371366232064' , '481563568920068096' , '463429355423399936' , '480492964435460096' , '480481730000584704' , '463400000727023616' , '482583847255408640' , '472819614665932801' , '472023703798939648' , '479218756208295936' , '471620638545543168' , '479008668327608320' , '485560934119505920' , '479219962657898496' , '494904216788140032' , '479598110457200640' , '472037131183718400' , '485415810584555521' , '478603513186746368' , '485936561238573056' , '489901519739551744' , '482581096999944192' , '488696589599113216' , '481068386625781760' , '471622519044964352' , '485560938628382720' , '482865232566288384' , '478080872541585408' , '472023108392321024' , '473771451304902656' , '492410578774523904' , '483218060644188160' , '475686681035407360' , '484683932139257856' , '476660944341041152' , '471974284126846976' , '486313023716196352' , '482877680811769856' , '471623112182464512' , '495243926484025344' , '485743351006494720' , '464788442501349376' , '477952342965092352' , '476679545236226048' , '471986331946319872' , '478626344431779840' , '494597321997156352' , '472331326201004032' , '463401584798203904' , '474123295055151104' , '498769910416015360' , '507635145327509504' , '479354715398733824' , '508300428283215872' , '485747528893988864' , '480377918011211776' , '494904212736442368' , '502170004054085633' , '489901513284517888' , '487559541341290496' , '482581324939395072' , '471666417796644864' , '501074097912938496' , '507635154248794112' , '494904452583522304' , '477952348665151488' , '478585177820364800' , '480137012393803776' , '480488581421334528' , '485888533777612800' , '483218056353415168' , '478688766404329472' , '471623107698753536' , '489815788086099968' , '478956689802919936' , '501072378579648512' , '476319986613223424' , '475686685250682880' , '501074102618947584' , '479329590288842752' , '490924383968169985' , '511607133742039040' , '479329289888595968' , '472814616229969920' , '501072113185062912' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：90ms , start = 1637131092282
┣━ 返回：RcdSet,size=270
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.397 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"479329284624744448","PARAM_31":"478688767939444736","PARAM_32":"495243928195301376","PARAM_33":"481119858512101376","PARAM_34":"473534967930945536","PARAM_35":"494904218386169856","PARAM_36":"478080877377617920","PARAM_37":"472023705464078336","PARAM_38":"463399684191289344","PARAM_30":"479388227191439360","PARAM_28":"479598112373997568","PARAM_29":"485936562941460480","PARAM_20":"get-current-user","PARAM_21":"463400830083530752","PARAM_22":"478080879135031296","PARAM_23":"498885082019266560","PARAM_24":"490245513522708480","PARAM_25":"489922970169376768","PARAM_26":"484684753241374720","PARAM_27":"498885085060136960","PARAM_17":"480389135564013568","PARAM_18":"492410580473217024","PARAM_19":"478585179489697792","PARAM_97":"476673974453927936","PARAM_10":"487568362436558848","PARAM_98":"472818410917462016","PARAM_11":"479329591786209280","PARAM_99":"486551845917949952","PARAM_12":"494904448682819584","PARAM_13":"485747530676568064","PARAM_14":"482573213478420480","PARAM_15":"473609132373442560","PARAM_16":"477956223535153152","PARAM_90":"489901521874452480","PARAM_91":"475954736080617472","PARAM_92":"490245511899512832","PARAM_93":"501074104456052736","PARAM_94":"498769993710698497","PARAM_95":"474155093021687808","PARAM_96":"463402970206175232","PARAM_86":"473228716474892288","PARAM_87":"478922689172471808","PARAM_88":"482864640208928768","PARAM_89":"471974289361338368","PARAM_80":"484680990048911360","PARAM_81":"479330040773869568","PARAM_82":"471622514821300224","PARAM_83":"473609130683138048","PARAM_84":"486313025783988224","PARAM_85":"480481731707666432","PARAM_103":"508300431265366016","PARAM_104":"481749749448310784","PARAM_101":"483218062279966720","PARAM_102":"475954742317547520","PARAM_107":"507635157855895552","PARAM_108":"480492966025101312","PARAM_105":"489077809105338368","PARAM_106":"473228835811229696","PARAM_75":"471985490283724800","PARAM_76":"478585173638643712","PARAM_77":"476319988295139328","PARAM_109":"463400828363866112","PARAM_78":"479330034058788864","PARAM_79":"484683937952563200","PARAM_70":"479956466397085696","PARAM_71":"480389137287872512","PARAM_72":"501416295116308480","PARAM_73":"484680991584026624","PARAM_74":"486551844089233408","PARAM_9":"482573211888779264","PARAM_8":"508300419894607872","PARAM_7":"489077810774671360","PARAM_6":"489922971863875584","PARAM_5":"501072114866978816","PARAM_110":"501416291903471616","PARAM_4":"463400006318030848","PARAM_111":"oauth","PARAM_3":"479956464534814720","PARAM_2":0,"PARAM_1":0,"PARAM_64":"479388229263425536","PARAM_65":"463399688926658560","PARAM_66":"479959570282708992","PARAM_67":"481749745337892864","PARAM_68":"480488583120027648","PARAM_69":"495201409763901440","PARAM_60":"482865234084626432","PARAM_61":"476660946173952000","PARAM_62":"463399152273850368","PARAM_63":"473503439284862976","PARAM_100":"494597318092259328","PARAM_125":"482877682514657280","PARAM_126":"471653537873395712","PARAM_123":"481749751037952000","PARAM_124":"471666419482755072","PARAM_129":"463401586228461568","PARAM_127":"485741088754106368","PARAM_128":"463400007958003712","PARAM_53":"463429350570590208","PARAM_54":"480137014188965888","PARAM_55":"510887822043906048","PARAM_56":"479956459719753728","PARAM_57":"485741095003619328","PARAM_58":"474281122537144320","PARAM_59":"480377913779159040","PARAM_50":"463399153808965632","PARAM_51":"501072634599964672","PARAM_52":"479218757961515008","PARAM_130":"463399687542538240","PARAM_114":"482581098463756288","PARAM_115":"511607135210045440","PARAM_112":"474123296653180928","PARAM_113":"473626751956680704","PARAM_118":"484684751630761984","PARAM_119":"481749152221364224","PARAM_116":"476679546897170432","PARAM_117":"463429357021429760","PARAM_42":"478603514990297088","PARAM_43":"510887821632864256","PARAM_44":"477956221781934080","PARAM_45":"473733250888499200","PARAM_46":"463397738055204864","PARAM_47":"481338868780498944","PARAM_48":"463397736541061120","PARAM_49":"477952350720360448","PARAM_40":"485743357943873536","PARAM_41":"501072380383199232","PARAM_121":"487559533120454656","PARAM_122":"472358699843715073","PARAM_120":"478922687092097024"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479956464534814720' , '463400006318030848' , '501072114866978816' , '489922971863875584' , '489077810774671360' , '508300419894607872' , '482573211888779264' , '487568362436558848' , '479329591786209280' , '494904448682819584' , '485747530676568064' , '482573213478420480' , '473609132373442560' , '477956223535153152' , '480389135564013568' , '492410580473217024' , '478585179489697792' , 'get-current-user' , '463400830083530752' , '478080879135031296' , '498885082019266560' , '490245513522708480' , '489922970169376768' , '484684753241374720' , '498885085060136960' , '479598112373997568' , '485936562941460480' , '479388227191439360' , '478688767939444736' , '495243928195301376' , '481119858512101376' , '473534967930945536' , '494904218386169856' , '478080877377617920' , '472023705464078336' , '463399684191289344' , '479329284624744448' , '485743357943873536' , '501072380383199232' , '478603514990297088' , '510887821632864256' , '477956221781934080' , '473733250888499200' , '463397738055204864' , '481338868780498944' , '463397736541061120' , '477952350720360448' , '463399153808965632' , '501072634599964672' , '479218757961515008' , '463429350570590208' , '480137014188965888' , '510887822043906048' , '479956459719753728' , '485741095003619328' , '474281122537144320' , '480377913779159040' , '482865234084626432' , '476660946173952000' , '463399152273850368' , '473503439284862976' , '479388229263425536' , '463399688926658560' , '479959570282708992' , '481749745337892864' , '480488583120027648' , '495201409763901440' , '479956466397085696' , '480389137287872512' , '501416295116308480' , '484680991584026624' , '486551844089233408' , '471985490283724800' , '478585173638643712' , '476319988295139328' , '479330034058788864' , '484683937952563200' , '484680990048911360' , '479330040773869568' , '471622514821300224' , '473609130683138048' , '486313025783988224' , '480481731707666432' , '473228716474892288' , '478922689172471808' , '482864640208928768' , '471974289361338368' , '489901521874452480' , '475954736080617472' , '490245511899512832' , '501074104456052736' , '498769993710698497' , '474155093021687808' , '463402970206175232' , '476673974453927936' , '472818410917462016' , '486551845917949952' , '494597318092259328' , '483218062279966720' , '475954742317547520' , '508300431265366016' , '481749749448310784' , '489077809105338368' , '473228835811229696' , '507635157855895552' , '480492966025101312' , '463400828363866112' , '501416291903471616' , 'oauth' , '474123296653180928' , '473626751956680704' , '482581098463756288' , '511607135210045440' , '476679546897170432' , '463429357021429760' , '484684751630761984' , '481749152221364224' , '478922687092097024' , '487559533120454656' , '472358699843715073' , '481749751037952000' , '471666419482755072' , '482877682514657280' , '471653537873395712' , '485741088754106368' , '463400007958003712' , '463401586228461568' , '463399687542538240' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：111ms , start = 1637131092282
┣━ 返回：RcdSet,size=146
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.424 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"485747524523524096","PARAM_31":"463402976384385024","PARAM_32":"494597324853477376","PARAM_33":"463399154698158080","PARAM_34":"482581099617189888","PARAM_35":"486551847209795584","PARAM_36":"481563572455866368","PARAM_37":"474123297894694912","PARAM_38":"484681008940056576","PARAM_30":"486551846547095552","PARAM_28":"479956467907035136","PARAM_29":"463400008926887936","PARAM_20":"473534968501370880","PARAM_21":"473626753412104192","PARAM_22":"476679541226471424","PARAM_23":"479218759370801152","PARAM_24":"478688769155792896","PARAM_25":"479330042220904448","PARAM_26":"486313027243606016","PARAM_27":"482573214082400256","PARAM_17":"463397133957988354","PARAM_18":"480481733238587392","PARAM_19":"495243928853807104","PARAM_97":"476673975825465344","PARAM_10":"485936564371718144","PARAM_98":"486313026476048384","PARAM_11":"480137014788751360","PARAM_99":"485747532043911168","PARAM_12":"481338870340780032","PARAM_13":"480389138625855488","PARAM_14":"477956224147521536","PARAM_15":"485853808635678720","PARAM_16":"463399154400362496","PARAM_90":"477956224856358912","PARAM_91":"501072381054287872","PARAM_92":"479388230924369920","PARAM_93":"463401814696394752","PARAM_94":"489815791064055808","PARAM_95":"463400831098552320","PARAM_96":"472331321801179136","PARAM_86":"476660947629375488","PARAM_87":"501072635946336256","PARAM_88":"471974290447663104","PARAM_89":"471986628336812032","PARAM_80":"501072635275247616","PARAM_81":"476673976400084992","PARAM_82":"484684753866326016","PARAM_83":"479329592423743488","PARAM_84":"hrm","PARAM_85":"464788438315433984","PARAM_103":"479959571725549568","PARAM_104":"463399689467723776","PARAM_101":"510887822199095296","PARAM_102":"498885087492833280","PARAM_107":"495244164322033664","PARAM_108":"471623115152031744","PARAM_105":"478585180710240256","PARAM_106":"471622521846759424","PARAM_75":"479959570941214720","PARAM_76":"482877683861028864","PARAM_77":"498770254759985153","PARAM_109":"486551839387418624","PARAM_78":"473534969071796224","PARAM_79":"474281123879321600","PARAM_70":"479220706257666048","PARAM_71":"494904219631878144","PARAM_72":"484684754508054528","PARAM_73":"507635159172907008","PARAM_74":"489922973222830080","PARAM_9":"492410581156888576","PARAM_8":"481749752275271680","PARAM_7":"508300433685479424","PARAM_6":"476319989616345088","PARAM_5":"478080879852257280","PARAM_110":"498770119770505217","PARAM_4":"482865235280003072","PARAM_111":"478922690648866816","PARAM_3":"479329592994168832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"463400830758813696","PARAM_65":"481068389410799616","PARAM_66":"478080880531734528","PARAM_67":"463401587079905280","PARAM_68":"485888536512299008","PARAM_69":"482865234667634688","PARAM_60":"473609133057114112","PARAM_61":"501074105877921792","PARAM_62":"463397739233804288","PARAM_63":"489077811793887232","PARAM_100":"507635160540250112","PARAM_125":"501072381725376512","PARAM_126":"474281123241787392","PARAM_123":"483218063576006656","PARAM_124":"482573214719934464","PARAM_129":"494904219002732544","PARAM_127":"490245514197991424","PARAM_128":"476679548117712896","PARAM_53":"463399148318621696","PARAM_54":"485743358573019136","PARAM_55":"489922972543352832","PARAM_56":"498885074154946560","PARAM_57":"480492967241449472","PARAM_58":"494904455314014208","PARAM_59":"487568377175343104","PARAM_50":"479388230056148992","PARAM_51":"480137015552114688","PARAM_52":"480481732412309504","PARAM_130":"501416297607725056","PARAM_114":"511607135537201152","PARAM_115":"492410581827977216","PARAM_112":"480377920796229632","PARAM_113":"482877676386779136","PARAM_118":"490245514780999680","PARAM_119":"495243929508118528","PARAM_116":"463400008603926528","PARAM_117":"485743359244107776","PARAM_42":"472036243182452736","PARAM_43":"481749751662903296","PARAM_44":"476660946866012160","PARAM_45":"510887822354284544","PARAM_46":"489077811454148608","PARAM_47":"473609133728202752","PARAM_48":"463399689744547840","PARAM_49":"482877683189940224","PARAM_40":"478956693149974528","PARAM_41":"481338869564833792","PARAM_121":"484681000786329600","PARAM_122":"474123297290715136","PARAM_120":"487559547058126848"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479329592994168832' , '482865235280003072' , '478080879852257280' , '476319989616345088' , '508300433685479424' , '481749752275271680' , '492410581156888576' , '485936564371718144' , '480137014788751360' , '481338870340780032' , '480389138625855488' , '477956224147521536' , '485853808635678720' , '463399154400362496' , '463397133957988354' , '480481733238587392' , '495243928853807104' , '473534968501370880' , '473626753412104192' , '476679541226471424' , '479218759370801152' , '478688769155792896' , '479330042220904448' , '486313027243606016' , '482573214082400256' , '479956467907035136' , '463400008926887936' , '486551846547095552' , '463402976384385024' , '494597324853477376' , '463399154698158080' , '482581099617189888' , '486551847209795584' , '481563572455866368' , '474123297894694912' , '484681008940056576' , '485747524523524096' , '478956693149974528' , '481338869564833792' , '472036243182452736' , '481749751662903296' , '476660946866012160' , '510887822354284544' , '489077811454148608' , '473609133728202752' , '463399689744547840' , '482877683189940224' , '479388230056148992' , '480137015552114688' , '480481732412309504' , '463399148318621696' , '485743358573019136' , '489922972543352832' , '498885074154946560' , '480492967241449472' , '494904455314014208' , '487568377175343104' , '473609133057114112' , '501074105877921792' , '463397739233804288' , '489077811793887232' , '463400830758813696' , '481068389410799616' , '478080880531734528' , '463401587079905280' , '485888536512299008' , '482865234667634688' , '479220706257666048' , '494904219631878144' , '484684754508054528' , '507635159172907008' , '489922973222830080' , '479959570941214720' , '482877683861028864' , '498770254759985153' , '473534969071796224' , '474281123879321600' , '501072635275247616' , '476673976400084992' , '484684753866326016' , '479329592423743488' , 'hrm' , '464788438315433984' , '476660947629375488' , '501072635946336256' , '471974290447663104' , '471986628336812032' , '477956224856358912' , '501072381054287872' , '479388230924369920' , '463401814696394752' , '489815791064055808' , '463400831098552320' , '472331321801179136' , '476673975825465344' , '486313026476048384' , '485747532043911168' , '507635160540250112' , '510887822199095296' , '498885087492833280' , '479959571725549568' , '463399689467723776' , '478585180710240256' , '471622521846759424' , '495244164322033664' , '471623115152031744' , '486551839387418624' , '498770119770505217' , '478922690648866816' , '480377920796229632' , '482877676386779136' , '511607135537201152' , '492410581827977216' , '463400008603926528' , '485743359244107776' , '490245514780999680' , '495243929508118528' , '487559547058126848' , '484681000786329600' , '474123297290715136' , '483218063576006656' , '482573214719934464' , '501072381725376512' , '474281123241787392' , '490245514197991424' , '476679548117712896' , '494904219002732544' , '501416297607725056' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：123ms , start = 1637131092294
┣━ 返回：RcdSet,size=110
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.442 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"482581099034181632","PARAM_31":"482581326621310976","PARAM_32":"473771453230088192","PARAM_33":"479219964406923264","PARAM_34":"475686686903238656","PARAM_35":"492410574299201536","PARAM_36":"510887582259740672","PARAM_37":"483218062917500928","PARAM_38":"474158548662616065","PARAM_30":"478956691585499136","PARAM_28":"486313018553008128","PARAM_29":"488696594527420416","PARAM_20":"471623114069901312","PARAM_21":"480137007910092800","PARAM_22":"473733257758769152","PARAM_23":"478688762461683712","PARAM_24":"472331135444058112","PARAM_25":"system_config","PARAM_26":"485936563683852288","PARAM_27":"479354717013540864","PARAM_17":"482583848937324544","PARAM_18":"485888535333699584","PARAM_19":"480377919596658688","PARAM_97":"475954743139631104","PARAM_10":"472023115707187200","PARAM_98":"463402976065617920","PARAM_11":"475686687532384256","PARAM_99":"478922689868726272","PARAM_12":"485888535908319232","PARAM_13":"485560940150915072","PARAM_14":"480488583736590336","PARAM_15":"471653538498347008","PARAM_16":"463401814398599168","PARAM_90":"495244163676110848","PARAM_91":"479220713446703104","PARAM_92":"482581320564736000","PARAM_93":"481119859145441280","PARAM_94":"482864640871628800","PARAM_95":"463397738646601728","PARAM_96":"478956692394999808","PARAM_86":"488696593290100736","PARAM_87":"471623114736795648","PARAM_88":"501416296345239552","PARAM_89":"471622521137922048","PARAM_80":"477952351441780736","PARAM_81":"474158815193858049","PARAM_82":"479218758599049216","PARAM_83":"479329292388401152","PARAM_84":"510887580523298816","PARAM_85":"479598105545670656","PARAM_103":"472331328520454144","PARAM_104":"464788444141322240","PARAM_101":"489815790388772864","PARAM_102":"472331135993511936","PARAM_107":"487559544579293184","PARAM_108":"511607135369428992","PARAM_105":"472023706080641024","PARAM_106":"494597324215943168","PARAM_75":"504682762972704768","PARAM_76":"472023114964795392","PARAM_77":"473771454031200256","PARAM_109":"501389817515347968","PARAM_78":"489901522558124032","PARAM_79":"471666420116094976","PARAM_70":"485888529902075904","PARAM_71":"480377920209027072","PARAM_72":"481563571654754304","PARAM_73":"484683938606874624","PARAM_74":"487568375958994944","PARAM_9":"498581971681673216","PARAM_8":"494597323653906432","PARAM_7":"485560940721340416","PARAM_6":"495244163038576640","PARAM_5":"471622520550719488","PARAM_110":"487568374700703744","PARAM_4":"481068388223811584","PARAM_111":"479008669908860928","PARAM_3":"479354717600743424","PARAM_2":0,"PARAM_1":0,"PARAM_64":"463401813807202304","PARAM_65":"464788444783050752","PARAM_66":"485741095674707968","PARAM_67":"478603515636219904","PARAM_68":"498885086280679424","PARAM_69":"481749152917618688","PARAM_60":"510887582448484352","PARAM_61":"480389137958961152","PARAM_62":"473503439867871232","PARAM_63":"473626752741015552","PARAM_100":"463401586794692608","PARAM_125":"489815783782744064","PARAM_126":"481068388831985664","PARAM_123":"479329291742478336","PARAM_124":"479598113124777984","PARAM_129":"476319988987199488","PARAM_127":"479956467156254720","PARAM_128":"478178015856033792","PARAM_53":"487559545757892608","PARAM_54":"474281113531973632","PARAM_55":"463429357650575360","PARAM_56":"495243922151309312","PARAM_57":"478585180114649088","PARAM_58":"489815789730267136","PARAM_59":"476679547505344512","PARAM_50":"474154919352336384","PARAM_51":"482581327279816704","PARAM_52":"485747531372822528","PARAM_130":"482573207753195520","PARAM_114":"480492966641664000","PARAM_115":"472331327836782592","PARAM_112":"479008670655447040","PARAM_113":"472811438801420289","PARAM_118":"479219965136732160","PARAM_119":"471974289902403584","PARAM_116":"481563570933334016","PARAM_117":"494904454114443264","PARAM_42":"478688768535035904","PARAM_43":"480389131239686144","PARAM_44":"482583849616801792","PARAM_45":"476673967776595968","PARAM_46":"463402975415500800","PARAM_47":"479330041516261376","PARAM_48":"473609126128123904","PARAM_49":"473733258505355264","PARAM_40":"501072115496124416","PARAM_41":"479220712784003072","PARAM_121":"494904454714228736","PARAM_122":"501074105164890112","PARAM_120":"508300432511074304"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479354717600743424' , '481068388223811584' , '471622520550719488' , '495244163038576640' , '485560940721340416' , '494597323653906432' , '498581971681673216' , '472023115707187200' , '475686687532384256' , '485888535908319232' , '485560940150915072' , '480488583736590336' , '471653538498347008' , '463401814398599168' , '482583848937324544' , '485888535333699584' , '480377919596658688' , '471623114069901312' , '480137007910092800' , '473733257758769152' , '478688762461683712' , '472331135444058112' , 'system_config' , '485936563683852288' , '479354717013540864' , '486313018553008128' , '488696594527420416' , '478956691585499136' , '482581326621310976' , '473771453230088192' , '479219964406923264' , '475686686903238656' , '492410574299201536' , '510887582259740672' , '483218062917500928' , '474158548662616065' , '482581099034181632' , '501072115496124416' , '479220712784003072' , '478688768535035904' , '480389131239686144' , '482583849616801792' , '476673967776595968' , '463402975415500800' , '479330041516261376' , '473609126128123904' , '473733258505355264' , '474154919352336384' , '482581327279816704' , '485747531372822528' , '487559545757892608' , '474281113531973632' , '463429357650575360' , '495243922151309312' , '478585180114649088' , '489815789730267136' , '476679547505344512' , '510887582448484352' , '480389137958961152' , '473503439867871232' , '473626752741015552' , '463401813807202304' , '464788444783050752' , '485741095674707968' , '478603515636219904' , '498885086280679424' , '481749152917618688' , '485888529902075904' , '480377920209027072' , '481563571654754304' , '484683938606874624' , '487568375958994944' , '504682762972704768' , '472023114964795392' , '473771454031200256' , '489901522558124032' , '471666420116094976' , '477952351441780736' , '474158815193858049' , '479218758599049216' , '479329292388401152' , '510887580523298816' , '479598105545670656' , '488696593290100736' , '471623114736795648' , '501416296345239552' , '471622521137922048' , '495244163676110848' , '479220713446703104' , '482581320564736000' , '481119859145441280' , '482864640871628800' , '463397738646601728' , '478956692394999808' , '475954743139631104' , '463402976065617920' , '478922689868726272' , '463401586794692608' , '489815790388772864' , '472331135993511936' , '472331328520454144' , '464788444141322240' , '472023706080641024' , '494597324215943168' , '487559544579293184' , '511607135369428992' , '501389817515347968' , '487568374700703744' , '479008669908860928' , '479008670655447040' , '472811438801420289' , '480492966641664000' , '472331327836782592' , '481563570933334016' , '494904454114443264' , '479219965136732160' , '471974289902403584' , '508300432511074304' , '494904454714228736' , '501074105164890112' , '479329291742478336' , '479598113124777984' , '489815783782744064' , '481068388831985664' , '479956467156254720' , '478178015856033792' , '476319988987199488' , '482573207753195520' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：146ms , start = 1637131092294
┣━ 返回：RcdSet,size=103
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.443 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"473771445873278976","PARAM_18":"501416282168492032","PARAM_19":"482583842692005888","PARAM_20":"473534962490933248","PARAM_10":"490923211228188672","PARAM_21":"487660170021703680","PARAM_11":"484680928828850176","PARAM_22":"490923311769849856","PARAM_12":"490638744550907904","PARAM_23":"471666413233242112","PARAM_13":"481119852224839680","PARAM_24":"479329585473781760","PARAM_14":"481068382330814464","PARAM_15":"479219957951889408","PARAM_16":"471653531770683392","PARAM_9":"472023699273285632","PARAM_8":"491342618928611328","PARAM_7":"473503433593192448","PARAM_6":"495244156847783936","PARAM_5":"[]","PARAM_4":"501072627503202304","PARAM_3":"482877676047040511"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '482877676047040511' , '501072627503202304' , '[]' , '495244156847783936' , '473503433593192448' , '491342618928611328' , '472023699273285632' , '490923211228188672' , '484680928828850176' , '490638744550907904' , '481119852224839680' , '481068382330814464' , '479219957951889408' , '471653531770683392' , '473771445873278976' , '501416282168492032' , '482583842692005888' , '473534962490933248' , '487660170021703680' , '490923311769849856' , '471666413233242112' , '479329585473781760' )
┣ 结果： 
┣━ 耗时：134ms , start = 1637131092307
┣━ 返回：RcdSet,size=21
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.480 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"490803384081711104","PARAM_18":"473733250494234624","PARAM_19":"478585173336653824","PARAM_20":"480377913464586240","PARAM_10":"487568361882910720","PARAM_21":"479956459375820800","PARAM_11":"471622514443812864","PARAM_12":"463399683914465280","PARAM_13":"498885073529995264","PARAM_14":"508300419328376832","PARAM_15":"481749744998154240","PARAM_16":"485741088418562048","PARAM_9":"463402969874825216","PARAM_8":"487559532503891968","PARAM_7":"463429350247628800","PARAM_6":"475954735753461760","PARAM_5":"494904448380829696","PARAM_4":"[]","PARAM_3":"494597317773492224"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '494597317773492224' , '[]' , '494904448380829696' , '475954735753461760' , '463429350247628800' , '487559532503891968' , '463402969874825216' , '487568361882910720' , '471622514443812864' , '463399683914465280' , '498885073529995264' , '508300419328376832' , '481749744998154240' , '485741088418562048' , '490803384081711104' , '473733250494234624' , '478585173336653824' , '480377913464586240' , '479956459375820800' )
┣ 结果： 
┣━ 耗时：152ms , start = 1637131092326
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.497 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"490638839023411200","PARAM_31":"501072627838746624","PARAM_32":"498472886441353216","PARAM_33":"479219958253879296","PARAM_34":"498472737438703616","PARAM_35":"486485883655032833","PARAM_36":"471653532135587840","PARAM_37":"498780101593268225","PARAM_38":"498963858317115392","PARAM_30":"501653165884575744","PARAM_28":"490909222070915073","PARAM_29":"474159041438810113","PARAM_20":"498780063144083457","PARAM_21":"490920319637262337","PARAM_22":"498472430189158400","PARAM_23":"498809674066296832","PARAM_24":"498808937571680257","PARAM_25":"485819338599706624","PARAM_26":"498780092948807681","PARAM_27":"472814706734661633","PARAM_17":"501653323472965633","PARAM_18":"499940744069382145","PARAM_19":"497513282840559617","PARAM_97":"503188930321977344","PARAM_10":"497490986344120320","PARAM_98":"501424056243851264","PARAM_11":"464827069453303809","PARAM_99":"498809056404701185","PARAM_12":"490925002938388480","PARAM_13":"501390061263130624","PARAM_14":"499939051860656128","PARAM_15":"474157822892834817","PARAM_16":"485415687787917312","PARAM_90":"504683060067840001","PARAM_91":"497513348733075457","PARAM_92":"478598569259962368","PARAM_93":"486487652200091649","PARAM_94":"463779099165327360","PARAM_95":"498963891439534081","PARAM_96":"498963844891148289","PARAM_86":"499954055192252417","PARAM_87":"497513389245857793","PARAM_88":"501653226060255233","PARAM_89":"501073274482987009","PARAM_80":"472036614189613057","PARAM_81":"471666413560397824","PARAM_82":"498809287695400961","PARAM_83":"498473113529360385","PARAM_84":"498963890651004929","PARAM_85":"499954026838757376","PARAM_103":"486485877028032513","PARAM_104":"491342702357512192","PARAM_101":"495244157174939648","PARAM_102":"490908208253112321","PARAM_107":"490920008524763136","PARAM_108":"478625384087158785","PARAM_105":"498963895084384257","PARAM_106":"463779102176837633","PARAM_75":"504060697101996032","PARAM_76":"464827137099038721","PARAM_77":"489424103724285952","PARAM_109":"490915625305116672","PARAM_78":"491206513122086913","PARAM_79":"498472529019543553","PARAM_70":"498809154048098304","PARAM_71":"498963856643588097","PARAM_72":"464827257593004033","PARAM_73":"498963846124273665","PARAM_74":"478625404161097728","PARAM_9":"497513009569071104","PARAM_8":"498971349855764481","PARAM_7":"499954030739460097","PARAM_6":"498962211822108672","PARAM_5":"473227868306931712","PARAM_110":"481068382628610048","PARAM_4":"498473196719185920","PARAM_111":"497513458128912385","PARAM_3":"504412977160523776","PARAM_2":0,"PARAM_1":0,"PARAM_64":"498809237418278912","PARAM_65":"499954038733803521","PARAM_66":"490907983723630592","PARAM_67":"498970926130397185","PARAM_68":"490909866307620865","PARAM_69":"498472318377402368","PARAM_60":"472814243020800001","PARAM_61":"472023699592052736","PARAM_62":"497513204994277377","PARAM_63":"467361506980265985","PARAM_100":"498963847839744001","PARAM_125":"484680929105674240","PARAM_126":"472811546343374849","PARAM_123":"473771446246572032","PARAM_124":"499954050071007232","PARAM_129":"498582106398523393","PARAM_127":"499939062635823104","PARAM_128":"499939072706347008","PARAM_53":"498472974811144192","PARAM_54":"490908428638621696","PARAM_55":"498474299326210049","PARAM_56":"499954049295060993","PARAM_57":"498780083792642049","PARAM_58":"478625395923484673","PARAM_59":"473550018758836225","PARAM_50":"483567801252978688","PARAM_51":"498809191108968448","PARAM_52":"473612688681861120","PARAM_130":"474158850757361665","PARAM_114":"474158954033709056","PARAM_115":"472025257461415936","PARAM_112":"499940736691601409","PARAM_113":"474155529355132929","PARAM_118":"499939054448541696","PARAM_119":"491206464543657984","PARAM_116":"498970914482814977","PARAM_117":"479329585788354560","PARAM_42":"482583842985607168","PARAM_43":"473534962767757312","PARAM_44":"464828186346127361","PARAM_45":"499940724104495105","PARAM_46":"497514241515847681","PARAM_47":"498962214124781568","PARAM_48":"473612721665867776","PARAM_49":"473503433886793728","PARAM_40":"501653361645326336","PARAM_41":"501653278359031809","PARAM_121":"496813531019083776","PARAM_122":"499939072068812801","PARAM_120":"481119852547801088"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '504412977160523776' , '498473196719185920' , '473227868306931712' , '498962211822108672' , '499954030739460097' , '498971349855764481' , '497513009569071104' , '497490986344120320' , '464827069453303809' , '490925002938388480' , '501390061263130624' , '499939051860656128' , '474157822892834817' , '485415687787917312' , '501653323472965633' , '499940744069382145' , '497513282840559617' , '498780063144083457' , '490920319637262337' , '498472430189158400' , '498809674066296832' , '498808937571680257' , '485819338599706624' , '498780092948807681' , '472814706734661633' , '490909222070915073' , '474159041438810113' , '501653165884575744' , '501072627838746624' , '498472886441353216' , '479219958253879296' , '498472737438703616' , '486485883655032833' , '471653532135587840' , '498780101593268225' , '498963858317115392' , '490638839023411200' , '501653361645326336' , '501653278359031809' , '482583842985607168' , '473534962767757312' , '464828186346127361' , '499940724104495105' , '497514241515847681' , '498962214124781568' , '473612721665867776' , '473503433886793728' , '483567801252978688' , '498809191108968448' , '473612688681861120' , '498472974811144192' , '490908428638621696' , '498474299326210049' , '499954049295060993' , '498780083792642049' , '478625395923484673' , '473550018758836225' , '472814243020800001' , '472023699592052736' , '497513204994277377' , '467361506980265985' , '498809237418278912' , '499954038733803521' , '490907983723630592' , '498970926130397185' , '490909866307620865' , '498472318377402368' , '498809154048098304' , '498963856643588097' , '464827257593004033' , '498963846124273665' , '478625404161097728' , '504060697101996032' , '464827137099038721' , '489424103724285952' , '491206513122086913' , '498472529019543553' , '472036614189613057' , '471666413560397824' , '498809287695400961' , '498473113529360385' , '498963890651004929' , '499954026838757376' , '499954055192252417' , '497513389245857793' , '501653226060255233' , '501073274482987009' , '504683060067840001' , '497513348733075457' , '478598569259962368' , '486487652200091649' , '463779099165327360' , '498963891439534081' , '498963844891148289' , '503188930321977344' , '501424056243851264' , '498809056404701185' , '498963847839744001' , '495244157174939648' , '490908208253112321' , '486485877028032513' , '491342702357512192' , '498963895084384257' , '463779102176837633' , '490920008524763136' , '478625384087158785' , '490915625305116672' , '481068382628610048' , '497513458128912385' , '499940736691601409' , '474155529355132929' , '474158954033709056' , '472025257461415936' , '498970914482814977' , '479329585788354560' , '499939054448541696' , '491206464543657984' , '481119852547801088' , '496813531019083776' , '499939072068812801' , '473771446246572032' , '499954050071007232' , '484680929105674240' , '472811546343374849' , '499939062635823104' , '499939072706347008' , '498582106398523393' , '474158850757361665' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：186ms , start = 1637131092308
┣━ 返回：RcdSet,size=117
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.606 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"501072116880244736","PARAM_31":"478922691353509888","PARAM_32":"eam","PARAM_33":"476517102736375808","PARAM_34":"473733259285495808","PARAM_35":"481563573261172736","PARAM_36":"477952352276447232","PARAM_37":"510887582641422336","PARAM_38":"490245515401756672","PARAM_30":"479208678382108672","PARAM_28":"463429357977731072","PARAM_29":"472331137151139840","PARAM_20":"489922973885530112","PARAM_21":"475686688278970368","PARAM_22":"479598113862975488","PARAM_23":"481749153626456064","PARAM_24":"472810496475529216","PARAM_25":"482581327950905344","PARAM_26":"482581093229264896","PARAM_27":"479956468586512384","PARAM_17":"473771454769397760","PARAM_18":"471623115881840640","PARAM_19":"484683939244408832","PARAM_97":"494903523763298304","PARAM_10":"473503440530571264","PARAM_98":"473609134411874304","PARAM_11":"478603517087449088","PARAM_99":"478603516361834496","PARAM_12":"463429358598488064","PARAM_13":"479388413435314177","PARAM_14":"485741096391933952","PARAM_15":"479220714138763264","PARAM_16":"472331136572325888","PARAM_90":"479219966495686656","PARAM_91":"471666421412134912","PARAM_92":"481119859787169792","PARAM_93":"482581328609411072","PARAM_94":"501416298853433344","PARAM_95":"472023707355709440","PARAM_96":"479008671368478720","PARAM_86":"474123298494480384","PARAM_87":"494597325411319808","PARAM_88":"485395845907230720","PARAM_89":"478625116503146496","PARAM_80":"477956225548419072","PARAM_81":"472331329199931392","PARAM_82":"485936564942143488","PARAM_83":"480377921387626496","PARAM_84":"473733260023693312","PARAM_85":"472331329841659904","PARAM_103":"472023116420218880","PARAM_104":"486551847834746880","PARAM_101":"463399155289554944","PARAM_102":"479329294410055680","PARAM_107":"480481725646897152","PARAM_108":"498770477079068673","PARAM_105":"479219965778460672","PARAM_106":"481068389998002176","PARAM_75":"482583850279501824","PARAM_76":"494904455913799680","PARAM_77":"480488585066184704","PARAM_109":"476660939324653568","PARAM_78":"510887822513668096","PARAM_79":"489815791709978624","PARAM_70":"479008671947292672","PARAM_71":"484681017538379776","PARAM_72":"478585181314220032","PARAM_73":"487568378521714688","PARAM_74":"485560941274988544","PARAM_9":"479354718158585856","PARAM_8":"464788445420584960","PARAM_7":"479598114576007168","PARAM_6":"479329293776715776","PARAM_5":"482573215365857280","PARAM_110":"479354718896783360","PARAM_4":"463397732229316608","PARAM_111":"473503441142939648","PARAM_3":"484683939894525952","PARAM_2":0,"PARAM_1":0,"PARAM_64":"478688769768161280","PARAM_65":"482864634051690496","PARAM_66":"489901523275350016","PARAM_67":"475686688891338752","PARAM_68":"482865235867205632","PARAM_69":"480488584403484672","PARAM_60":"510887582830166016","PARAM_61":"472023706713980928","PARAM_62":"471666420770406400","PARAM_63":"482583850896064512","PARAM_100":"482864642218000384","PARAM_125":"478624924152365056","PARAM_126":"477952352960118784","PARAM_123":"485560941845413888","PARAM_124":"479220714860183552","PARAM_129":"481749154318516224","PARAM_127":"471974290984534016","PARAM_128":"463397739833589760","PARAM_53":"489077812460781568","PARAM_54":"482864641542717440","PARAM_55":"481749752891834368","PARAM_56":"472819784346501121","PARAM_57":"489901523904495616","PARAM_58":"476679548692332544","PARAM_59":"480488576866320384","PARAM_50":"486313028048912384","PARAM_51":"473771455499206656","PARAM_52":"471653539840524288","PARAM_130":"498885088876953600","PARAM_114":"488696597023031296","PARAM_115":"475954744494391296","PARAM_112":"501072116167213056","PARAM_113":"471653539131686912","PARAM_118":"463399690289807360","PARAM_119":"507635161886621696","PARAM_116":"472023117196165120","PARAM_117":"481119860437286912","PARAM_42":"479388232048443392","PARAM_43":"485741097058828288","PARAM_44":"471622522614317056","PARAM_45":"480389139313721344","PARAM_46":"475954743840079872","PARAM_47":"501074106590953472","PARAM_48":"479329593644285952","PARAM_49":"463400831778029568","PARAM_40":"490245507856203776","PARAM_41":"463400009585393664","PARAM_121":"464788446058119168","PARAM_122":"472357984110903296","PARAM_120":"488696595773128704"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '484683939894525952' , '463397732229316608' , '482573215365857280' , '479329293776715776' , '479598114576007168' , '464788445420584960' , '479354718158585856' , '473503440530571264' , '478603517087449088' , '463429358598488064' , '479388413435314177' , '485741096391933952' , '479220714138763264' , '472331136572325888' , '473771454769397760' , '471623115881840640' , '484683939244408832' , '489922973885530112' , '475686688278970368' , '479598113862975488' , '481749153626456064' , '472810496475529216' , '482581327950905344' , '482581093229264896' , '479956468586512384' , '463429357977731072' , '472331137151139840' , '479208678382108672' , '478922691353509888' , 'eam' , '476517102736375808' , '473733259285495808' , '481563573261172736' , '477952352276447232' , '510887582641422336' , '490245515401756672' , '501072116880244736' , '490245507856203776' , '463400009585393664' , '479388232048443392' , '485741097058828288' , '471622522614317056' , '480389139313721344' , '475954743840079872' , '501074106590953472' , '479329593644285952' , '463400831778029568' , '486313028048912384' , '473771455499206656' , '471653539840524288' , '489077812460781568' , '482864641542717440' , '481749752891834368' , '472819784346501121' , '489901523904495616' , '476679548692332544' , '480488576866320384' , '510887582830166016' , '472023706713980928' , '471666420770406400' , '482583850896064512' , '478688769768161280' , '482864634051690496' , '489901523275350016' , '475686688891338752' , '482865235867205632' , '480488584403484672' , '479008671947292672' , '484681017538379776' , '478585181314220032' , '487568378521714688' , '485560941274988544' , '482583850279501824' , '494904455913799680' , '480488585066184704' , '510887822513668096' , '489815791709978624' , '477956225548419072' , '472331329199931392' , '485936564942143488' , '480377921387626496' , '473733260023693312' , '472331329841659904' , '474123298494480384' , '494597325411319808' , '485395845907230720' , '478625116503146496' , '479219966495686656' , '471666421412134912' , '481119859787169792' , '482581328609411072' , '501416298853433344' , '472023707355709440' , '479008671368478720' , '494903523763298304' , '473609134411874304' , '478603516361834496' , '482864642218000384' , '463399155289554944' , '479329294410055680' , '472023116420218880' , '486551847834746880' , '479219965778460672' , '481068389998002176' , '480481725646897152' , '498770477079068673' , '476660939324653568' , '479354718896783360' , '473503441142939648' , '501072116167213056' , '471653539131686912' , '488696597023031296' , '475954744494391296' , '472023117196165120' , '481119860437286912' , '463399690289807360' , '507635161886621696' , '488696595773128704' , '464788446058119168' , '472357984110903296' , '485560941845413888' , '479220714860183552' , '478624924152365056' , '477952352960118784' , '471974290984534016' , '463397739833589760' , '481749154318516224' , '498885088876953600' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：206ms , start = 1637131092394
┣━ 返回：RcdSet,size=190
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.618 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"485560942738800640","PARAM_31":"486313029152014336","PARAM_32":"476673978719535104","PARAM_33":"489815792691445760","PARAM_34":"474281125611569152","PARAM_35":"492410582486482944","PARAM_36":"485888537137250304","PARAM_37":"485888538064191488","PARAM_38":"480492967832846336","PARAM_30":"463401587662913536","PARAM_28":"473626754943025152","PARAM_29":"501416282843774976","PARAM_20":"472036556115279872","PARAM_21":"476660948308852736","PARAM_22":"471653540754882560","PARAM_23":"508300436529217536","PARAM_24":"479220715891982336","PARAM_25":"476673977113116672","PARAM_26":"473534969646415872","PARAM_27":"494904221175382016","PARAM_17":"478080882322702336","PARAM_18":"501072637603086336","PARAM_19":"473733261147766784","PARAM_97":"482865228682362880","PARAM_10":"487559548404498432","PARAM_98":"463402977026113536","PARAM_11":"484681028040916992","PARAM_99":"480481733892898816","PARAM_12":"482877685547139072","PARAM_13":"479218760989802496","PARAM_14":"498770298326220801","PARAM_15":"472023708303622144","PARAM_16":"463401815308763136","PARAM_90":"485741098057072640","PARAM_91":"479218751359680512","PARAM_92":"479330042942324736","PARAM_93":"511607135692390400","PARAM_94":"480137016143511552","PARAM_95":"483218065169842176","PARAM_96":"480492959574261760","PARAM_86":"495244165920063488","PARAM_87":"484684755145588736","PARAM_88":"478603518131830784","PARAM_89":"492410583505698816","PARAM_80":"501072636617424896","PARAM_81":"478080881207017472","PARAM_82":"485747532740165632","PARAM_83":"495243930166624256","PARAM_84":"494597326321483776","PARAM_85":"480488586022486016","PARAM_103":"463429359550595072","PARAM_104":"477952353941585920","PARAM_101":"476679549543776256","PARAM_102":"476660949365817344","PARAM_107":"480481734924697600","PARAM_108":"478956693833646080","PARAM_105":"481068390891388928","PARAM_106":"479354719760809984","PARAM_75":"473771456543588352","PARAM_76":"485743359831310336","PARAM_77":"480492968805924864","PARAM_109":"476319991407312896","PARAM_78":"481749155358703616","PARAM_79":"482581101043253248","PARAM_70":"494904220248440832","PARAM_71":"485743360800194560","PARAM_72":"479959573277442048","PARAM_73":"479218759966392320","PARAM_74":"463401816202149888","PARAM_9":"495243931164868608","PARAM_8":"481338872328880128","PARAM_7":"489901525628354560","PARAM_6":"485747533784547328","PARAM_5":"481338871154475008","PARAM_110":"508300434876661760","PARAM_4":"474123299400450048","PARAM_111":"488696599002742784","PARAM_3":"501072108940427264","PARAM_2":0,"PARAM_1":0,"PARAM_64":"479008672874233856","PARAM_65":"484683940846632960","PARAM_66":"480377922318761984","PARAM_67":"507635163908276224","PARAM_68":"463402977978220544","PARAM_69":"481563563891097600","PARAM_60":"482581100191809536","PARAM_61":"475954745446498304","PARAM_62":"471622523520286720","PARAM_63":"510887583106990080","PARAM_100":"463401588501774336","PARAM_125":"480137017104007168","PARAM_126":"511607135931465728","PARAM_123":"501072383491178496","PARAM_124":"479219967531679744","PARAM_129":"472331138002583552","PARAM_127":"482583851852365824","PARAM_128":"478956694827696128","PARAM_53":"479598115674914816","PARAM_54":"481119861406171136","PARAM_55":"481563574288777216","PARAM_56":"487568380539174912","PARAM_57":"464788447014420480","PARAM_58":"479330044003483648","PARAM_59":"471666422389407744","PARAM_50":"471974291777257472","PARAM_51":"473534970493665280","PARAM_52":"479329594474758144","PARAM_130":"501072382371299328","PARAM_114":"482864643224633344","PARAM_115":"482865236752203776","PARAM_112":"495244164963762176","PARAM_113":"483218064226123776","PARAM_118":"475686689822474240","PARAM_119":"474281124533633024","PARAM_116":"486551848799436800","PARAM_117":"484684756085112832","PARAM_42":"476319990312599552","PARAM_43":"482581329603461120","PARAM_44":"471985681850171393","PARAM_45":"473626754091581440","PARAM_46":"473609135473033216","PARAM_47":"472331330856681472","PARAM_48":"494904456811380736","PARAM_49":"482877684532117504","PARAM_40":"471623117005914112","PARAM_41":"479959572333723648","PARAM_121":"472023118244741120","PARAM_122":"487559550405181440","PARAM_120":"463400832793051136"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501072108940427264' , '474123299400450048' , '481338871154475008' , '485747533784547328' , '489901525628354560' , '481338872328880128' , '495243931164868608' , '487559548404498432' , '484681028040916992' , '482877685547139072' , '479218760989802496' , '498770298326220801' , '472023708303622144' , '463401815308763136' , '478080882322702336' , '501072637603086336' , '473733261147766784' , '472036556115279872' , '476660948308852736' , '471653540754882560' , '508300436529217536' , '479220715891982336' , '476673977113116672' , '473534969646415872' , '494904221175382016' , '473626754943025152' , '501416282843774976' , '463401587662913536' , '486313029152014336' , '476673978719535104' , '489815792691445760' , '474281125611569152' , '492410582486482944' , '485888537137250304' , '485888538064191488' , '480492967832846336' , '485560942738800640' , '471623117005914112' , '479959572333723648' , '476319990312599552' , '482581329603461120' , '471985681850171393' , '473626754091581440' , '473609135473033216' , '472331330856681472' , '494904456811380736' , '482877684532117504' , '471974291777257472' , '473534970493665280' , '479329594474758144' , '479598115674914816' , '481119861406171136' , '481563574288777216' , '487568380539174912' , '464788447014420480' , '479330044003483648' , '471666422389407744' , '482581100191809536' , '475954745446498304' , '471622523520286720' , '510887583106990080' , '479008672874233856' , '484683940846632960' , '480377922318761984' , '507635163908276224' , '463402977978220544' , '481563563891097600' , '494904220248440832' , '485743360800194560' , '479959573277442048' , '479218759966392320' , '463401816202149888' , '473771456543588352' , '485743359831310336' , '480492968805924864' , '481749155358703616' , '482581101043253248' , '501072636617424896' , '478080881207017472' , '485747532740165632' , '495243930166624256' , '494597326321483776' , '480488586022486016' , '495244165920063488' , '484684755145588736' , '478603518131830784' , '492410583505698816' , '485741098057072640' , '479218751359680512' , '479330042942324736' , '511607135692390400' , '480137016143511552' , '483218065169842176' , '480492959574261760' , '482865228682362880' , '463402977026113536' , '480481733892898816' , '463401588501774336' , '476679549543776256' , '476660949365817344' , '463429359550595072' , '477952353941585920' , '481068390891388928' , '479354719760809984' , '480481734924697600' , '478956693833646080' , '476319991407312896' , '508300434876661760' , '488696599002742784' , '495244164963762176' , '483218064226123776' , '482864643224633344' , '482865236752203776' , '486551848799436800' , '484684756085112832' , '475686689822474240' , '474281124533633024' , '463400832793051136' , '472023118244741120' , '487559550405181440' , '501072383491178496' , '479219967531679744' , '480137017104007168' , '511607135931465728' , '482583851852365824' , '478956694827696128' , '472331138002583552' , '501072382371299328' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：205ms , start = 1637131092411
┣━ 返回：RcdSet,size=337
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.639 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"510887820433293312","PARAM_8":"463401580721340416","PARAM_10":"473626745103187968","PARAM_7":"463401807993896960","PARAM_6":"481749145309151232","PARAM_5":"501072373705867264","PARAM_4":"479959564171608064","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '479959564171608064' , '501072373705867264' , '481749145309151232' , '463401807993896960' , '463401580721340416' , '510887820433293312' , '473626745103187968' )
┣ 结果： 
┣━ 耗时：191ms , start = 1637131092447
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.651 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"490245517545046016","PARAM_31":"463400010562666496","PARAM_32":"498890640633892865","PARAM_33":"495244167178354688","PARAM_34":"479959574523150336","PARAM_35":"480492970060021760","PARAM_36":"480137018328743936","PARAM_37":"486551850187751424","PARAM_38":"510887583488671744","PARAM_30":"477956226529886208","PARAM_28":"488696601678708736","PARAM_29":"478603519541116928","PARAM_20":"478922694239191040","PARAM_21":"481563575630954496","PARAM_22":"479329295395717120","PARAM_23":"471974292850999296","PARAM_24":"498885090605006848","PARAM_25":"489901527587094528","PARAM_26":"482877686885122048","PARAM_27":"495243932481880064","PARAM_17":"463399156178747392","PARAM_18":"479388233323511808","PARAM_19":"463399691917197312","PARAM_97":"490245516341280768","PARAM_10":"481749753835552768","PARAM_98":"478585183470092288","PARAM_11":"478922681874382848","PARAM_99":"480389141578645504","PARAM_12":"479218762373922816","PARAM_13":"474281126987300864","PARAM_14":"471622524862464000","PARAM_15":"489922974875385856","PARAM_16":"485741099411832832","PARAM_90":"479354721128153088","PARAM_91":"482864644558422016","PARAM_92":"463400011548327936","PARAM_93":"473626756130013184","PARAM_94":"463400833808072704","PARAM_95":"487568383219335168","PARAM_96":"476319982246952960","PARAM_86":"501072119862394880","PARAM_87":"489077805410156544","PARAM_88":"481338874124042240","PARAM_89":"477956227867869184","PARAM_80":"511607136254427136","PARAM_81":"463397741918158848","PARAM_82":"485747535109947392","PARAM_83":"492410584894013440","PARAM_84":"489077814461464576","PARAM_85":"485888539251179520","PARAM_103":"479330045333078016","PARAM_104":"482581330920472576","PARAM_101":"501074109107535872","PARAM_102":"510887822752743424","PARAM_107":"483218066432327680","PARAM_108":"479329595586248704","PARAM_105":"473609136769073152","PARAM_106":"480488587389829120","PARAM_75":"478922692477583360","PARAM_76":"478956684903972864","PARAM_77":"475954746797064192","PARAM_109":"480481736321400832","PARAM_78":"484684757343404032","PARAM_79":"484683104078794753","PARAM_70":"474123300629381120","PARAM_71":"478956696207622144","PARAM_72":"487559553085341696","PARAM_73":"472331332110778368","PARAM_74":"489815794193006592","PARAM_9":"485936567093821440","PARAM_8":"478688770657353728","PARAM_7":"482573217517535232","PARAM_6":"485936565877473280","PARAM_5":"463429360842440704","PARAM_110":"479956469668642816","PARAM_4":"476673980116238336","PARAM_111":"481338861507575808","PARAM_3":"463401589349023744","PARAM_2":0,"PARAM_1":0,"PARAM_64":"501416303421030400","PARAM_65":"472023709545136128","PARAM_66":"510887823079899136","PARAM_67":"476679550688821248","PARAM_68":"507635166470995968","PARAM_69":"501416300740870144","PARAM_60":"485743362016542720","PARAM_61":"494904222408507392","PARAM_62":"501072117886877696","PARAM_63":"479388237341655040","PARAM_100":"501072384963379200","PARAM_125":"498778136893194240","PARAM_126":"473503441981800448","PARAM_123":"481749755081261056","PARAM_124":"481119862664462336","PARAM_129":"479956471090511872","PARAM_127":"484681029190156288","PARAM_128":"480389140282605568","PARAM_53":"470155869825269760","PARAM_54":"463401817099730944","PARAM_55":"494904458010951680","PARAM_56":"501072639033344000","PARAM_57":"482865237926608896","PARAM_58":"478688771848536064","PARAM_59":"508300439058382848","PARAM_50":"501074107681472512","PARAM_51":"482573216284409856","PARAM_52":"471666423702224896","PARAM_130":"480377923652550656","PARAM_114":"489922976217563136","PARAM_115":"471620891906670593","PARAM_112":"478080883799097344","PARAM_113":"489077813450637312","PARAM_118":"463397740718587904","PARAM_119":"471653541992202240","PARAM_116":"463399157072134144","PARAM_117":"486313030599049216","PARAM_42":"478585182215995392","PARAM_43":"473503443139428352","PARAM_44":"463399691099308032","PARAM_45":"479598117155504128","PARAM_46":"477952355304734720","PARAM_47":"476660950745743360","PARAM_48":"479219968966131712","PARAM_49":"481749156772184064","PARAM_40":"479329296838557696","PARAM_41":"482581102209269760","PARAM_121":"498885092861542400","PARAM_122":"473534971609350144","PARAM_120":"484683942113312768"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463401589349023744' , '476673980116238336' , '463429360842440704' , '485936565877473280' , '482573217517535232' , '478688770657353728' , '485936567093821440' , '481749753835552768' , '478922681874382848' , '479218762373922816' , '474281126987300864' , '471622524862464000' , '489922974875385856' , '485741099411832832' , '463399156178747392' , '479388233323511808' , '463399691917197312' , '478922694239191040' , '481563575630954496' , '479329295395717120' , '471974292850999296' , '498885090605006848' , '489901527587094528' , '482877686885122048' , '495243932481880064' , '488696601678708736' , '478603519541116928' , '477956226529886208' , '463400010562666496' , '498890640633892865' , '495244167178354688' , '479959574523150336' , '480492970060021760' , '480137018328743936' , '486551850187751424' , '510887583488671744' , '490245517545046016' , '479329296838557696' , '482581102209269760' , '478585182215995392' , '473503443139428352' , '463399691099308032' , '479598117155504128' , '477952355304734720' , '476660950745743360' , '479219968966131712' , '481749156772184064' , '501074107681472512' , '482573216284409856' , '471666423702224896' , '470155869825269760' , '463401817099730944' , '494904458010951680' , '501072639033344000' , '482865237926608896' , '478688771848536064' , '508300439058382848' , '485743362016542720' , '494904222408507392' , '501072117886877696' , '479388237341655040' , '501416303421030400' , '472023709545136128' , '510887823079899136' , '476679550688821248' , '507635166470995968' , '501416300740870144' , '474123300629381120' , '478956696207622144' , '487559553085341696' , '472331332110778368' , '489815794193006592' , '478922692477583360' , '478956684903972864' , '475954746797064192' , '484684757343404032' , '484683104078794753' , '511607136254427136' , '463397741918158848' , '485747535109947392' , '492410584894013440' , '489077814461464576' , '485888539251179520' , '501072119862394880' , '489077805410156544' , '481338874124042240' , '477956227867869184' , '479354721128153088' , '482864644558422016' , '463400011548327936' , '473626756130013184' , '463400833808072704' , '487568383219335168' , '476319982246952960' , '490245516341280768' , '478585183470092288' , '480389141578645504' , '501072384963379200' , '501074109107535872' , '510887822752743424' , '479330045333078016' , '482581330920472576' , '473609136769073152' , '480488587389829120' , '483218066432327680' , '479329595586248704' , '480481736321400832' , '479956469668642816' , '481338861507575808' , '478080883799097344' , '489077813450637312' , '489922976217563136' , '471620891906670593' , '463399157072134144' , '486313030599049216' , '463397740718587904' , '471653541992202240' , '484683942113312768' , '498885092861542400' , '473534971609350144' , '481749755081261056' , '481119862664462336' , '498778136893194240' , '473503441981800448' , '484681029190156288' , '480389140282605568' , '479956471090511872' , '480377923652550656' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：210ms , start = 1637131092439
┣━ 返回：RcdSet,size=381
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.672 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"476673967462023168","PARAM_18":"485888529612668928","PARAM_19":"482581320229191680","PARAM_20":"489818737319346176","PARAM_10":"480137007553576960","PARAM_21":"490923970208468992","PARAM_11":"473609125796773888","PARAM_12":"492410573934297088","PARAM_13":"498885073529995264","PARAM_14":"480389130912530432","PARAM_15":"478688762159693824","PARAM_16":"501389626531909632","PARAM_9":"474281113125126144","PARAM_8":"482573207459594240","PARAM_7":"498582527229820928","PARAM_6":"486313018175520768","PARAM_5":"510887580426829824","PARAM_4":"495243921824153600","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '495243921824153600' , '510887580426829824' , '486313018175520768' , '498582527229820928' , '482573207459594240' , '474281113125126144' , '480137007553576960' , '473609125796773888' , '492410573934297088' , '498885073529995264' , '480389130912530432' , '478688762159693824' , '501389626531909632' , '476673967462023168' , '485888529612668928' , '482581320229191680' , '489818737319346176' , '490923970208468992' )
┣ 结果： 
┣━ 耗时：189ms , start = 1637131092482
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.672 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"471653543221133312","PARAM_31":"476673982108532736","PARAM_32":"471623119124037632","PARAM_33":"489815795505823744","PARAM_34":"482865239109402624","PARAM_35":"489922978209857536","PARAM_36":"479219970283143168","PARAM_37":"471623119950315520","PARAM_38":"475686692922064896","PARAM_30":"485560945016307712","PARAM_28":"473733264192831488","PARAM_29":"472331333301960704","PARAM_20":"481749158206636032","PARAM_21":"478688773647892480","PARAM_22":"471623117999964160","PARAM_23":"473534972766978048","PARAM_24":"501072386309750784","PARAM_25":"471666425635799040","PARAM_26":"463429362776014848","PARAM_27":"501072640497156096","PARAM_17":"487559555773890560","PARAM_18":"485560945611898880","PARAM_19":"463400013167329280","PARAM_97":"471653543871250432","PARAM_10":"474123302428737536","PARAM_98":"479956473208635392","PARAM_11":"487559557153816576","PARAM_99":"475686692318085120","PARAM_12":"485560943879651328","PARAM_13":"481749158911279104","PARAM_14":"479956472495603712","PARAM_15":"489077816151769088","PARAM_16":"478585184673857536","PARAM_90":"495244168478588928","PARAM_91":"463400012525600768","PARAM_92":"471986344285962240","PARAM_93":"474123301828952064","PARAM_94":"479959575810801664","PARAM_95":"463399157952937984","PARAM_96":"481749145669861376","PARAM_86":"478603520921042944","PARAM_87":"475955437510852608","PARAM_88":"463402979890823168","PARAM_89":"475686691072376832","PARAM_80":"463401590787670016","PARAM_81":"463402978934521856","PARAM_82":"510887820517179392","PARAM_83":"472023711478710272","PARAM_84":"487568385933049856","PARAM_85":"489922977547157504","PARAM_103":"471622526703763456","PARAM_104":"472358185009676289","PARAM_101":"463399158544334848","PARAM_102":"471974294486777856","PARAM_107":"481749756972892160","PARAM_108":"473036391530364929","PARAM_105":"479959564469403648","PARAM_106":"476660952759009280","PARAM_75":"477956229193269248","PARAM_76":"479959576465113088","PARAM_77":"463399692735086592","PARAM_109":"463397743117729792","PARAM_78":"482877688223105024","PARAM_79":"471622526116560896","PARAM_70":"481749756356329472","PARAM_71":"463399693292929024","PARAM_72":"482865239696605184","PARAM_73":"482877688894193664","PARAM_74":"501072641218576384","PARAM_9":"487568387254255616","PARAM_8":"463429362113314816","PARAM_7":"472036810977968129","PARAM_6":"495243933782114304","PARAM_5":"479218764370411520","PARAM_110":"472331141001510912","PARAM_4":"463401808295886848","PARAM_111":"479220720316973056","PARAM_3":"472331140393336832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"472331139210543104","PARAM_65":"494597327642689536","PARAM_66":"501072374041411584","PARAM_67":"473534973345792000","PARAM_68":"476660952100503552","PARAM_69":"472023119704358912","PARAM_60":"476673981483581440","PARAM_61":"482581103345926144","PARAM_62":"463401817988923392","PARAM_63":"495244169128706048","PARAM_100":"479220717896859648","PARAM_125":"489077815459708928","PARAM_126":"482581332891795456","PARAM_123":"478585185282031616","PARAM_124":"464788448306266112","PARAM_129":"473549948382609408","PARAM_127":"473733262674493440","PARAM_128":"479220719629107200","PARAM_53":"471666424977293312","PARAM_54":"463401581010747392","PARAM_55":"463401590217244672","PARAM_56":"482581103912157184","PARAM_57":"476319992707547136","PARAM_58":"473733264926834688","PARAM_59":"463397743721709568","PARAM_50":"489815796164329472","PARAM_51":"495924945906302976","PARAM_52":"481068392111931392","PARAM_130":"477956229818220544","PARAM_114":"471974293945712640","PARAM_115":"472331333985632256","PARAM_112":"463401818576125952","PARAM_113":"463402980524163072","PARAM_118":"471986431431016449","PARAM_119":"478603521634074624","PARAM_116":"482864645908987904","PARAM_117":"495243934444814336","PARAM_42":"482583853127434240","PARAM_43":"463400835502571520","PARAM_44":"473626745392594944","PARAM_45":"463400834823094272","PARAM_46":"501072386968256512","PARAM_47":"482581332237484032","PARAM_48":"472023710841176064","PARAM_49":"479219970929065984","PARAM_40":"473771458015789056","PARAM_41":"479218763728683008","PARAM_121":"482864646571687936","PARAM_122":"478688773039718400","PARAM_120":"479008674094776320"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '472331140393336832' , '463401808295886848' , '479218764370411520' , '495243933782114304' , '472036810977968129' , '463429362113314816' , '487568387254255616' , '474123302428737536' , '487559557153816576' , '485560943879651328' , '481749158911279104' , '479956472495603712' , '489077816151769088' , '478585184673857536' , '487559555773890560' , '485560945611898880' , '463400013167329280' , '481749158206636032' , '478688773647892480' , '471623117999964160' , '473534972766978048' , '501072386309750784' , '471666425635799040' , '463429362776014848' , '501072640497156096' , '473733264192831488' , '472331333301960704' , '485560945016307712' , '476673982108532736' , '471623119124037632' , '489815795505823744' , '482865239109402624' , '489922978209857536' , '479219970283143168' , '471623119950315520' , '475686692922064896' , '471653543221133312' , '473771458015789056' , '479218763728683008' , '482583853127434240' , '463400835502571520' , '473626745392594944' , '463400834823094272' , '501072386968256512' , '482581332237484032' , '472023710841176064' , '479219970929065984' , '489815796164329472' , '495924945906302976' , '481068392111931392' , '471666424977293312' , '463401581010747392' , '463401590217244672' , '482581103912157184' , '476319992707547136' , '473733264926834688' , '463397743721709568' , '476673981483581440' , '482581103345926144' , '463401817988923392' , '495244169128706048' , '472331139210543104' , '494597327642689536' , '501072374041411584' , '473534973345792000' , '476660952100503552' , '472023119704358912' , '481749756356329472' , '463399693292929024' , '482865239696605184' , '482877688894193664' , '501072641218576384' , '477956229193269248' , '479959576465113088' , '463399692735086592' , '482877688223105024' , '471622526116560896' , '463401590787670016' , '463402978934521856' , '510887820517179392' , '472023711478710272' , '487568385933049856' , '489922977547157504' , '478603520921042944' , '475955437510852608' , '463402979890823168' , '475686691072376832' , '495244168478588928' , '463400012525600768' , '471986344285962240' , '474123301828952064' , '479959575810801664' , '463399157952937984' , '481749145669861376' , '471653543871250432' , '479956473208635392' , '475686692318085120' , '479220717896859648' , '463399158544334848' , '471974294486777856' , '471622526703763456' , '472358185009676289' , '479959564469403648' , '476660952759009280' , '481749756972892160' , '473036391530364929' , '463397743117729792' , '472331141001510912' , '479220720316973056' , '463401818576125952' , '463402980524163072' , '471974293945712640' , '472331333985632256' , '482864645908987904' , '495243934444814336' , '471986431431016449' , '478603521634074624' , '479008674094776320' , '482864646571687936' , '478688773039718400' , '478585185282031616' , '464788448306266112' , '489077815459708928' , '482581332891795456' , '473733262674493440' , '479220719629107200' , '473549948382609408' , '477956229818220544' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：217ms , start = 1637131092453
┣━ 返回：RcdSet,size=192
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:38:12.675 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"472331321499189248","PARAM_11":"476679540945453056","PARAM_12":"479220705905344512","PARAM_13":"485747524208951296","PARAM_9":"463399148020826112","PARAM_8":"482877676047040512","PARAM_7":"486551839098011648","PARAM_6":"[]","PARAM_5":"498885073529995264","PARAM_4":"505300850025955328","PARAM_3":"464788438000861184"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '464788438000861184' , '505300850025955328' , '498885073529995264' , '[]' , '486551839098011648' , '482877676047040512' , '463399148020826112' , '472331321499189248' , '476679540945453056' , '479220705905344512' , '485747524208951296' )
┣ 结果： 
┣━ 耗时：49ms , start = 1637131092625
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.686 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"478956684543262720","PARAM_8":"481338861117505536","PARAM_10":"489077805078806528","PARAM_7":"476319981961740288","PARAM_6":"[]","PARAM_5":"498885073529995264","PARAM_4":"492410573934297088","PARAM_3":"478922681358483456"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '478922681358483456' , '492410573934297088' , '498885073529995264' , '[]' , '476319981961740288' , '481338861117505536' , '478956684543262720' , '489077805078806528' )
┣ 结果： 
┣━ 耗时：44ms , start = 1637131092641
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.687 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"490803286488645632","PARAM_11":"480488576534970368","PARAM_12":"480481725315547136","PARAM_13":"490803523777200128","PARAM_9":"476660938984914944","PARAM_8":"490245507570991104","PARAM_7":"482864633716146176","PARAM_6":"482581092939857920","PARAM_5":"463397731918938112","PARAM_4":"[]","PARAM_3":"498885073529995264"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '498885073529995264' , '[]' , '463397731918938112' , '482581092939857920' , '482864633716146176' , '490245507570991104' , '476660938984914944' , '490803286488645632' , '480488576534970368' , '480481725315547136' , '490803523777200128' )
┣ 结果： 
┣━ 耗时：50ms , start = 1637131092637
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.689 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"501072108604882944","PARAM_8":"479218751024136192","PARAM_10":"481563563521998848","PARAM_7":"480492959255494656","PARAM_6":"501416282168492032","PARAM_5":"[]","PARAM_4":"498885073529995264","PARAM_3":"482865228384567296"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '482865228384567296' , '498885073529995264' , '[]' , '501416282168492032' , '480492959255494656' , '479218751024136192' , '501072108604882944' , '481563563521998848' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637131092676
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:38:12.706 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"P001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'P001' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637131092692
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

14:38:12.707 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131092692
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 

14:38:12.707 [ForkJoinPool-2-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"002"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '002' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637131092691
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 

14:38:12.723 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"E001","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：30ms , start = 1637131092692
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 

14:38:12.724 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":"employee"}
┣ 执行：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = 'employee' ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：32ms , start = 1637131092692
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 

14:38:12.726 [XNIO-1 task-3] - [513362001032908800] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 772ms
14:38:12.850 [XNIO-1 task-3] - [513362001032908800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 
┣ 语句：UPDATE sys_user SET last_login_time = ? WHERE id = ?
┣ 参数：{"PARAM_1":1637131092838,"PARAM_2":"110588348101165911"}
┣ 执行：UPDATE sys_user SET last_login_time = str_to_date('2021-11-17 14:38:12','%Y-%m-%d %H:%i:%s') WHERE id = '110588348101165911'
┣ 结果： 
┣━ 耗时：11ms , start = 1637131092838
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.update(UserServiceImpl.java:202)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:81)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362001032908800
┗━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 

14:38:12.864 [XNIO-1 task-3] - [513362001032908800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_session_online WHERE id = ?
┣ 参数：{"PARAM_1":"Ti7ctXa0PEK_1_4IjfQm_1Nf1x0cD_wbZzpu9oGL"}
┣ 执行：select * from sys_session_online WHERE id = 'Ti7ctXa0PEK_1_4IjfQm_1Nf1x0cD_wbZzpu9oGL'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131092851
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:88)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362001032908800
┗━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 

14:38:12.883 [XNIO-1 task-3] - [513362001032908800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 
┣ 语句：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"Ti7ctXa0PEK_1_4IjfQm_1Nf1x0cD_wbZzpu9oGL","PARAM_9":"ed-10b7f97ade-dc59","PARAM_8":"D7B67D75818C671B","PARAM_10":"110588348101165911","PARAM_7":1,"PARAM_11":1637131092868,"PARAM_6":1200,"PARAM_12":1,"PARAM_5":1637131092864,"PARAM_4":1637131092864,"PARAM_3":"110588348101165911","PARAM_2":"c8ylG1jNaPzeC_c8mjI7TGv0alIV7e7dlg41HWbZ"}
┣ 执行：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( 'Ti7ctXa0PEK_1_4IjfQm_1Nf1x0cD_wbZzpu9oGL' , 'c8ylG1jNaPzeC_c8mjI7TGv0alIV7e7dlg41HWbZ' , '110588348101165911' , str_to_date('2021-11-17 14:38:12','%Y-%m-%d %H:%i:%s') , str_to_date('2021-11-17 14:38:12','%Y-%m-%d %H:%i:%s') , 1200 , 1 , 'D7B67D75818C671B' , 'ed-10b7f97ade-dc59' , '110588348101165911' , str_to_date('2021-11-17 14:38:12','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131092868
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.insert(SessionOnlineServiceImpl.java:74)
┣ TID：513362001032908800
┗━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 

14:38:12.944 [XNIO-1 task-3] - [513362001032908800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 
┣ 语句：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513362227839897600","PARAM_9":0,"PARAM_8":1637133092905,"PARAM_10":"110588348101165911","PARAM_7":0,"PARAM_11":1637131092926,"PARAM_6":1637132892885,"PARAM_12":1,"PARAM_5":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MTE6MzIiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjM4OjEyIiwianRpIjoiN2QyZTZiMzctMWNhMi00MTYwLTg4YzMtZmY0OTU0YTBlYWEzIn0.Q_Vbd0u-UwvKuBVK0pQ1zvsH8sb4URXMKvuRUpqHoFHBsZXagvIrWsBYMgoPvp1L10jLWxw30vWm-1iQR5Li1vbFJKapuPRIM4tgFukrcv_dwg9jIMEp_McJR5bTIwv98o5LZZXwBo2rERqFy5rAcXpBf5toW6i_7yhA7pCZN3_ayknMI9Vck9t7FkFm_8tJ0LAyCOlabDH8qNglWcuZ0sa19kLtPDvRnoIUqU8Q7E9vMi5QA7l3ri7sLit2yUXamTXOUdK9-LcuFhivBTnI_UJDKSlVGOJTf64dWRgFqIAyowQ3s4unOzOErl5_b3tku6qHDY6HpQmy9o8g0mFDKg","PARAM_4":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MDg6MTIiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjM4OjEyIiwianRpIjoiN2QyZTZiMzctMWNhMi00MTYwLTg4YzMtZmY0OTU0YTBlYWEzIn0.JJIfpP0plDXHnbEdGy2uHjbuQKBSeOxrab5JE2No4tpxnxfMfTQjv7DST_n7pBb5j-AxdRANjhOESa21kFG44Jmhm7TF-hfTHgXkp2fGGnbfCWQvrUr8UIbDvQlHrGqbpmEFzULGJgItKQ2Fe0vwBZ8aT3JIA1b7OuY1z3whbrtyiHHA1kEcwXKEv-gXrb4zPZ-18hcf0rNpU5o9UzYrCQV9fgs8dLLwikncSM-XCxZLxabmvzisNV4zRXl-n781qHpvVf-wDzORdBIfxlpmhcqkoDEyd4oVNEYtYfcRNHDqiwooTV3pMD-3E7ZWg0UHdHZh_bzgo7rmNp6GtNdQjA","PARAM_3":"7d2e6b37-1ca2-4160-88c3-ff4954a0eaa3","PARAM_2":"110588348101165911"}
┣ 执行：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( '513362227839897600' , '110588348101165911' , '7d2e6b37-1ca2-4160-88c3-ff4954a0eaa3' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MDg6MTIiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjM4OjEyIiwianRpIjoiN2QyZTZiMzctMWNhMi00MTYwLTg4YzMtZmY0OTU0YTBlYWEzIn0.JJIfpP0plDXHnbEdGy2uHjbuQKBSeOxrab5JE2No4tpxnxfMfTQjv7DST_n7pBb5j-AxdRANjhOESa21kFG44Jmhm7TF-hfTHgXkp2fGGnbfCWQvrUr8UIbDvQlHrGqbpmEFzULGJgItKQ2Fe0vwBZ8aT3JIA1b7OuY1z3whbrtyiHHA1kEcwXKEv-gXrb4zPZ-18hcf0rNpU5o9UzYrCQV9fgs8dLLwikncSM-XCxZLxabmvzisNV4zRXl-n781qHpvVf-wDzORdBIfxlpmhcqkoDEyd4oVNEYtYfcRNHDqiwooTV3pMD-3E7ZWg0UHdHZh_bzgo7rmNp6GtNdQjA' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MTE6MzIiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjM4OjEyIiwianRpIjoiN2QyZTZiMzctMWNhMi00MTYwLTg4YzMtZmY0OTU0YTBlYWEzIn0.Q_Vbd0u-UwvKuBVK0pQ1zvsH8sb4URXMKvuRUpqHoFHBsZXagvIrWsBYMgoPvp1L10jLWxw30vWm-1iQR5Li1vbFJKapuPRIM4tgFukrcv_dwg9jIMEp_McJR5bTIwv98o5LZZXwBo2rERqFy5rAcXpBf5toW6i_7yhA7pCZN3_ayknMI9Vck9t7FkFm_8tJ0LAyCOlabDH8qNglWcuZ0sa19kLtPDvRnoIUqU8Q7E9vMi5QA7l3ri7sLit2yUXamTXOUdK9-LcuFhivBTnI_UJDKSlVGOJTf64dWRgFqIAyowQ3s4unOzOErl5_b3tku6qHDY6HpQmy9o8g0mFDKg' , str_to_date('2021-11-17 15:08:12','%Y-%m-%d %H:%i:%s') , 0 , str_to_date('2021-11-17 15:11:32','%Y-%m-%d %H:%i:%s') , 0 , '110588348101165911' , str_to_date('2021-11-17 14:38:12','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：17ms , start = 1637131092926
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：513362001032908800
┗━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 

14:38:13.427 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：107ms , start = 1637131093318
┣━ 返回：RcdSet,size=1267
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：513362229467287552
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

14:38:20.150 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_info_list.html#data-table-base"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_info_list.html#data-table-base' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：16ms , start = 1637131100131
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362229467287552
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:20.247 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_operate","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_operate'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131100230
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getDBTableMeta(SuperService.java:59)
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:222)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:20.287 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_insert","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_insert' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131100272
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513362229467287552
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:38:20.420 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_attribute_item","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_attribute_item'
┣ 结果： 
┣━ 耗时：17ms , start = 1637131100399
┣━ 返回：RcdSet,size=22
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:20.470 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：14ms , start = 1637131100452
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362229467287552
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:20.514 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_attribute","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_attribute'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131100486
┣━ 返回：RcdSet,size=23
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:20.560 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_18":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_19":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_20":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_10":"ffcc57a6-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"000b5919-0f8b-11ec-ab08-00163e2e6a36","PARAM_14":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_15":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_16":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"489732934153011200","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , '489732934153011200' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ffcc57a6-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , '000b5919-0f8b-11ec-ab08-00163e2e6a36' , 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：19ms , start = 1637131100535
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:20.668 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"pcm_catalog","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'pcm_catalog'
┣ 结果： 
┣━ 耗时：15ms , start = 1637131100648
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:20.695 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131100680
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513362229467287552
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

14:38:20.714 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：12ms , start = 1637131100700
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362229467287552
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:20.811 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：17ms , start = 1637131100792
┣━ 返回：RcdSet,size=26
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.buildingHierarchicalRelationships(CatalogServiceImpl.java:399)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:277)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362229467287552
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:20.844 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131100830
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:20.868 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"办理状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '办理状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131100851
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:20.869 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_insert","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_insert' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：10ms , start = 1637131100854
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513361899849519104
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:38:20.889 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：14ms , start = 1637131100872
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513361899849519104
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:20.890 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131100878
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:20.911 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131100894
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:20.911 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_18":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_19":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_20":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_10":"ffcc57a6-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"000b5919-0f8b-11ec-ab08-00163e2e6a36","PARAM_14":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_15":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_16":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"489732934153011200","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , '489732934153011200' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ffcc57a6-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , '000b5919-0f8b-11ec-ab08-00163e2e6a36' , 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131100890
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:20.924 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"来源","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '来源' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131100913
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:20.927 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：10ms , start = 1637131100914
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513361899849519104
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

14:38:20.940 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产分类","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产分类' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131100926
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:20.944 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：13ms , start = 1637131100929
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513361899849519104
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:20.955 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"规格型号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '规格型号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131100942
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:20.963 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：15ms , start = 1637131100946
┣━ 返回：RcdSet,size=26
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.buildingHierarchicalRelationships(CatalogServiceImpl.java:399)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:277)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513361899849519104
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:20.973 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"序列号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '序列号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131100957
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:20.987 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"序列号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '序列号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131100974
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:20.992 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131100977
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.000 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131100988
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.006 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"位置","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '位置' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131100995
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.014 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"位置","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '位置' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131101001
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.021 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"厂商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '厂商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131101008
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.028 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"厂商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '厂商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131101015
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.038 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"维保商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '维保商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131101023
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.042 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"维保商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '维保商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101030
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.051 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"采购日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '采购日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101039
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.057 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"采购日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '采购日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131101044
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.066 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"开始日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '开始日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101053
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.074 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"开始日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '开始日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131101058
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.079 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"结束日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '结束日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101068
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.088 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"结束日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '结束日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101075
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.096 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所属公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所属公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101083
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.104 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所属公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所属公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101091
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.111 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101100
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.117 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131101106
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.127 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131101113
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.130 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101118
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.141 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择组织节点","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择组织节点' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101128
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.143 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择组织节点","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择组织节点' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131101132
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.157 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"管理人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '管理人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131101143
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.158 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"管理人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '管理人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101145
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.173 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131101159
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.173 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131101159
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.191 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131101174
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.191 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131101174
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.208 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"更多","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '更多' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131101194
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.208 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"更多","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '更多' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131101194
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.225 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"送审","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '送审' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101212
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.225 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"送审","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '送审' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101212
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.240 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"确认","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '确认' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101227
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.240 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"确认","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '确认' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101227
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.255 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"撤销","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '撤销' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101242
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.255 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"撤销","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '撤销' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101242
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.271 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"登记单","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '登记单' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101258
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.271 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"登记单","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '登记单' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101258
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.285 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产标签","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产标签' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131101273
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.285 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产标签","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产标签' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131101273
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.300 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据导出","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据导出' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131101287
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.303 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据导出","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据导出' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637131101287
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.320 [XNIO-1 task-3] - [513362229467287552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更明细","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更明细' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131101306
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362229467287552
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:21.320 [XNIO-1 task-6] - [513361899849519104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更明细","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更明细' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131101305
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513361899849519104
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:22.116 [XNIO-1 task-6] - [513362266054201344] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_manufacturer","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_manufacturer'
┣ 结果： 
┣━ 耗时：13ms , start = 1637131102097
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362266054201344
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:22.156 [XNIO-1 task-6] - [513362266054201344] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131102139
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：513362266054201344
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:38:22.190 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_position'
┣ 结果： 
┣━ 耗时：15ms , start = 1637131102168
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:22.224 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131102203
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362266259722240
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:38:22.236 [XNIO-1 task-1] - [513362266578489344] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_dict_item","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_dict_item'
┣ 结果： 
┣━ 耗时：13ms , start = 1637131102219
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362266578489344
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:22.244 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：16ms , start = 1637131102225
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

14:38:22.250 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 0ms
14:38:22.261 [XNIO-1 task-1] - [513362266578489344] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam_source"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'eam_source' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131102244
┣━ 返回：RcdSet,size=6
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362266578489344
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:38:22.267 [XNIO-1 task-5] - [513362266742067200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_maintainer","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_maintainer'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131102248
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362266742067200
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:22.295 [XNIO-1 task-5] - [513362266742067200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：16ms , start = 1637131102276
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：513362266742067200
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

14:38:22.373 [XNIO-1 task-5] - [513362267299909632] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：19ms , start = 1637131102338
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：513362267299909632
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:38:22.414 [XNIO-1 task-1] - [513362267559956480] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131102401
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362267559956480
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:38:22.438 [XNIO-1 task-1] - [513362267559956480] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：10ms , start = 1637131102418
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362267559956480
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

14:38:22.442 [XNIO-1 task-1] - [513362267559956480] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 2ms
14:38:22.516 [XNIO-1 task-1] - [513362267950026752] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：22ms , start = 1637131102490
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：513362267950026752
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

14:38:22.872 [XNIO-1 task-1] - [513362269036351488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset'
┣ 结果： 
┣━ 耗时：30ms , start = 1637131102833
┣━ 返回：RcdSet,size=97
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQueryCondition(SuperService.java:321)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1046)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
┣ TID：513362269036351488
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:22.935 [XNIO-1 task-5] - [513362269241872384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset'
┣ 结果： 
┣━ 耗时：20ms , start = 1637131102910
┣━ 返回：RcdSet,size=97
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQueryCondition(SuperService.java:321)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1046)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
┣ TID：513362269241872384
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:22.962 [XNIO-1 task-1] - [513362269036351488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131102948
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362269036351488
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:38:22.972 [XNIO-1 task-5] - [513362269241872384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131102957
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362269241872384
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:38:24.239 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 2 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:38:24.239 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 3 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 2 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:38:25.305 [XNIO-1 task-5] - [513362269241872384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：16ms , start = 1637131105286
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362269241872384
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:25.326 [XNIO-1 task-5] - [513362269241872384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_18":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_19":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_20":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_10":"ffcc57a6-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"000b5919-0f8b-11ec-ab08-00163e2e6a36","PARAM_14":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_15":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_16":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"489732934153011200","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , '489732934153011200' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ffcc57a6-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , '000b5919-0f8b-11ec-ab08-00163e2e6a36' , 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131105308
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362269241872384
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:25.376 [XNIO-1 task-5] - [513362269241872384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产审批","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产审批' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：28ms , start = 1637131105345
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362269241872384
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:25.420 [XNIO-1 task-1] - [513362269036351488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：15ms , start = 1637131105400
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362269036351488
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:25.441 [XNIO-1 task-1] - [513362269036351488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_18":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_19":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_20":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_10":"ffcc57a6-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"000b5919-0f8b-11ec-ab08-00163e2e6a36","PARAM_14":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_15":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_16":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"489732934153011200","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , '489732934153011200' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ffcc57a6-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , '000b5919-0f8b-11ec-ab08-00163e2e6a36' , 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131105423
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362269036351488
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:25.501 [XNIO-1 task-5] - [513362269241872384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"同意","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '同意' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637131105439
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362269241872384
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:25.528 [XNIO-1 task-1] - [513362269036351488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"同意","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '同意' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131105499
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362269036351488
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:25.534 [XNIO-1 task-5] - [513362269241872384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"拒绝","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '拒绝' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131105507
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362269241872384
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:25.554 [XNIO-1 task-1] - [513362269036351488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"拒绝","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '拒绝' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131105531
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362269036351488
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:25.560 [XNIO-1 task-5] - [513362269241872384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/approval/asset_register_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/approval/asset_register_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131105540
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362269241872384
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:25.583 [XNIO-1 task-1] - [513362269036351488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/approval/asset_register_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/approval/asset_register_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131105560
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362269036351488
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:26.296 [XNIO-1 task-1] - [513362283825467392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：16ms , start = 1637131106275
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：513362283825467392
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:38:26.346 [XNIO-1 task-1] - [513362284047765504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：15ms , start = 1637131106328
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362284047765504
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:38:26.368 [XNIO-1 task-1] - [513362284047765504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：20ms , start = 1637131106346
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362284047765504
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

14:38:26.374 [XNIO-1 task-1] - [513362284047765504] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 4ms
14:38:26.433 [XNIO-1 task-5] - [513362284425252864] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131106418
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：513362284425252864
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

14:38:26.560 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND status = 'approval')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND status = 'approval')) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131106547
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362284962123776
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:38:27.470 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"public_show","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'public_show' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：13ms , start = 1637131107452
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362284962123776
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:27.498 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：17ms , start = 1637131107473
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362284962123776
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:27.538 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"个人资产","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '个人资产' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131107512
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362284962123776
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:27.572 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/daily_management/myAsset_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/daily_management/myAsset_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131107551
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362284962123776
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:27.574 [XNIO-1 task-1] - [513362284047765504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"public_show","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'public_show' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：16ms , start = 1637131107550
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362284047765504
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:27.592 [XNIO-1 task-1] - [513362284047765504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637131107577
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362284047765504
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:28.283 [XNIO-1 task-1] - [513362292172132352] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND use_user_id = 'E001')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND use_user_id = 'E001')) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131108266
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362292172132352
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:38:28.393 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND use_user_id = 'E001')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND use_user_id = 'E001')) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131108379
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362292650283008
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:38:28.909 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_tranfer","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_tranfer' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131108889
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513362292650283008
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:38:28.934 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产转移","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产转移' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131108921
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362292650283008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:28.976 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_tranfer","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_tranfer' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：11ms , start = 1637131108962
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513362284962123776
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:38:28.983 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131108963
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362292650283008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.004 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"调出使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '调出使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131108991
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362284962123776
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.004 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"调出使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '调出使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131108991
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362292650283008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.021 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"调入使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '调入使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131109008
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362292650283008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.021 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"调入使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '调入使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131109007
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362284962123776
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.037 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"转移说明","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '转移说明' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131109024
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362284962123776
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.040 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"转移说明","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '转移说明' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131109024
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362292650283008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.068 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：21ms , start = 1637131109042
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362292650283008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.070 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：24ms , start = 1637131109041
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362284962123776
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.097 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"单据","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '单据' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131109083
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362284962123776
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.097 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"单据","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '单据' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：16ms , start = 1637131109079
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362292650283008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:29.120 [XNIO-1 task-5] - [513362284962123776] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_tranfer/asset_tranfer_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_tranfer/asset_tranfer_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131109099
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362284962123776
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:29.132 [XNIO-1 task-1] - [513362292650283008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_tranfer/asset_tranfer_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_tranfer/asset_tranfer_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：18ms , start = 1637131109099
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362292650283008
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:30.488 [XNIO-1 task-5] - [513362301139554304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_tranfer","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_tranfer'
┣ 结果： 
┣━ 耗时：23ms , start = 1637131110463
┣━ 返回：RcdSet,size=25
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetTranferServiceImpl.queryPagedList(AssetTranferServiceImpl.java:500)
┣ TID：513362301139554304
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:30.520 [XNIO-1 task-1] - [513362301433155584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_tranfer","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_tranfer'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131110500
┣━ 返回：RcdSet,size=25
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetTranferServiceImpl.queryPagedList(AssetTranferServiceImpl.java:500)
┣ TID：513362301433155584
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:30.549 [XNIO-1 task-5] - [513362301139554304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_tranfer t WHERE t.deleted = :P... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_tranfer t
WHERE t.deleted = ? AND t.tenant_id = ? AND t.originator_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_tranfer t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND t.originator_id = 'E001' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131110535
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetTranferServiceImpl.queryPagedList(AssetTranferServiceImpl.java:500)
┣ TID：513362301139554304
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_tranfer t WHERE t.deleted = :P... ] ━━━━━ 

14:38:30.550 [XNIO-1 task-1] - [513362301433155584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_tranfer t WHERE t.deleted = :P... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_tranfer t
WHERE t.deleted = ? AND t.tenant_id = ? AND t.originator_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_tranfer t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND t.originator_id = 'E001' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131110535
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetTranferServiceImpl.queryPagedList(AssetTranferServiceImpl.java:500)
┣ TID：513362301433155584
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_tranfer t WHERE t.deleted = :P... ] ━━━━━ 

14:38:31.254 [XNIO-1 task-5] - [513362301139554304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：18ms , start = 1637131111231
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362301139554304
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:31.279 [XNIO-1 task-5] - [513362301139554304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131111258
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362301139554304
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:31.374 [XNIO-1 task-5] - [513362301139554304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131111352
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513362301139554304
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

14:38:31.398 [XNIO-1 task-5] - [513362301139554304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"分类查询资产","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '分类查询资产' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131111384
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362301139554304
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:31.431 [XNIO-1 task-1] - [513362301433155584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：14ms , start = 1637131111412
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362301433155584
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:31.450 [XNIO-1 task-1] - [513362301433155584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131111433
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362301433155584
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:31.473 [XNIO-1 task-1] - [513362301433155584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131111455
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513362301433155584
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

14:38:31.487 [XNIO-1 task-5] - [513362301139554304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：16ms , start = 1637131111459
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362301139554304
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:31.511 [XNIO-1 task-5] - [513362301139554304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：19ms , start = 1637131111489
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362301139554304
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:31.552 [XNIO-1 task-5] - [513362301139554304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：10ms , start = 1637131111538
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362301139554304
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:31.783 [XNIO-1 task-1] - [513362301433155584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：13ms , start = 1637131111766
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362301433155584
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:31.806 [XNIO-1 task-1] - [513362301433155584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637131111788
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362301433155584
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:38:32.855 [XNIO-1 task-5] - [513362311285575680] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：19ms , start = 1637131112827
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362311285575680
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:32.954 [XNIO-1 task-5] - [513362311776309248] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637131112939
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：513362311776309248
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:38:32.988 [XNIO-1 task-5] - [513362311927304192] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131112975
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362311927304192
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:38:33.014 [XNIO-1 task-5] - [513362311927304192] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：15ms , start = 1637131112989
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362311927304192
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

14:38:33.017 [XNIO-1 task-5] - [513362311927304192] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 2ms
14:38:33.077 [XNIO-1 task-5] - [513362312254459904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：10ms , start = 1637131113053
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：513362312254459904
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

14:38:33.164 [XNIO-1 task-5] - [513362312669696000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND status = 'complete')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND status = 'complete')) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131113153
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362312669696000
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:38:33.290 [XNIO-1 task-5] - [513362313185595392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：15ms , start = 1637131113274
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：513362313185595392
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:38:33.329 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637131113312
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362313340784640
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:38:33.343 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：10ms , start = 1637131113330
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362313340784640
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

14:38:33.345 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 0ms
14:38:33.418 [XNIO-1 task-5] - [513362313726660608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131113403
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：513362313726660608
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

14:38:33.555 [XNIO-1 task-5] - [513362314309668864] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND status = 'complete')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001'
		AND status = 'complete')) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131113543
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362314309668864
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:38:33.763 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：11ms , start = 1637131113751
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362315182084096
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:35.463 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_change_financial","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_change_financial' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：15ms , start = 1637131115447
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513362315182084096
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:38:35.524 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_data_change/asset_data_change_list.html#dtapprovaleam_asset_change_financialtrue"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_data_change/asset_data_change_list.html#dtapprovaleam_asset_change_financialtrue' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131115503
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362315182084096
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:35.544 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_data_change/asset_data_change_list.html#dtapprovaleam_asset_change_financialtrue"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_data_change/asset_data_change_list.html#dtapprovaleam_asset_change_financialtrue' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：16ms , start = 1637131115526
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362315182084096
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:35.560 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( dimension = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_5":"1","PARAM_4":"financial","PARAM_3":"approval","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'approval' ) AND ( dimension = 'financial' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：11ms , start = 1637131115548
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362315182084096
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:35.576 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131115561
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513362315182084096
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

14:38:35.593 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：13ms , start = 1637131115579
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362315182084096
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:35.624 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：20ms , start = 1637131115597
┣━ 返回：RcdSet,size=26
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.buildingHierarchicalRelationships(CatalogServiceImpl.java:399)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:277)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362315182084096
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:35.659 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据变更","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据变更' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131115645
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362315182084096
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:35.682 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131115668
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362315182084096
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:35.702 [XNIO-1 task-5] - [513362315182084096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131115685
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362315182084096
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:38:35.711 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_change_financial","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_change_financial' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131115689
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513362313340784640
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:38:35.728 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_data_change/asset_data_change_list.html#dtapprovaleam_asset_change_financialtrue"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_data_change/asset_data_change_list.html#dtapprovaleam_asset_change_financialtrue' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131115713
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362313340784640
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:35.743 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_data_change/asset_data_change_list.html#dtapprovaleam_asset_change_financialtrue"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_data_change/asset_data_change_list.html#dtapprovaleam_asset_change_financialtrue' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：10ms , start = 1637131115730
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362313340784640
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:38:35.760 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( dimension = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_5":"1","PARAM_4":"financial","PARAM_3":"approval","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'approval' ) AND ( dimension = 'financial' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：11ms , start = 1637131115746
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362313340784640
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:38:35.775 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131115761
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513362313340784640
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

14:38:35.791 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：12ms , start = 1637131115777
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362313340784640
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:35.810 [XNIO-1 task-1] - [513362313340784640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：16ms , start = 1637131115792
┣━ 返回：RcdSet,size=26
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.buildingHierarchicalRelationships(CatalogServiceImpl.java:399)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:277)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362313340784640
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:38:39.740 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_change","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_change'
┣ 结果： 
┣━ 耗时：15ms , start = 1637131119718
┣━ 返回：RcdSet,size=30
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:820)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:39.783 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_change","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_change'
┣ 结果： 
┣━ 耗时：18ms , start = 1637131119763
┣━ 返回：RcdSet,size=30
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:820)
┣ TID：513362340150775808
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:39.806 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"chs_change_approver","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'chs_change_approver'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131119788
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:332)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:396)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:39.823 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"chs_change_instance","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'chs_change_instance'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131119808
┣━ 返回：RcdSet,size=23
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:332)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:396)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:39.849 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"chs_change_approver","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'chs_change_approver'
┣ 结果： 
┣━ 耗时：13ms , start = 1637131119834
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:332)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:396)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
┣ TID：513362340150775808
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:38:39.862 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_data_change t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_data_change t
WHERE t.deleted = ? AND t.tenant_id = ? AND change_type = ? AND status = ? AND (t.status = ? AND (EXISTS (
				SELECT 1
				FROM (
					SELECT *
					FROM hrm_employee
					WHERE deleted = ? AND tenant_id = ? ) t_0
					JOIN (
						SELECT *
						FROM chs_change_approver
						WHERE approver_type = ? AND deleted = ? ) t_1
					ON t_1.approver_id = t_0.id
					JOIN (
						SELECT *
						FROM chs_change_instance
						WHERE deleted = ? AND tenant_id = ? ) t_2
					ON t_2.id = t_1.instance_id
				WHERE t.change_instance_id = t_2.id
					AND t_0.id = ? )
			OR EXISTS (
				SELECT 1
				FROM (
					SELECT *
					FROM sys_busi_role
					WHERE deleted = ? ) t_0
					JOIN (
						SELECT *
						FROM chs_change_approver
						WHERE approver_type = ? AND deleted = ? ) t_1
					ON t_1.approver_id = t_0.id
					JOIN (
						SELECT *
						FROM chs_change_instance
						WHERE deleted = ? AND tenant_id = ? ) t_2
					ON t_2.id = t_1.instance_id
				WHERE t.change_instance_id = t_2.id
					AND t_0.code = ? )))) A
┣ 参数：{"PARAM_1":0,"PARAM_17":"T001","PARAM_18":"eam_asset_change_financial","PARAM_10":0,"PARAM_11":"T001","PARAM_12":"E001","PARAM_13":0,"PARAM_14":"busi_role","PARAM_15":0,"PARAM_16":0,"PARAM_9":0,"PARAM_8":"employee","PARAM_7":"T001","PARAM_6":0,"PARAM_5":"E001","PARAM_4":"approval","PARAM_3":"eam_asset_change_financial","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_data_change t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND change_type = 'eam_asset_change_financial' AND status = 'approval' AND (t.status = 'E001' AND (EXISTS (
				SELECT 1
				FROM (
					SELECT *
					FROM hrm_employee
					WHERE deleted = 0 AND tenant_id = 'T001' ) t_0
					JOIN (
						SELECT *
						FROM chs_change_approver
						WHERE approver_type = 'employee' AND deleted = 0 ) t_1
					ON t_1.approver_id = t_0.id
					JOIN (
						SELECT *
						FROM chs_change_instance
						WHERE deleted = 0 AND tenant_id = 'T001' ) t_2
					ON t_2.id = t_1.instance_id
				WHERE t.change_instance_id = t_2.id
					AND t_0.id = 'E001' )
			OR EXISTS (
				SELECT 1
				FROM (
					SELECT *
					FROM sys_busi_role
					WHERE deleted = 0 ) t_0
					JOIN (
						SELECT *
						FROM chs_change_approver
						WHERE approver_type = 'busi_role' AND deleted = 0 ) t_1
					ON t_1.approver_id = t_0.id
					JOIN (
						SELECT *
						FROM chs_change_instance
						WHERE deleted = 0 AND tenant_id = 'T001' ) t_2
					ON t_2.id = t_1.instance_id
				WHERE t.change_instance_id = t_2.id
					AND t_0.code = 'eam_asset_change_financial' )))) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637131119847
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:820)
┣ TID：513362340146581504
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_data_change t WHERE t.deleted ... ] ━━━━━ 

14:38:39.867 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_data_change t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_data_change t
WHERE t.deleted = ? AND t.tenant_id = ? AND change_type = ? AND status = ? AND (t.status = ? AND (EXISTS (
				SELECT 1
				FROM (
					SELECT *
					FROM hrm_employee
					WHERE deleted = ? AND tenant_id = ? ) t_0
					JOIN (
						SELECT *
						FROM chs_change_approver
						WHERE approver_type = ? AND deleted = ? ) t_1
					ON t_1.approver_id = t_0.id
					JOIN (
						SELECT *
						FROM chs_change_instance
						WHERE deleted = ? AND tenant_id = ? ) t_2
					ON t_2.id = t_1.instance_id
				WHERE t.change_instance_id = t_2.id
					AND t_0.id = ? )
			OR EXISTS (
				SELECT 1
				FROM (
					SELECT *
					FROM sys_busi_role
					WHERE deleted = ? ) t_0
					JOIN (
						SELECT *
						FROM chs_change_approver
						WHERE approver_type = ? AND deleted = ? ) t_1
					ON t_1.approver_id = t_0.id
					JOIN (
						SELECT *
						FROM chs_change_instance
						WHERE deleted = ? AND tenant_id = ? ) t_2
					ON t_2.id = t_1.instance_id
				WHERE t.change_instance_id = t_2.id
					AND t_0.code = ? )))) A
┣ 参数：{"PARAM_1":0,"PARAM_17":"T001","PARAM_18":"eam_asset_change_financial","PARAM_10":0,"PARAM_11":"T001","PARAM_12":"E001","PARAM_13":0,"PARAM_14":"busi_role","PARAM_15":0,"PARAM_16":0,"PARAM_9":0,"PARAM_8":"employee","PARAM_7":"T001","PARAM_6":0,"PARAM_5":"E001","PARAM_4":"approval","PARAM_3":"eam_asset_change_financial","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_data_change t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND change_type = 'eam_asset_change_financial' AND status = 'approval' AND (t.status = 'E001' AND (EXISTS (
				SELECT 1
				FROM (
					SELECT *
					FROM hrm_employee
					WHERE deleted = 0 AND tenant_id = 'T001' ) t_0
					JOIN (
						SELECT *
						FROM chs_change_approver
						WHERE approver_type = 'employee' AND deleted = 0 ) t_1
					ON t_1.approver_id = t_0.id
					JOIN (
						SELECT *
						FROM chs_change_instance
						WHERE deleted = 0 AND tenant_id = 'T001' ) t_2
					ON t_2.id = t_1.instance_id
				WHERE t.change_instance_id = t_2.id
					AND t_0.id = 'E001' )
			OR EXISTS (
				SELECT 1
				FROM (
					SELECT *
					FROM sys_busi_role
					WHERE deleted = 0 ) t_0
					JOIN (
						SELECT *
						FROM chs_change_approver
						WHERE approver_type = 'busi_role' AND deleted = 0 ) t_1
					ON t_1.approver_id = t_0.id
					JOIN (
						SELECT *
						FROM chs_change_instance
						WHERE deleted = 0 AND tenant_id = 'T001' ) t_2
					ON t_2.id = t_1.instance_id
				WHERE t.change_instance_id = t_2.id
					AND t_0.code = 'eam_asset_change_financial' )))) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131119855
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:820)
┣ TID：513362340150775808
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_data_change t WHERE t.deleted ... ] ━━━━━ 

14:38:54.242 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 15 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 5 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:38:54.242 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 15 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 5 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:38:54.746 [XNIO-1 task-5] - [513362340150775808] - INFO  o.g.f.w.o.l.UserLogoutHandler - [logout,33] - username: admin  is offline now
14:38:54.749 [XNIO-1 task-5] - [513362340150775808] - INFO  o.g.f.w.o.l.UserLogoutSuccessHandler - [onLogoutSuccess,42] - username: admin  is offline now
14:39:06.860 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"dptest"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = 'dptest' ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637131146839
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:278)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362340150775808
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 

14:39:06.884 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = ? ) A
┣ 参数：{"PARAM_1":"dptest"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = 'dptest' ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637131146866
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362340150775808
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 

14:39:06.905 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_user WHERE name = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"dptest","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_user WHERE name = 'dptest' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：17ms , start = 1637131146886
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362340150775808
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 

14:39:06.932 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"509286903699214336","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '509286903699214336' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131146915
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

14:39:06.968 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"509286903699214336"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '509286903699214336' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：45ms , start = 1637131146917
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

14:39:07.045 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"509286903699214336","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( '509286903699214336' )
┣ 结果： 
┣━ 耗时：129ms , start = 1637131146916
┣━ 返回：RcdSet,size=530
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 

14:39:07.109 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 
┣ 语句：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= ? ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"509286903699214336","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( '509286903699214336' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：190ms , start = 1637131146919
┣━ 返回：RcdSet,size=504
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 

14:39:07.137 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"491961971495665664"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '491961971495665664' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637131147126
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

14:39:07.151 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'T001' )
┣ 结果： 
┣━ 耗时：24ms , start = 1637131147127
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 

14:39:07.166 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"490923211228188672","PARAM_8":"490923311769849856","PARAM_10":"490638744550907904","PARAM_7":"491342618928611328","PARAM_6":"487660170021703680","PARAM_5":"501416282168492032","PARAM_4":"[]","PARAM_3":"482877676047040511"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '482877676047040511' , '[]' , '501416282168492032' , '487660170021703680' , '491342618928611328' , '490923311769849856' , '490923211228188672' , '490638744550907904' )
┣ 结果： 
┣━ 耗时：38ms , start = 1637131147127
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:39:07.176 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"490923970208468992","PARAM_18":"479956459375820800","PARAM_19":"494597317773492224","PARAM_31":"489818737319346176","PARAM_10":"478603507688013824","PARAM_11":"487660170021703680","PARAM_12":"479008663701291008","PARAM_13":"485936556654198784","PARAM_14":"478585173336653824","PARAM_15":"480377913464586240","PARAM_16":"488696580300341248","PARAM_30":"485888529612668928","PARAM_9":"480389130912530432","PARAM_8":"498885073529995264","PARAM_7":"474281113125126144","PARAM_6":"478080872159903744","PARAM_5":"494904448380829696","PARAM_4":"483218056047230976","PARAM_2":"479388218479869952","PARAM_1":0,"PARAM_28":"473609125796773888","PARAM_29":"490803384081711104","PARAM_20":"502195284776849408","PARAM_21":"[]","PARAM_22":"475954735753461760","PARAM_23":"490924065570164737","PARAM_24":"490888724289159168","PARAM_25":"498582527229820928","PARAM_26":"480137007553576960","PARAM_27":"477956217075924992"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '479388218479869952' , null , '483218056047230976' , '494904448380829696' , '478080872159903744' , '474281113125126144' , '498885073529995264' , '480389130912530432' , '478603507688013824' , '487660170021703680' , '479008663701291008' , '485936556654198784' , '478585173336653824' , '480377913464586240' , '488696580300341248' , '490923970208468992' , '479956459375820800' , '494597317773492224' , '502195284776849408' , '[]' , '475954735753461760' , '490924065570164737' , '490888724289159168' , '498582527229820928' , '480137007553576960' , '477956217075924992' , '473609125796773888' , '490803384081711104' , '485888529612668928' , '489818737319346176' )
┣ 结果： 
┣━ 耗时：48ms , start = 1637131147128
┣━ 返回：RcdSet,size=28
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:39:07.182 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"490803523777200128","PARAM_10":"498885073529995264","PARAM_11":"486551839098011648","PARAM_12":"480492959255494656","PARAM_13":"501389626531909632","PARAM_14":"482581320229191680","PARAM_15":"480488576534970368","PARAM_16":"480481725315547136","PARAM_9":"481563563521998848","PARAM_8":"478956684543262720","PARAM_7":"490803286488645632","PARAM_6":"472331321499189248","PARAM_5":"486313018175520768","PARAM_4":"[]","PARAM_3":"505300850025955328"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '505300850025955328' , '[]' , '486313018175520768' , '472331321499189248' , '490803286488645632' , '478956684543262720' , '481563563521998848' , '498885073529995264' , '486551839098011648' , '480492959255494656' , '501389626531909632' , '482581320229191680' , '480488576534970368' , '480481725315547136' , '490803523777200128' )
┣ 结果： 
┣━ 耗时：52ms , start = 1637131147129
┣━ 返回：RcdSet,size=14
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:39:07.234 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"501653361645326336","PARAM_31":"501438184488439808","PARAM_32":"498472886441353216","PARAM_33":"498472737438703616","PARAM_34":"498780101593268225","PARAM_35":"498963858317115392","PARAM_36":"499939063264968705","PARAM_37":"494597331069435904","PARAM_38":"490638839023411200","PARAM_30":"501653165884575744","PARAM_28":"498780092948807681","PARAM_29":"472814706734661633","PARAM_20":"497513282840559617","PARAM_21":"498780063144083457","PARAM_22":"490920319637262337","PARAM_23":"501813825113165825","PARAM_24":"498472430189158400","PARAM_25":"498808937571680257","PARAM_26":"498809674066296832","PARAM_27":"490909222070915073","PARAM_17":"501813812832243713","PARAM_18":"501653323472965633","PARAM_19":"499940744069382145","PARAM_97":"491342702357512192","PARAM_10":"499954030739460097","PARAM_98":"498963895084384257","PARAM_11":"498971349855764481","PARAM_99":"490920008524763136","PARAM_12":"497513009569071104","PARAM_13":"497490986344120320","PARAM_14":"501390061263130624","PARAM_15":"499939051860656128","PARAM_16":"490925002938388480","PARAM_90":"501424056243851264","PARAM_91":"498809056404701185","PARAM_92":"501813837247287297","PARAM_93":"498963847839744001","PARAM_94":"498971162877886465","PARAM_95":"480492972874399744","PARAM_96":"490908208253112321","PARAM_86":"475955437510852608","PARAM_87":"498963891439534081","PARAM_88":"498963844891148289","PARAM_89":"503188930321977344","PARAM_80":"499954055192252417","PARAM_81":"497513389245857793","PARAM_82":"501653226060255233","PARAM_83":"501813846588002304","PARAM_84":"497513348733075457","PARAM_85":"504683060067840001","PARAM_103":"480486574191026176","PARAM_104":"480377925653233664","PARAM_101":"490915625305116672","PARAM_102":"472810899074187265","PARAM_107":"474155529355132929","PARAM_108":"471986431431016449","PARAM_105":"497513458128912385","PARAM_106":"499940736691601409","PARAM_75":"498472529019543553","PARAM_76":"498809287695400961","PARAM_77":"498473113529360385","PARAM_109":"498970914482814977","PARAM_78":"498963890651004929","PARAM_79":"499954026838757376","PARAM_70":"498963846124273665","PARAM_71":"498779937252048897","PARAM_72":"478625404161097728","PARAM_73":"504060697101996032","PARAM_74":"491206513122086913","PARAM_9":"502170156177297409","PARAM_8":"498962211822108672","PARAM_7":"473227868306931712","PARAM_6":"478626411003772928","PARAM_5":"498474569439387649","PARAM_110":"499939054448541696","PARAM_4":"498473196719185920","PARAM_111":"491206464543657984","PARAM_3":"504412977160523776","PARAM_2":0,"PARAM_1":0,"PARAM_64":"498970926130397185","PARAM_65":"498472318377402368","PARAM_66":"490909866307620865","PARAM_67":"498809154048098304","PARAM_68":"498963856643588097","PARAM_69":"478956698443186176","PARAM_60":"497513204994277377","PARAM_61":"498809237418278912","PARAM_62":"499954038733803521","PARAM_63":"490907983723630592","PARAM_100":"478625384087158785","PARAM_53":"498472974811144192","PARAM_54":"490908428638621696","PARAM_55":"498474299326210049","PARAM_56":"499954049295060993","PARAM_57":"498780083792642049","PARAM_58":"478625395923484673","PARAM_59":"473550018758836225","PARAM_50":"498809191108968448","PARAM_51":"501438191648116737","PARAM_52":"498808864725008384","PARAM_114":"499939072068812801","PARAM_115":"478922696420229120","PARAM_112":"496813531019083776","PARAM_113":"478603521634074624","PARAM_118":"499939062635823104","PARAM_119":"499939072706347008","PARAM_116":"499954050071007232","PARAM_117":"472811546343374849","PARAM_42":"481338876485435392","PARAM_43":"501438723657830401","PARAM_44":"501653242430623745","PARAM_45":"499940724104495105","PARAM_46":"497514241515847681","PARAM_47":"498962214124781568","PARAM_48":"498962218231005184","PARAM_49":"483567801252978688","PARAM_40":"501653278359031809","PARAM_41":"498963857323065345","PARAM_121":"477956229818220544","PARAM_122":"498582106398523393","PARAM_120":"485888540979232768"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '504412977160523776' , '498473196719185920' , '498474569439387649' , '478626411003772928' , '473227868306931712' , '498962211822108672' , '502170156177297409' , '499954030739460097' , '498971349855764481' , '497513009569071104' , '497490986344120320' , '501390061263130624' , '499939051860656128' , '490925002938388480' , '501813812832243713' , '501653323472965633' , '499940744069382145' , '497513282840559617' , '498780063144083457' , '490920319637262337' , '501813825113165825' , '498472430189158400' , '498808937571680257' , '498809674066296832' , '490909222070915073' , '498780092948807681' , '472814706734661633' , '501653165884575744' , '501438184488439808' , '498472886441353216' , '498472737438703616' , '498780101593268225' , '498963858317115392' , '499939063264968705' , '494597331069435904' , '490638839023411200' , '501653361645326336' , '501653278359031809' , '498963857323065345' , '481338876485435392' , '501438723657830401' , '501653242430623745' , '499940724104495105' , '497514241515847681' , '498962214124781568' , '498962218231005184' , '483567801252978688' , '498809191108968448' , '501438191648116737' , '498808864725008384' , '498472974811144192' , '490908428638621696' , '498474299326210049' , '499954049295060993' , '498780083792642049' , '478625395923484673' , '473550018758836225' , '497513204994277377' , '498809237418278912' , '499954038733803521' , '490907983723630592' , '498970926130397185' , '498472318377402368' , '490909866307620865' , '498809154048098304' , '498963856643588097' , '478956698443186176' , '498963846124273665' , '498779937252048897' , '478625404161097728' , '504060697101996032' , '491206513122086913' , '498472529019543553' , '498809287695400961' , '498473113529360385' , '498963890651004929' , '499954026838757376' , '499954055192252417' , '497513389245857793' , '501653226060255233' , '501813846588002304' , '497513348733075457' , '504683060067840001' , '475955437510852608' , '498963891439534081' , '498963844891148289' , '503188930321977344' , '501424056243851264' , '498809056404701185' , '501813837247287297' , '498963847839744001' , '498971162877886465' , '480492972874399744' , '490908208253112321' , '491342702357512192' , '498963895084384257' , '490920008524763136' , '478625384087158785' , '490915625305116672' , '472810899074187265' , '480486574191026176' , '480377925653233664' , '497513458128912385' , '499940736691601409' , '474155529355132929' , '471986431431016449' , '498970914482814977' , '499939054448541696' , '491206464543657984' , '496813531019083776' , '478603521634074624' , '499939072068812801' , '478922696420229120' , '499954050071007232' , '472811546343374849' , '499939062635823104' , '499939072706347008' , '485888540979232768' , '477956229818220544' , '498582106398523393' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：104ms , start = 1637131147129
┣━ 返回：RcdSet,size=219
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:39:07.245 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"477956221781934080","PARAM_31":"478956691585499136","PARAM_32":"475954740530774016","PARAM_33":"485936556943605760","PARAM_34":"479008663990697984","PARAM_35":"475686686903238656","PARAM_36":"481338869564833792","PARAM_37":"478603514990297088","PARAM_38":"477956217403080704","PARAM_30":"479329284624744448","PARAM_28":"478080877377617920","PARAM_29":"479330038903209984","PARAM_20":"485888535333699584","PARAM_21":"480377919596658688","PARAM_22":"480137007910092800","PARAM_23":"474281120842645504","PARAM_24":"498885085060136960","PARAM_25":"479598112373997568","PARAM_26":"485936562941460480","PARAM_27":"479388227191439360","PARAM_17":"480488583736590336","PARAM_18":"478080879135031296","PARAM_19":"498885082019266560","PARAM_97":"498769910416015360","PARAM_10":"494904448682819584","PARAM_98":"472818410917462016","PARAM_11":"498581971681673216","PARAM_99":"486551845917949952","PARAM_12":"473609132373442560","PARAM_13":"477956223535153152","PARAM_14":"463397133957988352","PARAM_15":"480389135564013568","PARAM_16":"478585179489697792","PARAM_90":"475954736080617472","PARAM_91":"478626344431779840","PARAM_92":"494597321997156352","PARAM_93":"472331326201004032","PARAM_94":"498769993710698497","PARAM_95":"474155093021687808","PARAM_96":"478956692394999808","PARAM_86":"486313023716196352","PARAM_87":"480481731707666432","PARAM_88":"478922689172471808","PARAM_89":"488696593290100736","PARAM_80":"479330034058788864","PARAM_81":"483218060644188160","PARAM_82":"475686681035407360","PARAM_83":"479330040773869568","PARAM_84":"473609130683138048","PARAM_85":"486313025783988224","PARAM_103":"502170004054085633","PARAM_104":"494597324215943168","PARAM_101":"494597318092259328","PARAM_102":"480377918011211776","PARAM_107":"494904452583522304","PARAM_108":"478585177820364800","PARAM_105":"483218062279966720","PARAM_106":"475954742317547520","PARAM_75":"486551844089233408","PARAM_76":"471985490283724800","PARAM_77":"479959570941214720","PARAM_109":"480488581421334528","PARAM_78":"478585173638643712","PARAM_79":"478080872541585408","PARAM_70":"479956466397085696","PARAM_71":"480377920209027072","PARAM_72":"480389137287872512","PARAM_73":"481563571654754304","PARAM_74":"504682762972704768","PARAM_9":"494597323653906432","PARAM_8":"480137014788751360","PARAM_7":"488696580921098240","PARAM_6":"481338866817564672","PARAM_5":"478603508019363840","PARAM_110":"480137012393803776","PARAM_4":"479956464534814720","PARAM_111":"485888533777612800","PARAM_3":"479959568621764608","PARAM_2":0,"PARAM_1":0,"PARAM_64":"485936561238573056","PARAM_65":"480488583120027648","PARAM_66":"478603515636219904","PARAM_67":"498885086280679424","PARAM_68":"485888529902075904","PARAM_69":"488696589599113216","PARAM_60":"473609133057114112","PARAM_61":"479388229263425536","PARAM_62":"478603513186746368","PARAM_63":"479959570282708992","PARAM_100":"478922689868726272","PARAM_125":"479329291742478336","PARAM_126":"478922687092097024","PARAM_123":"475686685250682880","PARAM_124":"490924383968169985","PARAM_129":"478178015856033792","PARAM_127":"479329289888595968","PARAM_128":"489815783782744064","PARAM_53":"478585180114649088","PARAM_54":"479008668327608320","PARAM_55":"479956459719753728","PARAM_56":"474281122537144320","PARAM_57":"480377913779159040","PARAM_58":"479598110457200640","PARAM_59":"472037131183718400","PARAM_50":"474281113531973632","PARAM_51":"480481730000584704","PARAM_52":"472819614665932801","PARAM_130":"472814616229969920","PARAM_114":"483218056353415168","PARAM_115":"472811438801420289","PARAM_112":"479008669908860928","PARAM_113":"480492966025101312","PARAM_118":"oauth","PARAM_119":"478956689802919936","PARAM_116":"480492966641664000","PARAM_117":"472331327836782592","PARAM_42":"480389131239686144","PARAM_43":"473609126128123904","PARAM_44":"479330041516261376","PARAM_45":"481563568920068096","PARAM_46":"474154919352336384","PARAM_47":"480137014188965888","PARAM_48":"480492964435460096","PARAM_49":"479388230056148992","PARAM_40":"481338868780498944","PARAM_41":"479388218932854784","PARAM_121":"494904454114443264","PARAM_122":"494904454714228736","PARAM_120":"481563570933334016"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479959568621764608' , '479956464534814720' , '478603508019363840' , '481338866817564672' , '488696580921098240' , '480137014788751360' , '494597323653906432' , '494904448682819584' , '498581971681673216' , '473609132373442560' , '477956223535153152' , '463397133957988352' , '480389135564013568' , '478585179489697792' , '480488583736590336' , '478080879135031296' , '498885082019266560' , '485888535333699584' , '480377919596658688' , '480137007910092800' , '474281120842645504' , '498885085060136960' , '479598112373997568' , '485936562941460480' , '479388227191439360' , '478080877377617920' , '479330038903209984' , '479329284624744448' , '478956691585499136' , '475954740530774016' , '485936556943605760' , '479008663990697984' , '475686686903238656' , '481338869564833792' , '478603514990297088' , '477956217403080704' , '477956221781934080' , '481338868780498944' , '479388218932854784' , '480389131239686144' , '473609126128123904' , '479330041516261376' , '481563568920068096' , '474154919352336384' , '480137014188965888' , '480492964435460096' , '479388230056148992' , '474281113531973632' , '480481730000584704' , '472819614665932801' , '478585180114649088' , '479008668327608320' , '479956459719753728' , '474281122537144320' , '480377913779159040' , '479598110457200640' , '472037131183718400' , '473609133057114112' , '479388229263425536' , '478603513186746368' , '479959570282708992' , '485936561238573056' , '480488583120027648' , '478603515636219904' , '498885086280679424' , '485888529902075904' , '488696589599113216' , '479956466397085696' , '480377920209027072' , '480389137287872512' , '481563571654754304' , '504682762972704768' , '486551844089233408' , '471985490283724800' , '479959570941214720' , '478585173638643712' , '478080872541585408' , '479330034058788864' , '483218060644188160' , '475686681035407360' , '479330040773869568' , '473609130683138048' , '486313025783988224' , '486313023716196352' , '480481731707666432' , '478922689172471808' , '488696593290100736' , '475954736080617472' , '478626344431779840' , '494597321997156352' , '472331326201004032' , '498769993710698497' , '474155093021687808' , '478956692394999808' , '498769910416015360' , '472818410917462016' , '486551845917949952' , '478922689868726272' , '494597318092259328' , '480377918011211776' , '502170004054085633' , '494597324215943168' , '483218062279966720' , '475954742317547520' , '494904452583522304' , '478585177820364800' , '480488581421334528' , '480137012393803776' , '485888533777612800' , '479008669908860928' , '480492966025101312' , '483218056353415168' , '472811438801420289' , '480492966641664000' , '472331327836782592' , 'oauth' , '478956689802919936' , '481563570933334016' , '494904454114443264' , '494904454714228736' , '475686685250682880' , '490924383968169985' , '479329291742478336' , '478922687092097024' , '479329289888595968' , '489815783782744064' , '478178015856033792' , '472814616229969920' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：114ms , start = 1637131147129
┣━ 返回：RcdSet,size=168
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:39:07.258 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_8":"481338861117505536","PARAM_7":"479959564171608064","PARAM_6":"[]","PARAM_5":"498885073529995264","PARAM_4":"478922681358483456","PARAM_3":"492410573934297088"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '492410573934297088' , '478922681358483456' , '498885073529995264' , '[]' , '479959564171608064' , '481338861117505536' )
┣ 结果： 
┣━ 耗时：105ms , start = 1637131147153
┣━ 返回：RcdSet,size=5
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:39:07.286 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"478922691353509888","PARAM_31":"486551847209795584","PARAM_32":"478956693149974528","PARAM_33":"485888537137250304","PARAM_34":"479956468586512384","PARAM_35":"483218062917500928","PARAM_36":"480492967832846336","PARAM_37":"472036243182452736","PARAM_38":"479208678382108672","PARAM_30":"481563572455866368","PARAM_28":"472810496475529216","PARAM_29":"488696594527420416","PARAM_20":"479956467907035136","PARAM_21":"486551846547095552","PARAM_22":"475686688278970368","PARAM_23":"479598113862975488","PARAM_24":"485936563683852288","PARAM_25":"494597324853477376","PARAM_26":"486313029152014336","PARAM_27":"486313018553008128","PARAM_17":"479388413435314177","PARAM_18":"479330042220904448","PARAM_19":"486313027243606016","PARAM_97":"473609134411874304","PARAM_10":"477956224147521536","PARAM_98":"494903523763298304","PARAM_11":"485853808635678720","PARAM_99":"478603516361834496","PARAM_12":"475686687532384256","PARAM_13":"478603517087449088","PARAM_14":"480481733238587392","PARAM_15":"485888535908319232","PARAM_16":"479329295395717120","PARAM_90":"480137016143511552","PARAM_91":"480492959574261760","PARAM_92":"483218065169842176","PARAM_93":"472331321801179136","PARAM_94":"472331328520454144","PARAM_95":"486313026476048384","PARAM_96":"479008671368478720","PARAM_86":"494597325411319808","PARAM_87":"479388230924369920","PARAM_88":"479330042942324736","PARAM_89":"478625116503146496","PARAM_80":"482581320564736000","PARAM_81":"485936564942143488","PARAM_82":"480377921387626496","PARAM_83":"475954743139631104","PARAM_84":"472331329841659904","PARAM_85":"477956224856358912","PARAM_103":"486551847834746880","PARAM_104":"479959571725549568","PARAM_101":"479329294410055680","PARAM_102":"480481733892898816","PARAM_107":"486551839387418624","PARAM_108":"498770119770505217","PARAM_105":"478585180710240256","PARAM_106":"501389817515347968","PARAM_75":"hrm","PARAM_76":"478080881207017472","PARAM_77":"477956225548419072","PARAM_109":"480481725646897152","PARAM_78":"472331329199931392","PARAM_79":"480488586022486016","PARAM_70":"479329292388401152","PARAM_71":"479598105545670656","PARAM_72":"474281123879321600","PARAM_73":"494904455913799680","PARAM_74":"480488585066184704","PARAM_9":"480389138625855488","PARAM_8":"479598114576007168","PARAM_7":"481338870340780032","PARAM_6":"479329293776715776","PARAM_5":"485936564371718144","PARAM_110":"479008670655447040","PARAM_4":"481338871154475008","PARAM_111":"478922690648866816","PARAM_3":"478080879852257280","PARAM_2":0,"PARAM_1":0,"PARAM_64":"480488584403484672","PARAM_65":"479008671947292672","PARAM_66":"478585181314220032","PARAM_67":"481563563891097600","PARAM_68":"498770254759985153","PARAM_69":"479959573277442048","PARAM_60":"485888536512299008","PARAM_61":"478956684903972864","PARAM_62":"475686688891338752","PARAM_63":"479008672874233856","PARAM_100":"498885087492833280","PARAM_125":"488696595773128704","PARAM_126":"472357984110903296","PARAM_123":"483218063576006656","PARAM_124":"479598113124777984","PARAM_129":"474281123241787392","PARAM_127":"479956467156254720","PARAM_128":"478624924152365056","PARAM_53":"480492967241449472","PARAM_54":"486313028048912384","PARAM_55":"494904455314014208","PARAM_56":"480488576866320384","PARAM_57":"479330044003483648","PARAM_58":"478080880531734528","PARAM_59":"475954745446498304","PARAM_50":"480389137958961152","PARAM_51":"498885074154946560","PARAM_52":"479598115674914816","PARAM_130":"498885088876953600","PARAM_114":"480377920796229632","PARAM_115":"479956469668642816","PARAM_112":"498770477079068673","PARAM_113":"478956693833646080","PARAM_118":"486551848799436800","PARAM_119":"475686689822474240","PARAM_116":"488696599002742784","PARAM_117":"483218064226123776","PARAM_42":"481563573261172736","PARAM_43":"473609133728202752","PARAM_44":"479388232048443392","PARAM_45":"480137015552114688","PARAM_46":"480481732412309504","PARAM_47":"480389139313721344","PARAM_48":"475954743840079872","PARAM_49":"494904456811380736","PARAM_40":"eam","PARAM_41":"479959572333723648","PARAM_121":"488696597023031296","PARAM_122":"475954744494391296","PARAM_120":"474281124533633024"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478080879852257280' , '481338871154475008' , '485936564371718144' , '479329293776715776' , '481338870340780032' , '479598114576007168' , '480389138625855488' , '477956224147521536' , '485853808635678720' , '475686687532384256' , '478603517087449088' , '480481733238587392' , '485888535908319232' , '479329295395717120' , '479388413435314177' , '479330042220904448' , '486313027243606016' , '479956467907035136' , '486551846547095552' , '475686688278970368' , '479598113862975488' , '485936563683852288' , '494597324853477376' , '486313029152014336' , '486313018553008128' , '472810496475529216' , '488696594527420416' , '481563572455866368' , '486551847209795584' , '478956693149974528' , '485888537137250304' , '479956468586512384' , '483218062917500928' , '480492967832846336' , '472036243182452736' , '479208678382108672' , '478922691353509888' , 'eam' , '479959572333723648' , '481563573261172736' , '473609133728202752' , '479388232048443392' , '480137015552114688' , '480481732412309504' , '480389139313721344' , '475954743840079872' , '494904456811380736' , '480389137958961152' , '498885074154946560' , '479598115674914816' , '480492967241449472' , '486313028048912384' , '494904455314014208' , '480488576866320384' , '479330044003483648' , '478080880531734528' , '475954745446498304' , '485888536512299008' , '478956684903972864' , '475686688891338752' , '479008672874233856' , '480488584403484672' , '479008671947292672' , '478585181314220032' , '481563563891097600' , '498770254759985153' , '479959573277442048' , '479329292388401152' , '479598105545670656' , '474281123879321600' , '494904455913799680' , '480488585066184704' , 'hrm' , '478080881207017472' , '477956225548419072' , '472331329199931392' , '480488586022486016' , '482581320564736000' , '485936564942143488' , '480377921387626496' , '475954743139631104' , '472331329841659904' , '477956224856358912' , '494597325411319808' , '479388230924369920' , '479330042942324736' , '478625116503146496' , '480137016143511552' , '480492959574261760' , '483218065169842176' , '472331321801179136' , '472331328520454144' , '486313026476048384' , '479008671368478720' , '473609134411874304' , '494903523763298304' , '478603516361834496' , '498885087492833280' , '479329294410055680' , '480481733892898816' , '486551847834746880' , '479959571725549568' , '478585180710240256' , '501389817515347968' , '486551839387418624' , '498770119770505217' , '480481725646897152' , '479008670655447040' , '478922690648866816' , '498770477079068673' , '478956693833646080' , '480377920796229632' , '479956469668642816' , '488696599002742784' , '483218064226123776' , '486551848799436800' , '475686689822474240' , '474281124533633024' , '488696597023031296' , '475954744494391296' , '483218063576006656' , '479598113124777984' , '488696595773128704' , '472357984110903296' , '479956467156254720' , '478624924152365056' , '474281123241787392' , '498885088876953600' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：131ms , start = 1637131147154
┣━ 返回：RcdSet,size=177
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:39:07.344 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"486551850187751424","PARAM_31":"479959574523150336","PARAM_32":"481563576998297600","PARAM_33":"474281128295923712","PARAM_34":"480492970060021760","PARAM_35":"480137018328743936","PARAM_36":"486313032150941696","PARAM_37":"475686692922064896","PARAM_38":"474281129680044032","PARAM_30":"486551852519784448","PARAM_28":"477956226529886208","PARAM_29":"498890640633892865","PARAM_20":"472036556115279872","PARAM_21":"498885090605006848","PARAM_22":"486313032884944896","PARAM_23":"472331333301960704","PARAM_24":"480481737718104064","PARAM_25":"488696601678708736","PARAM_26":"478603519541116928","PARAM_27":"473609138954305536","PARAM_17":"479388233323511808","PARAM_18":"478922694239191040","PARAM_19":"481563575630954496","PARAM_97":"479598118665453568","PARAM_10":"485888540400418816","PARAM_98":"480389142883074048","PARAM_11":"498770298326220801","PARAM_99":"494904459806113792","PARAM_12":"478922681874382848","PARAM_13":"479330047379898368","PARAM_14":"474281126987300864","PARAM_15":"478080882322702336","PARAM_16":"479388239682076672","PARAM_90":"479959575810801664","PARAM_91":"481563577652609024","PARAM_92":"498885095445233664","PARAM_93":"478585183470092288","PARAM_94":"479956473208635392","PARAM_95":"480389141578645504","PARAM_96":"475686692318085120","PARAM_86":"478956697625296896","PARAM_87":"471986344285962240","PARAM_88":"480481738384998400","PARAM_89":"480488589365346304","PARAM_80":"481338874124042240","PARAM_81":"478603520921042944","PARAM_82":"480389143533191168","PARAM_83":"477956227867869184","PARAM_84":"478603518131830784","PARAM_85":"475686691072376832","PARAM_103":"479959564469403648","PARAM_104":"473609136769073152","PARAM_101":"479330045333078016","PARAM_102":"478922695711391744","PARAM_107":"480481734924697600","PARAM_108":"480481736321400832","PARAM_105":"480488587389829120","PARAM_106":"483218066432327680","PARAM_75":"480377922318761984","PARAM_76":"480492968805924864","PARAM_77":"485888539251179520","PARAM_109":"483218067728367616","PARAM_78":"479008675940270080","PARAM_79":"494597326321483776","PARAM_70":"478080885158051840","PARAM_71":"475954746797064192","PARAM_72":"480492971439947776","PARAM_73":"477956229193269248","PARAM_74":"479959576465113088","PARAM_9":"486551851525734400","PARAM_8":"478585184673857536","PARAM_7":"479956472495603712","PARAM_6":"485936567093821440","PARAM_5":"481338872328880128","PARAM_110":"481338861507575808","PARAM_4":"485936565877473280","PARAM_111":"478080883799097344","PARAM_3":"472036810977968129","PARAM_2":0,"PARAM_1":0,"PARAM_64":"478956696207622144","PARAM_65":"494597327642689536","PARAM_66":"479598119416233984","PARAM_67":"498885096808382464","PARAM_68":"472331332110778368","PARAM_69":"478922692477583360","PARAM_60":"475954748034383872","PARAM_61":"494904459206328320","PARAM_62":"488696604354674688","PARAM_63":"481563574288777216","PARAM_100":"481338875688517632","PARAM_125":"480389140282605568","PARAM_126":"479956471090511872","PARAM_123":"478956694827696128","PARAM_124":"485936568964481024","PARAM_129":"485936568356306944","PARAM_127":"480137020543336448","PARAM_128":"473549948382609408","PARAM_53":"479330046733975552","PARAM_54":"480137019612200960","PARAM_55":"473609135473033216","PARAM_56":"472331330856681472","PARAM_57":"479008675319513088","PARAM_58":"479388237341655040","PARAM_59":"494597330259935232","PARAM_50":"470155869825269760","PARAM_51":"494904458010951680","PARAM_52":"488696605709434880","PARAM_130":"480377923652550656","PARAM_114":"473609138220302336","PARAM_115":"479388238918713344","PARAM_112":"472331333985632256","PARAM_113":"486313030599049216","PARAM_118":"479008674094776320","PARAM_119":"479329298172346368","PARAM_116":"498885092861542400","PARAM_117":"483218068336541696","PARAM_42":"474281125611569152","PARAM_43":"478585182215995392","PARAM_44":"479598117155504128","PARAM_45":"485888538064191488","PARAM_46":"480488588773949440","PARAM_47":"475954748650946560","PARAM_48":"478080885858500608","PARAM_49":"479329298876989440","PARAM_40":"479329296838557696","PARAM_41":"480377925036670976","PARAM_121":"480137017104007168","PARAM_122":"498778136893194240","PARAM_120":"478585185282031616"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '472036810977968129' , '485936565877473280' , '481338872328880128' , '485936567093821440' , '479956472495603712' , '478585184673857536' , '486551851525734400' , '485888540400418816' , '498770298326220801' , '478922681874382848' , '479330047379898368' , '474281126987300864' , '478080882322702336' , '479388239682076672' , '479388233323511808' , '478922694239191040' , '481563575630954496' , '472036556115279872' , '498885090605006848' , '486313032884944896' , '472331333301960704' , '480481737718104064' , '488696601678708736' , '478603519541116928' , '473609138954305536' , '477956226529886208' , '498890640633892865' , '486551852519784448' , '479959574523150336' , '481563576998297600' , '474281128295923712' , '480492970060021760' , '480137018328743936' , '486313032150941696' , '475686692922064896' , '474281129680044032' , '486551850187751424' , '479329296838557696' , '480377925036670976' , '474281125611569152' , '478585182215995392' , '479598117155504128' , '485888538064191488' , '480488588773949440' , '475954748650946560' , '478080885858500608' , '479329298876989440' , '470155869825269760' , '494904458010951680' , '488696605709434880' , '479330046733975552' , '480137019612200960' , '473609135473033216' , '472331330856681472' , '479008675319513088' , '479388237341655040' , '494597330259935232' , '475954748034383872' , '494904459206328320' , '488696604354674688' , '481563574288777216' , '478956696207622144' , '494597327642689536' , '479598119416233984' , '498885096808382464' , '472331332110778368' , '478922692477583360' , '478080885158051840' , '475954746797064192' , '480492971439947776' , '477956229193269248' , '479959576465113088' , '480377922318761984' , '480492968805924864' , '485888539251179520' , '479008675940270080' , '494597326321483776' , '481338874124042240' , '478603520921042944' , '480389143533191168' , '477956227867869184' , '478603518131830784' , '475686691072376832' , '478956697625296896' , '471986344285962240' , '480481738384998400' , '480488589365346304' , '479959575810801664' , '481563577652609024' , '498885095445233664' , '478585183470092288' , '479956473208635392' , '480389141578645504' , '475686692318085120' , '479598118665453568' , '480389142883074048' , '494904459806113792' , '481338875688517632' , '479330045333078016' , '478922695711391744' , '479959564469403648' , '473609136769073152' , '480488587389829120' , '483218066432327680' , '480481734924697600' , '480481736321400832' , '483218067728367616' , '481338861507575808' , '478080883799097344' , '472331333985632256' , '486313030599049216' , '473609138220302336' , '479388238918713344' , '498885092861542400' , '483218068336541696' , '479008674094776320' , '479329298172346368' , '478585185282031616' , '480137017104007168' , '498778136893194240' , '478956694827696128' , '485936568964481024' , '480389140282605568' , '479956471090511872' , '480137020543336448' , '473549948382609408' , '485936568356306944' , '480377923652550656' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：158ms , start = 1637131147185
┣━ 返回：RcdSet,size=291
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:39:07.366 [ForkJoinPool-2-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"002"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '002' )
┣ 结果： 
┣━ 耗时：12ms , start = 1637131147353
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 

14:39:07.366 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"491961900645482496"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '491961900645482496' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637131147353
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

14:39:07.376 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"491961971495665664","PARAM_2":"employee"}
┣ 执行：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = 'employee' ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( '491961971495665664' )
┣ 结果： 
┣━ 耗时：23ms , start = 1637131147353
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 

14:39:07.377 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"491961971495665664","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( '491961971495665664' )
┣ 结果： 
┣━ 耗时：23ms , start = 1637131147353
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 

14:39:07.386 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"491961971495665664","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( '491961971495665664' )
┣ 结果： 
┣━ 耗时：33ms , start = 1637131147353
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 

14:39:07.391 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 479ms
14:39:07.508 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 
┣ 语句：UPDATE sys_user SET last_login_time = ? WHERE id = ?
┣ 参数：{"PARAM_1":1637131147496,"PARAM_2":"509286903699214336"}
┣ 执行：UPDATE sys_user SET last_login_time = str_to_date('2021-11-17 14:39:07','%Y-%m-%d %H:%i:%s') WHERE id = '509286903699214336'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131147496
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.update(UserServiceImpl.java:202)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:81)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362340150775808
┗━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 

14:39:07.521 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_session_online WHERE id = ?
┣ 参数：{"PARAM_1":"4mHsC6j-9xbvMTPRe0tKKlHJ3LUhQ8vzarpOONHc"}
┣ 执行：select * from sys_session_online WHERE id = '4mHsC6j-9xbvMTPRe0tKKlHJ3LUhQ8vzarpOONHc'
┣ 结果： 
┣━ 耗时：11ms , start = 1637131147509
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:88)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362340150775808
┗━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 

14:39:07.536 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 
┣ 语句：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"4mHsC6j-9xbvMTPRe0tKKlHJ3LUhQ8vzarpOONHc","PARAM_9":"ed-10b7f97ade-dc59","PARAM_8":"D7B67D75818C671B","PARAM_10":"509286903699214336","PARAM_7":1,"PARAM_11":1637131147523,"PARAM_6":1200,"PARAM_12":1,"PARAM_5":1637131147521,"PARAM_4":1637131147521,"PARAM_3":"509286903699214336","PARAM_2":"15-ufQd4oGyC6TFP42OajX--x7PtswkvSYBpHHtZ"}
┣ 执行：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( '4mHsC6j-9xbvMTPRe0tKKlHJ3LUhQ8vzarpOONHc' , '15-ufQd4oGyC6TFP42OajX--x7PtswkvSYBpHHtZ' , '509286903699214336' , str_to_date('2021-11-17 14:39:07','%Y-%m-%d %H:%i:%s') , str_to_date('2021-11-17 14:39:07','%Y-%m-%d %H:%i:%s') , 1200 , 1 , 'D7B67D75818C671B' , 'ed-10b7f97ade-dc59' , '509286903699214336' , str_to_date('2021-11-17 14:39:07','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：11ms , start = 1637131147523
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.insert(SessionOnlineServiceImpl.java:74)
┣ TID：513362340150775808
┗━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 

14:39:07.590 [XNIO-1 task-5] - [513362340150775808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 
┣ 语句：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513362457054416896","PARAM_9":0,"PARAM_8":1637133147558,"PARAM_10":"509286903699214336","PARAM_7":0,"PARAM_11":1637131147575,"PARAM_6":1637132947537,"PARAM_12":1,"PARAM_5":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiI1MDkyODY5MDM2OTkyMTQzMzYiLCJhdWQiOiJkcHRlc3QiLCJpc3MiOiJmZWxvcmQuY24iLCJleHAiOiIyMDIxLTExLTE3IDE1OjEyOjI3IiwiaWF0IjoiMjAyMS0xMS0xNyAxNDozOTowNyIsImp0aSI6ImU3NGI1YTJiLTllNjMtNGM0Yy04MjI3LWJiMDQ1MGNjNmYxOCJ9.PyWf6Ai0fl0rgz9-FuXiHg9iMFYDYMuWc5wpTiWSrRnq3an1jLCtNVUDw2PdjdFOvuzVSO-OvXgdTu2LIp9sYyc5bygNiDfzMrKFtHuHqEcc8KxFDBwFaMfiGA5Uo8g6nCX39pfgl1uqfBPRKWGkFZKDzdZtaqR8ALbfjpZqglOJ261IFET7S8C-7V0Zx5TYi9dXyxlvh6UHDvGtBco1MFskgEqZx935AmOCMOGh0RCOov7_F3DNUZZUYawvEwthMExhESWUG3AOUtr3j7DM7vBByiwnD8p8evYOlNTLGT7AgmTqxt5oKS4TnRd5bvAwjbv_aLLyzE1r6KsvZgeyFQ","PARAM_4":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiI1MDkyODY5MDM2OTkyMTQzMzYiLCJhdWQiOiJkcHRlc3QiLCJpc3MiOiJmZWxvcmQuY24iLCJleHAiOiIyMDIxLTExLTE3IDE1OjA5OjA3IiwiaWF0IjoiMjAyMS0xMS0xNyAxNDozOTowNyIsImp0aSI6ImU3NGI1YTJiLTllNjMtNGM0Yy04MjI3LWJiMDQ1MGNjNmYxOCJ9.NUQvnROmLuB9cqmScnXRW6dgFUoJz7E13JgmSSQ62PtEonFAG3olCtDetO1dp4vLmHWfYjEpVHKeLihbne2xgil-Y38bkeq0qtjEj56N9pYXTTe8UusdnPU4zt7xtq-Rqa6DjvmYrg4wNRi6ccsZDM9Ka7KeTDcksbeK0JRhZ3zmZMSlUR3y6G0TvcnVflHwknMNrh4T0Gl-34fWofoyUiwsvRQNFRli9iI0dkG2CH0NeWCC9wiwGVyNhXki1f7qs92mLVf4VLApLyJD5k4yor56bfV58vP2JB6aF918FCUrzoypF788TF6cNfFt-gVYngnFOUZCF23B5pOZ3ssjJQ","PARAM_3":"e74b5a2b-9e63-4c4c-8227-bb0450cc6f18","PARAM_2":"509286903699214336"}
┣ 执行：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( '513362457054416896' , '509286903699214336' , 'e74b5a2b-9e63-4c4c-8227-bb0450cc6f18' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiI1MDkyODY5MDM2OTkyMTQzMzYiLCJhdWQiOiJkcHRlc3QiLCJpc3MiOiJmZWxvcmQuY24iLCJleHAiOiIyMDIxLTExLTE3IDE1OjA5OjA3IiwiaWF0IjoiMjAyMS0xMS0xNyAxNDozOTowNyIsImp0aSI6ImU3NGI1YTJiLTllNjMtNGM0Yy04MjI3LWJiMDQ1MGNjNmYxOCJ9.NUQvnROmLuB9cqmScnXRW6dgFUoJz7E13JgmSSQ62PtEonFAG3olCtDetO1dp4vLmHWfYjEpVHKeLihbne2xgil-Y38bkeq0qtjEj56N9pYXTTe8UusdnPU4zt7xtq-Rqa6DjvmYrg4wNRi6ccsZDM9Ka7KeTDcksbeK0JRhZ3zmZMSlUR3y6G0TvcnVflHwknMNrh4T0Gl-34fWofoyUiwsvRQNFRli9iI0dkG2CH0NeWCC9wiwGVyNhXki1f7qs92mLVf4VLApLyJD5k4yor56bfV58vP2JB6aF918FCUrzoypF788TF6cNfFt-gVYngnFOUZCF23B5pOZ3ssjJQ' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiI1MDkyODY5MDM2OTkyMTQzMzYiLCJhdWQiOiJkcHRlc3QiLCJpc3MiOiJmZWxvcmQuY24iLCJleHAiOiIyMDIxLTExLTE3IDE1OjEyOjI3IiwiaWF0IjoiMjAyMS0xMS0xNyAxNDozOTowNyIsImp0aSI6ImU3NGI1YTJiLTllNjMtNGM0Yy04MjI3LWJiMDQ1MGNjNmYxOCJ9.PyWf6Ai0fl0rgz9-FuXiHg9iMFYDYMuWc5wpTiWSrRnq3an1jLCtNVUDw2PdjdFOvuzVSO-OvXgdTu2LIp9sYyc5bygNiDfzMrKFtHuHqEcc8KxFDBwFaMfiGA5Uo8g6nCX39pfgl1uqfBPRKWGkFZKDzdZtaqR8ALbfjpZqglOJ261IFET7S8C-7V0Zx5TYi9dXyxlvh6UHDvGtBco1MFskgEqZx935AmOCMOGh0RCOov7_F3DNUZZUYawvEwthMExhESWUG3AOUtr3j7DM7vBByiwnD8p8evYOlNTLGT7AgmTqxt5oKS4TnRd5bvAwjbv_aLLyzE1r6KsvZgeyFQ' , str_to_date('2021-11-17 15:09:07','%Y-%m-%d %H:%i:%s') , 0 , str_to_date('2021-11-17 15:12:27','%Y-%m-%d %H:%i:%s') , 0 , '509286903699214336' , str_to_date('2021-11-17 14:39:07','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131147575
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：513362340150775808
┗━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 

14:39:07.797 [XNIO-1 task-5] - [513362457486430208] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：114ms , start = 1637131147681
┣━ 返回：RcdSet,size=1267
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：513362457486430208
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

14:39:15.291 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"主机","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '主机' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：15ms , start = 1637131155273
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.308 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"主机状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '主机状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131155293
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.318 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"主机状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '主机状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131155306
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.329 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"信息系统","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '信息系统' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131155316
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.340 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"信息系统","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '信息系统' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131155321
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.345 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"虚拟VIP","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '虚拟VIP' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131155333
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.358 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"虚拟VIP","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '虚拟VIP' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637131155342
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.361 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"物理IP","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '物理IP' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131155348
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.372 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"物理IP","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '物理IP' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131155360
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.376 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"操作系统","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '操作系统' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131155365
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.388 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"操作系统","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '操作系统' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131155373
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.388 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据库","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据库' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131155377
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.405 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"中间件","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '中间件' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131155389
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.409 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"中间件","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '中间件' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：17ms , start = 1637131155389
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.422 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所在位置","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所在位置' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131155410
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.422 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所在位置","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所在位置' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131155410
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.437 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所在环境","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所在环境' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131155424
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.437 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所在环境","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所在环境' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131155423
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.458 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_environment"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_environment' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：11ms , start = 1637131155445
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362266259722240
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:15.458 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_environment"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_environment' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：12ms , start = 1637131155445
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362340146581504
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:15.473 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"标签","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '标签' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131155460
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.475 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"标签","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '标签' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637131155460
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.488 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"凭证","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '凭证' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131155476
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362266259722240
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.488 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"凭证","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '凭证' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131155477
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362340146581504
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:15.509 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/host/host_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/host/host_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：15ms , start = 1637131155491
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362340146581504
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:15.509 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/host/host_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/host/host_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：15ms , start = 1637131155491
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362266259722240
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:15.528 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_host_type"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_host_type' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：15ms , start = 1637131155511
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362340146581504
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:15.541 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_host_type"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_host_type' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：16ms , start = 1637131155512
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362266259722240
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:15.556 [XNIO-1 task-1] - [513362340146581504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_host_password_strategy"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_host_password_strategy' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：13ms , start = 1637131155540
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362340146581504
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:15.567 [XNIO-1 task-3] - [513362266259722240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_host_password_strategy"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_host_password_strategy' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：12ms , start = 1637131155547
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362266259722240
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:16.169 [XNIO-1 task-3] - [513362492810858496] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_information_system","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_information_system'
┣ 结果： 
┣━ 耗时：35ms , start = 1637131156132
┣━ 返回：RcdSet,size=35
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362492810858496
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:16.216 [XNIO-1 task-1] - [513362492978630656] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_host_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_host_position'
┣ 结果： 
┣━ 耗时：20ms , start = 1637131156193
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362492978630656
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:16.225 [XNIO-1 task-3] - [513362492810858496] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_information_system t WHERE ( ( t.deleted= :PARAM_1 AND t.t... ] ━━━━━ 
┣ 语句：select t.* from ops_information_system t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from ops_information_system t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：17ms , start = 1637131156198
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.InformationSystemServiceImpl.queryList(InformationSystemServiceImpl.java:220)
┣ TID：513362492810858496
┗━━━━━ SQL [ select t.* from ops_information_system t WHERE ( ( t.deleted= :PARAM_1 AND t.t... ] ━━━━━ 

14:39:16.236 [XNIO-1 task-1] - [513362492978630656] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_host_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant... ] ━━━━━ 
┣ 语句：select t.* from ops_host_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from ops_host_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：10ms , start = 1637131156225
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.HostPositionServiceImpl.queryList(HostPositionServiceImpl.java:196)
┣ TID：513362492978630656
┗━━━━━ SQL [ select t.* from ops_host_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant... ] ━━━━━ 

14:39:16.263 [XNIO-1 task-2] - [513362493276426240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_service_info","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_service_info'
┣ 结果： 
┣━ 耗时：13ms , start = 1637131156249
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362493276426240
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:16.288 [XNIO-1 task-2] - [513362493276426240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from ops_service_info t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( group_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"mid","PARAM_2":"T001"}
┣ 执行：select t.* from ops_service_info t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( group_id = 'mid' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131156272
┣━ 返回：RcdSet,size=53
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.ServiceInfoServiceImpl.queryList(ServiceInfoServiceImpl.java:196)
┣ TID：513362493276426240
┗━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:16.293 [XNIO-1 task-1] - [513362493481947136] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_service_info","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_service_info'
┣ 结果： 
┣━ 耗时：18ms , start = 1637131156270
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362493481947136
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:16.316 [XNIO-1 task-1] - [513362493481947136] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from ops_service_info t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( group_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"os","PARAM_2":"T001"}
┣ 执行：select t.* from ops_service_info t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( group_id = 'os' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131156301
┣━ 返回：RcdSet,size=37
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.ServiceInfoServiceImpl.queryList(ServiceInfoServiceImpl.java:196)
┣ TID：513362493481947136
┗━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:16.318 [XNIO-1 task-5] - [513362493272231936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_service_info","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_service_info'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131156300
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362493272231936
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:16.331 [XNIO-1 task-3] - [513362493695856640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_information_system t WHERE ( ( t.deleted= :PARAM_1 AND t.t... ] ━━━━━ 
┣ 语句：select t.* from ops_information_system t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from ops_information_system t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131156315
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.InformationSystemServiceImpl.queryList(InformationSystemServiceImpl.java:220)
┣ TID：513362493695856640
┗━━━━━ SQL [ select t.* from ops_information_system t WHERE ( ( t.deleted= :PARAM_1 AND t.t... ] ━━━━━ 

14:39:16.373 [XNIO-1 task-5] - [513362493272231936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from ops_service_info t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( group_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"db","PARAM_2":"T001"}
┣ 执行：select t.* from ops_service_info t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( group_id = 'db' ))
┣ 结果： 
┣━ 耗时：45ms , start = 1637131156326
┣━ 返回：RcdSet,size=35
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.ServiceInfoServiceImpl.queryList(ServiceInfoServiceImpl.java:196)
┣ TID：513362493272231936
┗━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:16.378 [XNIO-1 task-2] - [513362493880406016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_host_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant... ] ━━━━━ 
┣ 语句：select t.* from ops_host_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from ops_host_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：20ms , start = 1637131156355
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.HostPositionServiceImpl.queryList(HostPositionServiceImpl.java:196)
┣ TID：513362493880406016
┗━━━━━ SQL [ select t.* from ops_host_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant... ] ━━━━━ 

14:39:16.402 [XNIO-1 task-3] - [513362494002040832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from ops_service_info t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( group_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"db","PARAM_2":"T001"}
┣ 执行：select t.* from ops_service_info t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( group_id = 'db' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131156385
┣━ 返回：RcdSet,size=35
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.ServiceInfoServiceImpl.queryList(ServiceInfoServiceImpl.java:196)
┣ TID：513362494002040832
┗━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:16.470 [XNIO-1 task-5] - [513362494132064256] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from ops_service_info t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( group_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"mid","PARAM_2":"T001"}
┣ 执行：select t.* from ops_service_info t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( group_id = 'mid' ))
┣ 结果： 
┣━ 耗时：32ms , start = 1637131156416
┣━ 返回：RcdSet,size=53
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.ServiceInfoServiceImpl.queryList(ServiceInfoServiceImpl.java:196)
┣ TID：513362494132064256
┗━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:16.602 [XNIO-1 task-5] - [513362494853484544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from ops_service_info t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( group_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"os","PARAM_2":"T001"}
┣ 执行：select t.* from ops_service_info t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( group_id = 'os' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131156587
┣━ 返回：RcdSet,size=37
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.ServiceInfoServiceImpl.queryList(ServiceInfoServiceImpl.java:196)
┣ TID：513362494853484544
┗━━━━━ SQL [ select t.* from ops_service_info t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:16.847 [XNIO-1 task-3] - [513362495696539648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_host","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_host'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131156829
┣━ 返回：RcdSet,size=37
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362495696539648
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:16.899 [XNIO-1 task-3] - [513362495696539648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_host t WHERE t.deleted = :PARAM_1 AN... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM ops_host t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM ops_host t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131156885
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362495696539648
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_host t WHERE t.deleted = :PARAM_1 AN... ] ━━━━━ 

14:39:16.903 [XNIO-1 task-5] - [513362495549739008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_host","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_host'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131156876
┣━ 返回：RcdSet,size=37
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362495549739008
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:16.978 [XNIO-1 task-5] - [513362495549739008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_host t WHERE t.deleted = :PARAM_1 AN... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM ops_host t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM ops_host t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：17ms , start = 1637131156956
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362495549739008
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_host t WHERE t.deleted = :PARAM_1 AN... ] ━━━━━ 

14:39:20.462 [XNIO-1 task-5] - [513362495549739008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所属公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所属公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：25ms , start = 1637131160222
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495549739008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.465 [XNIO-1 task-3] - [513362495696539648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所属公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所属公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：208ms , start = 1637131160252
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495696539648
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.480 [XNIO-1 task-3] - [513362495696539648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131160469
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495696539648
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.481 [XNIO-1 task-5] - [513362495549739008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131160467
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495549739008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.493 [XNIO-1 task-5] - [513362495549739008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"系统分级","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '系统分级' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：8ms , start = 1637131160483
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495549739008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.498 [XNIO-1 task-3] - [513362495696539648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"系统分级","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '系统分级' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131160483
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495696539648
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.513 [XNIO-1 task-5] - [513362495549739008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务联系人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务联系人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131160496
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495549739008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.514 [XNIO-1 task-3] - [513362495696539648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务联系人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务联系人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131160500
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495696539648
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.525 [XNIO-1 task-3] - [513362495696539648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"技术联系人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '技术联系人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：8ms , start = 1637131160516
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495696539648
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.526 [XNIO-1 task-5] - [513362495549739008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"技术联系人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '技术联系人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131160515
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362495549739008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:20.545 [XNIO-1 task-5] - [513362495549739008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/information_system/information_system_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/information_system/information_system_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637131160531
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362495549739008
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:20.546 [XNIO-1 task-3] - [513362495696539648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/information_system/information_system_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/information_system/information_system_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131160529
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362495696539648
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:20.559 [XNIO-1 task-5] - [513362495549739008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/information_system/information_system_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/information_system/information_system_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：10ms , start = 1637131160547
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362495549739008
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:20.559 [XNIO-1 task-3] - [513362495696539648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/information_system/information_system_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/information_system/information_system_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：10ms , start = 1637131160547
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362495696539648
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:21.128 [XNIO-1 task-3] - [513362513841098752] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_system_grade"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_system_grade' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637131161115
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362513841098752
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:21.234 [XNIO-1 task-3] - [513362514285694976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_information_system t WHERE t.deleted... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM ops_information_system t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM ops_information_system t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131161221
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362514285694976
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_information_system t WHERE t.deleted... ] ━━━━━ 

14:39:21.276 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_system_status"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_system_status' ))
┣ 结果： 
┣━ 耗时：17ms , start = 1637131161258
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362514440884224
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:21.362 [XNIO-1 task-5] - [513362514814177280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_information_system t WHERE t.deleted... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM ops_information_system t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM ops_information_system t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637131161349
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362514814177280
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_information_system t WHERE t.deleted... ] ━━━━━ 

14:39:23.722 [XNIO-1 task-5] - [513362514814177280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据库实例","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据库实例' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：16ms , start = 1637131163700
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362514814177280
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:23.765 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"备份状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '备份状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131163749
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362514440884224
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:23.768 [XNIO-1 task-5] - [513362514814177280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"备份状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '备份状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：16ms , start = 1637131163743
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362514814177280
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:23.780 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_db_backup_status"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_db_backup_status' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：11ms , start = 1637131163767
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362514440884224
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:23.783 [XNIO-1 task-5] - [513362514814177280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_db_backup_status"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_db_backup_status' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：10ms , start = 1637131163771
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362514814177280
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:23.795 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"备份策略","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '备份策略' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131163781
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362514440884224
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:23.807 [XNIO-1 task-5] - [513362514814177280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"备份策略","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '备份策略' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131163790
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362514814177280
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:23.809 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"日志模式","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '日志模式' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131163797
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362514440884224
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:23.831 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_db_log_method"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_db_log_method' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：19ms , start = 1637131163810
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362514440884224
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:23.848 [XNIO-1 task-5] - [513362514814177280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"日志模式","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '日志模式' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1637131163809
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362514814177280
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:23.859 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"实例名称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '实例名称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131163847
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362514440884224
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:23.863 [XNIO-1 task-5] - [513362514814177280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"实例名称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '实例名称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131163851
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362514814177280
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:23.880 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/db_instance/db_instance_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/db_instance/db_instance_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131163865
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362514440884224
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:23.895 [XNIO-1 task-5] - [513362514814177280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/db_instance/db_instance_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/db_instance/db_instance_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131163879
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362514814177280
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:23.909 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_db_backup_type"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_db_backup_type' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：13ms , start = 1637131163893
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362514440884224
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:23.928 [XNIO-1 task-3] - [513362514440884224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_db_backup_method"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_db_backup_method' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：14ms , start = 1637131163913
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362514440884224
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:23.928 [XNIO-1 task-5] - [513362514814177280] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_db_backup_type"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_db_backup_type' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：16ms , start = 1637131163911
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362514814177280
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:24.236 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 27 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:39:24.236 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 23 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 27 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:39:24.580 [XNIO-1 task-1] - [513362528164646912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_db_instance","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_db_instance'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131164562
┣━ 返回：RcdSet,size=23
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362528164646912
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:24.605 [XNIO-1 task-5] - [513362528428888064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_db_instance t WHERE t.deleted = :PAR... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM ops_db_instance t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM ops_db_instance t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131164594
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362528428888064
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_db_instance t WHERE t.deleted = :PAR... ] ━━━━━ 

14:39:24.605 [XNIO-1 task-1] - [513362528164646912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_db_instance t WHERE t.deleted = :PAR... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM ops_db_instance t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM ops_db_instance t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：9ms , start = 1637131164594
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362528164646912
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_db_instance t WHERE t.deleted = :PAR... ] ━━━━━ 

14:39:26.147 [XNIO-1 task-1] - [513362528164646912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所属凭证","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所属凭证' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131166135
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362528164646912
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:26.162 [XNIO-1 task-1] - [513362528164646912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"类别","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '类别' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131166151
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362528164646912
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:26.190 [XNIO-1 task-1] - [513362528164646912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_voucher_label"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_voucher_label' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：14ms , start = 1637131166174
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362528164646912
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:26.220 [XNIO-1 task-1] - [513362528164646912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/voucher_owner/voucher_owner_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/voucher_owner/voucher_owner_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：19ms , start = 1637131166195
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362528164646912
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:26.236 [XNIO-1 task-1] - [513362528164646912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/voucher_owner/voucher_owner_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/voucher_owner/voucher_owner_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637131166221
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362528164646912
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:26.274 [XNIO-1 task-5] - [513362528428888064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/voucher_owner/voucher_owner_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/voucher_owner/voucher_owner_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：9ms , start = 1637131166258
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362528428888064
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:26.296 [XNIO-1 task-5] - [513362528428888064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/voucher_owner/voucher_owner_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/voucher_owner/voucher_owner_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：15ms , start = 1637131166278
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362528428888064
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:27.653 [XNIO-1 task-5] - [513362540542038016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_voucher_priv","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_voucher_priv'
┣ 结果： 
┣━ 耗时：127ms , start = 1637131167524
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getDBTableMeta(SuperService.java:59)
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:222)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
┣ TID：513362540542038016
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:27.678 [XNIO-1 task-5] - [513362540542038016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 
┣ 语句：select * from ops_voucher_priv WHERE empl_id = ? AND status = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"491961971495665664","PARAM_4":"T001","PARAM_3":0,"PARAM_2":"valid"}
┣ 执行：select * from ops_voucher_priv WHERE empl_id = '491961971495665664' AND status = 'valid' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131167658
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
    com.dt.platform.ops.controller.VoucherPrivController.queryVoucherTypeList(VoucherPrivController.java:262)
┣ TID：513362540542038016
┗━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 

14:39:27.682 [XNIO-1 task-3] - [513362541049548800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_voucher_priv","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_voucher_priv'
┣ 结果： 
┣━ 耗时：23ms , start = 1637131167657
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getDBTableMeta(SuperService.java:59)
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:222)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
┣ TID：513362541049548800
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:27.709 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_voucher_priv","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_voucher_priv'
┣ 结果： 
┣━ 耗时：17ms , start = 1637131167689
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getDBTableMeta(SuperService.java:59)
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:222)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
┣ TID：513362541108269056
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:27.721 [XNIO-1 task-3] - [513362541049548800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 
┣ 语句：select * from ops_voucher_priv WHERE empl_id = ? AND status = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"491961971495665664","PARAM_4":"T001","PARAM_3":0,"PARAM_2":"valid"}
┣ 执行：select * from ops_voucher_priv WHERE empl_id = '491961971495665664' AND status = 'valid' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：29ms , start = 1637131167690
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
    com.dt.platform.ops.controller.VoucherOwnerController.queryPagedList(VoucherOwnerController.java:281)
┣ TID：513362541049548800
┗━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 

14:39:27.725 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 
┣ 语句：select * from ops_voucher_priv WHERE empl_id = ? AND status = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"491961971495665664","PARAM_4":"T001","PARAM_3":0,"PARAM_2":"valid"}
┣ 执行：select * from ops_voucher_priv WHERE empl_id = '491961971495665664' AND status = 'valid' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：9ms , start = 1637131167713
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
    com.dt.platform.ops.controller.VoucherOwnerController.queryPagedList(VoucherOwnerController.java:281)
┣ TID：513362541108269056
┗━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 

14:39:27.741 [XNIO-1 task-1] - [513362540642701312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_voucher_priv","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_voucher_priv'
┣ 结果： 
┣━ 耗时：26ms , start = 1637131167713
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getDBTableMeta(SuperService.java:59)
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:222)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
┣ TID：513362540642701312
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:27.756 [XNIO-1 task-1] - [513362540642701312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 
┣ 语句：select * from ops_voucher_priv WHERE empl_id = ? AND status = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"491961971495665664","PARAM_4":"T001","PARAM_3":0,"PARAM_2":"valid"}
┣ 执行：select * from ops_voucher_priv WHERE empl_id = '491961971495665664' AND status = 'valid' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：9ms , start = 1637131167746
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
    com.dt.platform.ops.controller.VoucherPrivController.queryVoucherTypeList(VoucherPrivController.java:262)
┣ TID：513362540642701312
┗━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 

14:39:27.762 [XNIO-1 task-3] - [513362541049548800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_voucher_owner","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_voucher_owner'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131167747
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:274)
┣ TID：513362541049548800
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:27.781 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_voucher_owner","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_voucher_owner'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131167768
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:274)
┣ TID：513362541108269056
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:27.783 [XNIO-1 task-3] - [513362541049548800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_voucher_owner t WHERE t.deleted = :P... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM ops_voucher_owner t
WHERE t.deleted = ? AND t.tenant_id = ? AND id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"0","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM ops_voucher_owner t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND id = '0' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131167771
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:274)
┣ TID：513362541049548800
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_voucher_owner t WHERE t.deleted = :P... ] ━━━━━ 

14:39:27.804 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_voucher_owner t WHERE t.deleted = :P... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM ops_voucher_owner t
WHERE t.deleted = ? AND t.tenant_id = ? AND id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"0","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM ops_voucher_owner t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND id = '0' ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637131167788
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:274)
┣ TID：513362541108269056
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_voucher_owner t WHERE t.deleted = :P... ] ━━━━━ 

14:39:30.015 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_collection","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_collection' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131169999
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513362541108269056
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:39:30.059 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产领用","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产领用' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：24ms , start = 1637131170031
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362541108269056
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:30.081 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"存放位置","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '存放位置' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637131170063
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362541108269056
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:30.105 [XNIO-1 task-3] - [513362541049548800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_collection","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_collection' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：23ms , start = 1637131170072
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513362541049548800
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:39:30.103 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"领用说明","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '领用说明' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131170085
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362541108269056
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:30.126 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"领用日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '领用日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131170114
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362541108269056
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:30.137 [XNIO-1 task-3] - [513362541049548800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"领用日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '领用日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131170122
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362541049548800
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:30.151 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_collection/asset_collection_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_collection/asset_collection_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131170136
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362541108269056
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:30.174 [XNIO-1 task-3] - [513362541049548800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_collection/asset_collection_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_collection/asset_collection_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：15ms , start = 1637131170145
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362541049548800
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:30.177 [XNIO-1 task-2] - [513362541108269056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_collection/asset_collection_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_collection/asset_collection_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131170152
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362541108269056
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:30.193 [XNIO-1 task-3] - [513362541049548800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_collection/asset_collection_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_collection/asset_collection_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637131170180
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362541049548800
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:31.071 [XNIO-1 task-3] - [513362555536674816] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_host_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant... ] ━━━━━ 
┣ 语句：select t.* from ops_host_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from ops_host_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131171056
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.HostPositionServiceImpl.queryList(HostPositionServiceImpl.java:196)
┣ TID：513362555536674816
┗━━━━━ SQL [ select t.* from ops_host_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant... ] ━━━━━ 

14:39:31.249 [XNIO-1 task-3] - [513362556077740032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_collection","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_collection'
┣ 结果： 
┣━ 耗时：15ms , start = 1637131171233
┣━ 返回：RcdSet,size=24
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetCollectionServiceImpl.queryPagedList(AssetCollectionServiceImpl.java:516)
┣ TID：513362556077740032
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:31.279 [XNIO-1 task-3] - [513362556077740032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_collection t WHERE t.deleted =... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_collection t
WHERE t.deleted = ? AND t.tenant_id = ? AND t.originator_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"491961971495665664","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_collection t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND t.originator_id = '491961971495665664' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637131171264
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetCollectionServiceImpl.queryPagedList(AssetCollectionServiceImpl.java:516)
┣ TID：513362556077740032
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_collection t WHERE t.deleted =... ] ━━━━━ 

14:39:31.332 [XNIO-1 task-2] - [513362556627193856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= ... ] ━━━━━ 
┣ 语句：select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131171316
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.PositionServiceImpl.queryList(PositionServiceImpl.java:196)
┣ TID：513362556627193856
┗━━━━━ SQL [ select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= ... ] ━━━━━ 

14:39:31.394 [XNIO-1 task-2] - [513362556874657792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_collection t WHERE t.deleted =... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_collection t
WHERE t.deleted = ? AND t.tenant_id = ? AND t.originator_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"491961971495665664","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_collection t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND t.originator_id = '491961971495665664' ) A
┣ 结果： 
┣━ 耗时：16ms , start = 1637131171375
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    com.dt.platform.eam.service.impl.AssetCollectionServiceImpl.queryPagedList(AssetCollectionServiceImpl.java:516)
┣ TID：513362556874657792
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_collection t WHERE t.deleted =... ] ━━━━━ 

14:39:32.064 [XNIO-1 task-2] - [513362556874657792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_info_list.html#data-table-base"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_info_list.html#data-table-base' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：15ms , start = 1637131172047
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362556874657792
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:32.078 [XNIO-1 task-2] - [513362556874657792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_insert","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_insert' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131172065
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513362556874657792
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:39:32.101 [XNIO-1 task-2] - [513362556874657792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：21ms , start = 1637131172079
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362556874657792
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:32.124 [XNIO-1 task-2] - [513362556874657792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_18":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_19":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_20":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_10":"ffcc57a6-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"000b5919-0f8b-11ec-ab08-00163e2e6a36","PARAM_14":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_15":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_16":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"489732934153011200","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , '489732934153011200' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ffcc57a6-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , '000b5919-0f8b-11ec-ab08-00163e2e6a36' , 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637131172106
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362556874657792
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:39:32.141 [XNIO-1 task-2] - [513362556874657792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131172127
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513362556874657792
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

14:39:32.169 [XNIO-1 task-2] - [513362556874657792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：20ms , start = 1637131172143
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362556874657792
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:39:32.202 [XNIO-1 task-2] - [513362556874657792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：24ms , start = 1637131172173
┣━ 返回：RcdSet,size=26
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.buildingHierarchicalRelationships(CatalogServiceImpl.java:399)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:277)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362556874657792
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:39:32.240 [XNIO-1 task-3] - [513362556077740032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_insert","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_insert' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131172224
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:212)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：513362556077740032
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

14:39:32.258 [XNIO-1 task-3] - [513362556077740032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：15ms , start = 1637131172241
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：513362556077740032
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:32.279 [XNIO-1 task-3] - [513362556077740032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_18":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_19":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_20":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_10":"ffcc57a6-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"000b5919-0f8b-11ec-ab08-00163e2e6a36","PARAM_14":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_15":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_16":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"489732934153011200","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , '489732934153011200' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ffcc57a6-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , '000b5919-0f8b-11ec-ab08-00163e2e6a36' , 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：18ms , start = 1637131172260
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：513362556077740032
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:39:32.321 [XNIO-1 task-3] - [513362556077740032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：37ms , start = 1637131172282
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513362556077740032
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

14:39:32.366 [XNIO-1 task-3] - [513362556077740032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：41ms , start = 1637131172323
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362556077740032
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:39:32.388 [XNIO-1 task-3] - [513362556077740032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：19ms , start = 1637131172368
┣━ 返回：RcdSet,size=26
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.buildingHierarchicalRelationships(CatalogServiceImpl.java:399)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:277)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362556077740032
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:39:33.001 [XNIO-1 task-3] - [513362563631681536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：15ms , start = 1637131172985
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：513362563631681536
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:33.022 [XNIO-1 task-2] - [513362563711373312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from ops_host_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant... ] ━━━━━ 
┣ 语句：select t.* from ops_host_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from ops_host_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：16ms , start = 1637131173005
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.ops.service.impl.HostPositionServiceImpl.queryList(HostPositionServiceImpl.java:196)
┣ TID：513362563711373312
┗━━━━━ SQL [ select t.* from ops_host_position t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant... ] ━━━━━ 

14:39:33.066 [XNIO-1 task-2] - [513362563912699904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131173052
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：513362563912699904
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

14:39:33.194 [XNIO-1 task-2] - [513362564445376512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637131173180
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362564445376512
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:39:33.384 [XNIO-1 task-2] - [513362565225517056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：18ms , start = 1637131173365
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：513362565225517056
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:33.392 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637131173378
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362565280043008
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:39:33.405 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：11ms , start = 1637131173393
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

14:39:33.416 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 6ms
14:39:33.448 [XNIO-1 task-3] - [513362565498146816] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131173432
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：513362565498146816
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

14:39:33.499 [XNIO-1 task-3] - [513362565728833536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131173486
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362565728833536
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:39:34.533 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( layout_type = ? ) AND ( form_show = ? ) AND ( layout_column = ? )) ORDER BY layout_row ASC
┣ 参数：{"PARAM_1":0,"PARAM_6":1,"PARAM_5":"1","PARAM_4":"3","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( layout_type = '3' ) AND ( form_show = '1' ) AND ( layout_column = 1 )) ORDER BY layout_row ASC
┣ 结果： 
┣━ 耗时：13ms , start = 1637131174518
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:284)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:34.554 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"006064ef-0f8b-11ec-ab08-00163e2e6a36","PARAM_13":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"002e041f-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"001b5922-0f8b-11ec-ab08-00163e2e6a36","PARAM_6":"501313713031086080","PARAM_5":"006b083b-0f8b-11ec-ab08-00163e2e6a36","PARAM_4":"000b5919-0f8b-11ec-ab08-00163e2e6a36","PARAM_3":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , '000b5919-0f8b-11ec-ab08-00163e2e6a36' , '006b083b-0f8b-11ec-ab08-00163e2e6a36' , '501313713031086080' , '001b5922-0f8b-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '002e041f-0f8b-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , '006064ef-0f8b-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：16ms , start = 1637131174537
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:285)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryFormColumnByModule(AssetAttributeItemController.java:307)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:39:34.577 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( layout_type = ? ) AND ( form_show = ? ) AND ( layout_column = ? )) ORDER BY layout_row ASC
┣ 参数：{"PARAM_1":0,"PARAM_6":2,"PARAM_5":"1","PARAM_4":"3","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( layout_type = '3' ) AND ( form_show = '1' ) AND ( layout_column = 2 )) ORDER BY layout_row ASC
┣ 结果： 
┣━ 耗时：15ms , start = 1637131174557
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:288)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:34.601 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"0018cd1a-0f8b-11ec-ab08-00163e2e6a36","PARAM_11":"0021c718-0f8b-11ec-ab08-00163e2e6a36","PARAM_12":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"501314200501485568","PARAM_9":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"0078cb84-0f8b-11ec-ab08-00163e2e6a36","PARAM_7":"ff5bd349-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ffcc57a6-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffcc57a6-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff5bd349-0f8a-11ec-ab08-00163e2e6a36' , '0078cb84-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , '0018cd1a-0f8b-11ec-ab08-00163e2e6a36' , '0021c718-0f8b-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , '501314200501485568' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637131174580
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:289)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryFormColumnByModule(AssetAttributeItemController.java:307)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:39:34.621 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( layout_type = ? ) AND ( form_show = ? ) AND ( layout_column = ? )) ORDER BY layout_row ASC
┣ 参数：{"PARAM_1":0,"PARAM_6":3,"PARAM_5":"1","PARAM_4":"3","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( layout_type = '3' ) AND ( form_show = '1' ) AND ( layout_column = 3 )) ORDER BY layout_row ASC
┣ 结果： 
┣━ 耗时：13ms , start = 1637131174604
┣━ 返回：RcdSet,size=10
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:292)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:34.641 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"504053500657799168","PARAM_8":"00ccad35-0f8b-11ec-ab08-00163e2e6a36","PARAM_10":"501313846753886208","PARAM_7":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"00466ebc-0f8b-11ec-ab08-00163e2e6a36","PARAM_6":"003bc4f1-0f8b-11ec-ab08-00163e2e6a36","PARAM_12":"ff1e3446-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"ff2c280a-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'ff2c280a-0f8a-11ec-ab08-00163e2e6a36' , '003bc4f1-0f8b-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , '00ccad35-0f8b-11ec-ab08-00163e2e6a36' , '504053500657799168' , '501313846753886208' , '00466ebc-0f8b-11ec-ab08-00163e2e6a36' , 'ff1e3446-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637131174623
┣━ 返回：RcdSet,size=10
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:293)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryFormColumnByModule(AssetAttributeItemController.java:307)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:39:34.677 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( layout_type = ? ) AND ( form_show = ? ) AND ( layout_column = ? )) ORDER BY layout_row ASC
┣ 参数：{"PARAM_1":0,"PARAM_6":1,"PARAM_5":"1","PARAM_4":"2","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( layout_type = '2' ) AND ( form_show = '1' ) AND ( layout_column = 1 )) ORDER BY layout_row ASC
┣ 结果： 
┣━ 耗时：20ms , start = 1637131174654
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:306)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:34.696 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( layout_type = ? ) AND ( form_show = ? ) AND ( layout_column = ? )) ORDER BY layout_row ASC
┣ 参数：{"PARAM_1":0,"PARAM_6":2,"PARAM_5":"1","PARAM_4":"2","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( layout_type = '2' ) AND ( form_show = '1' ) AND ( layout_column = 2 )) ORDER BY layout_row ASC
┣ 结果： 
┣━ 耗时：13ms , start = 1637131174681
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:310)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:34.721 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( layout_type = ? ) AND ( form_show = ? ) AND ( layout_column = ? )) ORDER BY layout_row ASC
┣ 参数：{"PARAM_1":0,"PARAM_6":1,"PARAM_5":"1","PARAM_4":"1","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( layout_type = '1' ) AND ( form_show = '1' ) AND ( layout_column = 1 )) ORDER BY layout_row ASC
┣ 结果： 
┣━ 耗时：14ms , start = 1637131174697
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:34.787 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_6":"00543221-0f8b-11ec-ab08-00163e2e6a36","PARAM_5":"ffe4bae5-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"00e52a14-0f8b-11ec-ab08-00163e2e6a36","PARAM_3":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , '00e52a14-0f8b-11ec-ab08-00163e2e6a36' , 'ffe4bae5-0f8a-11ec-ab08-00163e2e6a36' , '00543221-0f8b-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：33ms , start = 1637131174746
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:323)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryFormColumnByModule(AssetAttributeItemController.java:307)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:39:34.820 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：24ms , start = 1637131174794
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:158)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:332)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:34.840 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_18":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_19":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_20":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_10":"ffcc57a6-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"000b5919-0f8b-11ec-ab08-00163e2e6a36","PARAM_14":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_15":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_16":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"489732934153011200","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , '489732934153011200' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ffcc57a6-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , '000b5919-0f8b-11ec-ab08-00163e2e6a36' , 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：14ms , start = 1637131174823
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryFormColumnByModule(AssetAttributeItemServiceImpl.java:333)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryFormColumnByModule(AssetAttributeItemController.java:307)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:39:34.866 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( form_show = ? ) AND ( required = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"1","PARAM_4":"1","PARAM_3":"base","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'base' ) AND ( form_show = '1' ) AND ( required = '1' ))
┣ 结果： 
┣━ 耗时：20ms , start = 1637131174844
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryList(AssetAttributeItemServiceImpl.java:236)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

14:39:34.899 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_6":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' )
┣ 结果： 
┣━ 耗时：24ms , start = 1637131174868
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryList(AssetAttributeItemController.java:257)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

14:39:34.916 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131174901
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:230)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

14:39:34.935 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：12ms , start = 1637131174917
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362565280043008
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:39:34.965 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：22ms , start = 1637131174942
┣━ 返回：RcdSet,size=26
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.buildingHierarchicalRelationships(CatalogServiceImpl.java:399)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:277)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362565280043008
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:39:35.054 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_file","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_file'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131175039
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:114)
    org.github.foxnic.web.storage.controller.FileController.getById(FileController.java:173)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:35.077 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"314"}
┣ 执行：select * from sys_file WHERE id = '314'
┣ 结果： 
┣━ 耗时：11ms , start = 1637131175064
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:114)
    org.github.foxnic.web.storage.controller.FileController.getById(FileController.java:173)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362565280043008
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

14:39:35.101 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"314","PARAM_2":1637131175084}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-11-17 14:39:35','%Y-%m-%d %H:%i:%s') WHERE id IN ( '314' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637131175084
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:133)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:120)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
┣ TID：513362565280043008
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

14:39:35.126 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 
┣ 语句：select t.* from sys_config t WHERE ( ( t.deleted= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam.assetDirectUpdateMode"}
┣ 执行：select t.* from sys_config t WHERE ( ( t.deleted= 0 ) AND ( code = 'eam.assetDirectUpdateMode' ))
┣ 结果： 
┣━ 耗时：16ms , start = 1637131175105
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.controller.ConfigController.queryList(ConfigController.java:213)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 

14:39:35.149 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"314"}
┣ 执行：select * from sys_file WHERE id = '314'
┣ 结果： 
┣━ 耗时：11ms , start = 1637131175134
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:114)
    org.github.foxnic.web.storage.controller.FileController.getById(FileController.java:173)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362565280043008
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

14:39:35.164 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"314","PARAM_2":1637131175150}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-11-17 14:39:35','%Y-%m-%d %H:%i:%s') WHERE id IN ( '314' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637131175150
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:133)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:120)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
┣ TID：513362565280043008
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

14:39:35.180 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 
┣ 语句：select t.* from sys_config t WHERE ( ( t.deleted= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam.assetStatusColumnDisable"}
┣ 执行：select t.* from sys_config t WHERE ( ( t.deleted= 0 ) AND ( code = 'eam.assetStatusColumnDisable' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637131175166
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.controller.ConfigController.queryList(ConfigController.java:213)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 

14:39:35.233 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from hrm_organization t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from hrm_organization t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( valid = ? ) AND ( type = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"com","PARAM_3":1,"PARAM_2":"T001"}
┣ 执行：select t.* from hrm_organization t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( valid = 1 ) AND ( type = 'com' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131175219
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.hrm.service.impl.OrganizationServiceImpl.queryList(OrganizationServiceImpl.java:231)
┣ TID：513362565280043008
┗━━━━━ SQL [ select t.* from hrm_organization t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:35.470 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"系统自动生成","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '系统自动生成' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131175458
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.506 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用期限","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用期限' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131175493
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.548 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"用途","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '用途' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131175534
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.570 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择所属公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择所属公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131175556
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.596 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131175582
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.613 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择管理人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择管理人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131175602
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.640 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择使用人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择使用人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：18ms , start = 1637131175619
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.674 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"详细位置","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '详细位置' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：21ms , start = 1637131175650
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.695 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131175684
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.711 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"核对日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '核对日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131175696
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.762 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"计量单位","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '计量单位' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131175749
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.781 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择图片","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择图片' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131175770
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.803 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"设备序列","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '设备序列' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131175791
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.830 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"选择附件","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '选择附件' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131175814
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.859 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"维保厂商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '维保厂商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131175846
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.879 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"维保状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '维保状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131175866
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.899 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"负责人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '负责人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131175887
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.930 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"联系人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '联系人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：17ms , start = 1637131175908
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.954 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"联系方式","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '联系方式' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637131175937
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.979 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"开始时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '开始时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131175968
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:35.996 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"结束时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '结束时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131175984
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:36.015 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"维保备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '维保备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131176002
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:36.049 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"财务编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '财务编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131176035
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:36.077 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"采购单价","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '采购单价' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131176065
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:36.095 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产总值","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产总值' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131176083
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:36.113 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"财务备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '财务备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131176101
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:36.134 [XNIO-1 task-1] - [513362565280043008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"取消","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '取消' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131176120
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565280043008
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:36.514 [XNIO-1 task-1] - [513362578383048704] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637131176502
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：513362578383048704
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

14:39:36.544 [XNIO-1 task-3] - [513362578508877824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131176532
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362578508877824
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

14:39:36.558 [XNIO-1 task-1] - [513362578555015168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam_maintenance_status"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'eam_maintenance_status' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131176544
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362578555015168
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:36.566 [XNIO-1 task-3] - [513362578508877824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：20ms , start = 1637131176545
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362578508877824
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

14:39:36.575 [XNIO-1 task-3] - [513362578508877824] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 4ms
14:39:36.667 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_supplier","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_supplier'
┣ 结果： 
┣━ 耗时：18ms , start = 1637131176647
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:327)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:198)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
┣ TID：513362578882170880
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:36.685 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_supplier t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= ... ] ━━━━━ 
┣ 语句：select t.* from eam_supplier t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_supplier t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：13ms , start = 1637131176671
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    com.dt.platform.eam.service.impl.SupplierServiceImpl.queryList(SupplierServiceImpl.java:220)
┣ TID：513362578882170880
┗━━━━━ SQL [ select t.* from eam_supplier t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= ... ] ━━━━━ 

14:39:36.685 [XNIO-1 task-1] - [513362578810867712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_category_finance","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_category_finance'
┣ 结果： 
┣━ 耗时：15ms , start = 1637131176669
┣━ 返回：RcdSet,size=19
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362578810867712
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:36.708 [XNIO-1 task-1] - [513362578810867712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_category_finance t WHERE t.deleted =... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_category_finance t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_category_finance t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637131176694
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362578810867712
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_category_finance t WHERE t.deleted =... ] ━━━━━ 

14:39:36.724 [XNIO-1 task-1] - [513362578810867712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_category_finance t WHERE ( ( t.deleted= :P... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_category_finance t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_category_finance t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：11ms , start = 1637131176712
┣━ 返回：RcdSet,size=7
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513362578810867712
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_category_finance t WHERE ( ( t.deleted= :P... ] ━━━━━ 

14:39:38.838 [XNIO-1 task-1] - [513362588021559296] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"486917672672432128"}
┣ 执行：select * from pcm_catalog WHERE id = '486917672672432128'
┣ 结果： 
┣━ 耗时：10ms , start = 1637131178826
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:327)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryList(CatalogAttributeServiceImpl.java:285)
┣ TID：513362588021559296
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:39:38.876 [XNIO-1 task-1] - [513362588021559296] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"pcm_catalog_attribute","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'pcm_catalog_attribute'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131178857
┣━ 返回：RcdSet,size=24
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQueryCondition(SuperService.java:310)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:340)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryList(CatalogAttributeServiceImpl.java:285)
┣ TID：513362588021559296
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:38.898 [XNIO-1 task-1] - [513362588021559296] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM pcm_catalog_attribute t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM pcm_catalog_attribute t
WHERE t.deleted = ? AND ((catalog_id = ? AND version_no = ? )
		OR (catalog_id = ? AND version_no = ? ))) A
┣ 参数：{"PARAM_1":0,"PARAM_5":"activated","PARAM_4":"486917672672432128","PARAM_3":"activated","PARAM_2":"486917609841758209"}
┣ 执行：select count(1) X from (SELECT 1
FROM pcm_catalog_attribute t
WHERE t.deleted = 0 AND ((catalog_id = '486917609841758209' AND version_no = 'activated' )
		OR (catalog_id = '486917672672432128' AND version_no = 'activated' ))) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637131178884
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:348)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryList(CatalogAttributeServiceImpl.java:285)
    org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryList(CatalogAttributeController.java:268)
┣ TID：513362588021559296
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM pcm_catalog_attribute t WHERE t.deleted ... ] ━━━━━ 

14:39:42.407 [XNIO-1 task-1] - [513362602995224576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select b.rule rule from sys_code_allocation a,sys_code_rule b ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select b.rule rule from sys_code_allocation a,sys_code_rule b where a.rule_id=b.id and a.deleted=0 and b.deleted=0 and a.code= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"eam_asset_code","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select b.rule rule from sys_code_allocation a,sys_code_rule b where a.rule_id=b.id and a.deleted=0 and b.deleted=0 and a.code= 'eam_asset_code' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131182395
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.dt.platform.common.service.impl.CodeModuleServiceImpl.generateCode(CodeModuleServiceImpl.java:77)
    com.dt.platform.common.controller.CodeModuleController.generateCode(CodeModuleController.java:45)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513362602995224576
┗━━━━━ SQL [ SELECT * FROM ( select b.rule rule from sys_code_allocation a,sys_code_rule b ... ] ━━━━━ 

14:39:42.423 [XNIO-1 task-1] - [513362602995224576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select fetch_size from sys_sequence where id= :PARAM_1 and ten... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select fetch_size from sys_sequence where id= ? and tenant_id= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"asset","PARAM_4":1,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select fetch_size from sys_sequence where id= 'asset' and tenant_id= 'T001' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131182412
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.dt.platform.common.service.impl.CodeModuleServiceImpl.parseNumberSeq(CodeModuleServiceImpl.java:232)
    com.dt.platform.common.service.impl.CodeModuleServiceImpl.parsePlaceholder(CodeModuleServiceImpl.java:127)
    com.dt.platform.common.service.impl.CodeModuleServiceImpl.parseCode(CodeModuleServiceImpl.java:102)
┣ TID：513362602995224576
┗━━━━━ SQL [ SELECT * FROM ( select fetch_size from sys_sequence where id= :PARAM_1 and ten... ] ━━━━━ 

14:39:42.434 [XNIO-1 task-1] - [513362602995224576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select count(1) from sys_sequence where ID= :PARAM_1 and tenan... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select count(1) from sys_sequence where ID= ? and tenant_id= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"asset","PARAM_4":1,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select count(1) from sys_sequence where ID= 'asset' and tenant_id= 'T001' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：8ms , start = 1637131182424
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.dt.platform.common.service.impl.CodeModuleServiceImpl.parseNumberSeq(CodeModuleServiceImpl.java:233)
    com.dt.platform.common.service.impl.CodeModuleServiceImpl.parsePlaceholder(CodeModuleServiceImpl.java:127)
    com.dt.platform.common.service.impl.CodeModuleServiceImpl.parseCode(CodeModuleServiceImpl.java:102)
┣ TID：513362602995224576
┗━━━━━ SQL [ SELECT * FROM ( select count(1) from sys_sequence where ID= :PARAM_1 and tenan... ] ━━━━━ 

14:39:42.614 [XNIO-1 task-1] - [513362602995224576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO eam_asset ( id , category_id , status , owner_code , asset_code , ... ] ━━━━━ 
┣ 语句：INSERT INTO eam_asset ( id , category_id , status , owner_code , asset_code , asset_status , name , manufacturer_id , model , picture_id , unit , serial_number , own_company_id , manager_id , use_organization_id , use_user_id , position_id , position_detail , source_id , asset_number , remain_number , register_date , attach , purpose , asset_notes , maintainer_name , maintenance_status , contacts , contact_information , director , maintenance_notes , financial_category_id , financial_code , supplier_id , financial_notes , equipment_serial_number , originator_id , create_by , create_time , version , tenant_id ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"","PARAM_39":1637131182597,"PARAM_18":"","PARAM_19":"","PARAM_31":"","PARAM_10":"","PARAM_32":"","PARAM_11":"","PARAM_33":"","PARAM_12":"","PARAM_34":"","PARAM_13":"2","PARAM_35":"","PARAM_14":"","PARAM_36":"","PARAM_15":"","PARAM_37":"491961971495665664","PARAM_16":"","PARAM_38":"509286903699214336","PARAM_30":"","PARAM_9":"","PARAM_8":"","PARAM_7":"1212","PARAM_6":"idle","PARAM_5":"FZQH-06965","PARAM_4":"asset","PARAM_3":"incomplete","PARAM_2":"486917672672432128","PARAM_1":"513362603062333440","PARAM_28":"","PARAM_29":"","PARAM_20":1,"PARAM_21":1,"PARAM_22":1637131182386,"PARAM_23":"","PARAM_24":"","PARAM_25":"","PARAM_26":"","PARAM_27":"","PARAM_40":1,"PARAM_41":"T001"}
┣ 执行：INSERT INTO eam_asset ( id , category_id , status , owner_code , asset_code , asset_status , name , manufacturer_id , model , picture_id , unit , serial_number , own_company_id , manager_id , use_organization_id , use_user_id , position_id , position_detail , source_id , asset_number , remain_number , register_date , attach , purpose , asset_notes , maintainer_name , maintenance_status , contacts , contact_information , director , maintenance_notes , financial_category_id , financial_code , supplier_id , financial_notes , equipment_serial_number , originator_id , create_by , create_time , version , tenant_id ) VALUES ( '513362603062333440' , '486917672672432128' , 'incomplete' , 'asset' , 'FZQH-06965' , 'idle' , '1212' , '' , '' , '' , '' , '' , '2' , '' , '' , '' , '' , '' , '' , 1 , 1 , str_to_date('2021-11-17 14:39:42','%Y-%m-%d %H:%i:%s') , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '' , '491961971495665664' , '509286903699214336' , str_to_date('2021-11-17 14:39:42','%Y-%m-%d %H:%i:%s') , 1 , 'T001' )
┣ 结果： 
┣━ 耗时：15ms , start = 1637131182598
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    com.dt.platform.eam.service.impl.AssetServiceImpl.insert(AssetServiceImpl.java:864)
┣ TID：513362602995224576
┗━━━━━ SQL [ INSERT INTO eam_asset ( id , category_id , status , owner_code , asset_code , ... ] ━━━━━ 

14:39:42.667 [XNIO-1 task-1] - [513362604182212608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 参数：{}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE owner_code = 'asset'
	AND (t.deleted = 0
		AND t.tenant_id = 'T001')) A
┣ 结果： 
┣━ 耗时：9ms , start = 1637131182656
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362604182212608
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE owner_code = 'asset'  ... ] ━━━━━ 

14:39:42.685 [XNIO-1 task-1] - [513362604182212608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from eam_asset t WHERE owner_code= 'asset' AND ( ( t.... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from eam_asset t WHERE owner_code= 'asset' AND ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) order by create_time desc ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_2":50}
┣ 执行：SELECT * FROM ( select * from eam_asset t WHERE owner_code= 'asset' AND ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) order by create_time desc ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：16ms , start = 1637131182668
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1049)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:725)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362604182212608
┗━━━━━ SQL [ SELECT * FROM ( select * from eam_asset t WHERE owner_code= 'asset' AND ( ( t.... ] ━━━━━ 

14:39:42.707 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637131182695
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

14:39:42.710 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? )
┣ 参数：{"PARAM_1":0}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( null )
┣ 结果： 
┣━ 耗时：12ms , start = 1637131182696
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

14:39:42.712 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' )
┣ 结果： 
┣━ 耗时：16ms , start = 1637131182696
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

14:39:42.720 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' )
┣ 结果： 
┣━ 耗时：18ms , start = 1637131182701
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

14:39:42.727 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( delet... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null )
┣ 结果： 
┣━ 耗时：24ms , start = 1637131182702
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( delet... ] ━━━━━ 

14:39:42.727 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dc_rack","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dc_rack'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131182711
┣━ 返回：RcdSet,size=16
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:42.734 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' )
┣ 结果： 
┣━ 耗时：23ms , start = 1637131182711
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

14:39:42.743 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' )
┣ 结果： 
┣━ 耗时：29ms , start = 1637131182714
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

14:39:42.744 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"486917672672432128"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917672672432128' )
┣ 结果： 
┣━ 耗时：46ms , start = 1637131182697
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

14:39:42.750 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' )
┣ 结果： 
┣━ 耗时：49ms , start = 1637131182700
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

14:39:42.756 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' )
┣ 结果： 
┣━ 耗时：34ms , start = 1637131182721
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

14:39:42.757 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' )
┣ 结果： 
┣━ 耗时：57ms , start = 1637131182700
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

14:39:42.759 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"491961971495665664"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '491961971495665664' )
┣ 结果： 
┣━ 耗时：31ms , start = 1637131182728
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

14:39:42.768 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null )
┣ 结果： 
┣━ 耗时：38ms , start = 1637131182729
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 

14:39:42.772 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? )
┣ 参数：{"PARAM_1":0}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( null )
┣ 结果： 
┣━ 耗时：27ms , start = 1637131182745
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

14:39:42.774 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_goods","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_goods'
┣ 结果： 
┣━ 耗时：37ms , start = 1637131182736
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:42.779 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' )
┣ 结果： 
┣━ 耗时：34ms , start = 1637131182745
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

14:39:42.789 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= :... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null )
┣ 结果： 
┣━ 耗时：10ms , start = 1637131182778
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= :... ] ━━━━━ 

14:39:42.791 [XNIO-1 task-1] - [513362604182212608] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 96ms
14:39:47.786 [XNIO-1 task-1] - [513362604182212608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"历史记录","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '历史记录' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：23ms , start = 1637131187758
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362604182212608
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:39:47.806 [XNIO-1 task-1] - [513362604182212608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"509286903699214336","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/voucher/voucher_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/voucher/voucher_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '509286903699214336' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131187790
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362604182212608
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:47.831 [XNIO-1 task-1] - [513362604182212608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/ops/voucher/voucher_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/ops/voucher/voucher_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：15ms , start = 1637131187807
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362604182212608
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:39:47.863 [XNIO-1 task-1] - [513362604182212608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"ops_user_voucher"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'ops_user_voucher' )) ORDER BY isnull( t.sort ) -1 ASC, t.sort ASC
┣ 结果： 
┣━ 耗时：18ms , start = 1637131187842
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:236)
┣ TID：513362604182212608
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

14:39:48.738 [XNIO-1 task-1] - [513362629616472064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 
┣ 语句：select * from ops_voucher_priv WHERE empl_id = ? AND status = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"491961971495665664","PARAM_4":"T001","PARAM_3":0,"PARAM_2":"valid"}
┣ 执行：select * from ops_voucher_priv WHERE empl_id = '491961971495665664' AND status = 'valid' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：16ms , start = 1637131188717
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
    com.dt.platform.ops.controller.VoucherPrivController.queryVoucherTypeList(VoucherPrivController.java:262)
┣ TID：513362629616472064
┗━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 

14:39:48.844 [XNIO-1 task-1] - [513362630014930944] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 
┣ 语句：select * from ops_voucher_priv WHERE empl_id = ? AND status = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"491961971495665664","PARAM_4":"T001","PARAM_3":0,"PARAM_2":"valid"}
┣ 执行：select * from ops_voucher_priv WHERE empl_id = '491961971495665664' AND status = 'valid' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131188828
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:226)
    com.dt.platform.ops.service.impl.VoucherPrivServiceImpl.queryEntity(VoucherPrivServiceImpl.java:44)
    com.dt.platform.ops.controller.VoucherController.queryPagedList(VoucherController.java:277)
┣ TID：513362630014930944
┗━━━━━ SQL [ select * from ops_voucher_priv WHERE empl_id = :PARAM_1 AND status = :PARAM_2 ... ] ━━━━━ 

14:39:48.897 [XNIO-1 task-1] - [513362630014930944] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"ops_voucher","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'ops_voucher'
┣ 结果： 
┣━ 耗时：24ms , start = 1637131188865
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:274)
┣ TID：513362630014930944
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:39:48.925 [XNIO-1 task-1] - [513362630014930944] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_voucher t WHERE t.deleted = :PARAM_1... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM ops_voucher t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_id = ? AND id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_4":"0","PARAM_3":"513362603062333440","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM ops_voucher t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_id = '513362603062333440' AND id = '0' ) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637131188910
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:274)
┣ TID：513362630014930944
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM ops_voucher t WHERE t.deleted = :PARAM_1... ] ━━━━━ 

14:39:54.236 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 35 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:39:54.240 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 35 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:40:24.236 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 35 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:40:24.236 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 35 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:40:24.971 [XNIO-1 task-1] - [513362630014930944] - INFO  o.g.f.w.o.l.UserLogoutHandler - [logout,33] - username: dptest  is offline now
14:40:24.972 [XNIO-1 task-1] - [513362630014930944] - INFO  o.g.f.w.o.l.UserLogoutSuccessHandler - [onLogoutSuccess,42] - username: dptest  is offline now
14:40:28.410 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE id = 'admin' ) A
┣ 结果： 
┣━ 耗时：12ms , start = 1637131228396
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:278)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362578882170880
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE id = :PARAM_1 ) A ] ━━━━━ 

14:40:28.430 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = 'admin' ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637131228415
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362578882170880
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 

14:40:28.447 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_user WHERE name = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"admin","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_user WHERE name = 'admin' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637131228431
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:280)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362578882170880
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 

14:40:28.470 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '110588348101165911' )
┣ 结果： 
┣━ 耗时：16ms , start = 1637131228450
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

14:40:28.620 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( '110588348101165911' )
┣ 结果： 
┣━ 耗时：168ms , start = 1637131228451
┣━ 返回：RcdSet,size=1167
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 

14:40:28.631 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_2":"110588348101165911"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '110588348101165911' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：180ms , start = 1637131228451
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

14:40:28.768 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 
┣ 语句：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= ? ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( ? ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"110588348101165911","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( '110588348101165911' ) ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：313ms , start = 1637131228453
┣━ 返回：RcdSet,size=1167
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 

14:40:28.825 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'T001' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637131228814
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 

14:40:28.827 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637131228814
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

14:40:28.842 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"491342618928611328","PARAM_3":"[]","PARAM_2":"482877676047040511"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '482877676047040511' , '[]' , '491342618928611328' )
┣ 结果： 
┣━ 耗时：22ms , start = 1637131228818
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:28.845 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_17":"497513458128912385","PARAM_10":"498472974811144192","PARAM_11":"497513009569071104","PARAM_12":"490908428638621696","PARAM_13":"498963844891148289","PARAM_14":"478625404161097728","PARAM_15":"472811546343374849","PARAM_16":"499940724104495105","PARAM_9":"504683060067840001","PARAM_8":"463779102176837633","PARAM_7":"491342702357512192","PARAM_6":"499954038733803521","PARAM_5":"486485877028032513","PARAM_4":"498809237418278912","PARAM_3":"490920319637262337","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '490920319637262337' , '498809237418278912' , '486485877028032513' , '499954038733803521' , '491342702357512192' , '463779102176837633' , '504683060067840001' , '498472974811144192' , '497513009569071104' , '490908428638621696' , '498963844891148289' , '478625404161097728' , '472811546343374849' , '499940724104495105' , '497513458128912385' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：26ms , start = 1637131228818
┣━ 返回：RcdSet,size=23
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:28.872 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"484684747155439616","PARAM_18":"489922965425618944","PARAM_19":"479354710537535488","PARAM_31":"485743350629007360","PARAM_10":"472331129437814784","PARAM_32":"511607133662347264","PARAM_11":"487559532503891968","PARAM_12":"489901512886059008","PARAM_13":"471622514443812864","PARAM_14":"498885073529995264","PARAM_15":"508300419328376832","PARAM_16":"485936556654198784","PARAM_30":"477956217075924992","PARAM_9":"463402969874825216","PARAM_8":"494904212426063872","PARAM_7":"507635144501231616","PARAM_6":"478080872159903744","PARAM_5":"463400823506862080","PARAM_4":"483218056047230976","PARAM_3":"479388218479869952","PARAM_1":0,"PARAM_28":"472023108039999488","PARAM_29":"471623107291906048","PARAM_20":"474123290672103424","PARAM_21":"463400000391479296","PARAM_22":"488696580300341248","PARAM_23":"494597317773492224","PARAM_24":"502195284776849408","PARAM_25":"[]","PARAM_26":"490888724289159168","PARAM_27":"490924065570164737"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '479388218479869952' , '483218056047230976' , '463400823506862080' , '478080872159903744' , '507635144501231616' , '494904212426063872' , '463402969874825216' , '472331129437814784' , '487559532503891968' , '489901512886059008' , '471622514443812864' , '498885073529995264' , '508300419328376832' , '485936556654198784' , '484684747155439616' , '489922965425618944' , '479354710537535488' , '474123290672103424' , '463400000391479296' , '488696580300341248' , '494597317773492224' , '502195284776849408' , '[]' , '490888724289159168' , '490924065570164737' , '472023108039999488' , '471623107291906048' , '477956217075924992' , '485743350629007360' , '511607133662347264' )
┣ 结果： 
┣━ 耗时：52ms , start = 1637131228819
┣━ 返回：RcdSet,size=29
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:28.930 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"485741093254594560","PARAM_31":"474123290978287616","PARAM_32":"489922965769551872","PARAM_33":"478080877377617920","PARAM_34":"463401812293058560","PARAM_35":"485743356169682944","PARAM_36":"485936556943605760","PARAM_37":"475954740530774016","PARAM_38":"510887581764812800","PARAM_30":"473534966525853696","PARAM_28":"479388227191439360","PARAM_29":"472331133846028288","PARAM_20":"498885082019266560","PARAM_21":"472331129806913536","PARAM_22":"473626750312513536","PARAM_23":"495244161406992384","PARAM_24":"484683936333561856","PARAM_25":"489922970169376768","PARAM_26":"473733255862943744","PARAM_27":"474281120842645504","PARAM_17":"482864638480875520","PARAM_18":"472023113178021888","PARAM_19":"473503437766524928","PARAM_97":"480377918011211776","PARAM_10":"508300419894607872","PARAM_98":"494904212736442368","PARAM_11":"482573211888779264","PARAM_99":"502170004054085633","PARAM_12":"481119856855351296","PARAM_13":"463397133957988352","PARAM_14":"480389135564013568","PARAM_15":"484684747470012416","PARAM_16":"463400823850795008","PARAM_90":"463401584798203904","PARAM_91":"474123295055151104","PARAM_92":"498769910416015360","PARAM_93":"463402970206175232","PARAM_94":"507635145327509504","PARAM_95":"479354715398733824","PARAM_96":"494597318092259328","PARAM_86":"478626344431779840","PARAM_87":"494597321997156352","PARAM_88":"490245511899512832","PARAM_89":"472331326201004032","PARAM_80":"471623112182464512","PARAM_81":"482877680811769856","PARAM_82":"495243926484025344","PARAM_83":"485743351006494720","PARAM_84":"464788442501349376","PARAM_85":"471986331946319872","PARAM_103":"471666417796644864","PARAM_104":"507635154248794112","PARAM_101":"482581324939395072","PARAM_102":"489901513284517888","PARAM_107":"477952348665151488","PARAM_108":"478585177820364800","PARAM_105":"481749749448310784","PARAM_106":"494904452583522304","PARAM_75":"484680990048911360","PARAM_76":"471622514821300224","PARAM_77":"476660944341041152","PARAM_109":"489077809105338368","PARAM_78":"473609130683138048","PARAM_79":"486313023716196352","PARAM_70":"478080872541585408","PARAM_71":"473771451304902656","PARAM_72":"479330034058788864","PARAM_73":"472023108392321024","PARAM_74":"492410578774523904","PARAM_9":"481749150413619200","PARAM_8":"479354710923411456","PARAM_7":"488696580921098240","PARAM_6":"471974287931080704","PARAM_5":"479956464534814720","PARAM_110":"480488581421334528","PARAM_4":"479959568621764608","PARAM_111":"473228835811229696","PARAM_3":"463402973779722240","PARAM_2":0,"PARAM_1":0,"PARAM_64":"488696589599113216","PARAM_65":"481068386625781760","PARAM_66":"471622519044964352","PARAM_67":"485560938628382720","PARAM_68":"486551844089233408","PARAM_69":"482865232566288384","PARAM_60":"485415810584555521","PARAM_61":"478603513186746368","PARAM_62":"485936561238573056","PARAM_63":"489901519739551744","PARAM_100":"487559541341290496","PARAM_125":"478922687092097024","PARAM_126":"479329289888595968","PARAM_123":"490924383968169985","PARAM_124":"511607133742039040","PARAM_129":"501072113185062912","PARAM_127":"487559533120454656","PARAM_128":"472814616229969920","PARAM_53":"472023703798939648","PARAM_54":"479008668327608320","PARAM_55":"471620638545543168","PARAM_56":"479219962657898496","PARAM_57":"479598110457200640","PARAM_58":"463399152273850368","PARAM_59":"472037131183718400","PARAM_50":"480481730000584704","PARAM_51":"482583847255408640","PARAM_52":"472819614665932801","PARAM_130":"463399687542538240","PARAM_114":"483218056353415168","PARAM_115":"501416291903471616","PARAM_112":"485888533777612800","PARAM_113":"463400828363866112","PARAM_118":"489815788086099968","PARAM_119":"475686685250682880","PARAM_116":"478688766404329472","PARAM_117":"471623107698753536","PARAM_42":"477956221781934080","PARAM_43":"471653536266977280","PARAM_44":"479388218932854784","PARAM_45":"463397736541061120","PARAM_46":"479220710963675136","PARAM_47":"487568371366232064","PARAM_48":"481563568920068096","PARAM_49":"463400000727023616","PARAM_40":"477956217403080704","PARAM_41":"510887821632864256","PARAM_121":"484684751630761984","PARAM_122":"479329590288842752","PARAM_120":"501074102618947584"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463402973779722240' , '479959568621764608' , '479956464534814720' , '471974287931080704' , '488696580921098240' , '479354710923411456' , '481749150413619200' , '508300419894607872' , '482573211888779264' , '481119856855351296' , '463397133957988352' , '480389135564013568' , '484684747470012416' , '463400823850795008' , '482864638480875520' , '472023113178021888' , '473503437766524928' , '498885082019266560' , '472331129806913536' , '473626750312513536' , '495244161406992384' , '484683936333561856' , '489922970169376768' , '473733255862943744' , '474281120842645504' , '479388227191439360' , '472331133846028288' , '473534966525853696' , '474123290978287616' , '489922965769551872' , '478080877377617920' , '463401812293058560' , '485743356169682944' , '485936556943605760' , '475954740530774016' , '510887581764812800' , '485741093254594560' , '477956217403080704' , '510887821632864256' , '477956221781934080' , '471653536266977280' , '479388218932854784' , '463397736541061120' , '479220710963675136' , '487568371366232064' , '481563568920068096' , '463400000727023616' , '480481730000584704' , '482583847255408640' , '472819614665932801' , '472023703798939648' , '479008668327608320' , '471620638545543168' , '479219962657898496' , '479598110457200640' , '463399152273850368' , '472037131183718400' , '485415810584555521' , '478603513186746368' , '485936561238573056' , '489901519739551744' , '488696589599113216' , '481068386625781760' , '471622519044964352' , '485560938628382720' , '486551844089233408' , '482865232566288384' , '478080872541585408' , '473771451304902656' , '479330034058788864' , '472023108392321024' , '492410578774523904' , '484680990048911360' , '471622514821300224' , '476660944341041152' , '473609130683138048' , '486313023716196352' , '471623112182464512' , '482877680811769856' , '495243926484025344' , '485743351006494720' , '464788442501349376' , '471986331946319872' , '478626344431779840' , '494597321997156352' , '490245511899512832' , '472331326201004032' , '463401584798203904' , '474123295055151104' , '498769910416015360' , '463402970206175232' , '507635145327509504' , '479354715398733824' , '494597318092259328' , '480377918011211776' , '494904212736442368' , '502170004054085633' , '487559541341290496' , '482581324939395072' , '489901513284517888' , '471666417796644864' , '507635154248794112' , '481749749448310784' , '494904452583522304' , '477952348665151488' , '478585177820364800' , '489077809105338368' , '480488581421334528' , '473228835811229696' , '485888533777612800' , '463400828363866112' , '483218056353415168' , '501416291903471616' , '478688766404329472' , '471623107698753536' , '489815788086099968' , '475686685250682880' , '501074102618947584' , '484684751630761984' , '479329590288842752' , '490924383968169985' , '511607133742039040' , '478922687092097024' , '479329289888595968' , '487559533120454656' , '472814616229969920' , '501072113185062912' , '463399687542538240' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：110ms , start = 1637131228819
┣━ 返回：RcdSet,size=275
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:28.973 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"474159090990317568","PARAM_31":"473733257758769152","PARAM_32":"479598112373997568","PARAM_33":"472331135444058112","PARAM_34":"495243928195301376","PARAM_35":"479354717013540864","PARAM_36":"473534967930945536","PARAM_37":"494904218386169856","PARAM_38":"463399684191289344","PARAM_30":"480137007910092800","PARAM_28":"485888535333699584","PARAM_29":"480377919596658688","PARAM_20":"get-current-user","PARAM_21":"463400830083530752","PARAM_22":"501072632922243072","PARAM_23":"472818971712684033","PARAM_24":"478080879135031296","PARAM_25":"482583848937324544","PARAM_26":"490245513522708480","PARAM_27":"index","PARAM_17":"477956223535153152","PARAM_18":"492410580473217024","PARAM_19":"485560940150915072","PARAM_97":"472818410917462016","PARAM_10":"494597323653906432","PARAM_98":"508300428283215872","PARAM_11":"487568362436558848","PARAM_99":"485747528893988864","PARAM_12":"479329591786209280","PARAM_13":"494904448682819584","PARAM_14":"485747530676568064","PARAM_15":"482573213478420480","PARAM_16":"473609132373442560","PARAM_90":"473228716474892288","PARAM_91":"488696593290100736","PARAM_92":"477952342965092352","PARAM_93":"476679545236226048","PARAM_94":"498769993710698497","PARAM_95":"476673974453927936","PARAM_96":"486551845917949952","PARAM_86":"479330040773869568","PARAM_87":"471974284126846976","PARAM_88":"486313025783988224","PARAM_89":"480481731707666432","PARAM_80":"471985490283724800","PARAM_81":"478585173638643712","PARAM_82":"476319988295139328","PARAM_83":"475686681035407360","PARAM_84":"483218060644188160","PARAM_85":"484683932139257856","PARAM_103":"475954742317547520","PARAM_104":"501074097912938496","PARAM_101":"483218062279966720","PARAM_102":"487559544579293184","PARAM_107":"507635157855895552","PARAM_108":"480492966025101312","PARAM_105":"508300431265366016","PARAM_106":"480137012393803776","PARAM_75":"485888529902075904","PARAM_76":"482581096999944192","PARAM_77":"484680991584026624","PARAM_109":"487568374700703744","PARAM_78":"504682762972704768","PARAM_79":"472023114964795392","PARAM_70":"482865234084626432","PARAM_71":"476660946173952000","PARAM_72":"473503439284862976","PARAM_73":"479388229263425536","PARAM_74":"479959570282708992","PARAM_9":"495244163038576640","PARAM_8":"489077810774671360","PARAM_7":"481068388223811584","PARAM_6":"481338866817564672","PARAM_5":"478603508019363840","PARAM_110":"479008669908860928","PARAM_4":"463400006318030848","PARAM_111":"472811438801420289","PARAM_3":"511607134790615040","PARAM_2":0,"PARAM_1":0,"PARAM_64":"479956459719753728","PARAM_65":"485560934119505920","PARAM_66":"474281122537144320","PARAM_67":"485741095003619328","PARAM_68":"480377913779159040","PARAM_69":"494904216788140032","PARAM_60":"480492964435460096","PARAM_61":"510887822043906048","PARAM_62":"479218756208295936","PARAM_63":"489815789730267136","PARAM_100":"464788444141322240","PARAM_125":"479329291742478336","PARAM_126":"489815783782744064","PARAM_123":"463429357021429760","PARAM_124":"476319986613223424","PARAM_129":"463400007958003712","PARAM_127":"482877682514657280","PARAM_128":"471653537873395712","PARAM_53":"479220712784003072","PARAM_54":"476673967776595968","PARAM_55":"501072634599964672","PARAM_56":"479218757961515008","PARAM_57":"463429355423399936","PARAM_58":"480137014188965888","PARAM_59":"463429350570590208","PARAM_50":"476673972792983552","PARAM_51":"481338868780498944","PARAM_52":"463397738055204864","PARAM_130":"463401586228461568","PARAM_114":"474123296653180928","PARAM_115":"473626751956680704","PARAM_112":"472331327836782592","PARAM_113":"oauth","PARAM_118":"481563570933334016","PARAM_119":"494904454114443264","PARAM_116":"478956689802919936","PARAM_117":"482581098463756288","PARAM_42":"501072380383199232","PARAM_43":"478956691585499136","PARAM_44":"482581326621310976","PARAM_45":"479008663990697984","PARAM_46":"473771453230088192","PARAM_47":"479219964406923264","PARAM_48":"475686686903238656","PARAM_49":"510887582259740672","PARAM_40":"479330038903209984","PARAM_41":"485743357943873536","PARAM_121":"511607135210045440","PARAM_122":"476679546897170432","PARAM_120":"501072378579648512"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '511607134790615040' , '463400006318030848' , '478603508019363840' , '481338866817564672' , '481068388223811584' , '489077810774671360' , '495244163038576640' , '494597323653906432' , '487568362436558848' , '479329591786209280' , '494904448682819584' , '485747530676568064' , '482573213478420480' , '473609132373442560' , '477956223535153152' , '492410580473217024' , '485560940150915072' , 'get-current-user' , '463400830083530752' , '501072632922243072' , '472818971712684033' , '478080879135031296' , '482583848937324544' , '490245513522708480' , 'index' , '485888535333699584' , '480377919596658688' , '480137007910092800' , '473733257758769152' , '479598112373997568' , '472331135444058112' , '495243928195301376' , '479354717013540864' , '473534967930945536' , '494904218386169856' , '463399684191289344' , '474159090990317568' , '479330038903209984' , '485743357943873536' , '501072380383199232' , '478956691585499136' , '482581326621310976' , '479008663990697984' , '473771453230088192' , '479219964406923264' , '475686686903238656' , '510887582259740672' , '476673972792983552' , '481338868780498944' , '463397738055204864' , '479220712784003072' , '476673967776595968' , '501072634599964672' , '479218757961515008' , '463429355423399936' , '480137014188965888' , '463429350570590208' , '480492964435460096' , '510887822043906048' , '479218756208295936' , '489815789730267136' , '479956459719753728' , '485560934119505920' , '474281122537144320' , '485741095003619328' , '480377913779159040' , '494904216788140032' , '482865234084626432' , '476660946173952000' , '473503439284862976' , '479388229263425536' , '479959570282708992' , '485888529902075904' , '482581096999944192' , '484680991584026624' , '504682762972704768' , '472023114964795392' , '471985490283724800' , '478585173638643712' , '476319988295139328' , '475686681035407360' , '483218060644188160' , '484683932139257856' , '479330040773869568' , '471974284126846976' , '486313025783988224' , '480481731707666432' , '473228716474892288' , '488696593290100736' , '477952342965092352' , '476679545236226048' , '498769993710698497' , '476673974453927936' , '486551845917949952' , '472818410917462016' , '508300428283215872' , '485747528893988864' , '464788444141322240' , '483218062279966720' , '487559544579293184' , '475954742317547520' , '501074097912938496' , '508300431265366016' , '480137012393803776' , '507635157855895552' , '480492966025101312' , '487568374700703744' , '479008669908860928' , '472811438801420289' , '472331327836782592' , 'oauth' , '474123296653180928' , '473626751956680704' , '478956689802919936' , '482581098463756288' , '481563570933334016' , '494904454114443264' , '501072378579648512' , '511607135210045440' , '476679546897170432' , '463429357021429760' , '476319986613223424' , '479329291742478336' , '489815783782744064' , '482877682514657280' , '471653537873395712' , '463400007958003712' , '463401586228461568' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：143ms , start = 1637131228828
┣━ 返回：RcdSet,size=145
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:28.977 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"476673967462023168","PARAM_18":"485888529612668928","PARAM_19":"478585173336653824","PARAM_20":"489818737319346176","PARAM_10":"487568361882910720","PARAM_21":"477952342537273344","PARAM_11":"480137007553576960","PARAM_22":"480377913464586240","PARAM_12":"471974283854217216","PARAM_23":"479956459375820800","PARAM_13":"463399683914465280","PARAM_24":"490923970208468992","PARAM_14":"487660170021703680","PARAM_15":"479008663701291008","PARAM_16":"478603507688013824","PARAM_9":"484687827645239296","PARAM_8":"463429350247628800","PARAM_7":"501074097552228352","PARAM_6":"494904448380829696","PARAM_5":"[]","PARAM_4":"463708992481263616","PARAM_3":"485560933834293248"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '485560933834293248' , '463708992481263616' , '[]' , '494904448380829696' , '501074097552228352' , '463429350247628800' , '484687827645239296' , '487568361882910720' , '480137007553576960' , '471974283854217216' , '463399683914465280' , '487660170021703680' , '479008663701291008' , '478603507688013824' , '476673967462023168' , '485888529612668928' , '478585173336653824' , '489818737319346176' , '477952342537273344' , '480377913464586240' , '479956459375820800' , '490923970208468992' )
┣ 结果： 
┣━ 耗时：147ms , start = 1637131228829
┣━ 返回：RcdSet,size=21
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:29.011 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"473771445873278976","PARAM_18":"501416282168492032","PARAM_19":"482583842692005888","PARAM_20":"473534962490933248","PARAM_10":"484680928828850176","PARAM_21":"487660170021703680","PARAM_11":"490638744550907904","PARAM_22":"490923311769849856","PARAM_12":"481119852224839680","PARAM_23":"471666413233242112","PARAM_13":"481068382330814464","PARAM_24":"479329585473781760","PARAM_14":"479219957951889408","PARAM_15":"500337554411757568","PARAM_16":"471653531770683392","PARAM_9":"490923211228188672","PARAM_8":"472023699273285632","PARAM_7":"465893030000328704","PARAM_6":"473503433593192448","PARAM_5":"[]","PARAM_4":"495244156847783936","PARAM_3":"501072627503202304"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '501072627503202304' , '495244156847783936' , '[]' , '473503433593192448' , '465893030000328704' , '472023699273285632' , '490923211228188672' , '484680928828850176' , '490638744550907904' , '481119852224839680' , '481068382330814464' , '479219957951889408' , '500337554411757568' , '471653531770683392' , '473771445873278976' , '501416282168492032' , '482583842692005888' , '473534962490933248' , '487660170021703680' , '490923311769849856' , '471666413233242112' , '479329585473781760' )
┣ 结果： 
┣━ 耗时：165ms , start = 1637131228844
┣━ 返回：RcdSet,size=21
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:29.030 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"498780101593268225","PARAM_31":"501653165884575744","PARAM_32":"501072627838746624","PARAM_33":"498472886441353216","PARAM_34":"500338282807173120","PARAM_35":"479219958253879296","PARAM_36":"498472737438703616","PARAM_37":"486485883655032833","PARAM_38":"471653532135587840","PARAM_30":"474159041438810113","PARAM_28":"485819338599706624","PARAM_29":"498780092948807681","PARAM_20":"497513282840559617","PARAM_21":"499940744069382145","PARAM_22":"498780063144083457","PARAM_23":"498472430189158400","PARAM_24":"498808937571680257","PARAM_25":"498809674066296832","PARAM_26":"472814706734661633","PARAM_27":"490909222070915073","PARAM_17":"474157822892834817","PARAM_18":"485415687787917312","PARAM_19":"501653323472965633","PARAM_97":"498963891439534081","PARAM_10":"499954030739460097","PARAM_98":"503188930321977344","PARAM_11":"498971349855764481","PARAM_99":"501424056243851264","PARAM_12":"497490986344120320","PARAM_13":"464827069453303809","PARAM_14":"499939051860656128","PARAM_15":"490925002938388480","PARAM_16":"501390061263130624","PARAM_90":"501653226060255233","PARAM_91":"501073274482987009","PARAM_92":"465893287996162048","PARAM_93":"497513348733075457","PARAM_94":"478598569259962368","PARAM_95":"486487652200091649","PARAM_96":"463779099165327360","PARAM_86":"498963890651004929","PARAM_87":"499954026838757376","PARAM_88":"499954055192252417","PARAM_89":"497513389245857793","PARAM_80":"491206513122086913","PARAM_81":"498472529019543553","PARAM_82":"472036614189613057","PARAM_83":"471666413560397824","PARAM_84":"498809287695400961","PARAM_85":"498473113529360385","PARAM_103":"495244157174939648","PARAM_104":"490908208253112321","PARAM_101":"498963847839744001","PARAM_102":"498971162877886465","PARAM_107":"478625384087158785","PARAM_108":"490915625305116672","PARAM_105":"498963895084384257","PARAM_106":"490920008524763136","PARAM_75":"498963846124273665","PARAM_76":"498779937252048897","PARAM_77":"504060697101996032","PARAM_109":"481068382628610048","PARAM_78":"464827137099038721","PARAM_79":"489424103724285952","PARAM_70":"490909866307620865","PARAM_71":"498472318377402368","PARAM_72":"498809154048098304","PARAM_73":"498963856643588097","PARAM_74":"464827257593004033","PARAM_9":"502170156177297409","PARAM_8":"498962211822108672","PARAM_7":"478626411003772928","PARAM_6":"473227868306931712","PARAM_5":"498474569439387649","PARAM_110":"486485770673065984","PARAM_4":"498473196719185920","PARAM_111":"480486574191026176","PARAM_3":"504412977160523776","PARAM_2":0,"PARAM_1":0,"PARAM_64":"473550018758836225","PARAM_65":"472023699592052736","PARAM_66":"497513204994277377","PARAM_67":"467361506980265985","PARAM_68":"490907983723630592","PARAM_69":"498970926130397185","PARAM_60":"499954049295060993","PARAM_61":"498780083792642049","PARAM_62":"478598694187307009","PARAM_63":"478625395923484673","PARAM_100":"498809056404701185","PARAM_125":"499954050071007232","PARAM_126":"484680929105674240","PARAM_123":"499939072068812801","PARAM_124":"473771446246572032","PARAM_129":"498582106398523393","PARAM_127":"499939062635823104","PARAM_128":"499939072706347008","PARAM_53":"473612721665867776","PARAM_54":"473503433886793728","PARAM_55":"483567801252978688","PARAM_56":"498809191108968448","PARAM_57":"498808864725008384","PARAM_58":"473612688681861120","PARAM_59":"498474299326210049","PARAM_50":"497514241515847681","PARAM_51":"498962214124781568","PARAM_52":"498962218231005184","PARAM_130":"474158850757361665","PARAM_114":"474158954033709056","PARAM_115":"472025257461415936","PARAM_112":"499940736691601409","PARAM_113":"474155529355132929","PARAM_118":"479329585788354560","PARAM_119":"499939054448541696","PARAM_116":"471986431431016449","PARAM_117":"498970914482814977","PARAM_42":"490638839023411200","PARAM_43":"501653278359031809","PARAM_44":"501653361645326336","PARAM_45":"498963857323065345","PARAM_46":"482583842985607168","PARAM_47":"501653242430623745","PARAM_48":"473534962767757312","PARAM_49":"464828186346127361","PARAM_40":"498963858317115392","PARAM_41":"499939063264968705","PARAM_121":"481119852547801088","PARAM_122":"496813531019083776","PARAM_120":"491206464543657984"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '504412977160523776' , '498473196719185920' , '498474569439387649' , '473227868306931712' , '478626411003772928' , '498962211822108672' , '502170156177297409' , '499954030739460097' , '498971349855764481' , '497490986344120320' , '464827069453303809' , '499939051860656128' , '490925002938388480' , '501390061263130624' , '474157822892834817' , '485415687787917312' , '501653323472965633' , '497513282840559617' , '499940744069382145' , '498780063144083457' , '498472430189158400' , '498808937571680257' , '498809674066296832' , '472814706734661633' , '490909222070915073' , '485819338599706624' , '498780092948807681' , '474159041438810113' , '501653165884575744' , '501072627838746624' , '498472886441353216' , '500338282807173120' , '479219958253879296' , '498472737438703616' , '486485883655032833' , '471653532135587840' , '498780101593268225' , '498963858317115392' , '499939063264968705' , '490638839023411200' , '501653278359031809' , '501653361645326336' , '498963857323065345' , '482583842985607168' , '501653242430623745' , '473534962767757312' , '464828186346127361' , '497514241515847681' , '498962214124781568' , '498962218231005184' , '473612721665867776' , '473503433886793728' , '483567801252978688' , '498809191108968448' , '498808864725008384' , '473612688681861120' , '498474299326210049' , '499954049295060993' , '498780083792642049' , '478598694187307009' , '478625395923484673' , '473550018758836225' , '472023699592052736' , '497513204994277377' , '467361506980265985' , '490907983723630592' , '498970926130397185' , '490909866307620865' , '498472318377402368' , '498809154048098304' , '498963856643588097' , '464827257593004033' , '498963846124273665' , '498779937252048897' , '504060697101996032' , '464827137099038721' , '489424103724285952' , '491206513122086913' , '498472529019543553' , '472036614189613057' , '471666413560397824' , '498809287695400961' , '498473113529360385' , '498963890651004929' , '499954026838757376' , '499954055192252417' , '497513389245857793' , '501653226060255233' , '501073274482987009' , '465893287996162048' , '497513348733075457' , '478598569259962368' , '486487652200091649' , '463779099165327360' , '498963891439534081' , '503188930321977344' , '501424056243851264' , '498809056404701185' , '498963847839744001' , '498971162877886465' , '495244157174939648' , '490908208253112321' , '498963895084384257' , '490920008524763136' , '478625384087158785' , '490915625305116672' , '481068382628610048' , '486485770673065984' , '480486574191026176' , '499940736691601409' , '474155529355132929' , '474158954033709056' , '472025257461415936' , '471986431431016449' , '498970914482814977' , '479329585788354560' , '499939054448541696' , '491206464543657984' , '481119852547801088' , '496813531019083776' , '499939072068812801' , '473771446246572032' , '499954050071007232' , '484680929105674240' , '499939062635823104' , '499939072706347008' , '498582106398523393' , '474158850757361665' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：178ms , start = 1637131228848
┣━ 返回：RcdSet,size=110
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:29.032 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_17":"478688762159693824","PARAM_18":"501389626531909632","PARAM_19":"490803384081711104","PARAM_20":"473733250494234624","PARAM_10":"485747524208951296","PARAM_11":"473609125796773888","PARAM_12":"492410573934297088","PARAM_13":"498885073529995264","PARAM_14":"480389130912530432","PARAM_15":"481749744998154240","PARAM_16":"485741088418562048","PARAM_9":"476679540945453056","PARAM_8":"474281113125126144","PARAM_7":"482573207459594240","PARAM_6":"486313018175520768","PARAM_5":"475954735753461760","PARAM_4":"495243921824153600","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '495243921824153600' , '475954735753461760' , '486313018175520768' , '482573207459594240' , '474281113125126144' , '476679540945453056' , '485747524208951296' , '473609125796773888' , '492410573934297088' , '498885073529995264' , '480389130912530432' , '481749744998154240' , '485741088418562048' , '478688762159693824' , '501389626531909632' , '490803384081711104' , '473733250494234624' )
┣ 结果： 
┣━ 耗时：156ms , start = 1637131228875
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:29.040 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"480488576534970368","PARAM_11":"479220705905344512","PARAM_12":"481563563521998848","PARAM_13":"490803523777200128","PARAM_9":"472331321499189248","PARAM_8":"490803286488645632","PARAM_7":"479218751024136192","PARAM_6":"490245507570991104","PARAM_5":"463399148020826112","PARAM_4":"482864633716146176","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '482864633716146176' , '463399148020826112' , '490245507570991104' , '479218751024136192' , '490803286488645632' , '472331321499189248' , '480488576534970368' , '479220705905344512' , '481563563521998848' , '490803523777200128' )
┣ 结果： 
┣━ 耗时：59ms , start = 1637131228980
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:29.042 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_10":"498885073529995264","PARAM_11":"486551839098011648","PARAM_12":"476660938984914944","PARAM_13":"482581320229191680","PARAM_14":"480481725315547136","PARAM_9":"498582527229820928","PARAM_8":"482581092939857920","PARAM_7":"482877676047040512","PARAM_6":"510887580426829824","PARAM_5":"[]","PARAM_4":"464788438000861184","PARAM_3":"505300850025955328"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '505300850025955328' , '464788438000861184' , '[]' , '510887580426829824' , '482877676047040512' , '482581092939857920' , '498582527229820928' , '498885073529995264' , '486551839098011648' , '476660938984914944' , '482581320229191680' , '480481725315547136' )
┣ 结果： 
┣━ 耗时：96ms , start = 1637131228945
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:29.055 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"510887820433293312","PARAM_8":"463401580721340416","PARAM_10":"473626745103187968","PARAM_7":"463401807993896960","PARAM_6":"481749145309151232","PARAM_5":"501072373705867264","PARAM_4":"479959564171608064","PARAM_3":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '[]' , '479959564171608064' , '501072373705867264' , '481749145309151232' , '463401807993896960' , '463401580721340416' , '510887820433293312' , '473626745103187968' )
┣ 结果： 
┣━ 耗时：36ms , start = 1637131229018
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:29.069 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"476319981961740288","PARAM_8":"480492959255494656","PARAM_10":"478956684543262720","PARAM_7":"501416282168492032","PARAM_6":"463397731918938112","PARAM_5":"[]","PARAM_4":"498885073529995264","PARAM_3":"482865228384567296"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '482865228384567296' , '498885073529995264' , '[]' , '463397731918938112' , '501416282168492032' , '480492959255494656' , '476319981961740288' , '478956684543262720' )
┣ 结果： 
┣━ 耗时：22ms , start = 1637131229046
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:29.089 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"473733250888499200","PARAM_31":"486313018553008128","PARAM_32":"472023705464078336","PARAM_33":"479329284624744448","PARAM_34":"485747524523524096","PARAM_35":"492410574299201536","PARAM_36":"481338869564833792","PARAM_37":"478603514990297088","PARAM_38":"481749751662903296","PARAM_30":"481119858512101376","PARAM_28":"478688767939444736","PARAM_29":"485936563683852288","PARAM_20":"463401814398599168","PARAM_21":"482573214082400256","PARAM_22":"471623114069901312","PARAM_23":"484684753241374720","PARAM_24":"478688762461683712","PARAM_25":"498885085060136960","PARAM_26":"486551846547095552","PARAM_27":"485936562941460480","PARAM_17":"478585179489697792","PARAM_18":"480488583736590336","PARAM_19":"471653538498347008","PARAM_97":"475954736080617472","PARAM_10":"480137014788751360","PARAM_98":"479220713446703104","PARAM_11":"477956224147521536","PARAM_99":"501074104456052736","PARAM_12":"475686687532384256","PARAM_13":"463399154400362496","PARAM_14":"495243928853807104","PARAM_15":"473534968501370880","PARAM_16":"476679541226471424","PARAM_90":"471974289361338368","PARAM_91":"501416296345239552","PARAM_92":"484684753866326016","PARAM_93":"479329592423743488","PARAM_94":"471622521137922048","PARAM_95":"hrm","PARAM_96":"489901521874452480","PARAM_86":"479329292388401152","PARAM_87":"478922689172471808","PARAM_88":"482864640208928768","PARAM_89":"471623114736795648","PARAM_80":"479959570941214720","PARAM_81":"484683937952563200","PARAM_82":"471666420116094976","PARAM_83":"489901522558124032","PARAM_84":"477952351441780736","PARAM_85":"474158815193858049","PARAM_103":"463397738646601728","PARAM_104":"475954743139631104","PARAM_101":"481119859145441280","PARAM_102":"482864640871628800","PARAM_107":"478922689868726272","PARAM_108":"501072381054287872","PARAM_105":"471986628336812032","PARAM_106":"463402976065617920","PARAM_75":"501416295116308480","PARAM_76":"482865234667634688","PARAM_77":"484683938606874624","PARAM_109":"463401586794692608","PARAM_78":"507635159172907008","PARAM_79":"473771454031200256","PARAM_70":"498885086280679424","PARAM_71":"481749152917618688","PARAM_72":"495201409763901440","PARAM_73":"479956466397085696","PARAM_74":"480389137287872512","PARAM_9":"485560940721340416","PARAM_8":"492410581156888576","PARAM_7":"489922971863875584","PARAM_6":"471622520550719488","PARAM_5":"479354717600743424","PARAM_110":"472023706080641024","PARAM_4":"501072114866978816","PARAM_111":"486313026476048384","PARAM_3":"478080879852257280","PARAM_2":0,"PARAM_1":0,"PARAM_64":"481749745337892864","PARAM_65":"463401813807202304","PARAM_66":"464788444783050752","PARAM_67":"480488583120027648","PARAM_68":"485741095674707968","PARAM_69":"478603515636219904","PARAM_60":"489922972543352832","PARAM_61":"473503439867871232","PARAM_62":"473609133057114112","PARAM_63":"463399688926658560","PARAM_100":"474155093021687808","PARAM_125":"479956467156254720","PARAM_126":"471666419482755072","PARAM_123":"472358699843715073","PARAM_124":"481749751037952000","PARAM_129":"485741088754106368","PARAM_127":"474281123241787392","PARAM_128":"490245514197991424","PARAM_53":"479388230056148992","PARAM_54":"480481732412309504","PARAM_55":"495243922151309312","PARAM_56":"478585180114649088","PARAM_57":"510887582448484352","PARAM_58":"480389137958961152","PARAM_59":"485743358573019136","PARAM_50":"489077811454148608","PARAM_51":"482877683189940224","PARAM_52":"474281113531973632","PARAM_130":"482573207753195520","PARAM_114":"501389817515347968","PARAM_115":"498770119770505217","PARAM_112":"510887822199095296","PARAM_113":"463399689467723776","PARAM_118":"484681000786329600","PARAM_119":"501074105164890112","PARAM_116":"479008670655447040","PARAM_117":"471974289902403584","PARAM_42":"478688768535035904","PARAM_43":"480389131239686144","PARAM_44":"482583849616801792","PARAM_45":"463402975415500800","PARAM_46":"473609126128123904","PARAM_47":"476660946866012160","PARAM_48":"463399153808965632","PARAM_49":"474154919352336384","PARAM_40":"501072115496124416","PARAM_41":"477952350720360448","PARAM_121":"481749152221364224","PARAM_122":"479598113124777984","PARAM_120":"474123297290715136"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478080879852257280' , '501072114866978816' , '479354717600743424' , '471622520550719488' , '489922971863875584' , '492410581156888576' , '485560940721340416' , '480137014788751360' , '477956224147521536' , '475686687532384256' , '463399154400362496' , '495243928853807104' , '473534968501370880' , '476679541226471424' , '478585179489697792' , '480488583736590336' , '471653538498347008' , '463401814398599168' , '482573214082400256' , '471623114069901312' , '484684753241374720' , '478688762461683712' , '498885085060136960' , '486551846547095552' , '485936562941460480' , '478688767939444736' , '485936563683852288' , '481119858512101376' , '486313018553008128' , '472023705464078336' , '479329284624744448' , '485747524523524096' , '492410574299201536' , '481338869564833792' , '478603514990297088' , '481749751662903296' , '473733250888499200' , '501072115496124416' , '477952350720360448' , '478688768535035904' , '480389131239686144' , '482583849616801792' , '463402975415500800' , '473609126128123904' , '476660946866012160' , '463399153808965632' , '474154919352336384' , '489077811454148608' , '482877683189940224' , '474281113531973632' , '479388230056148992' , '480481732412309504' , '495243922151309312' , '478585180114649088' , '510887582448484352' , '480389137958961152' , '485743358573019136' , '489922972543352832' , '473503439867871232' , '473609133057114112' , '463399688926658560' , '481749745337892864' , '463401813807202304' , '464788444783050752' , '480488583120027648' , '485741095674707968' , '478603515636219904' , '498885086280679424' , '481749152917618688' , '495201409763901440' , '479956466397085696' , '480389137287872512' , '501416295116308480' , '482865234667634688' , '484683938606874624' , '507635159172907008' , '473771454031200256' , '479959570941214720' , '484683937952563200' , '471666420116094976' , '489901522558124032' , '477952351441780736' , '474158815193858049' , '479329292388401152' , '478922689172471808' , '482864640208928768' , '471623114736795648' , '471974289361338368' , '501416296345239552' , '484684753866326016' , '479329592423743488' , '471622521137922048' , 'hrm' , '489901521874452480' , '475954736080617472' , '479220713446703104' , '501074104456052736' , '474155093021687808' , '481119859145441280' , '482864640871628800' , '463397738646601728' , '475954743139631104' , '471986628336812032' , '463402976065617920' , '478922689868726272' , '501072381054287872' , '463401586794692608' , '472023706080641024' , '486313026476048384' , '510887822199095296' , '463399689467723776' , '501389817515347968' , '498770119770505217' , '479008670655447040' , '471974289902403584' , '484681000786329600' , '501074105164890112' , '474123297290715136' , '481749152221364224' , '479598113124777984' , '472358699843715073' , '481749751037952000' , '479956467156254720' , '471666419482755072' , '474281123241787392' , '490245514197991424' , '485741088754106368' , '482573207753195520' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：103ms , start = 1637131228984
┣━ 返回：RcdSet,size=97
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:29.126 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"475686692922064896","PARAM_31":"485560945016307712","PARAM_32":"476673982108532736","PARAM_33":"471623119124037632","PARAM_34":"489815795505823744","PARAM_35":"482865239109402624","PARAM_36":"489922978209857536","PARAM_37":"479219970283143168","PARAM_38":"471623119950315520","PARAM_30":"472331333301960704","PARAM_28":"473733264192831488","PARAM_29":"501072640497156096","PARAM_20":"471622524862464000","PARAM_21":"481749158206636032","PARAM_22":"478688773647892480","PARAM_23":"473534972766978048","PARAM_24":"501072386309750784","PARAM_25":"463429362776014848","PARAM_26":"471666425635799040","PARAM_27":"478922694239191040","PARAM_17":"487559555773890560","PARAM_18":"485560945611898880","PARAM_19":"463400013167329280","PARAM_97":"478585183470092288","PARAM_10":"487559557153816576","PARAM_98":"471653543871250432","PARAM_11":"474123302428737536","PARAM_99":"479956473208635392","PARAM_12":"485936567093821440","PARAM_13":"481749158911279104","PARAM_14":"479956472495603712","PARAM_15":"489077816151769088","PARAM_16":"478585184673857536","PARAM_90":"463400012525600768","PARAM_91":"495244168478588928","PARAM_92":"471986344285962240","PARAM_93":"474123301828952064","PARAM_94":"479959575810801664","PARAM_95":"463399157952937984","PARAM_96":"481749145669861376","PARAM_86":"478603520921042944","PARAM_87":"475955437510852608","PARAM_88":"463402979890823168","PARAM_89":"479354721128153088","PARAM_80":"463401590787670016","PARAM_81":"501072119862394880","PARAM_82":"510887820517179392","PARAM_83":"472023711478710272","PARAM_84":"487568385933049856","PARAM_85":"489922977547157504","PARAM_103":"471622526703763456","PARAM_104":"471974294486777856","PARAM_101":"475686692318085120","PARAM_102":"463399158544334848","PARAM_107":"479959564469403648","PARAM_108":"476660952759009280","PARAM_105":"472358185009676289","PARAM_106":"501074109107535872","PARAM_75":"477956229193269248","PARAM_76":"479959576465113088","PARAM_77":"463399692735086592","PARAM_109":"481749756972892160","PARAM_78":"482877688223105024","PARAM_79":"471622526116560896","PARAM_70":"481749756356329472","PARAM_71":"463399693292929024","PARAM_72":"482865239696605184","PARAM_73":"482877688894193664","PARAM_74":"501072641218576384","PARAM_9":"487568387254255616","PARAM_8":"472036810977968129","PARAM_7":"463429362113314816","PARAM_6":"495243933782114304","PARAM_5":"479218764370411520","PARAM_110":"473036391530364929","PARAM_4":"463401808295886848","PARAM_111":"463397743117729792","PARAM_3":"472331140393336832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"463401817988923392","PARAM_65":"495244169128706048","PARAM_66":"472814243020800001","PARAM_67":"501072374041411584","PARAM_68":"473534973345792000","PARAM_69":"476660952100503552","PARAM_60":"463397743721709568","PARAM_61":"476673981483581440","PARAM_62":"482581103345926144","PARAM_63":"472023709545136128","PARAM_100":"480389141578645504","PARAM_125":"489077815459708928","PARAM_126":"479956471090511872","PARAM_123":"478688773039718400","PARAM_124":"478585185282031616","PARAM_129":"473549948382609408","PARAM_127":"482581332891795456","PARAM_128":"479220719629107200","PARAM_53":"495924945906302976","PARAM_54":"471666424977293312","PARAM_55":"463401581010747392","PARAM_56":"463401590217244672","PARAM_57":"482581103912157184","PARAM_58":"478688771848536064","PARAM_59":"473733264926834688","PARAM_50":"479219970929065984","PARAM_51":"470155869825269760","PARAM_52":"489815796164329472","PARAM_130":"477956229818220544","PARAM_114":"463401818576125952","PARAM_115":"463402980524163072","PARAM_112":"472331141001510912","PARAM_113":"479220720316973056","PARAM_118":"482864645908987904","PARAM_119":"495243934444814336","PARAM_116":"471974293945712640","PARAM_117":"472331333985632256","PARAM_42":"473503443139428352","PARAM_43":"479218763728683008","PARAM_44":"463400835502571520","PARAM_45":"473626745392594944","PARAM_46":"463400834823094272","PARAM_47":"501072386968256512","PARAM_48":"482581332237484032","PARAM_49":"472023710841176064","PARAM_40":"479329296838557696","PARAM_41":"471653543221133312","PARAM_121":"498885092861542400","PARAM_122":"482864646571687936","PARAM_120":"478603521634074624"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '472331140393336832' , '463401808295886848' , '479218764370411520' , '495243933782114304' , '463429362113314816' , '472036810977968129' , '487568387254255616' , '487559557153816576' , '474123302428737536' , '485936567093821440' , '481749158911279104' , '479956472495603712' , '489077816151769088' , '478585184673857536' , '487559555773890560' , '485560945611898880' , '463400013167329280' , '471622524862464000' , '481749158206636032' , '478688773647892480' , '473534972766978048' , '501072386309750784' , '463429362776014848' , '471666425635799040' , '478922694239191040' , '473733264192831488' , '501072640497156096' , '472331333301960704' , '485560945016307712' , '476673982108532736' , '471623119124037632' , '489815795505823744' , '482865239109402624' , '489922978209857536' , '479219970283143168' , '471623119950315520' , '475686692922064896' , '479329296838557696' , '471653543221133312' , '473503443139428352' , '479218763728683008' , '463400835502571520' , '473626745392594944' , '463400834823094272' , '501072386968256512' , '482581332237484032' , '472023710841176064' , '479219970929065984' , '470155869825269760' , '489815796164329472' , '495924945906302976' , '471666424977293312' , '463401581010747392' , '463401590217244672' , '482581103912157184' , '478688771848536064' , '473733264926834688' , '463397743721709568' , '476673981483581440' , '482581103345926144' , '472023709545136128' , '463401817988923392' , '495244169128706048' , '472814243020800001' , '501072374041411584' , '473534973345792000' , '476660952100503552' , '481749756356329472' , '463399693292929024' , '482865239696605184' , '482877688894193664' , '501072641218576384' , '477956229193269248' , '479959576465113088' , '463399692735086592' , '482877688223105024' , '471622526116560896' , '463401590787670016' , '501072119862394880' , '510887820517179392' , '472023711478710272' , '487568385933049856' , '489922977547157504' , '478603520921042944' , '475955437510852608' , '463402979890823168' , '479354721128153088' , '463400012525600768' , '495244168478588928' , '471986344285962240' , '474123301828952064' , '479959575810801664' , '463399157952937984' , '481749145669861376' , '478585183470092288' , '471653543871250432' , '479956473208635392' , '480389141578645504' , '475686692318085120' , '463399158544334848' , '471622526703763456' , '471974294486777856' , '472358185009676289' , '501074109107535872' , '479959564469403648' , '476660952759009280' , '481749756972892160' , '473036391530364929' , '463397743117729792' , '472331141001510912' , '479220720316973056' , '463401818576125952' , '463402980524163072' , '471974293945712640' , '472331333985632256' , '482864645908987904' , '495243934444814336' , '478603521634074624' , '498885092861542400' , '482864646571687936' , '478688773039718400' , '478585185282031616' , '489077815459708928' , '479956471090511872' , '482581332891795456' , '479220719629107200' , '473549948382609408' , '477956229818220544' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：77ms , start = 1637131229047
┣━ 返回：RcdSet,size=190
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:29.130 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"474158548662616065","PARAM_31":"482581327950905344","PARAM_32":"463399154698158080","PARAM_33":"482581093229264896","PARAM_34":"482581099617189888","PARAM_35":"488696594527420416","PARAM_36":"481563572455866368","PARAM_37":"478956693149974528","PARAM_38":"483218062917500928","PARAM_30":"481749153626456064","PARAM_28":"system_config","PARAM_29":"494597324853477376","PARAM_20":"479220714138763264","PARAM_21":"479330042220904448","PARAM_22":"472331136572325888","PARAM_23":"473771454769397760","PARAM_24":"463400008926887936","PARAM_25":"484683939244408832","PARAM_26":"475686688278970368","PARAM_27":"479598113862975488","PARAM_17":"479218759370801152","PARAM_18":"479388413435314177","PARAM_19":"485741096391933952","PARAM_97":"489815790388772864","PARAM_10":"485853808635678720","PARAM_98":"472331328520454144","PARAM_11":"479354718158585856","PARAM_99":"494597324215943168","PARAM_12":"473503440530571264","PARAM_13":"463397133957988354","PARAM_14":"480481733238587392","PARAM_15":"473626753412104192","PARAM_16":"485888535908319232","PARAM_90":"478956692394999808","PARAM_91":"485395845907230720","PARAM_92":"463401814696394752","PARAM_93":"489815791064055808","PARAM_94":"463400831098552320","PARAM_95":"476673975825465344","PARAM_96":"472331135993511936","PARAM_86":"501072635946336256","PARAM_87":"495244163676110848","PARAM_88":"472331329199931392","PARAM_89":"482581320564736000","PARAM_80":"474281123879321600","PARAM_81":"501072635275247616","PARAM_82":"482583850279501824","PARAM_83":"476673976400084992","PARAM_84":"464788438315433984","PARAM_85":"476660947629375488","PARAM_103":"479008671368478720","PARAM_104":"478603516361834496","PARAM_101":"481119859787169792","PARAM_102":"511607135369428992","PARAM_107":"495244164322033664","PARAM_108":"486551839387418624","PARAM_105":"472023116420218880","PARAM_106":"479959571725549568","PARAM_75":"479218758599049216","PARAM_76":"473534969071796224","PARAM_77":"510887580523298816","PARAM_109":"479219965778460672","PARAM_78":"479598105545670656","PARAM_79":"485560941274988544","PARAM_70":"481563571654754304","PARAM_71":"494904219631878144","PARAM_72":"487568375958994944","PARAM_73":"489901523275350016","PARAM_74":"498770254759985153","PARAM_9":"464788445420584960","PARAM_8":"472023115707187200","PARAM_7":"498581971681673216","PARAM_6":"479329293776715776","PARAM_5":"481338870340780032","PARAM_110":"480481725646897152","PARAM_4":"508300433685479424","PARAM_111":"480377920796229632","PARAM_3":"476319989616345088","PARAM_2":0,"PARAM_1":0,"PARAM_64":"478080880531734528","PARAM_65":"472023706713980928","PARAM_66":"463401587079905280","PARAM_67":"471666420770406400","PARAM_68":"480377920209027072","PARAM_69":"485888536512299008","PARAM_60":"473626752741015552","PARAM_61":"463397739233804288","PARAM_62":"463400830758813696","PARAM_63":"481068389410799616","PARAM_100":"485747532043911168","PARAM_125":"488696595773128704","PARAM_126":"481068388831985664","PARAM_123":"483218063576006656","PARAM_124":"501072381725376512","PARAM_129":"476679548117712896","PARAM_127":"478178015856033792","PARAM_128":"476319988987199488","PARAM_53":"463429357650575360","PARAM_54":"475954743840079872","PARAM_55":"476679547505344512","PARAM_56":"498885074154946560","PARAM_57":"480492967241449472","PARAM_58":"494904455314014208","PARAM_59":"487568377175343104","PARAM_50":"487559545757892608","PARAM_51":"463399689744547840","PARAM_52":"480137015552114688","PARAM_130":"494904219002732544","PARAM_114":"511607135537201152","PARAM_115":"476660939324653568","PARAM_112":"480492966641664000","PARAM_113":"482877676386779136","PARAM_118":"501072116167213056","PARAM_119":"487559547058126848","PARAM_116":"463400008603926528","PARAM_117":"471653539131686912","PARAM_42":"482581099034181632","PARAM_43":"473733259285495808","PARAM_44":"479330041516261376","PARAM_45":"477952352276447232","PARAM_46":"473733258505355264","PARAM_47":"482581327279816704","PARAM_48":"510887582641422336","PARAM_49":"485747531372822528","PARAM_40":"463429357977731072","PARAM_41":"472036243182452736","PARAM_121":"508300432511074304","PARAM_122":"494904454714228736","PARAM_120":"479219965136732160"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '476319989616345088' , '508300433685479424' , '481338870340780032' , '479329293776715776' , '498581971681673216' , '472023115707187200' , '464788445420584960' , '485853808635678720' , '479354718158585856' , '473503440530571264' , '463397133957988354' , '480481733238587392' , '473626753412104192' , '485888535908319232' , '479218759370801152' , '479388413435314177' , '485741096391933952' , '479220714138763264' , '479330042220904448' , '472331136572325888' , '473771454769397760' , '463400008926887936' , '484683939244408832' , '475686688278970368' , '479598113862975488' , 'system_config' , '494597324853477376' , '481749153626456064' , '482581327950905344' , '463399154698158080' , '482581093229264896' , '482581099617189888' , '488696594527420416' , '481563572455866368' , '478956693149974528' , '483218062917500928' , '474158548662616065' , '463429357977731072' , '472036243182452736' , '482581099034181632' , '473733259285495808' , '479330041516261376' , '477952352276447232' , '473733258505355264' , '482581327279816704' , '510887582641422336' , '485747531372822528' , '487559545757892608' , '463399689744547840' , '480137015552114688' , '463429357650575360' , '475954743840079872' , '476679547505344512' , '498885074154946560' , '480492967241449472' , '494904455314014208' , '487568377175343104' , '473626752741015552' , '463397739233804288' , '463400830758813696' , '481068389410799616' , '478080880531734528' , '472023706713980928' , '463401587079905280' , '471666420770406400' , '480377920209027072' , '485888536512299008' , '481563571654754304' , '494904219631878144' , '487568375958994944' , '489901523275350016' , '498770254759985153' , '479218758599049216' , '473534969071796224' , '510887580523298816' , '479598105545670656' , '485560941274988544' , '474281123879321600' , '501072635275247616' , '482583850279501824' , '476673976400084992' , '464788438315433984' , '476660947629375488' , '501072635946336256' , '495244163676110848' , '472331329199931392' , '482581320564736000' , '478956692394999808' , '485395845907230720' , '463401814696394752' , '489815791064055808' , '463400831098552320' , '476673975825465344' , '472331135993511936' , '489815790388772864' , '472331328520454144' , '494597324215943168' , '485747532043911168' , '481119859787169792' , '511607135369428992' , '479008671368478720' , '478603516361834496' , '472023116420218880' , '479959571725549568' , '495244164322033664' , '486551839387418624' , '479219965778460672' , '480481725646897152' , '480377920796229632' , '480492966641664000' , '482877676386779136' , '511607135537201152' , '476660939324653568' , '463400008603926528' , '471653539131686912' , '501072116167213056' , '487559547058126848' , '479219965136732160' , '508300432511074304' , '494904454714228736' , '483218063576006656' , '501072381725376512' , '488696595773128704' , '481068388831985664' , '478178015856033792' , '476319988987199488' , '476679548117712896' , '494904219002732544' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：90ms , start = 1637131229038
┣━ 返回：RcdSet,size=116
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:29.159 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":0,"PARAM_9":"489077805078806528","PARAM_8":"481338861117505536","PARAM_7":"501072108604882944","PARAM_6":"[]","PARAM_5":"498885073529995264","PARAM_4":"492410573934297088","PARAM_3":"478922681358483456"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( null , '478922681358483456' , '492410573934297088' , '498885073529995264' , '[]' , '501072108604882944' , '481338861117505536' , '489077805078806528' )
┣ 结果： 
┣━ 耗时：101ms , start = 1637131229057
┣━ 返回：RcdSet,size=6
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

14:40:29.160 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"490245507856203776","PARAM_31":"479208678382108672","PARAM_32":"478922691353509888","PARAM_33":"479959572333723648","PARAM_34":"481563573261172736","PARAM_35":"476319990312599552","PARAM_36":"510887822354284544","PARAM_37":"490245515401756672","PARAM_38":"473609133728202752","PARAM_30":"472331137151139840","PARAM_28":"485888537137250304","PARAM_29":"480492967832846336","PARAM_20":"489922973885530112","PARAM_21":"463402976384385024","PARAM_22":"472810496475529216","PARAM_23":"486551847209795584","PARAM_24":"474123297894694912","PARAM_25":"484681008940056576","PARAM_26":"492410582486482944","PARAM_27":"479956468586512384","PARAM_17":"479956467907035136","PARAM_18":"476673977113116672","PARAM_19":"473534969646415872","PARAM_97":"501416298853433344","PARAM_10":"480389138625855488","PARAM_98":"507635160540250112","PARAM_11":"478603517087449088","PARAM_99":"463402977026113536","PARAM_12":"463429358598488064","PARAM_13":"476660948308852736","PARAM_14":"478688769155792896","PARAM_15":"486313027243606016","PARAM_16":"471623115881840640","PARAM_90":"479218751359680512","PARAM_91":"479388230924369920","PARAM_92":"479330042942324736","PARAM_93":"478625116503146496","PARAM_94":"511607135692390400","PARAM_95":"480137016143511552","PARAM_96":"472331321801179136","PARAM_86":"480377921387626496","PARAM_87":"474123298494480384","PARAM_88":"472331329841659904","PARAM_89":"477956224856358912","PARAM_80":"495243930166624256","PARAM_81":"489815791709978624","PARAM_82":"471974290447663104","PARAM_83":"477956225548419072","PARAM_84":"484684755145588736","PARAM_85":"485936564942143488","PARAM_103":"498885087492833280","PARAM_104":"479329294410055680","PARAM_101":"473609134411874304","PARAM_102":"482864642218000384","PARAM_107":"471622521846759424","PARAM_108":"478585180710240256","PARAM_105":"486551847834746880","PARAM_106":"480481733892898816","PARAM_75":"480488585066184704","PARAM_76":"510887822513668096","PARAM_77":"478080881207017472","PARAM_109":"471623115152031744","PARAM_78":"501072636617424896","PARAM_79":"485747532740165632","PARAM_70":"481563563891097600","PARAM_71":"494904220248440832","PARAM_72":"479218759966392320","PARAM_73":"485743359831310336","PARAM_74":"494904455913799680","PARAM_9":"482573215365857280","PARAM_8":"485936564371718144","PARAM_7":"487559548404498432","PARAM_6":"481749752275271680","PARAM_5":"481338871154475008","PARAM_110":"478922690648866816","PARAM_4":"482865235280003072","PARAM_111":"478956693833646080","PARAM_3":"479329592994168832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"489922973222830080","PARAM_65":"480488584403484672","PARAM_66":"482877683861028864","PARAM_67":"484681017538379776","PARAM_68":"478585181314220032","PARAM_69":"487568378521714688","PARAM_60":"479220706257666048","PARAM_61":"484684754508054528","PARAM_62":"482864634051690496","PARAM_63":"482865235867205632","PARAM_100":"494903523763298304","PARAM_125":"464788446058119168","PARAM_126":"478624924152365056","PARAM_123":"463399690289807360","PARAM_124":"507635161886621696","PARAM_129":"501416297607725056","PARAM_127":"471974290984534016","PARAM_128":"501072382371299328","PARAM_53":"482864641542717440","PARAM_54":"481749752891834368","PARAM_55":"489077811793887232","PARAM_56":"476679548692332544","PARAM_57":"480488576866320384","PARAM_58":"482581100191809536","PARAM_59":"478688769768161280","PARAM_50":"486313028048912384","PARAM_51":"489077812460781568","PARAM_52":"501074105877921792","PARAM_130":"498885088876953600","PARAM_114":"483218064226123776","PARAM_115":"492410581827977216","PARAM_112":"508300434876661760","PARAM_113":"495244164963762176","PARAM_118":"490245514780999680","PARAM_119":"495243929508118528","PARAM_116":"485743359244107776","PARAM_117":"474281124533633024","PARAM_42":"463400009585393664","PARAM_43":"463399148318621696","PARAM_44":"471622522614317056","PARAM_45":"480389139313721344","PARAM_46":"501074106590953472","PARAM_47":"479329593644285952","PARAM_48":"482877684532117504","PARAM_49":"463400831778029568","PARAM_40":"473626754091581440","PARAM_41":"479388232048443392","PARAM_121":"482573214719934464","PARAM_122":"481119860437286912","PARAM_120":"472023117196165120"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479329592994168832' , '482865235280003072' , '481338871154475008' , '481749752275271680' , '487559548404498432' , '485936564371718144' , '482573215365857280' , '480389138625855488' , '478603517087449088' , '463429358598488064' , '476660948308852736' , '478688769155792896' , '486313027243606016' , '471623115881840640' , '479956467907035136' , '476673977113116672' , '473534969646415872' , '489922973885530112' , '463402976384385024' , '472810496475529216' , '486551847209795584' , '474123297894694912' , '484681008940056576' , '492410582486482944' , '479956468586512384' , '485888537137250304' , '480492967832846336' , '472331137151139840' , '479208678382108672' , '478922691353509888' , '479959572333723648' , '481563573261172736' , '476319990312599552' , '510887822354284544' , '490245515401756672' , '473609133728202752' , '490245507856203776' , '473626754091581440' , '479388232048443392' , '463400009585393664' , '463399148318621696' , '471622522614317056' , '480389139313721344' , '501074106590953472' , '479329593644285952' , '482877684532117504' , '463400831778029568' , '486313028048912384' , '489077812460781568' , '501074105877921792' , '482864641542717440' , '481749752891834368' , '489077811793887232' , '476679548692332544' , '480488576866320384' , '482581100191809536' , '478688769768161280' , '479220706257666048' , '484684754508054528' , '482864634051690496' , '482865235867205632' , '489922973222830080' , '480488584403484672' , '482877683861028864' , '484681017538379776' , '478585181314220032' , '487568378521714688' , '481563563891097600' , '494904220248440832' , '479218759966392320' , '485743359831310336' , '494904455913799680' , '480488585066184704' , '510887822513668096' , '478080881207017472' , '501072636617424896' , '485747532740165632' , '495243930166624256' , '489815791709978624' , '471974290447663104' , '477956225548419072' , '484684755145588736' , '485936564942143488' , '480377921387626496' , '474123298494480384' , '472331329841659904' , '477956224856358912' , '479218751359680512' , '479388230924369920' , '479330042942324736' , '478625116503146496' , '511607135692390400' , '480137016143511552' , '472331321801179136' , '501416298853433344' , '507635160540250112' , '463402977026113536' , '494903523763298304' , '473609134411874304' , '482864642218000384' , '498885087492833280' , '479329294410055680' , '486551847834746880' , '480481733892898816' , '471622521846759424' , '478585180710240256' , '471623115152031744' , '478922690648866816' , '478956693833646080' , '508300434876661760' , '495244164963762176' , '483218064226123776' , '492410581827977216' , '485743359244107776' , '474281124533633024' , '490245514780999680' , '495243929508118528' , '472023117196165120' , '482573214719934464' , '481119860437286912' , '463399690289807360' , '507635161886621696' , '464788446058119168' , '478624924152365056' , '471974290984534016' , '501072382371299328' , '501416297607725056' , '498885088876953600' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：110ms , start = 1637131229047
┣━ 返回：RcdSet,size=192
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:29.257 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"482581329603461120","PARAM_31":"474281125611569152","PARAM_32":"478585182215995392","PARAM_33":"485888538064191488","PARAM_34":"485560942738800640","PARAM_35":"471623117005914112","PARAM_36":"eam","PARAM_37":"476517102736375808","PARAM_38":"501074107681472512","PARAM_30":"489815792691445760","PARAM_28":"463400010562666496","PARAM_29":"486313029152014336","PARAM_20":"473733261147766784","PARAM_21":"479329295395717120","PARAM_22":"471653540754882560","PARAM_23":"498885090605006848","PARAM_24":"479220715891982336","PARAM_25":"477956226529886208","PARAM_26":"501416282843774976","PARAM_27":"463401587662913536","PARAM_17":"463401815308763136","PARAM_18":"463399156178747392","PARAM_19":"479388233323511808","PARAM_97":"510887822752743424","PARAM_10":"484681028040916992","PARAM_98":"477952353941585920","PARAM_11":"482877685547139072","PARAM_99":"481068390891388928","PARAM_12":"481749753835552768","PARAM_13":"479598114576007168","PARAM_14":"498770298326220801","PARAM_15":"472023708303622144","PARAM_16":"489922974875385856","PARAM_90":"476319982246952960","PARAM_91":"490245516341280768","PARAM_92":"482581328609411072","PARAM_93":"472023707355709440","PARAM_94":"463399155289554944","PARAM_95":"463401588501774336","PARAM_96":"476679549543776256","PARAM_86":"471666421412134912","PARAM_87":"483218065169842176","PARAM_88":"480492959574261760","PARAM_89":"482865228682362880","PARAM_80":"478603518131830784","PARAM_81":"473733260023693312","PARAM_82":"492410583505698816","PARAM_83":"485741098057072640","PARAM_84":"494597325411319808","PARAM_85":"479219966495686656","PARAM_103":"480481734924697600","PARAM_104":"479956469668642816","PARAM_101":"481068389998002176","PARAM_102":"498770477079068673","PARAM_107":"479354718896783360","PARAM_108":"473503441142939648","PARAM_105":"488696599002742784","PARAM_106":"489077813450637312","PARAM_75":"473771456543588352","PARAM_76":"481749155358703616","PARAM_77":"494597326321483776","PARAM_109":"482864643224633344","PARAM_78":"480488586022486016","PARAM_79":"495244165920063488","PARAM_70":"480377922318761984","PARAM_71":"479008671947292672","PARAM_72":"507635163908276224","PARAM_73":"485743360800194560","PARAM_74":"463401816202149888","PARAM_9":"463397732229316608","PARAM_8":"478688770657353728","PARAM_7":"485936565877473280","PARAM_6":"489901525628354560","PARAM_5":"485747533784547328","PARAM_110":"482865236752203776","PARAM_4":"474123299400450048","PARAM_111":"475686689822474240","PARAM_3":"484683939894525952","PARAM_2":0,"PARAM_1":0,"PARAM_64":"478956684903972864","PARAM_65":"475686688891338752","PARAM_66":"510887583106990080","PARAM_67":"471622523520286720","PARAM_68":"479008672874233856","PARAM_69":"484683940846632960","PARAM_60":"471666422389407744","PARAM_61":"482583850896064512","PARAM_62":"475954745446498304","PARAM_63":"478922692477583360","PARAM_100":"479354719760809984","PARAM_125":"479220714860183552","PARAM_126":"477952352960118784","PARAM_123":"485560941845413888","PARAM_124":"478956694827696128","PARAM_129":"463397739833589760","PARAM_127":"472331138002583552","PARAM_128":"480389140282605568","PARAM_53":"481119861406171136","PARAM_54":"501416300740870144","PARAM_55":"481563574288777216","PARAM_56":"487568380539174912","PARAM_57":"472819784346501121","PARAM_58":"489901523904495616","PARAM_59":"510887582830166016","PARAM_50":"501072117886877696","PARAM_51":"473771455499206656","PARAM_52":"471653539840524288","PARAM_130":"481749154318516224","PARAM_114":"472023118244741120","PARAM_115":"463397740718587904","PARAM_112":"484684756085112832","PARAM_113":"463400832793051136","PARAM_118":"475954744494391296","PARAM_119":"479219967531679744","PARAM_116":"488696597023031296","PARAM_117":"487559550405181440","PARAM_42":"482573216284409856","PARAM_43":"473609135473033216","PARAM_44":"485741097058828288","PARAM_45":"472331330856681472","PARAM_46":"494904456811380736","PARAM_47":"471974291777257472","PARAM_48":"479329594474758144","PARAM_49":"479598115674914816","PARAM_40":"471985681850171393","PARAM_41":"501072116880244736","PARAM_121":"473503441981800448","PARAM_122":"472357984110903296","PARAM_120":"482583851852365824"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '484683939894525952' , '474123299400450048' , '485747533784547328' , '489901525628354560' , '485936565877473280' , '478688770657353728' , '463397732229316608' , '484681028040916992' , '482877685547139072' , '481749753835552768' , '479598114576007168' , '498770298326220801' , '472023708303622144' , '489922974875385856' , '463401815308763136' , '463399156178747392' , '479388233323511808' , '473733261147766784' , '479329295395717120' , '471653540754882560' , '498885090605006848' , '479220715891982336' , '477956226529886208' , '501416282843774976' , '463401587662913536' , '463400010562666496' , '486313029152014336' , '489815792691445760' , '474281125611569152' , '478585182215995392' , '485888538064191488' , '485560942738800640' , '471623117005914112' , 'eam' , '476517102736375808' , '501074107681472512' , '482581329603461120' , '471985681850171393' , '501072116880244736' , '482573216284409856' , '473609135473033216' , '485741097058828288' , '472331330856681472' , '494904456811380736' , '471974291777257472' , '479329594474758144' , '479598115674914816' , '501072117886877696' , '473771455499206656' , '471653539840524288' , '481119861406171136' , '501416300740870144' , '481563574288777216' , '487568380539174912' , '472819784346501121' , '489901523904495616' , '510887582830166016' , '471666422389407744' , '482583850896064512' , '475954745446498304' , '478922692477583360' , '478956684903972864' , '475686688891338752' , '510887583106990080' , '471622523520286720' , '479008672874233856' , '484683940846632960' , '480377922318761984' , '479008671947292672' , '507635163908276224' , '485743360800194560' , '463401816202149888' , '473771456543588352' , '481749155358703616' , '494597326321483776' , '480488586022486016' , '495244165920063488' , '478603518131830784' , '473733260023693312' , '492410583505698816' , '485741098057072640' , '494597325411319808' , '479219966495686656' , '471666421412134912' , '483218065169842176' , '480492959574261760' , '482865228682362880' , '476319982246952960' , '490245516341280768' , '482581328609411072' , '472023707355709440' , '463399155289554944' , '463401588501774336' , '476679549543776256' , '510887822752743424' , '477952353941585920' , '481068390891388928' , '479354719760809984' , '481068389998002176' , '498770477079068673' , '480481734924697600' , '479956469668642816' , '488696599002742784' , '489077813450637312' , '479354718896783360' , '473503441142939648' , '482864643224633344' , '482865236752203776' , '475686689822474240' , '484684756085112832' , '463400832793051136' , '472023118244741120' , '463397740718587904' , '488696597023031296' , '487559550405181440' , '475954744494391296' , '479219967531679744' , '482583851852365824' , '473503441981800448' , '472357984110903296' , '485560941845413888' , '478956694827696128' , '479220714860183552' , '477952352960118784' , '472331138002583552' , '480389140282605568' , '463397739833589760' , '481749154318516224' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：183ms , start = 1637131229072
┣━ 返回：RcdSet,size=332
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:29.286 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idisnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"510887583488671744","PARAM_31":"498890640633892865","PARAM_32":"495244167178354688","PARAM_33":"479959574523150336","PARAM_34":"480492970060021760","PARAM_35":"480137018328743936","PARAM_36":"476673978719535104","PARAM_37":"486551850187751424","PARAM_38":"490245517545046016","PARAM_30":"473626754943025152","PARAM_28":"478603519541116928","PARAM_29":"494904221175382016","PARAM_20":"481563575630954496","PARAM_21":"472036556115279872","PARAM_22":"471974292850999296","PARAM_23":"482877686885122048","PARAM_24":"489901527587094528","PARAM_25":"508300436529217536","PARAM_26":"495243932481880064","PARAM_27":"488696601678708736","PARAM_17":"485741099411832832","PARAM_18":"501072637603086336","PARAM_19":"463399691917197312","PARAM_97":"487568383219335168","PARAM_10":"485560943879651328","PARAM_98":"479220717896859648","PARAM_11":"479218760989802496","PARAM_99":"501072384963379200","PARAM_12":"478922681874382848","PARAM_13":"479218762373922816","PARAM_14":"474281126987300864","PARAM_15":"478080882322702336","PARAM_16":"471623117999964160","PARAM_90":"481338874124042240","PARAM_91":"477956227867869184","PARAM_92":"475686691072376832","PARAM_93":"482864644558422016","PARAM_94":"463400011548327936","PARAM_95":"473626756130013184","PARAM_96":"463400833808072704","PARAM_86":"485888539251179520","PARAM_87":"489077805410156544","PARAM_88":"463402978934521856","PARAM_89":"482581101043253248","PARAM_80":"463397741918158848","PARAM_81":"463402977978220544","PARAM_82":"492410584894013440","PARAM_83":"489077814461464576","PARAM_84":"479959573277442048","PARAM_85":"480492968805924864","PARAM_103":"463429359550595072","PARAM_104":"473609136769073152","PARAM_101":"479330045333078016","PARAM_102":"482581330920472576","PARAM_107":"479329595586248704","PARAM_108":"480481736321400832","PARAM_105":"480488587389829120","PARAM_106":"483218066432327680","PARAM_75":"484684757343404032","PARAM_76":"475954746797064192","PARAM_77":"484683104078794753","PARAM_109":"476319991407312896","PARAM_78":"511607136254427136","PARAM_79":"485747535109947392","PARAM_70":"479330044003483648","PARAM_71":"487559553085341696","PARAM_72":"489815794193006592","PARAM_73":"472331332110778368","PARAM_74":"472023119704358912","PARAM_9":"495243931164868608","PARAM_8":"482573217517535232","PARAM_7":"481338872328880128","PARAM_6":"463429360842440704","PARAM_5":"476673980116238336","PARAM_110":"481338861507575808","PARAM_4":"463401589349023744","PARAM_111":"478080883799097344","PARAM_3":"501072108940427264","PARAM_2":0,"PARAM_1":0,"PARAM_64":"507635166470995968","PARAM_65":"472331139210543104","PARAM_66":"474123300629381120","PARAM_67":"478956696207622144","PARAM_68":"464788447014420480","PARAM_69":"494597327642689536","PARAM_60":"479388237341655040","PARAM_61":"501416303421030400","PARAM_62":"510887823079899136","PARAM_63":"476679550688821248","PARAM_100":"476660949365817344","PARAM_125":"511607135931465728","PARAM_126":"464788448306266112","PARAM_123":"481119862664462336","PARAM_124":"480137017104007168","PARAM_129":"473733262674493440","PARAM_127":"498778136893194240","PARAM_128":"484681029190156288","PARAM_53":"501072639033344000","PARAM_54":"482865237926608896","PARAM_55":"476319992707547136","PARAM_56":"508300439058382848","PARAM_57":"473534970493665280","PARAM_58":"485743362016542720","PARAM_59":"494904222408507392","PARAM_50":"494904458010951680","PARAM_51":"463401817099730944","PARAM_52":"481068392111931392","PARAM_130":"480377923652550656","PARAM_114":"471620891906670593","PARAM_115":"486313030599049216","PARAM_112":"489922976217563136","PARAM_113":"486551848799436800","PARAM_118":"484683942113312768","PARAM_119":"473534971609350144","PARAM_116":"463399157072134144","PARAM_117":"471653541992202240","PARAM_42":"476660950745743360","PARAM_43":"479598117155504128","PARAM_44":"477952355304734720","PARAM_45":"473771458015789056","PARAM_46":"479219968966131712","PARAM_47":"482583853127434240","PARAM_48":"481749156772184064","PARAM_49":"471666423702224896","PARAM_40":"482581102209269760","PARAM_41":"463399691099308032","PARAM_121":"481749755081261056","PARAM_122":"501072383491178496","PARAM_120":"479008674094776320"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501072108940427264' , '463401589349023744' , '476673980116238336' , '463429360842440704' , '481338872328880128' , '482573217517535232' , '495243931164868608' , '485560943879651328' , '479218760989802496' , '478922681874382848' , '479218762373922816' , '474281126987300864' , '478080882322702336' , '471623117999964160' , '485741099411832832' , '501072637603086336' , '463399691917197312' , '481563575630954496' , '472036556115279872' , '471974292850999296' , '482877686885122048' , '489901527587094528' , '508300436529217536' , '495243932481880064' , '488696601678708736' , '478603519541116928' , '494904221175382016' , '473626754943025152' , '498890640633892865' , '495244167178354688' , '479959574523150336' , '480492970060021760' , '480137018328743936' , '476673978719535104' , '486551850187751424' , '490245517545046016' , '510887583488671744' , '482581102209269760' , '463399691099308032' , '476660950745743360' , '479598117155504128' , '477952355304734720' , '473771458015789056' , '479219968966131712' , '482583853127434240' , '481749156772184064' , '471666423702224896' , '494904458010951680' , '463401817099730944' , '481068392111931392' , '501072639033344000' , '482865237926608896' , '476319992707547136' , '508300439058382848' , '473534970493665280' , '485743362016542720' , '494904222408507392' , '479388237341655040' , '501416303421030400' , '510887823079899136' , '476679550688821248' , '507635166470995968' , '472331139210543104' , '474123300629381120' , '478956696207622144' , '464788447014420480' , '494597327642689536' , '479330044003483648' , '487559553085341696' , '489815794193006592' , '472331332110778368' , '472023119704358912' , '484684757343404032' , '475954746797064192' , '484683104078794753' , '511607136254427136' , '485747535109947392' , '463397741918158848' , '463402977978220544' , '492410584894013440' , '489077814461464576' , '479959573277442048' , '480492968805924864' , '485888539251179520' , '489077805410156544' , '463402978934521856' , '482581101043253248' , '481338874124042240' , '477956227867869184' , '475686691072376832' , '482864644558422016' , '463400011548327936' , '473626756130013184' , '463400833808072704' , '487568383219335168' , '479220717896859648' , '501072384963379200' , '476660949365817344' , '479330045333078016' , '482581330920472576' , '463429359550595072' , '473609136769073152' , '480488587389829120' , '483218066432327680' , '479329595586248704' , '480481736321400832' , '476319991407312896' , '481338861507575808' , '478080883799097344' , '489922976217563136' , '486551848799436800' , '471620891906670593' , '486313030599049216' , '463399157072134144' , '471653541992202240' , '484683942113312768' , '473534971609350144' , '479008674094776320' , '481749755081261056' , '501072383491178496' , '481119862664462336' , '480137017104007168' , '511607135931465728' , '464788448306266112' , '498778136893194240' , '484681029190156288' , '473733262674493440' , '480377923652550656' ) ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：185ms , start = 1637131229100
┣━ 返回：RcdSet,size=382
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

14:40:29.315 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"P001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'P001' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637131229304
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

14:40:29.316 [ForkJoinPool-2-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"002"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '002' )
┣ 结果： 
┣━ 耗时：11ms , start = 1637131229304
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 

14:40:29.318 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"E001","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：13ms , start = 1637131229305
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 

14:40:29.331 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：25ms , start = 1637131229305
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 

14:40:29.332 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"E001","PARAM_2":"employee"}
┣ 执行：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = 'employee' ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：27ms , start = 1637131229305
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 

14:40:29.334 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.e.EntityNavigator - [execute,141] - fill with cost 886ms
14:40:29.461 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 
┣ 语句：UPDATE sys_user SET last_login_time = ? WHERE id = ?
┣ 参数：{"PARAM_1":1637131229448,"PARAM_2":"110588348101165911"}
┣ 执行：UPDATE sys_user SET last_login_time = str_to_date('2021-11-17 14:40:29','%Y-%m-%d %H:%i:%s') WHERE id = '110588348101165911'
┣ 结果： 
┣━ 耗时：11ms , start = 1637131229448
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.update(UserServiceImpl.java:202)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:81)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362578882170880
┗━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 

14:40:29.476 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_session_online WHERE id = ?
┣ 参数：{"PARAM_1":"Zrd1AjieZV9KtEI-T2oIKSXbD4mSG09Sqvc_OgXI"}
┣ 执行：select * from sys_session_online WHERE id = 'Zrd1AjieZV9KtEI-T2oIKSXbD4mSG09Sqvc_OgXI'
┣ 结果： 
┣━ 耗时：10ms , start = 1637131229465
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:88)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:88)
┣ TID：513362578882170880
┗━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 

14:40:29.489 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 
┣ 语句：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"Zrd1AjieZV9KtEI-T2oIKSXbD4mSG09Sqvc_OgXI","PARAM_9":"ed-10b7f97ade-dc59","PARAM_8":"D7B67D75818C671B","PARAM_10":"110588348101165911","PARAM_7":1,"PARAM_11":1637131229478,"PARAM_6":1200,"PARAM_12":1,"PARAM_5":1637131229476,"PARAM_4":1637131229476,"PARAM_3":"110588348101165911","PARAM_2":"W8VD7uP8-XqfPjq6r3mbSg0i7jQMdEMnAvyG0ikf"}
┣ 执行：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( 'Zrd1AjieZV9KtEI-T2oIKSXbD4mSG09Sqvc_OgXI' , 'W8VD7uP8-XqfPjq6r3mbSg0i7jQMdEMnAvyG0ikf' , '110588348101165911' , str_to_date('2021-11-17 14:40:29','%Y-%m-%d %H:%i:%s') , str_to_date('2021-11-17 14:40:29','%Y-%m-%d %H:%i:%s') , 1200 , 1 , 'D7B67D75818C671B' , 'ed-10b7f97ade-dc59' , '110588348101165911' , str_to_date('2021-11-17 14:40:29','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：9ms , start = 1637131229478
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.insert(SessionOnlineServiceImpl.java:74)
┣ TID：513362578882170880
┗━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 

14:40:29.546 [XNIO-1 task-3] - [513362578882170880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 
┣ 语句：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"513362800786018304","PARAM_9":0,"PARAM_8":1637133229509,"PARAM_10":"110588348101165911","PARAM_7":0,"PARAM_11":1637131229527,"PARAM_6":1637133029490,"PARAM_12":1,"PARAM_5":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MTM6NDkiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjQwOjI5IiwianRpIjoiMWYwYmZiZDYtNWE5Ny00NmNjLThlNGUtMTQwZjE2NWM3ZTRkIn0.XKCqc6v14_bhO-YQj3X8jYa3NZ7EDW1kX_ie-G80heEdL3HXYBDPM6vMkbG36-VgsFrdK8R7JIW5tmVbYEJ4O5I8qKmojI5Z54ozvPJyAHoGhi5pgyafCH-IHY3Ch22LsG5YmjcLhnFlsYKCiiDY5LI6UtYmIOG12Xcby4gdrCSiIWJ2mp8u2eKmjOhzCENui0ftyW8HgnLlLTu2e0LiefIufHCRd1SJo_8OjjVpOWDA9reybcGlIFCpZN8krYn61sS8MEl_sAxUMTzEo1O10WasgbGOa-JRf2iNmJE9CABBDlAtdYDR6eDhkJtltdEj48nTin3b0Mqc_t3IxXKoRg","PARAM_4":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MTA6MjkiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjQwOjI5IiwianRpIjoiMWYwYmZiZDYtNWE5Ny00NmNjLThlNGUtMTQwZjE2NWM3ZTRkIn0.MxL09eyQls3GjJtLjooGzNmR4b523HZSRQA4H0ufTR2fwQDBrbzjou6ZmKhPx4eBiWdWmDcAqcT6dmllUy0Di7MPLxF3_4fxz981n6SNc1iKczoCL0PwcKLxdpJX2KBgfAbKoE9vPGEQbzYVg8O0Sha9oY9_DElm7qU9A3sivjXdAzvCjFxxdNhanauCumdpQb0XPlGvK6tKukor7SCgnYNAlnseZLtRpjoUvBQCAmHnXUjymdU33DUIxov8tKWBoKfHdeNuS-RKCDgZs0aYROJ2tKvsVyAVJmFpizbkUfW_jL3aho-jtCtQfPB7OepUFfTzddWSGaLdRs_bGB8sNA","PARAM_3":"1f0bfbd6-5a97-46cc-8e4e-140f165c7e4d","PARAM_2":"110588348101165911"}
┣ 执行：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( '513362800786018304' , '110588348101165911' , '1f0bfbd6-5a97-46cc-8e4e-140f165c7e4d' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MTA6MjkiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjQwOjI5IiwianRpIjoiMWYwYmZiZDYtNWE5Ny00NmNjLThlNGUtMTQwZjE2NWM3ZTRkIn0.MxL09eyQls3GjJtLjooGzNmR4b523HZSRQA4H0ufTR2fwQDBrbzjou6ZmKhPx4eBiWdWmDcAqcT6dmllUy0Di7MPLxF3_4fxz981n6SNc1iKczoCL0PwcKLxdpJX2KBgfAbKoE9vPGEQbzYVg8O0Sha9oY9_DElm7qU9A3sivjXdAzvCjFxxdNhanauCumdpQb0XPlGvK6tKukor7SCgnYNAlnseZLtRpjoUvBQCAmHnXUjymdU33DUIxov8tKWBoKfHdeNuS-RKCDgZs0aYROJ2tKvsVyAVJmFpizbkUfW_jL3aho-jtCtQfPB7OepUFfTzddWSGaLdRs_bGB8sNA' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTEtMTcgMTU6MTM6NDkiLCJpYXQiOiIyMDIxLTExLTE3IDE0OjQwOjI5IiwianRpIjoiMWYwYmZiZDYtNWE5Ny00NmNjLThlNGUtMTQwZjE2NWM3ZTRkIn0.XKCqc6v14_bhO-YQj3X8jYa3NZ7EDW1kX_ie-G80heEdL3HXYBDPM6vMkbG36-VgsFrdK8R7JIW5tmVbYEJ4O5I8qKmojI5Z54ozvPJyAHoGhi5pgyafCH-IHY3Ch22LsG5YmjcLhnFlsYKCiiDY5LI6UtYmIOG12Xcby4gdrCSiIWJ2mp8u2eKmjOhzCENui0ftyW8HgnLlLTu2e0LiefIufHCRd1SJo_8OjjVpOWDA9reybcGlIFCpZN8krYn61sS8MEl_sAxUMTzEo1O10WasgbGOa-JRf2iNmJE9CABBDlAtdYDR6eDhkJtltdEj48nTin3b0Mqc_t3IxXKoRg' , str_to_date('2021-11-17 15:10:29','%Y-%m-%d %H:%i:%s') , 0 , str_to_date('2021-11-17 15:13:49','%Y-%m-%d %H:%i:%s') , 0 , '110588348101165911' , str_to_date('2021-11-17 14:40:29','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：16ms , start = 1637131229527
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:898)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:884)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：513362578882170880
┗━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 

14:40:29.956 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：109ms , start = 1637131229845
┣━ 返回：RcdSet,size=1267
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：513362802115612672
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

14:40:35.262 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"分类属性","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '分类属性' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131235245
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362802115612672
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.282 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"版本","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '版本' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131235270
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362802115612672
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.289 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select count(1) from pcm_data_01 ) PAGED_QUERY LIMIT :PARAM_1 ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select count(1) from pcm_data_01 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_2":1}
┣ 执行：SELECT * FROM ( select count(1) from pcm_data_01 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131235277
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getStorageTables(CatalogServiceImpl.java:448)
    org.github.foxnic.web.pcm.controller.CatalogController.storageTables(CatalogController.java:409)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select count(1) from pcm_data_01 ) PAGED_QUERY LIMIT :PARAM_1 ... ] ━━━━━ 

14:40:35.297 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"简称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '简称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131235284
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362802115612672
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.312 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select count(1) from pcm_data_02 ) PAGED_QUERY LIMIT :PARAM_1 ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select count(1) from pcm_data_02 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_2":1}
┣ 执行：SELECT * FROM ( select count(1) from pcm_data_02 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：15ms , start = 1637131235294
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getStorageTables(CatalogServiceImpl.java:448)
    org.github.foxnic.web.pcm.controller.CatalogController.storageTables(CatalogController.java:409)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select count(1) from pcm_data_02 ) PAGED_QUERY LIMIT :PARAM_1 ... ] ━━━━━ 

14:40:35.313 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"全称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '全称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：8ms , start = 1637131235302
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362802115612672
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.325 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select count(1) from pcm_data_asset_01 ) PAGED_QUERY LIMIT :PA... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select count(1) from pcm_data_asset_01 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_2":1}
┣ 执行：SELECT * FROM ( select count(1) from pcm_data_asset_01 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131235313
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getStorageTables(CatalogServiceImpl.java:448)
    org.github.foxnic.web.pcm.controller.CatalogController.storageTables(CatalogController.java:409)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select count(1) from pcm_data_asset_01 ) PAGED_QUERY LIMIT :PA... ] ━━━━━ 

14:40:35.329 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"字段名","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '字段名' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131235318
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362802115612672
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.344 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据存储","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据存储' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131235331
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.349 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据类型","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据类型' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131235334
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362802115612672
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.367 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"主键","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '主键' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131235352
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.375 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"创建版本","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '创建版本' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131235363
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362802115612672
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.382 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"代码","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '代码' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131235369
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.403 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"应用版本","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '应用版本' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：23ms , start = 1637131235376
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362802115612672
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.415 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"顺序","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '顺序' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131235399
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.423 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：10ms , start = 1637131235409
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362802115612672
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:40:35.431 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"层级路径","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '层级路径' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131235418
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.444 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：14ms , start = 1637131235425
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362802115612672
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:40:35.457 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"存储表","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '存储表' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637131235440
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.471 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"租户ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '租户ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：8ms , start = 1637131235459
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.488 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"创建人ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '创建人ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131235474
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.503 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"创建时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '创建时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131235490
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.524 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改人ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改人ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：15ms , start = 1637131235507
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.556 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：17ms , start = 1637131235531
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.600 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否已删除","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否已删除' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：34ms , start = 1637131235561
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.656 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除人ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除人ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：21ms , start = 1637131235604
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.763 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：11ms , start = 1637131235746
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.781 [XNIO-1 task-2] - [513362565225517056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131235762
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565225517056
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.808 [XNIO-1 task-2] - [513362565225517056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据版本号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据版本号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131235791
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513362565225517056
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.811 [XNIO-1 task-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据版本号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据版本号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：21ms , start = 1637131235771
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:40:35.822 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131235806
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362802115612672
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:40:35.841 [XNIO-1 task-3] - [513362802115612672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131235825
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362802115612672
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:40:36.448 [XNIO-1 task-2] - [513362829663801344] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id='0' and tenant_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"T001"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id='0' and tenant_id= 'T001' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：26ms , start = 1637131236414
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:299)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryRootNotes(CatalogServiceImpl.java:328)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:269)
┣ TID：513362829663801344
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:40:36.739 [XNIO-1 task-2] - [513362830938869760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"-1"}
┣ 执行：select * from pcm_catalog WHERE id = '-1'
┣ 结果： 
┣━ 耗时：10ms , start = 1637131236725
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:327)
    org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryPagedList(CatalogAttributeController.java:300)
┣ TID：513362830938869760
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:40:36.780 [XNIO-1 task-2] - [513362831131807744] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"-1"}
┣ 执行：select * from pcm_catalog WHERE id = '-1'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131236763
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:327)
    org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryPagedList(CatalogAttributeController.java:300)
┣ TID：513362831131807744
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:40:37.167 [XNIO-1 task-2] - [513362832763392000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id='0' and tenant_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"T001"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id='0' and tenant_id= 'T001' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：13ms , start = 1637131237152
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:299)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryRootNotes(CatalogServiceImpl.java:328)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:269)
┣ TID：513362832763392000
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:40:39.084 [XNIO-1 task-2] - [513362840820649984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"1"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '1' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：10ms , start = 1637131239073
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362840820649984
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:40:39.896 [XNIO-1 task-2] - [513362844226424832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"2"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '2' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：10ms , start = 1637131239885
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513362844226424832
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:40:40.726 [XNIO-1 task-2] - [513362847695114240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"484764342194016257"}
┣ 执行：select * from pcm_catalog WHERE id = '484764342194016257'
┣ 结果： 
┣━ 耗时：10ms , start = 1637131240714
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.controller.CatalogController.getById(CatalogController.java:186)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362847695114240
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:40:40.767 [XNIO-1 task-7] - [513362847837720576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select distinct version_no from pcm_catalog_attribute where catalog_id= :PARAM... ] ━━━━━ 
┣ 语句：select distinct version_no from pcm_catalog_attribute where catalog_id= ? order by version_no desc
┣ 参数：{"PARAM_1":"484764342194016257"}
┣ 执行：select distinct version_no from pcm_catalog_attribute where catalog_id= '484764342194016257' order by version_no desc
┣ 结果： 
┣━ 耗时：20ms , start = 1637131240746
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.getAllVersions(CatalogAttributeServiceImpl.java:400)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getVersions(CatalogServiceImpl.java:458)
    org.github.foxnic.web.pcm.controller.CatalogController.versions(CatalogController.java:423)
┣ TID：513362847837720576
┗━━━━━ SQL [ select distinct version_no from pcm_catalog_attribute where catalog_id= :PARAM... ] ━━━━━ 

14:40:40.843 [XNIO-1 task-7] - [513362848198430720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"484764342194016257"}
┣ 执行：select * from pcm_catalog WHERE id = '484764342194016257'
┣ 结果： 
┣━ 耗时：10ms , start = 1637131240831
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:327)
    org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryPagedList(CatalogAttributeController.java:300)
┣ TID：513362848198430720
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:40:40.861 [XNIO-1 task-7] - [513362848198430720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM pcm_catalog_attribute t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM pcm_catalog_attribute t
WHERE t.deleted = ? AND ((catalog_id = ? AND version_no = ? )
		OR (catalog_id = ? AND version_no = ? )
		OR (catalog_id = ? AND version_no = ? ))) A
┣ 参数：{"PARAM_1":0,"PARAM_7":"activated","PARAM_6":"484764342194016257","PARAM_5":"activated","PARAM_4":"2","PARAM_3":"activated","PARAM_2":"1"}
┣ 执行：select count(1) X from (SELECT 1
FROM pcm_catalog_attribute t
WHERE t.deleted = 0 AND ((catalog_id = '1' AND version_no = 'activated' )
		OR (catalog_id = '2' AND version_no = 'activated' )
		OR (catalog_id = '484764342194016257' AND version_no = 'activated' ))) A
┣ 结果： 
┣━ 耗时：13ms , start = 1637131240845
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:348)
    org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryPagedList(CatalogAttributeController.java:300)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362848198430720
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM pcm_catalog_attribute t WHERE t.deleted ... ] ━━━━━ 

14:40:42.480 [XNIO-1 task-7] - [513362855056117760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"484764342194016257"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '484764342194016257' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：11ms , start = 1637131242468
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.deleteById(CatalogController.java:110)
┣ TID：513362855056117760
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:40:42.500 [XNIO-1 task-7] - [513362855056117760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"484764342194016257"}
┣ 执行：select * from pcm_catalog WHERE id = '484764342194016257'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131242485
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:327)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryList(CatalogAttributeServiceImpl.java:285)
┣ TID：513362855056117760
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:40:42.513 [XNIO-1 task-7] - [513362855056117760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM pcm_catalog_attribute t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM pcm_catalog_attribute t
WHERE t.deleted = ? AND ((catalog_id = ? AND version_no = ? )
		OR (catalog_id = ? AND version_no = ? )
		OR (catalog_id = ? AND version_no = ? ))) A
┣ 参数：{"PARAM_1":0,"PARAM_7":"activated","PARAM_6":"484764342194016257","PARAM_5":"activated","PARAM_4":"2","PARAM_3":"activated","PARAM_2":"1"}
┣ 执行：select count(1) X from (SELECT 1
FROM pcm_catalog_attribute t
WHERE t.deleted = 0 AND ((catalog_id = '1' AND version_no = 'activated' )
		OR (catalog_id = '2' AND version_no = 'activated' )
		OR (catalog_id = '484764342194016257' AND version_no = 'activated' ))) A
┣ 结果： 
┣━ 耗时：9ms , start = 1637131242502
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:348)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryList(CatalogAttributeServiceImpl.java:285)
    org.github.foxnic.web.pcm.controller.CatalogController.deleteById(CatalogController.java:115)
┣ TID：513362855056117760
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM pcm_catalog_attribute t WHERE t.deleted ... ] ━━━━━ 

14:40:42.531 [XNIO-1 task-7] - [513362855056117760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"484764342194016257"}
┣ 执行：select * from pcm_catalog WHERE id = '484764342194016257'
┣ 结果： 
┣━ 耗时：11ms , start = 1637131242514
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getCachedCatalog(CatalogServiceImpl.java:583)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getDataCount(CatalogServiceImpl.java:750)
┣ TID：513362855056117760
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:40:42.550 [XNIO-1 task-7] - [513362855056117760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"484764342194016257"}
┣ 执行：select * from pcm_catalog WHERE id = '484764342194016257'
┣ 结果： 
┣━ 耗时：11ms , start = 1637131242538
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:327)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryList(CatalogAttributeServiceImpl.java:285)
┣ TID：513362855056117760
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:40:42.569 [XNIO-1 task-7] - [513362855056117760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM pcm_catalog_attribute t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM pcm_catalog_attribute t
WHERE t.deleted = ? AND ((catalog_id = ? AND version_no = ? )
		OR (catalog_id = ? AND version_no = ? )
		OR (catalog_id = ? AND version_no = ? ))) A
┣ 参数：{"PARAM_1":0,"PARAM_7":"activated","PARAM_6":"484764342194016257","PARAM_5":"activated","PARAM_4":"2","PARAM_3":"activated","PARAM_2":"1"}
┣ 执行：select count(1) X from (SELECT 1
FROM pcm_catalog_attribute t
WHERE t.deleted = 0 AND ((catalog_id = '1' AND version_no = 'activated' )
		OR (catalog_id = '2' AND version_no = 'activated' )
		OR (catalog_id = '484764342194016257' AND version_no = 'activated' ))) A
┣ 结果： 
┣━ 耗时：18ms , start = 1637131242551
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:348)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryList(CatalogAttributeServiceImpl.java:285)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.getAttributes(CatalogAttributeServiceImpl.java:395)
┣ TID：513362855056117760
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM pcm_catalog_attribute t WHERE t.deleted ... ] ━━━━━ 

14:40:42.581 [XNIO-1 task-7] - [513362855056117760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select count(1) from pcm_data_01 where catalog_id= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select count(1) from pcm_data_01 where catalog_id= ? and deleted=0 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"484764342194016257","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select count(1) from pcm_data_01 where catalog_id= '484764342194016257' and deleted=0 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131242570
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getDataCount(CatalogServiceImpl.java:752)
    org.github.foxnic.web.pcm.controller.CatalogController.deleteById(CatalogController.java:120)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513362855056117760
┗━━━━━ SQL [ SELECT * FROM ( select count(1) from pcm_data_01 where catalog_id= :PARAM_1 an... ] ━━━━━ 

14:40:54.236 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 39 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:40:54.236 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 39 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:41:24.234 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 39 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:41:24.234 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 39 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:41:54.235 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 39 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:41:54.236 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 39 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:42:24.238 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 39 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:42:24.238 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 39 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:42:40.177 [XNIO-1 task-2] - [513362847695114240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：12ms , start = 1637131360164
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362847695114240
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:42:40.200 [XNIO-1 task-2] - [513362847695114240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：19ms , start = 1637131360179
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362847695114240
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:42:40.363 [XNIO-1 task-7] - [513362855056117760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：15ms , start = 1637131360346
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362855056117760
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:42:40.392 [XNIO-1 task-7] - [513362855056117760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/pcm/catalog_attribute/catalog_attribute_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：25ms , start = 1637131360365
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513362855056117760
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:42:40.663 [XNIO-1 task-7] - [513363350726381568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id='0' and tenant_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"T001"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id='0' and tenant_id= 'T001' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：17ms , start = 1637131360644
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:299)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryRootNotes(CatalogServiceImpl.java:328)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:269)
┣ TID：513363350726381568
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:42:40.921 [XNIO-1 task-7] - [513363351812706304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"-1"}
┣ 执行：select * from pcm_catalog WHERE id = '-1'
┣ 结果： 
┣━ 耗时：17ms , start = 1637131360902
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:327)
    org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryPagedList(CatalogAttributeController.java:300)
┣ TID：513363351812706304
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:42:40.971 [XNIO-1 task-2] - [513363351963701248] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from pcm_catalog WHERE id = ?
┣ 参数：{"PARAM_1":"-1"}
┣ 执行：select * from pcm_catalog WHERE id = '-1'
┣ 结果： 
┣━ 耗时：31ms , start = 1637131360939
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.getById(CatalogServiceImpl.java:212)
    org.github.foxnic.web.pcm.service.impl.CatalogAttributeServiceImpl.queryPagedList(CatalogAttributeServiceImpl.java:327)
    org.github.foxnic.web.pcm.controller.CatalogAttributeController.queryPagedList(CatalogAttributeController.java:300)
┣ TID：513363351963701248
┗━━━━━ SQL [ select * from pcm_catalog WHERE id = :PARAM_1 ] ━━━━━ 

14:42:41.139 [XNIO-1 task-2] - [513363352722870272] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id='0' and tenant_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"T001"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id='0' and tenant_id= 'T001' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：17ms , start = 1637131361120
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:299)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryRootNotes(CatalogServiceImpl.java:328)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:269)
┣ TID：513363352722870272
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:42:54.238 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 43 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:42:54.238 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 43 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:43:24.234 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 43 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:43:24.235 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 43 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:43:48.485 [XNIO-1 task-2] - [513363635158913024] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486920436056068097"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486920436056068097' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：26ms , start = 1637131428458
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:301)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:336)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:271)
┣ TID：513363635158913024
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

14:43:53.905 [XNIO-1 task-2] - [513363635158913024] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更实例","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更实例' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131433894
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363635158913024
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:43:53.921 [XNIO-1 task-2] - [513363635158913024] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"分类","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '分类' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：13ms , start = 1637131433907
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363635158913024
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:43:53.938 [XNIO-1 task-2] - [513363635158913024] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"审批模式","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '审批模式' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131433924
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363635158913024
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:43:53.950 [XNIO-1 task-2] - [513363635158913024] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"起草人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '起草人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131433939
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363635158913024
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:43:53.971 [XNIO-1 task-2] - [513363635158913024] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：17ms , start = 1637131433952
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363635158913024
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:43:53.989 [XNIO-1 task-2] - [513363635158913024] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更类型","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更类型' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：12ms , start = 1637131433974
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363635158913024
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:43:54.006 [XNIO-1 task-7] - [513363351812706304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"审批模式","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '审批模式' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：75ms , start = 1637131433925
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363351812706304
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:43:54.025 [XNIO-1 task-7] - [513363351812706304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/changes/change_instance/change_instance_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/changes/change_instance/change_instance_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：10ms , start = 1637131434011
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513363351812706304
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:43:54.053 [XNIO-1 task-2] - [513363635158913024] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/changes/change_instance/change_instance_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/changes/change_instance/change_instance_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：39ms , start = 1637131434012
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513363635158913024
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:43:54.233 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 44 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:43:54.233 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 44 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:43:54.940 [XNIO-1 task-2] - [513363662157647872] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM chs_change_instance t WHERE t.deleted = ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM chs_change_instance t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM chs_change_instance t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：10ms , start = 1637131434929
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    org.github.foxnic.web.changes.service.impl.ChangeInstanceServiceImpl.queryPagedList(ChangeInstanceServiceImpl.java:258)
┣ TID：513363662157647872
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM chs_change_instance t WHERE t.deleted = ... ] ━━━━━ 

14:43:54.948 [XNIO-1 task-7] - [513363662329614336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM chs_change_instance t WHERE t.deleted = ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM chs_change_instance t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM chs_change_instance t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：9ms , start = 1637131434938
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    org.github.foxnic.web.changes.service.impl.ChangeInstanceServiceImpl.queryPagedList(ChangeInstanceServiceImpl.java:258)
┣ TID：513363662329614336
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM chs_change_instance t WHERE t.deleted = ... ] ━━━━━ 

14:43:54.997 [XNIO-1 task-2] - [513363662157647872] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from chs_change_instance t WHERE ( ( t.deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from chs_change_instance t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":50,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from chs_change_instance t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：54ms , start = 1637131434941
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    org.github.foxnic.web.changes.service.impl.ChangeInstanceServiceImpl.queryPagedList(ChangeInstanceServiceImpl.java:258)
┣ TID：513363662157647872
┗━━━━━ SQL [ SELECT * FROM ( select t.* from chs_change_instance t WHERE ( ( t.deleted= :PA... ] ━━━━━ 

14:43:55.006 [XNIO-1 task-7] - [513363662329614336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from chs_change_instance t WHERE ( ( t.deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from chs_change_instance t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":50,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from chs_change_instance t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：57ms , start = 1637131434948
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:300)
    org.github.foxnic.web.changes.service.impl.ChangeInstanceServiceImpl.queryPagedList(ChangeInstanceServiceImpl.java:258)
┣ TID：513363662329614336
┗━━━━━ SQL [ SELECT * FROM ( select t.* from chs_change_instance t WHERE ( ( t.deleted= :PA... ] ━━━━━ 

14:44:02.057 [XNIO-1 task-7] - [513363662329614336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更定义","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更定义' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：14ms , start = 1637131442041
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363662329614336
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:44:02.085 [XNIO-1 task-7] - [513363662329614336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/changes/change_definition/change_definition_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/changes/change_definition/change_definition_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637131442072
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513363662329614336
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:44:02.099 [XNIO-1 task-2] - [513363662157647872] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/changes/change_definition/change_definition_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/changes/change_definition/change_definition_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：11ms , start = 1637131442086
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513363662157647872
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:44:02.903 [XNIO-1 task-2] - [513363695540113408] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"chs_change_definition","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'chs_change_definition'
┣ 结果： 
┣━ 耗时：14ms , start = 1637131442886
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513363695540113408
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:44:02.923 [XNIO-1 task-7] - [513363695649165312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"chs_change_definition","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'chs_change_definition'
┣ 结果： 
┣━ 耗时：12ms , start = 1637131442910
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:386)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513363695649165312
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:44:02.927 [XNIO-1 task-2] - [513363695540113408] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM chs_change_definition t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM chs_change_definition t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM chs_change_definition t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637131442912
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513363695540113408
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM chs_change_definition t WHERE t.deleted ... ] ━━━━━ 

14:44:02.943 [XNIO-1 task-7] - [513363695649165312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM chs_change_definition t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM chs_change_definition t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM chs_change_definition t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：11ms , start = 1637131442926
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513363695649165312
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM chs_change_definition t WHERE t.deleted ... ] ━━━━━ 

14:44:02.948 [XNIO-1 task-2] - [513363695540113408] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from chs_change_definition t WHERE ( ( t.deleted= :... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from chs_change_definition t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from chs_change_definition t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：15ms , start = 1637131442928
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513363695540113408
┗━━━━━ SQL [ SELECT * FROM ( select t.* from chs_change_definition t WHERE ( ( t.deleted= :... ] ━━━━━ 

14:44:02.959 [XNIO-1 task-7] - [513363695649165312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from chs_change_definition t WHERE ( ( t.deleted= :... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from chs_change_definition t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from chs_change_definition t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：12ms , start = 1637131442946
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513363695649165312
┗━━━━━ SQL [ SELECT * FROM ( select t.* from chs_change_definition t WHERE ( ( t.deleted= :... ] ━━━━━ 

14:44:11.013 [XNIO-1 task-7] - [513363729711108096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from chs_change_definition WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from chs_change_definition WHERE id = ?
┣ 参数：{"PARAM_1":"504251403569471488"}
┣ 执行：select * from chs_change_definition WHERE id = '504251403569471488'
┣ 结果： 
┣━ 耗时：11ms , start = 1637131451001
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.changes.service.impl.ChangeDefinitionServiceImpl.getById(ChangeDefinitionServiceImpl.java:174)
    org.github.foxnic.web.changes.controller.ChangeDefinitionController.getById(ChangeDefinitionController.java:171)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：513363729711108096
┗━━━━━ SQL [ select * from chs_change_definition WHERE id = :PARAM_1 ] ━━━━━ 

14:44:11.092 [XNIO-1 task-7] - [513363729711108096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"审批人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '审批人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637131451081
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363729711108096
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:44:11.111 [XNIO-1 task-7] - [513363729711108096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否有效","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否有效' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：9ms , start = 1637131451095
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363729711108096
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:44:11.825 [XNIO-1 task-7] - [513363732731006976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM sys_busi_role WHERE id IN ( :PARAM_1 , :PARAM_2 ) AND deleted = ... ] ━━━━━ 
┣ 语句：SELECT * FROM sys_busi_role WHERE id IN ( ? , ? ) AND deleted = ?
┣ 参数：{"PARAM_1":"499505076151259136","PARAM_3":0,"PARAM_2":"499505036502503424"}
┣ 执行：SELECT * FROM sys_busi_role WHERE id IN ( '499505076151259136' , '499505036502503424' ) AND deleted = 0
┣ 结果： 
┣━ 耗时：11ms , start = 1637131451813
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getByIdsMap(SuperService.java:1485)
    org.github.foxnic.web.system.service.impl.BusiRoleServiceImpl.getByIds(BusiRoleServiceImpl.java:227)
    org.github.foxnic.web.system.controller.BusiRoleController.getByIds(BusiRoleController.java:228)
┣ TID：513363732731006976
┗━━━━━ SQL [ SELECT * FROM sys_busi_role WHERE id IN ( :PARAM_1 , :PARAM_2 ) AND deleted = ... ] ━━━━━ 

14:44:11.854 [XNIO-1 task-7] - [513363732731006976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM hrm_employee WHERE id IN ( :PARAM_1 ) AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：SELECT * FROM hrm_employee WHERE id IN ( ? ) AND deleted = ?
┣ 参数：{"PARAM_1":"490542186383806464","PARAM_2":0}
┣ 执行：SELECT * FROM hrm_employee WHERE id IN ( '490542186383806464' ) AND deleted = 0
┣ 结果： 
┣━ 耗时：10ms , start = 1637131451842
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getByIdsMap(SuperService.java:1485)
    org.github.foxnic.web.hrm.service.impl.EmployeeServiceImpl.getByIds(EmployeeServiceImpl.java:283)
    org.github.foxnic.web.hrm.service.impl.FavouriteGroupItemServiceImpl.translateNames(FavouriteGroupItemServiceImpl.java:435)
┣ TID：513363732731006976
┗━━━━━ SQL [ SELECT * FROM hrm_employee WHERE id IN ( :PARAM_1 ) AND deleted = :PARAM_2 ] ━━━━━ 

14:44:11.875 [XNIO-1 task-7] - [513363732731006976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_2":"490542186203451392"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '490542186203451392' )
┣ 结果： 
┣━ 耗时：16ms , start = 1637131451856
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1505)
    org.github.foxnic.web.hrm.service.impl.FavouriteGroupItemServiceImpl.translateNames(FavouriteGroupItemServiceImpl.java:436)
    org.github.foxnic.web.hrm.service.impl.FavouriteGroupItemServiceImpl.translate(FavouriteGroupItemServiceImpl.java:222)
┣ TID：513363732731006976
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

14:44:24.238 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:44:24.244 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:44:54.235 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:44:54.235 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:45:24.232 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:45:24.235 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:45:54.234 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:45:54.234 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:46:24.233 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:46:24.233 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:46:54.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:46:54.233 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:47:24.234 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:47:24.234 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:47:54.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:47:54.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:48:24.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:48:24.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:48:54.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:48:54.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:49:24.242 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:49:24.242 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:49:54.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:49:54.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:50:24.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:50:24.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:50:54.232 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:50:54.232 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:51:24.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:51:24.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:51:54.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:51:54.230 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:52:24.231 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:52:24.236 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:52:54.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:52:54.229 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:53:24.228 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:53:24.231 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 46 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:53:50.516 [XNIO-1 task-7] - [513363732731006976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ?
┣ 参数：{"PARAM_1":"system.cachekey"}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey'
┣ 结果： 
┣━ 耗时：18ms , start = 1637132030478
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getById(ConfigServiceImpl.java:94)
    org.github.foxnic.web.system.controller.ConfigController.getById(ConfigController.java:188)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：513363732731006976
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 ] ━━━━━ 

14:53:50.641 [XNIO-1 task-7] - [513363732731006976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产操作","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产操作' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：10ms , start = 1637132030628
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：513363732731006976
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:53:50.711 [XNIO-1 task-2] - [513363732592594944] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/operate/operate_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/operate/operate_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：19ms , start = 1637132030682
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513363732592594944
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:53:50.784 [XNIO-1 task-7] - [513363732731006976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/operate/operate_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/operate/operate_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：92ms , start = 1637132030684
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:199)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:154)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:239)
┣ TID：513363732731006976
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

14:53:52.682 [XNIO-1 task-5] - [513366169281892353] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_operate t WHERE t.deleted = :PARAM_1... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_operate t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_operate t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：14ms , start = 1637132032665
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513366169281892353
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_operate t WHERE t.deleted = :PARAM_1... ] ━━━━━ 

14:53:52.683 [XNIO-1 task-7] - [513366169281892352] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_operate t WHERE t.deleted = :PARAM_1... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_operate t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_operate t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：18ms , start = 1637132032663
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513366169281892352
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_operate t WHERE t.deleted = :PARAM_1... ] ━━━━━ 

14:53:52.698 [XNIO-1 task-5] - [513366169281892353] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_operate t WHERE ( ( t.deleted= :PARAM_1 AN... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_operate t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":50,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_operate t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：13ms , start = 1637132032682
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513366169281892353
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_operate t WHERE ( ( t.deleted= :PARAM_1 AN... ] ━━━━━ 

14:53:52.706 [XNIO-1 task-7] - [513366169281892352] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_operate t WHERE ( ( t.deleted= :PARAM_1 AN... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_operate t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":50,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_operate t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：17ms , start = 1637132032684
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:424)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:372)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:294)
┣ TID：513366169281892352
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_operate t WHERE ( ( t.deleted= :PARAM_1 AN... ] ━━━━━ 

14:53:54.224 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 48 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

14:53:54.225 [DoubleCache] - [] - INFO  c.g.f.c.c.DoubleCache - [logStatis,49] - 

---------------------------  CACHE STAT -----------------------------
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 48 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DbCacheServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:DictItemServiceImpl
    local(本地) : 36 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
foxnic:data:impl:CatalogServiceImpl
    local(本地) : 1 , 100%
    remote(远程) : 0 , 0%	不可用
    generator(实算) : 0 , 0%
---------------------------  CACHE STAT -----------------------------

