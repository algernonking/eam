05:15:22.763 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [update sys_session_online set online=0,logout_time=interact_time where online=1 and interact_time< ?]; Communications link failure

The last packet successfully received from the server was 7,212,001 milliseconds ago. The last packet sent successfully to the server was 14,416,082 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 7,212,001 milliseconds ago. The last packet sent successfully to the server was 14,416,082 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 7,212,001 milliseconds ago. The last packet sent successfully to the server was 14,416,082 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 20 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 7,212,001 milliseconds ago. The last packet sent successfully to the server was 14,416,082 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 27 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 32 more

08:03:35.526 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [update sys_session_online set online=0,logout_time=interact_time where online=1 and interact_time< ?]; Communications link failure

The last packet successfully received from the server was 2,881,881 milliseconds ago. The last packet sent successfully to the server was 10,084,234 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 2,881,881 milliseconds ago. The last packet sent successfully to the server was 10,084,234 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 2,881,881 milliseconds ago. The last packet sent successfully to the server was 10,084,234 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 20 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 2,881,881 milliseconds ago. The last packet sent successfully to the server was 10,084,234 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 27 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 32 more

08:03:41.606 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 3108, createErrorCount 1
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 3, maxActive 128, creating 1, createElapseMillis 3108, createErrorCount 1
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:03:47.618 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 105, createErrorCount 3
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 105, createErrorCount 3
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:03:53.629 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1603, createErrorCount 4
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 3, maxActive 128, creating 1, createElapseMillis 1603, createErrorCount 4
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:04:07.202 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? , heart_beat_time = ? WHERE id= ?]; Communications link failure

The last packet successfully received from the server was 17,338,294 milliseconds ago. The last packet sent successfully to the server was 24,542,440 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 17,338,294 milliseconds ago. The last packet sent successfully to the server was 24,542,440 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:80)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 17,338,294 milliseconds ago. The last packet sent successfully to the server was 24,542,440 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 21 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 17,338,294 milliseconds ago. The last packet sent successfully to the server was 24,542,440 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 28 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 33 more

08:13:35.354 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [update sys_session_online set online=0,logout_time=interact_time where online=1 and interact_time< ?]; Communications link failure

The last packet successfully received from the server was 23,849 milliseconds ago. The last packet sent successfully to the server was 23,892 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 23,849 milliseconds ago. The last packet sent successfully to the server was 23,892 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 23,849 milliseconds ago. The last packet sent successfully to the server was 23,892 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 20 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 23,849 milliseconds ago. The last packet sent successfully to the server was 23,892 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 27 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 32 more

08:13:40.152 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? WHERE id!= ? AND is_up=1 AND heart_beat_time< ?]; Communications link failure

The last packet successfully received from the server was 28,718 milliseconds ago. The last packet sent successfully to the server was 28,761 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 28,718 milliseconds ago. The last packet sent successfully to the server was 28,761 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 28,718 milliseconds ago. The last packet sent successfully to the server was 28,761 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 22 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 28,718 milliseconds ago. The last packet sent successfully to the server was 28,761 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 29 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 34 more

08:13:45.389 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1518, createErrorCount 7
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1518, createErrorCount 7
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:13:46.164 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2294, createErrorCount 7
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2294, createErrorCount 7
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:13:51.395 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3009, createErrorCount 8
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3009, createErrorCount 8
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:13:52.172 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3786, createErrorCount 8
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3786, createErrorCount 8
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:13:57.412 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1, createErrorCount 10
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1, createErrorCount 10
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:13:58.188 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 777, createErrorCount 10
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 777, createErrorCount 10
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:03.419 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1501, createErrorCount 11
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1501, createErrorCount 11
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:04.197 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2279, createErrorCount 11
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2279, createErrorCount 11
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:09.437 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3000, createErrorCount 12
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 3000, createErrorCount 12
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:10.206 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3776, createErrorCount 12
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3776, createErrorCount 12
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:15.452 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 14
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 14
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:16.220 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 762, createErrorCount 14
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 762, createErrorCount 14
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:21.468 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1496, createErrorCount 15
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1496, createErrorCount 15
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:22.232 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2262, createErrorCount 15
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2262, createErrorCount 15
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:27.479 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2992, createErrorCount 16
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2992, createErrorCount 16
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:28.243 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3756, createErrorCount 16
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3756, createErrorCount 16
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:33.497 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 0, createErrorCount 18
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 0, createErrorCount 18
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:34.252 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 743, createErrorCount 18
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 743, createErrorCount 18
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:39.505 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1485, createErrorCount 19
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1485, createErrorCount 19
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:40.267 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2243, createErrorCount 19
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2243, createErrorCount 19
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:45.532 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2998, createErrorCount 20
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2998, createErrorCount 20
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:46.272 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3742, createErrorCount 20
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3742, createErrorCount 20
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:51.539 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 22
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 22
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:52.279 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 727, createErrorCount 22
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 727, createErrorCount 22
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:57.554 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1485, createErrorCount 23
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1485, createErrorCount 23
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:14:58.297 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2229, createErrorCount 23
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2229, createErrorCount 23
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:03.565 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2992, createErrorCount 24
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2992, createErrorCount 24
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:04.303 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3732, createErrorCount 24
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3732, createErrorCount 24
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:09.572 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 0, createErrorCount 26
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 0, createErrorCount 26
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:10.309 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 716, createErrorCount 26
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 716, createErrorCount 26
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:15.578 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1476, createErrorCount 27
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1476, createErrorCount 27
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:16.322 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2218, createErrorCount 27
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2218, createErrorCount 27
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:21.593 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2982, createErrorCount 28
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2982, createErrorCount 28
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:22.334 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3724, createErrorCount 28
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 3724, createErrorCount 28
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:27.603 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 30
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 30
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:28.345 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 715, createErrorCount 30
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 715, createErrorCount 30
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:33.615 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1470, createErrorCount 31
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1470, createErrorCount 31
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:34.351 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2210, createErrorCount 31
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2210, createErrorCount 31
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:39.632 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2977, createErrorCount 32
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2977, createErrorCount 32
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:40.357 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3704, createErrorCount 32
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3704, createErrorCount 32
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:45.648 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 34
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 34
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:46.365 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 695, createErrorCount 34
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 695, createErrorCount 34
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:51.659 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1474, createErrorCount 35
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1474, createErrorCount 35
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:52.377 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2196, createErrorCount 35
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2196, createErrorCount 35
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:57.676 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2977, createErrorCount 36
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2977, createErrorCount 36
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:15:58.384 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3690, createErrorCount 36
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3690, createErrorCount 36
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:03.690 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 0, createErrorCount 38
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 0, createErrorCount 38
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:04.397 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 683, createErrorCount 38
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 683, createErrorCount 38
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:09.703 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1475, createErrorCount 39
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1475, createErrorCount 39
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:10.405 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2183, createErrorCount 39
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2183, createErrorCount 39
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:15.715 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2979, createErrorCount 40
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2979, createErrorCount 40
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:16.416 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3681, createErrorCount 40
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3681, createErrorCount 40
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:21.731 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 42
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 42
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:22.434 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 687, createErrorCount 42
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 687, createErrorCount 42
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:27.743 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1480, createErrorCount 43
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1480, createErrorCount 43
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:28.443 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2182, createErrorCount 43
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2182, createErrorCount 43
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:33.752 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2976, createErrorCount 44
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2976, createErrorCount 44
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:34.455 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3678, createErrorCount 44
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3678, createErrorCount 44
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:39.767 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 0, createErrorCount 46
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 0, createErrorCount 46
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:40.464 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 662, createErrorCount 46
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 662, createErrorCount 46
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:45.779 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1467, createErrorCount 47
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1467, createErrorCount 47
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:46.476 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2164, createErrorCount 47
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2164, createErrorCount 47
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:51.792 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2969, createErrorCount 48
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2969, createErrorCount 48
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:52.491 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3667, createErrorCount 48
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3667, createErrorCount 48
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:57.808 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 0, createErrorCount 50
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 0, createErrorCount 50
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:16:58.502 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 660, createErrorCount 50
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 660, createErrorCount 50
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:03.823 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1471, createErrorCount 51
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1471, createErrorCount 51
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:04.513 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2162, createErrorCount 51
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2162, createErrorCount 51
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:09.838 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2972, createErrorCount 52
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2972, createErrorCount 52
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:10.525 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3663, createErrorCount 52
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3663, createErrorCount 52
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:15.855 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 0, createErrorCount 54
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 0, createErrorCount 54
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:16.538 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 646, createErrorCount 54
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 646, createErrorCount 54
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:21.870 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1457, createErrorCount 55
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1457, createErrorCount 55
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:22.557 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2144, createErrorCount 55
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2144, createErrorCount 55
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:27.883 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2959, createErrorCount 56
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2959, createErrorCount 56
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:28.569 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3645, createErrorCount 56
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3645, createErrorCount 56
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:33.900 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 58
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 58
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:34.576 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 632, createErrorCount 58
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 632, createErrorCount 58
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:39.912 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1462, createErrorCount 59
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1462, createErrorCount 59
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:40.584 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2136, createErrorCount 59
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2136, createErrorCount 59
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:45.926 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2960, createErrorCount 60
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2960, createErrorCount 60
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:46.595 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3629, createErrorCount 60
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3629, createErrorCount 60
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:51.942 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 62
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 62
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:52.605 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 620, createErrorCount 62
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 620, createErrorCount 62
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:57.952 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1457, createErrorCount 63
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1457, createErrorCount 63
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:17:58.616 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2123, createErrorCount 63
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2123, createErrorCount 63
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:03.958 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2954, createErrorCount 64
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2954, createErrorCount 64
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:04.625 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3622, createErrorCount 64
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3622, createErrorCount 64
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:09.968 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 0, createErrorCount 66
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 0, createErrorCount 66
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:10.640 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 600, createErrorCount 66
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 600, createErrorCount 66
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:15.975 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1413, createErrorCount 67
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1413, createErrorCount 67
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:16.667 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 2101, createErrorCount 67
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 2101, createErrorCount 67
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:21.992 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2909, createErrorCount 68
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 2909, createErrorCount 68
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:22.684 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3600, createErrorCount 68
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3600, createErrorCount 68
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:28.004 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 70
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 70
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:28.698 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 571, createErrorCount 70
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 571, createErrorCount 70
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:34.021 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 1382, createErrorCount 71
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 1382, createErrorCount 71
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:34.709 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2070, createErrorCount 71
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2070, createErrorCount 71
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:40.038 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 2886, createErrorCount 72
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 2886, createErrorCount 72
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:40.731 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3581, createErrorCount 72
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3581, createErrorCount 72
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:46.059 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 0, createErrorCount 74
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 0, createErrorCount 74
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:46.747 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 550, createErrorCount 74
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 550, createErrorCount 74
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:52.072 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 1365, createErrorCount 75
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 1365, createErrorCount 75
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:52.755 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2049, createErrorCount 75
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2049, createErrorCount 75
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:58.088 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2863, createErrorCount 76
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2863, createErrorCount 76
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:18:58.777 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3551, createErrorCount 76
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3551, createErrorCount 76
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:04.107 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 78
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 0, createErrorCount 78
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:04.787 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 519, createErrorCount 78
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 519, createErrorCount 78
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:10.118 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1333, createErrorCount 79
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1333, createErrorCount 79
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:10.796 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2013, createErrorCount 79
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2013, createErrorCount 79
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:16.142 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 2834, createErrorCount 80
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 2834, createErrorCount 80
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:16.809 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3503, createErrorCount 80
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3503, createErrorCount 80
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:22.160 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 0, createErrorCount 82
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 0, createErrorCount 82
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:22.829 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 481, createErrorCount 82
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 481, createErrorCount 82
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:28.174 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 1311, createErrorCount 83
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 1311, createErrorCount 83
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:28.848 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 1986, createErrorCount 83
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 1986, createErrorCount 83
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:34.190 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2804, createErrorCount 84
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2804, createErrorCount 84
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:34.862 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3479, createErrorCount 84
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3479, createErrorCount 84
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:40.213 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 0, createErrorCount 86
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 0, createErrorCount 86
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:40.889 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 1, createElapseMillis 478, createErrorCount 86
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 1, createElapseMillis 478, createErrorCount 86
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:46.226 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1296, createErrorCount 87
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1296, createErrorCount 87
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:46.910 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 1978, createErrorCount 87
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 1978, createErrorCount 87
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:52.243 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2794, createErrorCount 88
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 2794, createErrorCount 88
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:52.927 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3478, createErrorCount 88
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3478, createErrorCount 88
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:58.261 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 0, createErrorCount 90
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 0, createErrorCount 90
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:19:58.939 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 443, createErrorCount 90
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 443, createErrorCount 90
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:04.277 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1269, createErrorCount 91
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1269, createErrorCount 91
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:04.945 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1939, createErrorCount 91
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1939, createErrorCount 91
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:10.289 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2758, createErrorCount 92
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2758, createErrorCount 92
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:10.964 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3434, createErrorCount 92
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3434, createErrorCount 92
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:16.313 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 0, createErrorCount 94
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 0, createErrorCount 94
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:16.988 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 422, createErrorCount 94
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 422, createErrorCount 94
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:22.327 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 1, createElapseMillis 1240, createErrorCount 95
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 1, createElapseMillis 1240, createErrorCount 95
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:23.007 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 1917, createErrorCount 95
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 1917, createErrorCount 95
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:28.344 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2727, createErrorCount 96
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2727, createErrorCount 96
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:29.028 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 3414, createErrorCount 96
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 3414, createErrorCount 96
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:34.368 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 0, createErrorCount 98
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 0, createErrorCount 98
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:35.044 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 372, createErrorCount 98
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 372, createErrorCount 98
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:40.383 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1177, createErrorCount 99
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1177, createErrorCount 99
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:41.056 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1854, createErrorCount 99
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1854, createErrorCount 99
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:46.399 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2676, createErrorCount 100
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 2676, createErrorCount 100
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:47.069 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3349, createErrorCount 100
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3349, createErrorCount 100
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:52.422 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 0, createErrorCount 102
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 0, createErrorCount 102
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:53.086 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 317, createErrorCount 102
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 317, createErrorCount 102
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:58.443 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1145, createErrorCount 103
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1145, createErrorCount 103
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:20:59.102 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1806, createErrorCount 103
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1806, createErrorCount 103
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:04.457 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2641, createErrorCount 104
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 2641, createErrorCount 104
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:05.116 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3301, createErrorCount 104
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3301, createErrorCount 104
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:10.466 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 106
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 106
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:11.134 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 276, createErrorCount 106
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 276, createErrorCount 106
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:16.478 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1093, createErrorCount 107
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1093, createErrorCount 107
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:17.145 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1761, createErrorCount 107
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1761, createErrorCount 107
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:22.489 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2587, createErrorCount 108
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2587, createErrorCount 108
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:23.155 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3253, createErrorCount 108
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 3253, createErrorCount 108
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:28.504 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 0, createErrorCount 110
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 0, createErrorCount 110
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:29.173 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 247, createErrorCount 110
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 247, createErrorCount 110
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:34.520 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 1066, createErrorCount 111
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 1066, createErrorCount 111
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:35.202 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 1743, createErrorCount 111
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 1743, createErrorCount 111
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:40.544 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 2578, createErrorCount 112
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 2578, createErrorCount 112
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:41.219 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3250, createErrorCount 112
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3250, createErrorCount 112
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:46.568 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 0, createErrorCount 114
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 0, createErrorCount 114
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:47.244 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 241, createErrorCount 114
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 241, createErrorCount 114
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:52.584 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 1071, createErrorCount 115
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 1071, createErrorCount 115
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:53.258 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1747, createErrorCount 115
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1747, createErrorCount 115
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:58.599 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 2576, createErrorCount 116
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 2576, createErrorCount 116
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:21:59.272 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3249, createErrorCount 116
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 3249, createErrorCount 116
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:22:04.616 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 0, createErrorCount 118
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 0, createErrorCount 118
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:22:05.286 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 225, createErrorCount 118
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3006, active 2, maxActive 128, creating 1, createElapseMillis 225, createErrorCount 118
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:39:49.642 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：69ms , start = 1640306389473
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:49.732 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640306389677
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:49.768 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：31ms , start = 1640306389735
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:49.820 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640306389769
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:49.870 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640306389821
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

08:39:49.924 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.background"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.background' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640306389879
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:49.975 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640306389926
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:50.027 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640306389978
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:50.102 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640306390031
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:50.160 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640306390104
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

08:39:50.253 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640306390191
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:50.296 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640306390254
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:50.361 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640306390303
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

08:39:50.435 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640306390364
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:50.524 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640306390439
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:50.636 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：65ms , start = 1640306390529
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

08:39:50.790 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640306390637
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:50.963 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：146ms , start = 1640306390804
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:51.031 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.default","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640306390966
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

08:39:51.085 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640306391039
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:51.132 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640306391086
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:51.184 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.text","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640306391135
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

08:39:51.230 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640306391190
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:51.277 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640306391232
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

08:39:51.343 [XNIO-1 task-5] - [526514004630179840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.link","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640306391280
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526514004630179840
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

08:52:00.302 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? WHERE id!= ? AND is_up=1 AND heart_beat_time< ?]; Communications link failure

The last packet successfully received from the server was 24,006 milliseconds ago. The last packet sent successfully to the server was 24,047 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 24,006 milliseconds ago. The last packet sent successfully to the server was 24,047 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 24,006 milliseconds ago. The last packet sent successfully to the server was 24,047 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 22 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 24,006 milliseconds ago. The last packet sent successfully to the server was 24,047 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 29 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 34 more

08:52:05.947 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [update sys_session_online set online=0,logout_time=interact_time where online=1 and interact_time< ?]; Communications link failure

The last packet successfully received from the server was 29,588 milliseconds ago. The last packet sent successfully to the server was 29,622 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 29,588 milliseconds ago. The last packet sent successfully to the server was 29,622 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 29,588 milliseconds ago. The last packet sent successfully to the server was 29,622 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 20 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 29,588 milliseconds ago. The last packet sent successfully to the server was 29,622 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 27 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 32 more

08:52:10.375 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1558, createErrorCount 121
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1558, createErrorCount 121
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:11.956 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3138, createErrorCount 121
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3138, createErrorCount 121
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:16.387 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3060, createErrorCount 122
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3060, createErrorCount 122
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:17.971 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 123, createErrorCount 123
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 123, createErrorCount 123
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:22.397 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 42, createErrorCount 124
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 42, createErrorCount 124
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:23.983 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1628, createErrorCount 124
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 1628, createErrorCount 124
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:28.410 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1542, createErrorCount 125
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 1542, createErrorCount 125
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:30.001 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3132, createErrorCount 125
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3132, createErrorCount 125
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:34.417 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3041, createErrorCount 126
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3041, createErrorCount 126
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:36.019 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 127, createErrorCount 127
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 127, createErrorCount 127
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:40.423 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 20, createErrorCount 128
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 20, createErrorCount 128
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:42.031 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1628, createErrorCount 128
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1628, createErrorCount 128
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:46.436 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1516, createErrorCount 129
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1516, createErrorCount 129
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:48.047 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3133, createErrorCount 129
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 3133, createErrorCount 129
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:52.448 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3022, createErrorCount 130
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3022, createErrorCount 130
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:54.063 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 129, createErrorCount 131
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 129, createErrorCount 131
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:52:58.461 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 17, createErrorCount 132
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 17, createErrorCount 132
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:00.077 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1633, createErrorCount 132
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1633, createErrorCount 132
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:04.475 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1508, createErrorCount 133
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 1, createElapseMillis 1508, createErrorCount 133
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:06.096 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3132, createErrorCount 133
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 3132, createErrorCount 133
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:10.492 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3010, createErrorCount 134
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 3010, createErrorCount 134
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:12.120 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 106, createErrorCount 135
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 106, createErrorCount 135
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:16.511 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 0, createErrorCount 136
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 0, createErrorCount 136
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:18.140 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1609, createErrorCount 136
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1609, createErrorCount 136
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:22.541 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1491, createErrorCount 137
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1491, createErrorCount 137
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:24.166 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 3121, createErrorCount 137
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3010, active 2, maxActive 128, creating 1, createElapseMillis 3121, createErrorCount 137
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:28.558 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2989, createErrorCount 138
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 1, createElapseMillis 2989, createErrorCount 138
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:30.190 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 99, createErrorCount 139
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 99, createErrorCount 139
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:34.577 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 140
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3000, active 2, maxActive 128, creating 0, createErrorCount 140
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:36.214 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 1609, createErrorCount 140
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 1609, createErrorCount 140
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:40.612 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 1490, createErrorCount 141
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 1490, createErrorCount 141
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:42.235 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3115, createErrorCount 141
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3008, active 2, maxActive 128, creating 1, createElapseMillis 3115, createErrorCount 141
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:46.632 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2987, createErrorCount 142
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2987, createErrorCount 142
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:48.260 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 103, createErrorCount 143
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 103, createErrorCount 143
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:52.653 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 0, createErrorCount 144
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3002, active 2, maxActive 128, creating 0, createErrorCount 144
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:54.283 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1601, createErrorCount 144
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3005, active 2, maxActive 128, creating 1, createElapseMillis 1601, createErrorCount 144
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:53:58.684 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1475, createErrorCount 145
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1475, createErrorCount 145
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:54:00.309 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 3104, createErrorCount 145
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3007, active 2, maxActive 128, creating 1, createElapseMillis 3104, createErrorCount 145
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:54:04.705 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2973, createErrorCount 146
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3004, active 2, maxActive 128, creating 1, createElapseMillis 2973, createErrorCount 146
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:54:06.333 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 1, createElapseMillis 74, createErrorCount 147
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 1, createElapseMillis 74, createErrorCount 147
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:54:10.741 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 0, createErrorCount 148
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3009, active 2, maxActive 128, creating 0, createErrorCount 148
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:54:12.346 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1561, createErrorCount 148
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3001, active 2, maxActive 128, creating 1, createElapseMillis 1561, createErrorCount 148
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 21 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

08:54:16.761 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1458, createErrorCount 149
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 3003, active 2, maxActive 128, creating 1, createElapseMillis 1458, createErrorCount 149
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1773)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1427)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1407)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1397)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:100)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 23 more
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1657)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1723)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2838)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 7 more
Caused by: java.net.SocketException: Network is unreachable (connect failed)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 more

09:04:46.591 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [update sys_session_online set online=0,logout_time=interact_time where online=1 and interact_time< ?]; Communications link failure

The last packet successfully received from the server was 29,882 milliseconds ago. The last packet sent successfully to the server was 29,921 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 29,882 milliseconds ago. The last packet sent successfully to the server was 29,921 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 29,882 milliseconds ago. The last packet sent successfully to the server was 29,921 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 20 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 29,882 milliseconds ago. The last packet sent successfully to the server was 29,921 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 27 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 32 more

09:04:46.688 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? WHERE id!= ? AND is_up=1 AND heart_beat_time< ?]; Communications link failure

The last packet successfully received from the server was 30,039 milliseconds ago. The last packet sent successfully to the server was 30,088 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 30,039 milliseconds ago. The last packet sent successfully to the server was 30,088 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 30,039 milliseconds ago. The last packet sent successfully to the server was 30,088 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 22 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 30,039 milliseconds ago. The last packet sent successfully to the server was 30,088 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 29 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 34 more

09:19:19.061 [session-interactive] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [update sys_session_online set online=0,logout_time=interact_time where online=1 and interact_time< ?]; Communications link failure

The last packet successfully received from the server was 32,535 milliseconds ago. The last packet sent successfully to the server was 32,569 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 32,535 milliseconds ago. The last packet sent successfully to the server was 32,569 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.doSessionJob(SessionOnlineServiceImpl.java:241)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.access$000(SessionOnlineServiceImpl.java:44)
	at org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl$1.run(SessionOnlineServiceImpl.java:257)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 32,535 milliseconds ago. The last packet sent successfully to the server was 32,569 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 20 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 32,535 milliseconds ago. The last packet sent successfully to the server was 32,569 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 27 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 32 more

09:19:19.113 [simple-taskmgr] - [] - INFO  c.g.f.c.log.Logger - [run,83] - task error , exception  : org.springframework.dao.RecoverableDataAccessException: PreparedStatementCallback; SQL [UPDATE sys_node SET is_up = ? WHERE id!= ? AND is_up=1 AND heart_beat_time< ?]; Communications link failure

The last packet successfully received from the server was 32,651 milliseconds ago. The last packet sent successfully to the server was 32,717 milliseconds ago.; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 32,651 milliseconds ago. The last packet sent successfully to the server was 32,717 milliseconds ago.
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:100)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:480)
	at com.github.foxnic.dao.spring.SpringDAO.execute(SpringDAO.java:413)
	at com.github.foxnic.dao.spring.SpringDAO$$FastClassBySpringCGLIB$$a37d0e57.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)
	at com.github.foxnic.dao.spring.MySqlDAO$$EnhancerBySpringCGLIB$$e8cd4a6d.execute(<generated>)
	at org.github.foxnic.web.framework.starter.StartupRegister.invalidNodes(StartupRegister.java:65)
	at org.github.foxnic.web.framework.starter.StartupRegister.beat(StartupRegister.java:72)
	at org.github.foxnic.web.framework.starter.StartupRegister.access$000(StartupRegister.java:24)
	at org.github.foxnic.web.framework.starter.StartupRegister$1.run(StartupRegister.java:43)
	at com.github.foxnic.commons.concurrent.task.SimpleTaskManager$InternalTask.run(SimpleTaskManager.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:308)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 32,651 milliseconds ago. The last packet sent successfully to the server was 32,717 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1098)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1046)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1371)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1031)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:255)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$0(JdbcTemplate.java:867)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 22 more
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 32,651 milliseconds ago. The last packet sent successfully to the server was 32,717 milliseconds ago.
	at sun.reflect.GeneratedConstructorAccessor88.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:520)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:700)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:639)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:987)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:666)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:930)
	... 29 more
Caused by: java.net.SocketException: Operation timed out (Read failed)
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeaderLocal(SimplePacketReader.java:81)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:514)
	... 34 more

14:03:47.630 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarting,55] - Starting WrapperAllApp on lankdeMacBook-Pro-2.local with PID 80496 (/Users/lank/IdeaProjectsnew/eam/eam/wrapper/wrapper-all/target/classes started by lank in /Users/lank/IdeaProjectsnew/eam)
14:03:47.637 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStartupProfileInfo,651] - No active profile set, falling back to default profiles: default
14:03:51.709 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [setApplicationContext,50] - service-all(default) is ready on port 8089
14:04:03.780 [main] - [] - INFO  c.d.p.f.d.DAOConfig - [primaryDAO,103] - dao is ready : 

user=root
url=jdbc:mysql://121.43.103.102:3306/eam?useSSL=false&serverTimezone=Hongkong&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowPublicKeyRetrieval=true&tinyInt1isBit=false

14:04:03.894 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,215] - TQL Scan Complete
14:04:03.895 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,217] - default sql count : 29
14:04:04.990 [main] - [] - INFO  c.g.f.s.m.ControllerAspector - [init,56] - ControllerAspector Init
14:04:08.519 [main] - [] - INFO  o.g.f.w.f.v.a.PageAspector - [init,74] - PageAspector Init
14:04:11.689 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES W... ] ━━━━━ 
┣ 语句：SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN( ? ,UPPER( ? ))
┣ 参数：{"PARAM_1":"eam","PARAM_2":"eam"}
┣ 执行：SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' ))
┣ 结果： 
┣━ 耗时：66ms , start = 1640325851513
┣━ 返回：RcdSet,size=143
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：null
┗━━━━━ SQL [ SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES W... ] ━━━━━ 

14:04:11.885 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule'
┣ 结果： 
┣━ 耗时：65ms , start = 1640325851819
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:04:12.215 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( valid = :PARAM... ] ━━━━━ 
┣ 语句：select t.* from dp_rule t WHERE ( ( t.deleted= ? ) AND ( valid = ? ) AND ( deleted = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":1}
┣ 执行：select t.* from dp_rule t WHERE ( ( t.deleted= 0 ) AND ( valid = 1 ) AND ( deleted = 0 ))
┣ 结果： 
┣━ 耗时：56ms , start = 1640325852158
┣━ 返回：RcdSet,size=21
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.queryList(RuleServiceImpl.java:244)
┣ TID：null
┗━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( valid = :PARAM... ] ━━━━━ 

14:04:12.277 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule_range","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule_range'
┣ 结果： 
┣━ 耗时：42ms , start = 1640325852234
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.applyAll(RuleServiceImpl.java:426)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl$1.run(RuleServiceImpl.java:87)
    com.github.foxnic.commons.concurrent.task.SimpleTaskManager$1.run(SimpleTaskManager.java:132)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:04:12.345 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.rule_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"506776075892690944","PARAM_18":"509650653266575361","PARAM_19":"520970316604768256","PARAM_20":"523903460316286976","PARAM_10":"509657055074713600","PARAM_21":"509647933944102912","PARAM_11":"505378699583950848","PARAM_22":"509655484735684608","PARAM_12":"509656547438100480","PARAM_23":0,"PARAM_13":"520966111794036736","PARAM_14":"505378833612935169","PARAM_15":"509655566583332865","PARAM_16":"509650758551994368","PARAM_9":"509655623806222337","PARAM_8":"509650369479966720","PARAM_7":"509650558735351808","PARAM_6":"509656923604254721","PARAM_5":"506777407038951424","PARAM_4":"509650440854437889","PARAM_3":"509650043460911104","PARAM_2":"509650212042571776"}
┣ 执行：SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.rule_id IN ( '509650212042571776' , '509650043460911104' , '509650440854437889' , '506777407038951424' , '509656923604254721' , '509650558735351808' , '509650369479966720' , '509655623806222337' , '509657055074713600' , '505378699583950848' , '509656547438100480' , '520966111794036736' , '505378833612935169' , '509655566583332865' , '509650758551994368' , '506776075892690944' , '509650653266575361' , '520970316604768256' , '523903460316286976' , '509647933944102912' , '509655484735684608' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640325852286
┣━ 返回：RcdSet,size=22
┣ 调用栈：
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.applyAll(RuleServiceImpl.java:426)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl$1.run(RuleServiceImpl.java:87)
    com.github.foxnic.commons.concurrent.task.SimpleTaskManager$1.run(SimpleTaskManager.java:132)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( d... ] ━━━━━ 

14:04:12.433 [ForkJoinPool-2-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule_condition","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule_condition'
┣ 结果： 
┣━ 耗时：71ms , start = 1640325852361
┣━ 返回：RcdSet,size=24
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:04:12.536 [ForkJoinPool-2-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.range_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"520987592619982848","PARAM_18":"507545845873246208","PARAM_19":"510026172998881280","PARAM_20":"510025118479552512","PARAM_10":"524224110830555136","PARAM_21":"510025732596961280","PARAM_11":"507519270167511040","PARAM_22":"507546341619007488","PARAM_12":"509648598934224896","PARAM_23":"510024900207972352","PARAM_13":"509653130233774080","PARAM_24":0,"PARAM_14":"509283833821007872","PARAM_15":"510025213606367232","PARAM_16":"510373868452450304","PARAM_9":"520988549055512576","PARAM_8":"510373972957728768","PARAM_7":"510024950115995648","PARAM_6":"510024837347938304","PARAM_5":"510026109497118720","PARAM_4":"510025000925794304","PARAM_3":"509042008610836480","PARAM_2":"510373932180705280"}
┣ 执行：SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.range_id IN ( '510373932180705280' , '509042008610836480' , '510025000925794304' , '510026109497118720' , '510024837347938304' , '510024950115995648' , '510373972957728768' , '520988549055512576' , '524224110830555136' , '507519270167511040' , '509648598934224896' , '509653130233774080' , '509283833821007872' , '510025213606367232' , '510373868452450304' , '520987592619982848' , '507545845873246208' , '510026172998881280' , '510025118479552512' , '510025732596961280' , '507546341619007488' , '510024900207972352' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：95ms , start = 1640325852440
┣━ 返回：RcdSet,size=71
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHER... ] ━━━━━ 

14:04:12.574 [simple-parallel-task] - [] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 346ms
14:04:12.589 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我起草的流程(chs_instance_drafted) 成功
14:04:12.590 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我待审的流程(chs_instance_approving) 成功
14:04:12.590 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我办结的流程(chs_instance_approved) 成功
14:04:12.591 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我参与的流程(默认)(chs_instance_joined) 成功
14:04:12.591 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产登记审批(eam_asset_insert_approving) 成功
14:04:12.592 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产调拨单据(eam_asset_allocate) 成功
14:04:12.592 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产转移单据(eam_asset_tranfer) 成功
14:04:12.593 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维修单据(eam_asset_repair) 成功
14:04:12.593 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产借用单据(eam_asset_borrow) 成功
14:04:12.593 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产领用单据(eam_asset_collection) 成功
14:04:12.593 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产退库单据(eam_asset_collection_return) 成功
14:04:12.594 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产报废单据(eam_asset_scrap) 成功
14:04:12.594 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本变更单据(eam_asset_change_base_info) 成功
14:04:12.595 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维保变更单据(eam_asset_change_maintenance) 成功
14:04:12.595 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产财务变更单据(eam_asset_change_financial) 成功
14:04:12.595 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产财务变更审批(eam_asset_change_financial_approving) 成功
14:04:12.596 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维保变更审批(eam_asset_change_maintenance_approving) 成功
14:04:12.597 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本变更审批(eam_asset_change_base_info_approving) 成功
14:04:12.597 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产耗材领用单据(eam_asset_consumables_collection) 成功
14:04:12.597 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产库存分配单据(eam_asset_stock_distribute) 成功
14:04:12.598 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产全局数据权限(eam_asset_global_data_permission) 成功
14:04:18.142 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarted,61] - Started WrapperAllApp in 31.61 seconds (JVM running for 39.413)
14:04:18.182 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,66] - url scan time : 32ms
14:04:18.185 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,86] - 

======================== FOX-NIC-WEB IS READY ========================
	Internal Version				1.6.2-20211214
	Machine Id						D7B67D75818C671B
	Process Id						80496
	Application Name				service-all
	Active Profile					default
	Port							8089
	Boot Time						26s
	Visit Local						http://127.0.0.1:8089/
	Visit LAN(0)					http://172.20.10.3:8089/
	Visit LAN(1)					http://172.31.199.40:8089/
======================== FOX-NIC-WEB IS READY ========================

14:04:18.187 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-customer
14:04:18.188 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-contract
14:04:18.189 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-knowledgebase
14:04:18.190 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-common
14:04:18.190 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-console
14:04:18.191 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-datacenter
14:04:18.192 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-eam
14:04:18.193 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-hrm
14:04:18.193 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-ops
14:04:18.319 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,72] - deploy is ready on 139 dirs
14:05:43.896 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_config","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_config'
┣ 结果： 
┣━ 耗时：51ms , start = 1640325943840
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getDBTableMeta(SuperService.java:63)
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:229)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

14:05:44.024 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640325943957
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.112 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640325944064
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.182 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640325944119
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.351 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：163ms , start = 1640325944184
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.419 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640325944373
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:44.532 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.background"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.background' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640325944479
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.611 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640325944545
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.686 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：65ms , start = 1640325944618
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.732 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640325944689
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.769 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：31ms , start = 1640325944735
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:44.831 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640325944772
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.888 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640325944838
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:44.951 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640325944891
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:45.032 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640325944966
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:45.069 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：31ms , start = 1640325945035
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:45.124 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640325945074
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:45.185 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640325945127
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:45.228 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640325945188
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:45.282 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.default","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640325945231
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:45.342 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640325945296
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:45.387 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640325945344
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:45.430 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.text","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640325945390
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:45.468 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640325945432
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:45.537 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640325945477
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:45.713 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.link","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640325945650
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:49.052 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"ChinaYIE(测试版本_1.0.2)","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'ChinaYIE(测试版本_1.0.2)' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：38ms , start = 1640325949006
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:05:49.124 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"用户登录","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '用户登录' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：43ms , start = 1640325949076
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:05:51.156 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"ChinaYIE","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'ChinaYIE' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：43ms , start = 1640325951108
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:05:51.236 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"© 2021 Foxnic-Web 版权所有","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '© 2021 Foxnic-Web 版权所有' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：58ms , start = 1640325951176
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

14:05:51.314 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640325951258
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.363 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640325951317
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.453 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：80ms , start = 1640325951365
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.483 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640325951321
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.507 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640325951456
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.529 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640325951488
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.551 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640325951509
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:51.572 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640325951536
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.609 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.background"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.background' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640325951554
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.626 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640325951573
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.652 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：32ms , start = 1640325951612
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.667 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640325951627
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:51.712 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640325951654
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.760 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640325951714
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.807 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640325951762
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:51.853 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640325951810
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.887 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：28ms , start = 1640325951856
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:51.957 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640325951894
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:51.987 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640325951942
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:52.001 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640325951960
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:52.034 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640325951989
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:52.058 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640325952005
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:52.092 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640325952036
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:52.103 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640325952062
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:52.146 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640325952106
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:53.631 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：1478ms , start = 1640325952148
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:53.680 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.default","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640325953632
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:53.731 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640325953682
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:53.780 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640325953733
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:53.820 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.text","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640325953782
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

14:05:53.872 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640325953822
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:53.923 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640325953873
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

14:05:53.964 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.link","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640325953924
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:36.664 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.captcha.any"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.captcha.any' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640329656607
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:36.704 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.captcha.any"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.captcha.any' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640329656669
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:36.760 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.captcha.any","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.captcha.any' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640329656705
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:37.296 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = 'admin' ) A
┣ 结果： 
┣━ 耗时：63ms , start = 1640329657227
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:279)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:86)
┣ TID：null
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 

15:07:37.360 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_user WHERE name = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"admin","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_user WHERE name = 'admin' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：61ms , start = 1640329657297
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:279)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:86)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 

15:07:37.422 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role'
┣ 结果： 
┣━ 耗时：47ms , start = 1640329657374
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:37.494 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu'
┣ 结果： 
┣━ 耗时：65ms , start = 1640329657427
┣━ 返回：RcdSet,size=22
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:37.582 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_menu'
┣ 结果： 
┣━ 耗时：83ms , start = 1640329657498
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:37.646 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_user'
┣ 结果： 
┣━ 耗时：57ms , start = 1640329657586
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:37.734 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_user_tenant","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_user_tenant'
┣ 结果： 
┣━ 耗时：74ms , start = 1640329657659
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:37.808 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_menu'
┣ 结果： 
┣━ 耗时：63ms , start = 1640329657741
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:37.937 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? ) AND t_0.deleted= ? ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"110588348101165911"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '110588348101165911' ) AND t_0.deleted= 0 ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：168ms , start = 1640329657767
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

15:07:38.013 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_user'
┣ 结果： 
┣━ 耗时：190ms , start = 1640329657822
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:38.028 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( '110588348101165911' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：360ms , start = 1640329657667
┣━ 返回：RcdSet,size=1268
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 

15:07:38.078 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '110588348101165911' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640329658017
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

15:07:38.246 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 
┣ 语句：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= ? ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( ? ) AND t_2.deleted= ? ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_5":0,"PARAM_4":"110588348101165911","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( '110588348101165911' ) AND t_2.deleted= 0 ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：424ms , start = 1640329657821
┣━ 返回：RcdSet,size=1268
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 

15:07:38.456 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee'
┣ 结果： 
┣━ 耗时：49ms , start = 1640329658406
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:38.518 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：44ms , start = 1640329658468
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:38.533 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640329658472
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:07:38.590 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：50ms , start = 1640329658539
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:38.647 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：49ms , start = 1640329658596
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:38.721 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_9":"465893030000328704","PARAM_8":"491342618928611328","PARAM_10":0,"PARAM_7":"517640836658233344","PARAM_6":"487660170021703680","PARAM_5":"501416282168492032","PARAM_4":"[]","PARAM_3":"482877676047040511","PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '482877676047040511' , '[]' , '501416282168492032' , '487660170021703680' , '517640836658233344' , '491342618928611328' , '465893030000328704' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640329658653
┣━ 返回：RcdSet,size=6
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:38.740 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：84ms , start = 1640329658652
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:38.844 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：77ms , start = 1640329658766
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:38.888 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_17":"500337554411757568","PARAM_18":"471653531770683392","PARAM_19":"473771445873278976","PARAM_10":"481749145309151232","PARAM_11":"473503433593192448","PARAM_12":"484680928828850176","PARAM_13":"490638744550907904","PARAM_14":"481119852224839680","PARAM_15":"481068382330814464","PARAM_16":"479219957951889408","PARAM_9":"501072373705867264","PARAM_8":"463400823506862080","PARAM_7":"495244156847783936","PARAM_6":"[]","PARAM_5":"526510493767045120","PARAM_4":"501072627503202304","PARAM_3":"502195284776849408","PARAM_2":"","PARAM_1":0,"PARAM_20":"473534962490933248","PARAM_21":"487660170021703680","PARAM_22":"463401580721340416","PARAM_23":"516603629470224384","PARAM_24":"510887820433293312","PARAM_25":"479329585473781760","PARAM_26":0}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '502195284776849408' , '501072627503202304' , '526510493767045120' , '[]' , '495244156847783936' , '463400823506862080' , '501072373705867264' , '481749145309151232' , '473503433593192448' , '484680928828850176' , '490638744550907904' , '481119852224839680' , '481068382330814464' , '479219957951889408' , '500337554411757568' , '471653531770683392' , '473771445873278976' , '473534962490933248' , '487660170021703680' , '463401580721340416' , '516603629470224384' , '510887820433293312' , '479329585473781760' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：109ms , start = 1640329658759
┣━ 返回：RcdSet,size=22
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:38.897 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：47ms , start = 1640329658849
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:38.903 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"464828186346127361","PARAM_31":"498472737438703616","PARAM_32":"521282330438926337","PARAM_33":"498780101593268225","PARAM_34":"498963858317115392","PARAM_35":"515117880593874945","PARAM_36":"501653361645326336","PARAM_37":"501653278359031809","PARAM_38":"498963857323065345","PARAM_30":"501653165884575744","PARAM_28":"472814706734661633","PARAM_29":"490909222070915073","PARAM_20":"525222910407737344","PARAM_21":"497513282840559617","PARAM_22":"498780063144083457","PARAM_23":"490920319637262337","PARAM_24":"498472430189158400","PARAM_25":"498808937571680257","PARAM_26":"485819338599706624","PARAM_27":"498780092948807681","PARAM_17":"490925002938388480","PARAM_18":"499939051860656128","PARAM_19":"485415687787917312","PARAM_97":"514445388736892928","PARAM_10":"521281126673678336","PARAM_98":"521281127378321409","PARAM_11":"497490986344120320","PARAM_99":"525268291409674240","PARAM_12":"464827069453303809","PARAM_13":"521281128124907521","PARAM_14":"517689118029778944","PARAM_15":"516602639874527232","PARAM_16":"514445387440852993","PARAM_90":"501424056243851264","PARAM_91":"498963847839744001","PARAM_92":"486485877028032513","PARAM_93":"491342702357512192","PARAM_94":"498963895084384257","PARAM_95":"463779102176837633","PARAM_96":"490915625305116672","PARAM_86":"515190045229973505","PARAM_87":"498963844891148289","PARAM_88":"503188930321977344","PARAM_89":"517689122060505089","PARAM_80":"504683060067840001","PARAM_81":"465893287996162048","PARAM_82":"497513348733075457","PARAM_83":"486487652200091649","PARAM_84":"463779099165327360","PARAM_85":"498963891439534081","PARAM_103":"474158954033709056","PARAM_104":"498970914482814977","PARAM_101":"497513458128912385","PARAM_102":"499940736691601409","PARAM_107":"521282329352601600","PARAM_108":"496813531019083776","PARAM_105":"499939054448541696","PARAM_106":"491206464543657984","PARAM_75":"498473113529360385","PARAM_76":"499954026838757376","PARAM_77":"499954055192252417","PARAM_109":"499939072068812801","PARAM_78":"515190259152060416","PARAM_79":"501653226060255233","PARAM_70":"504060697101996032","PARAM_71":"515117882481311744","PARAM_72":"515120996273881089","PARAM_73":"464827137099038721","PARAM_74":"498809287695400961","PARAM_9":"497513009569071104","PARAM_8":"498971349855764481","PARAM_7":"499954030739460097","PARAM_6":"502170156177297409","PARAM_5":"478626411003772928","PARAM_110":"521282334683561984","PARAM_4":"514445384425148416","PARAM_111":"515190044768600064","PARAM_3":"504412977160523776","PARAM_2":0,"PARAM_1":0,"PARAM_64":"498472318377402368","PARAM_65":"498809154048098304","PARAM_66":"498963856643588097","PARAM_67":"464827257593004033","PARAM_68":"498963846124273665","PARAM_69":"478625404161097728","PARAM_60":"499954038733803521","PARAM_61":"490907983723630592","PARAM_62":"498970926130397185","PARAM_63":"515190262654304256","PARAM_100":"515120913977442304","PARAM_53":"499954049295060993","PARAM_54":"478598694187307009","PARAM_55":"478625395923484673","PARAM_56":"515190261375041536","PARAM_57":"497513204994277377","PARAM_58":"515190041257967617","PARAM_59":"498809237418278912","PARAM_50":"515119470813904896","PARAM_51":"526446579532435456","PARAM_52":"498474299326210049","PARAM_114":"499939062635823104","PARAM_115":"516603899361103872","PARAM_112":"521281129953624065","PARAM_113":"472811546343374849","PARAM_118":"474158850757361665","PARAM_119":0,"PARAM_116":"499939072706347008","PARAM_117":"498582106398523393","PARAM_42":"515118156595855360","PARAM_43":"514445388166467584","PARAM_44":"498962214124781568","PARAM_45":"515119470113456128","PARAM_46":"498809191108968448","PARAM_47":"498808864725008384","PARAM_48":"498472974811144192","PARAM_49":"490908428638621696","PARAM_40":"499940724104495105","PARAM_41":"497514241515847681"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '504412977160523776' , '514445384425148416' , '478626411003772928' , '502170156177297409' , '499954030739460097' , '498971349855764481' , '497513009569071104' , '521281126673678336' , '497490986344120320' , '464827069453303809' , '521281128124907521' , '517689118029778944' , '516602639874527232' , '514445387440852993' , '490925002938388480' , '499939051860656128' , '485415687787917312' , '525222910407737344' , '497513282840559617' , '498780063144083457' , '490920319637262337' , '498472430189158400' , '498808937571680257' , '485819338599706624' , '498780092948807681' , '472814706734661633' , '490909222070915073' , '501653165884575744' , '498472737438703616' , '521282330438926337' , '498780101593268225' , '498963858317115392' , '515117880593874945' , '501653361645326336' , '501653278359031809' , '498963857323065345' , '464828186346127361' , '499940724104495105' , '497514241515847681' , '515118156595855360' , '514445388166467584' , '498962214124781568' , '515119470113456128' , '498809191108968448' , '498808864725008384' , '498472974811144192' , '490908428638621696' , '515119470813904896' , '526446579532435456' , '498474299326210049' , '499954049295060993' , '478598694187307009' , '478625395923484673' , '515190261375041536' , '497513204994277377' , '515190041257967617' , '498809237418278912' , '499954038733803521' , '490907983723630592' , '498970926130397185' , '515190262654304256' , '498472318377402368' , '498809154048098304' , '498963856643588097' , '464827257593004033' , '498963846124273665' , '478625404161097728' , '504060697101996032' , '515117882481311744' , '515120996273881089' , '464827137099038721' , '498809287695400961' , '498473113529360385' , '499954026838757376' , '499954055192252417' , '515190259152060416' , '501653226060255233' , '504683060067840001' , '465893287996162048' , '497513348733075457' , '486487652200091649' , '463779099165327360' , '498963891439534081' , '515190045229973505' , '498963844891148289' , '503188930321977344' , '517689122060505089' , '501424056243851264' , '498963847839744001' , '486485877028032513' , '491342702357512192' , '498963895084384257' , '463779102176837633' , '490915625305116672' , '514445388736892928' , '521281127378321409' , '525268291409674240' , '515120913977442304' , '497513458128912385' , '499940736691601409' , '474158954033709056' , '498970914482814977' , '499939054448541696' , '491206464543657984' , '521282329352601600' , '496813531019083776' , '499939072068812801' , '521282334683561984' , '515190044768600064' , '521281129953624065' , '472811546343374849' , '499939062635823104' , '516603899361103872' , '499939072706347008' , '498582106398523393' , '474158850757361665' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：168ms , start = 1640329658642
┣━ 返回：RcdSet,size=142
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:38.970 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_tenant","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_tenant'
┣ 结果： 
┣━ 耗时：67ms , start = 1640329658902
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:38.996 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"515109186632155136","PARAM_31":"479598112373997568","PARAM_32":"485936562941460480","PARAM_33":"472331135444058112","PARAM_34":"479388227191439360","PARAM_35":"479354717013540864","PARAM_36":"481119858512101376","PARAM_37":"472023705464078336","PARAM_38":"479329284624744448","PARAM_30":"498885085060136960","PARAM_28":"473733257758769152","PARAM_29":"474281120842645504","PARAM_20":"482583848937324544","PARAM_21":"473503437766524928","PARAM_22":"498885082019266560","PARAM_23":"485888535333699584","PARAM_24":"480377919596658688","PARAM_25":"480137007910092800","PARAM_26":"484684753241374720","PARAM_27":"473733255862943744","PARAM_17":"get-current-user","PARAM_18":"463400830083530752","PARAM_19":"478080879135031296","PARAM_97":"521359008745914368","PARAM_10":"519151990324854784","PARAM_98":"494597318092259328","PARAM_11":"494904448682819584","PARAM_99":"494904212736442368","PARAM_12":"521358027220058112","PARAM_13":"485747530676568064","PARAM_14":"481119856855351296","PARAM_15":"477956223535153152","PARAM_16":"478585179489697792","PARAM_90":"471974289361338368","PARAM_91":"471986331946319872","PARAM_92":"489901521874452480","PARAM_93":"501074104456052736","PARAM_94":"498769910416015360","PARAM_95":"507635145327509504","PARAM_96":"472818410917462016","PARAM_86":"521358028428017664","PARAM_87":"484683937952563200","PARAM_88":"488696593290100736","PARAM_89":"521358569501622272","PARAM_80":"501416295116308480","PARAM_81":"480389137287872512","PARAM_82":"484680991584026624","PARAM_83":"504682762972704768","PARAM_84":"478585173638643712","PARAM_85":"473771451304902656","PARAM_103":"487559544579293184","PARAM_104":"475954742317547520","PARAM_101":"482581324939395072","PARAM_102":"483218062279966720","PARAM_107":"485888533777612800","PARAM_108":"487568374700703744","PARAM_105":"477952348665151488","PARAM_106":"478585177820364800","PARAM_75":"480488583120027648","PARAM_76":"489901519739551744","PARAM_77":"485888529902075904","PARAM_109":"463400828363866112","PARAM_78":"488696589599113216","PARAM_79":"479956466397085696","PARAM_70":"479388229263425536","PARAM_71":"463399688926658560","PARAM_72":"478603513186746368","PARAM_73":"472819784346501121","PARAM_74":"473550018758836225","PARAM_9":"494597323653906432","PARAM_8":"489077810774671360","PARAM_7":"471622520550719488","PARAM_6":"489922971863875584","PARAM_5":"481068388223811584","PARAM_110":"472811438801420289","PARAM_4":"471974287931080704","PARAM_111":"472331327836782592","PARAM_3":"501072114866978816","PARAM_2":0,"PARAM_1":0,"PARAM_64":"471620638545543168","PARAM_65":"474281122537144320","PARAM_66":"479219962657898496","PARAM_67":"480377913779159040","PARAM_68":"472037131183718400","PARAM_69":"473503439284862976","PARAM_60":"463429350570590208","PARAM_61":"472819614665932801","PARAM_62":"479218756208295936","PARAM_63":"489815789730267136","PARAM_100":"464788444141322240","PARAM_125":"521358825685516288","PARAM_126":"472358699843715073","PARAM_123":"489815783782744064","PARAM_124":"521359009299562496","PARAM_129":"471653537873395712","PARAM_127":"482877682514657280","PARAM_128":"471666419482755072","PARAM_53":"479220712784003072","PARAM_54":"477952350720360448","PARAM_55":"487568371366232064","PARAM_56":"481563568920068096","PARAM_57":"463399153808965632","PARAM_58":"479218757961515008","PARAM_59":"463429355423399936","PARAM_50":"473733250888499200","PARAM_51":"463397738055204864","PARAM_52":"463397736541061120","PARAM_130":"463400007958003712","PARAM_131":0,"PARAM_114":"478956689802919936","PARAM_115":"482581098463756288","PARAM_112":"471623107698753536","PARAM_113":"474123296653180928","PARAM_118":"463429357021429760","PARAM_119":"484684751630761984","PARAM_116":"494904454114443264","PARAM_117":"481563570933334016","PARAM_42":"510887581764812800","PARAM_43":"482581326621310976","PARAM_44":"479008663990697984","PARAM_45":"473771453230088192","PARAM_46":"479219964406923264","PARAM_47":"475686686903238656","PARAM_48":"510887582259740672","PARAM_49":"478603514990297088","PARAM_40":"478956691585499136","PARAM_41":"475954740530774016","PARAM_121":"490924383968169985","PARAM_122":"479329291742478336","PARAM_120":"501074102618947584"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501072114866978816' , '471974287931080704' , '481068388223811584' , '489922971863875584' , '471622520550719488' , '489077810774671360' , '494597323653906432' , '519151990324854784' , '494904448682819584' , '521358027220058112' , '485747530676568064' , '481119856855351296' , '477956223535153152' , '478585179489697792' , 'get-current-user' , '463400830083530752' , '478080879135031296' , '482583848937324544' , '473503437766524928' , '498885082019266560' , '485888535333699584' , '480377919596658688' , '480137007910092800' , '484684753241374720' , '473733255862943744' , '473733257758769152' , '474281120842645504' , '498885085060136960' , '479598112373997568' , '485936562941460480' , '472331135444058112' , '479388227191439360' , '479354717013540864' , '481119858512101376' , '472023705464078336' , '479329284624744448' , '515109186632155136' , '478956691585499136' , '475954740530774016' , '510887581764812800' , '482581326621310976' , '479008663990697984' , '473771453230088192' , '479219964406923264' , '475686686903238656' , '510887582259740672' , '478603514990297088' , '473733250888499200' , '463397738055204864' , '463397736541061120' , '479220712784003072' , '477952350720360448' , '487568371366232064' , '481563568920068096' , '463399153808965632' , '479218757961515008' , '463429355423399936' , '463429350570590208' , '472819614665932801' , '479218756208295936' , '489815789730267136' , '471620638545543168' , '474281122537144320' , '479219962657898496' , '480377913779159040' , '472037131183718400' , '473503439284862976' , '479388229263425536' , '463399688926658560' , '478603513186746368' , '472819784346501121' , '473550018758836225' , '480488583120027648' , '489901519739551744' , '485888529902075904' , '488696589599113216' , '479956466397085696' , '501416295116308480' , '480389137287872512' , '484680991584026624' , '504682762972704768' , '478585173638643712' , '473771451304902656' , '521358028428017664' , '484683937952563200' , '488696593290100736' , '521358569501622272' , '471974289361338368' , '471986331946319872' , '489901521874452480' , '501074104456052736' , '498769910416015360' , '507635145327509504' , '472818410917462016' , '521359008745914368' , '494597318092259328' , '494904212736442368' , '464788444141322240' , '482581324939395072' , '483218062279966720' , '487559544579293184' , '475954742317547520' , '477952348665151488' , '478585177820364800' , '485888533777612800' , '487568374700703744' , '463400828363866112' , '472811438801420289' , '472331327836782592' , '471623107698753536' , '474123296653180928' , '478956689802919936' , '482581098463756288' , '494904454114443264' , '481563570933334016' , '463429357021429760' , '484684751630761984' , '501074102618947584' , '490924383968169985' , '479329291742478336' , '489815783782744064' , '521359009299562496' , '521358825685516288' , '472358699843715073' , '482877682514657280' , '471666419482755072' , '471653537873395712' , '463400007958003712' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：87ms , start = 1640329658898
┣━ 返回：RcdSet,size=160
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:39.019 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"481338861117505536","PARAM_11":"489077805078806528","PARAM_12":"471666413233242112","PARAM_13":0,"PARAM_9":"463401807993896960","PARAM_8":"482583842692005888","PARAM_7":"479959564171608064","PARAM_6":"523843695028469760","PARAM_5":"[]","PARAM_4":"498885073529995264","PARAM_3":"","PARAM_2":"492410573934297088"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '492410573934297088' , '' , '498885073529995264' , '[]' , '523843695028469760' , '479959564171608064' , '482583842692005888' , '463401807993896960' , '481338861117505536' , '489077805078806528' , '471666413233242112' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：106ms , start = 1640329658906
┣━ 返回：RcdSet,size=9
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:39.058 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'T001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：82ms , start = 1640329658975
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 

15:07:39.085 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"477956217403080704","PARAM_31":"473534966525853696","PARAM_32":"474123290978287616","PARAM_33":"489922965769551872","PARAM_34":"478080877377617920","PARAM_35":"463401812293058560","PARAM_36":"474159090990317568","PARAM_37":"479330038903209984","PARAM_38":"485936556943605760","PARAM_30":"472331133846028288","PARAM_28":"489922970169376768","PARAM_29":"514022960873340928","PARAM_20":"501072632922243072","PARAM_21":"472818971712684033","PARAM_22":"472023113178021888","PARAM_23":"472331129806913536","PARAM_24":"index","PARAM_25":"473626750312513536","PARAM_26":"495244161406992384","PARAM_27":"484683936333561856","PARAM_17":"480389135564013568","PARAM_18":"484684747470012416","PARAM_19":"482864638480875520","PARAM_97":"474123295055151104","PARAM_10":"488696580921098240","PARAM_98":"519150902678913024","PARAM_11":"479354710923411456","PARAM_99":"463402970206175232","PARAM_12":"508300419894607872","PARAM_13":"481749150413619200","PARAM_14":"482573211888779264","PARAM_15":"517640837794889728","PARAM_16":"463397133957988352","PARAM_90":"476679545236226048","PARAM_91":"478626344431779840","PARAM_92":"490245511899512832","PARAM_93":"494597321997156352","PARAM_94":"472331326201004032","PARAM_95":"521358570889936896","PARAM_96":"463401584798203904","PARAM_86":"495243926484025344","PARAM_87":"521358823823245312","PARAM_88":"464788442501349376","PARAM_89":"477952342965092352","PARAM_80":"471622514821300224","PARAM_81":"473609130683138048","PARAM_82":"471974284126846976","PARAM_83":"486313023716196352","PARAM_84":"471623112182464512","PARAM_85":"482877680811769856","PARAM_103":"480377918011211776","PARAM_104":"489901513284517888","PARAM_101":"508300428283215872","PARAM_102":"485747528893988864","PARAM_107":"501074097912938496","PARAM_108":"507635154248794112","PARAM_105":"487559541341290496","PARAM_106":"471666417796644864","PARAM_75":"475686681035407360","PARAM_76":"484680990048911360","PARAM_77":"484683932139257856","PARAM_109":"481749749448310784","PARAM_78":"476660944341041152","PARAM_79":"521359007324045312","PARAM_70":"479330034058788864","PARAM_71":"472023108392321024","PARAM_72":"492410578774523904","PARAM_73":"521358026385391616","PARAM_74":"483218060644188160","PARAM_9":"481338866817564672","PARAM_8":"478603508019363840","PARAM_7":"463400006318030848","PARAM_6":"479956464534814720","PARAM_5":"479959568621764608","PARAM_110":"494904452583522304","PARAM_4":"511607134790615040","PARAM_111":"489077809105338368","PARAM_3":"463402973779722240","PARAM_2":0,"PARAM_1":0,"PARAM_64":"525222633608839168","PARAM_65":"485560938628382720","PARAM_66":"521358825169616896","PARAM_67":"486551844089233408","PARAM_68":"482865232566288384","PARAM_69":"478080872541585408","PARAM_60":"525268121129320448","PARAM_61":"482581096999944192","PARAM_62":"481068386625781760","PARAM_63":"471622519044964352","PARAM_100":"479354715398733824","PARAM_125":"478922687092097024","PARAM_126":"515109184639860736","PARAM_123":"479329590288842752","PARAM_124":"511607133742039040","PARAM_129":"501072113185062912","PARAM_127":"479329289888595968","PARAM_128":"472814616229969920","PARAM_53":"479008668327608320","PARAM_54":"485560934119505920","PARAM_55":"494904216788140032","PARAM_56":"479598110457200640","PARAM_57":"463399152273850368","PARAM_58":"514022965487075328","PARAM_59":"485936561238573056","PARAM_50":"482583847255408640","PARAM_51":"472023703798939648","PARAM_52":"515109179094990848","PARAM_130":"463399687542538240","PARAM_131":0,"PARAM_114":"473228835811229696","PARAM_115":"501416291903471616","PARAM_112":"480488581421334528","PARAM_113":"480137012393803776","PARAM_118":"489815788086099968","PARAM_119":"501072378579648512","PARAM_116":"483218056353415168","PARAM_117":"478688766404329472","PARAM_42":"476673972792983552","PARAM_43":"471653536266977280","PARAM_44":"479388218932854784","PARAM_45":"479220710963675136","PARAM_46":"480492964435460096","PARAM_47":"523843700309098496","PARAM_48":"463400000727023616","PARAM_49":"480481730000584704","PARAM_40":"510887821632864256","PARAM_41":"477956221781934080","PARAM_121":"519151989741846528","PARAM_122":"475686685250682880","PARAM_120":"476319986613223424"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463402973779722240' , '511607134790615040' , '479959568621764608' , '479956464534814720' , '463400006318030848' , '478603508019363840' , '481338866817564672' , '488696580921098240' , '479354710923411456' , '508300419894607872' , '481749150413619200' , '482573211888779264' , '517640837794889728' , '463397133957988352' , '480389135564013568' , '484684747470012416' , '482864638480875520' , '501072632922243072' , '472818971712684033' , '472023113178021888' , '472331129806913536' , 'index' , '473626750312513536' , '495244161406992384' , '484683936333561856' , '489922970169376768' , '514022960873340928' , '472331133846028288' , '473534966525853696' , '474123290978287616' , '489922965769551872' , '478080877377617920' , '463401812293058560' , '474159090990317568' , '479330038903209984' , '485936556943605760' , '477956217403080704' , '510887821632864256' , '477956221781934080' , '476673972792983552' , '471653536266977280' , '479388218932854784' , '479220710963675136' , '480492964435460096' , '523843700309098496' , '463400000727023616' , '480481730000584704' , '482583847255408640' , '472023703798939648' , '515109179094990848' , '479008668327608320' , '485560934119505920' , '494904216788140032' , '479598110457200640' , '463399152273850368' , '514022965487075328' , '485936561238573056' , '525268121129320448' , '482581096999944192' , '481068386625781760' , '471622519044964352' , '525222633608839168' , '485560938628382720' , '521358825169616896' , '486551844089233408' , '482865232566288384' , '478080872541585408' , '479330034058788864' , '472023108392321024' , '492410578774523904' , '521358026385391616' , '483218060644188160' , '475686681035407360' , '484680990048911360' , '484683932139257856' , '476660944341041152' , '521359007324045312' , '471622514821300224' , '473609130683138048' , '471974284126846976' , '486313023716196352' , '471623112182464512' , '482877680811769856' , '495243926484025344' , '521358823823245312' , '464788442501349376' , '477952342965092352' , '476679545236226048' , '478626344431779840' , '490245511899512832' , '494597321997156352' , '472331326201004032' , '521358570889936896' , '463401584798203904' , '474123295055151104' , '519150902678913024' , '463402970206175232' , '479354715398733824' , '508300428283215872' , '485747528893988864' , '480377918011211776' , '489901513284517888' , '487559541341290496' , '471666417796644864' , '501074097912938496' , '507635154248794112' , '481749749448310784' , '494904452583522304' , '489077809105338368' , '480488581421334528' , '480137012393803776' , '473228835811229696' , '501416291903471616' , '483218056353415168' , '478688766404329472' , '489815788086099968' , '501072378579648512' , '476319986613223424' , '519151989741846528' , '475686685250682880' , '479329590288842752' , '511607133742039040' , '478922687092097024' , '515109184639860736' , '479329289888595968' , '472814616229969920' , '501072113185062912' , '463399687542538240' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：178ms , start = 1640329658904
┣━ 返回：RcdSet,size=272
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:39.084 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_8":0,"PARAM_7":"501072108604882944","PARAM_6":"480492959255494656","PARAM_5":"501416282168492032","PARAM_4":"498885073529995264","PARAM_3":"478922681358483456","PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '478922681358483456' , '498885073529995264' , '501416282168492032' , '480492959255494656' , '501072108604882944' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640329659024
┣━ 返回：RcdSet,size=5
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:39.089 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"481749751662903296","PARAM_31":"494904218386169856","PARAM_32":"473534967930945536","PARAM_33":"514022967143825408","PARAM_34":"463399684191289344","PARAM_35":"501072380383199232","PARAM_36":"485747524523524096","PARAM_37":"481338869564833792","PARAM_38":"483218062917500928","PARAM_30":"516601919007887360","PARAM_28":"478688767939444736","PARAM_29":"495243928195301376","PARAM_20":"471653538498347008","PARAM_21":"463401814398599168","PARAM_22":"490245513522708480","PARAM_23":"482573214082400256","PARAM_24":"471623114069901312","PARAM_25":"478688762461683712","PARAM_26":"486551846547095552","PARAM_27":"system_config","PARAM_17":"473534968501370880","PARAM_18":"492410580473217024","PARAM_19":"485560940150915072","PARAM_97":"514022967743610880","PARAM_10":"498581971681673216","PARAM_98":"463401586794692608","PARAM_11":"472023115707187200","PARAM_99":"476319982246952960","PARAM_12":"521358825886842880","PARAM_13":"473609132373442560","PARAM_14":"482573213478420480","PARAM_15":"475686687532384256","PARAM_16":"495243928853807104","PARAM_90":"482864640871628800","PARAM_91":"476673974453927936","PARAM_92":"463402976065617920","PARAM_93":"486551845917949952","PARAM_94":"501072381054287872","PARAM_95":"521358571649105920","PARAM_96":"478922689868726272","PARAM_86":"482581320564736000","PARAM_87":"498769993710698497","PARAM_88":"521358571439390720","PARAM_89":"474155093021687808","PARAM_80":"482864640208928768","PARAM_81":"501072635275247616","PARAM_82":"471623114736795648","PARAM_83":"475954736080617472","PARAM_84":"495244163676110848","PARAM_85":"479220713446703104","PARAM_103":"472023706080641024","PARAM_104":"486313026476048384","PARAM_101":"489815790388772864","PARAM_102":"472331135993511936","PARAM_107":"508300431265366016","PARAM_108":"498770119770505217","PARAM_105":"510887822199095296","PARAM_106":"511607135369428992","PARAM_75":"480481731707666432","PARAM_76":"474158815193858049","PARAM_77":"473228716474892288","PARAM_109":"507635157855895552","PARAM_78":"478922689172471808","PARAM_79":"479598105545670656","PARAM_70":"476319988295139328","PARAM_71":"479330040773869568","PARAM_72":"471666420116094976","PARAM_73":"486313025783988224","PARAM_74":"523843702414639104","PARAM_9":"479329591786209280","PARAM_8":"485560940721340416","PARAM_7":"480137014788751360","PARAM_6":"523843703270277120","PARAM_5":"492410581156888576","PARAM_110":"479008669908860928","PARAM_4":"495244163038576640","PARAM_111":"480492966025101312","PARAM_3":"479354717600743424","PARAM_2":0,"PARAM_1":0,"PARAM_64":"495201409763901440","PARAM_65":"482865234667634688","PARAM_66":"484683938606874624","PARAM_67":"472023114964795392","PARAM_68":"507635159172907008","PARAM_69":"479959570941214720","PARAM_60":"481749745337892864","PARAM_61":"473626752741015552","PARAM_62":"463401813807202304","PARAM_63":"517640838222708736","PARAM_100":"476673975825465344","PARAM_125":"478178015856033792","PARAM_126":"490245514197991424","PARAM_123":"481749152221364224","PARAM_124":"481749751037952000","PARAM_129":"494904219002732544","PARAM_127":"476319988987199488","PARAM_128":"463401586228461568","PARAM_53":"495243922151309312","PARAM_54":"476679547505344512","PARAM_55":"479956459719753728","PARAM_56":"476660946173952000","PARAM_57":"482865234084626432","PARAM_58":"473609133057114112","PARAM_59":"479959570282708992","PARAM_50":"482877683189940224","PARAM_51":"480481732412309504","PARAM_52":"510887822043906048","PARAM_130":"482573207753195520","PARAM_131":0,"PARAM_114":"oauth","PARAM_115":"517640836742119424","PARAM_112":"479008670655447040","PARAM_113":"480492966641664000","PARAM_118":"511607135210045440","PARAM_119":"479219965136732160","PARAM_116":"474155529355132929","PARAM_117":"473626751956680704","PARAM_42":"463402975415500800","PARAM_43":"476673967776595968","PARAM_44":"476660946866012160","PARAM_45":"479330041516261376","PARAM_46":"501072634599964672","PARAM_47":"485747531372822528","PARAM_48":"487559545757892608","PARAM_49":"480137014188965888","PARAM_40":"481338868780498944","PARAM_41":"478688768535035904","PARAM_121":"508300432511074304","PARAM_122":"494904454714228736","PARAM_120":"476679546897170432"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479354717600743424' , '495244163038576640' , '492410581156888576' , '523843703270277120' , '480137014788751360' , '485560940721340416' , '479329591786209280' , '498581971681673216' , '472023115707187200' , '521358825886842880' , '473609132373442560' , '482573213478420480' , '475686687532384256' , '495243928853807104' , '473534968501370880' , '492410580473217024' , '485560940150915072' , '471653538498347008' , '463401814398599168' , '490245513522708480' , '482573214082400256' , '471623114069901312' , '478688762461683712' , '486551846547095552' , 'system_config' , '478688767939444736' , '495243928195301376' , '516601919007887360' , '494904218386169856' , '473534967930945536' , '514022967143825408' , '463399684191289344' , '501072380383199232' , '485747524523524096' , '481338869564833792' , '483218062917500928' , '481749751662903296' , '481338868780498944' , '478688768535035904' , '463402975415500800' , '476673967776595968' , '476660946866012160' , '479330041516261376' , '501072634599964672' , '485747531372822528' , '487559545757892608' , '480137014188965888' , '482877683189940224' , '480481732412309504' , '510887822043906048' , '495243922151309312' , '476679547505344512' , '479956459719753728' , '476660946173952000' , '482865234084626432' , '473609133057114112' , '479959570282708992' , '481749745337892864' , '473626752741015552' , '463401813807202304' , '517640838222708736' , '495201409763901440' , '482865234667634688' , '484683938606874624' , '472023114964795392' , '507635159172907008' , '479959570941214720' , '476319988295139328' , '479330040773869568' , '471666420116094976' , '486313025783988224' , '523843702414639104' , '480481731707666432' , '474158815193858049' , '473228716474892288' , '478922689172471808' , '479598105545670656' , '482864640208928768' , '501072635275247616' , '471623114736795648' , '475954736080617472' , '495244163676110848' , '479220713446703104' , '482581320564736000' , '498769993710698497' , '521358571439390720' , '474155093021687808' , '482864640871628800' , '476673974453927936' , '463402976065617920' , '486551845917949952' , '501072381054287872' , '521358571649105920' , '478922689868726272' , '514022967743610880' , '463401586794692608' , '476319982246952960' , '476673975825465344' , '489815790388772864' , '472331135993511936' , '472023706080641024' , '486313026476048384' , '510887822199095296' , '511607135369428992' , '508300431265366016' , '498770119770505217' , '507635157855895552' , '479008669908860928' , '480492966025101312' , '479008670655447040' , '480492966641664000' , 'oauth' , '517640836742119424' , '474155529355132929' , '473626751956680704' , '511607135210045440' , '479219965136732160' , '476679546897170432' , '508300432511074304' , '494904454714228736' , '481749152221364224' , '481749751037952000' , '478178015856033792' , '490245514197991424' , '476319988987199488' , '463401586228461568' , '494904219002732544' , '482573207753195520' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：176ms , start = 1640329658908
┣━ 返回：RcdSet,size=101
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:39.151 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"487568361882910720","PARAM_11":"478956684543262720","PARAM_12":"481563563521998848","PARAM_13":"490803523777200128","PARAM_14":0,"PARAM_9":"480488576534970368","PARAM_8":"472023699273285632","PARAM_7":"479218751024136192","PARAM_6":"490245507570991104","PARAM_5":"482864633716146176","PARAM_4":"[]","PARAM_3":"463397731918938112","PARAM_2":"482865228384567296"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '482865228384567296' , '463397731918938112' , '[]' , '482864633716146176' , '490245507570991104' , '479218751024136192' , '472023699273285632' , '480488576534970368' , '487568361882910720' , '478956684543262720' , '481563563521998848' , '490803523777200128' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640329659090
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:39.152 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_17":"484684747155439616","PARAM_39":0,"PARAM_18":"485936556654198784","PARAM_19":"479354710537535488","PARAM_31":"525223461266653184","PARAM_10":"489901512886059008","PARAM_32":"521358026301505536","PARAM_11":"471622514443812864","PARAM_33":"484687827645239296","PARAM_12":"498885073529995264","PARAM_34":"472023108039999488","PARAM_13":"508300419328376832","PARAM_35":"471974283854217216","PARAM_14":"521359007194021888","PARAM_36":"477956217075924992","PARAM_15":"478603507688013824","PARAM_37":"511607133662347264","PARAM_16":"487660170021703680","PARAM_38":"521358823697416192","PARAM_30":"490888724289159168","PARAM_9":"472331129437814784","PARAM_8":"463402969874825216","PARAM_7":"478080872159903744","PARAM_6":"483218056047230976","PARAM_5":"463708992481263616","PARAM_4":"","PARAM_3":"479388218479869952","PARAM_2":"485560933834293248","PARAM_1":0,"PARAM_28":"515109178721697792","PARAM_29":"501074097552228352","PARAM_20":"489922965425618944","PARAM_21":"474123290672103424","PARAM_22":"477952342537273344","PARAM_23":"519150902574055424","PARAM_24":"463400000391479296","PARAM_25":"488696580300341248","PARAM_26":"514022960453910528","PARAM_27":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '485560933834293248' , '479388218479869952' , '' , '463708992481263616' , '483218056047230976' , '478080872159903744' , '463402969874825216' , '472331129437814784' , '489901512886059008' , '471622514443812864' , '498885073529995264' , '508300419328376832' , '521359007194021888' , '478603507688013824' , '487660170021703680' , '484684747155439616' , '485936556654198784' , '479354710537535488' , '489922965425618944' , '474123290672103424' , '477952342537273344' , '519150902574055424' , '463400000391479296' , '488696580300341248' , '514022960453910528' , '[]' , '515109178721697792' , '501074097552228352' , '490888724289159168' , '525223461266653184' , '521358026301505536' , '484687827645239296' , '472023108039999488' , '471974283854217216' , '477956217075924992' , '511607133662347264' , '521358823697416192' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：71ms , start = 1640329659080
┣━ 返回：RcdSet,size=35
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:39.181 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"510887582641422336","PARAM_31":"517640838537281536","PARAM_32":"501072115496124416","PARAM_33":"480389131239686144","PARAM_34":"473733259285495808","PARAM_35":"482583849616801792","PARAM_36":"473609126128123904","PARAM_37":"473733258505355264","PARAM_38":"482581327279816704","PARAM_30":"482581099034181632","PARAM_28":"478956693149974528","PARAM_29":"463429357977731072","PARAM_20":"482581327950905344","PARAM_21":"463399154698158080","PARAM_22":"482581093229264896","PARAM_23":"488696594527420416","PARAM_24":"481563572455866368","PARAM_25":"474123297894694912","PARAM_26":"484681008940056576","PARAM_27":"492410574299201536","PARAM_17":"485936563683852288","PARAM_18":"486313018553008128","PARAM_19":"481749153626456064","PARAM_97":"472331321801179136","PARAM_10":"463397133957988354","PARAM_98":"472331328520454144","PARAM_11":"485888535908319232","PARAM_99":"494597324215943168","PARAM_12":"476679541226471424","PARAM_13":"479218759370801152","PARAM_14":"480488583736590336","PARAM_15":"473771454769397760","PARAM_16":"479956467907035136","PARAM_90":"463397738646601728","PARAM_91":"478956692394999808","PARAM_92":"475954743139631104","PARAM_93":"477956224856358912","PARAM_94":"479388230924369920","PARAM_95":"489815791064055808","PARAM_96":"463400831098552320","PARAM_86":"471622521137922048","PARAM_87":"464788438315433984","PARAM_88":"476660947629375488","PARAM_89":"481119859145441280","PARAM_80":"474281123879321600","PARAM_81":"482583850279501824","PARAM_82":"484684753866326016","PARAM_83":"501416296345239552","PARAM_84":"479329592423743488","PARAM_85":"hrm","PARAM_103":"515109188150493184","PARAM_104":"478603516361834496","PARAM_101":"507635160540250112","PARAM_102":"479008671368478720","PARAM_107":"478585180710240256","PARAM_108":"471622521846759424","PARAM_105":"498885087492833280","PARAM_106":"463399689467723776","PARAM_75":"477952351441780736","PARAM_76":"498770254759985153","PARAM_77":"479329292388401152","PARAM_109":"501389817515347968","PARAM_78":"479218758599049216","PARAM_79":"510887580523298816","PARAM_70":"473771454031200256","PARAM_71":"489922973222830080","PARAM_72":"471985490283724800","PARAM_73":"480488584403484672","PARAM_74":"489901522558124032","PARAM_9":"463399154400362496","PARAM_8":"473503440530571264","PARAM_7":"477956224147521536","PARAM_6":"480389138625855488","PARAM_5":"485936564371718144","PARAM_110":"471623115152031744","PARAM_4":"478080879852257280","PARAM_111":"486551839387418624","PARAM_3":"479329592994168832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"485888536512299008","PARAM_65":"481563571654754304","PARAM_66":"479220706257666048","PARAM_67":"484684754508054528","PARAM_68":"487568375958994944","PARAM_69":"489901523275350016","PARAM_60":"498885086280679424","PARAM_61":"481749152917618688","PARAM_62":"478080880531734528","PARAM_63":"480377920209027072","PARAM_100":"481119859787169792","PARAM_125":"521359009509277696","PARAM_126":"488696595773128704","PARAM_123":"479598113124777984","PARAM_124":"501072381725376512","PARAM_129":"474281123241787392","PARAM_127":"481068388831985664","PARAM_128":"479956467156254720","PARAM_53":"501074105877921792","PARAM_54":"482864641542717440","PARAM_55":"464788444783050752","PARAM_56":"463397739233804288","PARAM_57":"489077811793887232","PARAM_58":"478603515636219904","PARAM_59":"463400830758813696","PARAM_50":"489922972543352832","PARAM_51":"473503439867871232","PARAM_52":"521359009735770112","PARAM_130":"501416297607725056","PARAM_131":0,"PARAM_114":"492410581827977216","PARAM_115":"463400008603926528","PARAM_112":"521358028679675904","PARAM_113":"482877676386779136","PARAM_118":"484681000786329600","PARAM_119":"519151990534569984","PARAM_116":"501072116167213056","PARAM_117":"471974289902403584","PARAM_42":"473609133728202752","PARAM_43":"479388230056148992","PARAM_44":"474281113531973632","PARAM_45":"463429357650575360","PARAM_46":"478585180114649088","PARAM_47":"510887582448484352","PARAM_48":"480389137958961152","PARAM_49":"521358028549652480","PARAM_40":"510887822354284544","PARAM_41":"489077811454148608","PARAM_121":"474123297290715136","PARAM_122":"519151990744285184","PARAM_120":"501074105164890112"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479329592994168832' , '478080879852257280' , '485936564371718144' , '480389138625855488' , '477956224147521536' , '473503440530571264' , '463399154400362496' , '463397133957988354' , '485888535908319232' , '476679541226471424' , '479218759370801152' , '480488583736590336' , '473771454769397760' , '479956467907035136' , '485936563683852288' , '486313018553008128' , '481749153626456064' , '482581327950905344' , '463399154698158080' , '482581093229264896' , '488696594527420416' , '481563572455866368' , '474123297894694912' , '484681008940056576' , '492410574299201536' , '478956693149974528' , '463429357977731072' , '482581099034181632' , '517640838537281536' , '501072115496124416' , '480389131239686144' , '473733259285495808' , '482583849616801792' , '473609126128123904' , '473733258505355264' , '482581327279816704' , '510887582641422336' , '510887822354284544' , '489077811454148608' , '473609133728202752' , '479388230056148992' , '474281113531973632' , '463429357650575360' , '478585180114649088' , '510887582448484352' , '480389137958961152' , '521358028549652480' , '489922972543352832' , '473503439867871232' , '521359009735770112' , '501074105877921792' , '482864641542717440' , '464788444783050752' , '463397739233804288' , '489077811793887232' , '478603515636219904' , '463400830758813696' , '498885086280679424' , '481749152917618688' , '478080880531734528' , '480377920209027072' , '485888536512299008' , '481563571654754304' , '479220706257666048' , '484684754508054528' , '487568375958994944' , '489901523275350016' , '473771454031200256' , '489922973222830080' , '471985490283724800' , '480488584403484672' , '489901522558124032' , '477952351441780736' , '498770254759985153' , '479329292388401152' , '479218758599049216' , '510887580523298816' , '474281123879321600' , '482583850279501824' , '484684753866326016' , '501416296345239552' , '479329592423743488' , 'hrm' , '471622521137922048' , '464788438315433984' , '476660947629375488' , '481119859145441280' , '463397738646601728' , '478956692394999808' , '475954743139631104' , '477956224856358912' , '479388230924369920' , '489815791064055808' , '463400831098552320' , '472331321801179136' , '472331328520454144' , '494597324215943168' , '481119859787169792' , '507635160540250112' , '479008671368478720' , '515109188150493184' , '478603516361834496' , '498885087492833280' , '463399689467723776' , '478585180710240256' , '471622521846759424' , '501389817515347968' , '471623115152031744' , '486551839387418624' , '521358028679675904' , '482877676386779136' , '492410581827977216' , '463400008603926528' , '501072116167213056' , '471974289902403584' , '484681000786329600' , '519151990534569984' , '501074105164890112' , '474123297290715136' , '519151990744285184' , '479598113124777984' , '501072381725376512' , '521359009509277696' , '488696595773128704' , '481068388831985664' , '479956467156254720' , '474281123241787392' , '501416297607725056' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：96ms , start = 1640329659081
┣━ 返回：RcdSet,size=109
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:39.187 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"501072386968256512","PARAM_31":"471623119950315520","PARAM_32":"475686692922064896","PARAM_33":"486485883655032833","PARAM_34":"471653532135587840","PARAM_35":"499939063264968705","PARAM_36":"490638839023411200","PARAM_37":"474158548662616065","PARAM_38":"521282477461864448","PARAM_30":"479219958253879296","PARAM_28":"500338282807173120","PARAM_29":"489922978209857536","PARAM_20":"463400823850795008","PARAM_21":"499940744069382145","PARAM_22":"515117881764085760","PARAM_23":"476673982108532736","PARAM_24":"498809674066296832","PARAM_25":"474159041438810113","PARAM_26":"501072627838746624","PARAM_27":"498472886441353216","PARAM_17":"501653323472965633","PARAM_18":"463429362776014848","PARAM_19":"471666425635799040","PARAM_97":"490908208253112321","PARAM_10":"481749158911279104","PARAM_98":"463399158544334848","PARAM_11":"489077816151769088","PARAM_99":"471622526703763456","PARAM_12":"485560945611898880","PARAM_13":"463400013167329280","PARAM_14":"478688773647892480","PARAM_15":"501390061263130624","PARAM_16":"474157822892834817","PARAM_90":"481749145669861376","PARAM_91":"502170004054085633","PARAM_92":"517689123146829824","PARAM_93":"471653543871250432","PARAM_94":"498971162877886465","PARAM_95":"479956473208635392","PARAM_96":"495244157174939648","PARAM_86":"471986344285962240","PARAM_87":"485395845907230720","PARAM_88":"498809056404701185","PARAM_89":"515190259999309825","PARAM_80":"497513389245857793","PARAM_81":"510887820517179392","PARAM_82":"472023711478710272","PARAM_83":"501073274482987009","PARAM_84":"478598569259962368","PARAM_85":"475955437510852608","PARAM_103":"478625384087158785","PARAM_104":"476660952759009280","PARAM_101":"472358185009676289","PARAM_102":"490920008524763136","PARAM_107":"481749756972892160","PARAM_108":"473036391530364929","PARAM_105":"515109194081239040","PARAM_106":"517689121376833536","PARAM_75":"491206513122086913","PARAM_76":"498472529019543553","PARAM_77":"463401590787670016","PARAM_109":"481068382628610048","PARAM_78":"516603746558414848","PARAM_79":"498963890651004929","PARAM_70":"490909866307620865","PARAM_71":"501072641218576384","PARAM_72":"479959576465113088","PARAM_73":"498779937252048897","PARAM_74":"489424103724285952","PARAM_9":"487559557153816576","PARAM_8":"498962211822108672","PARAM_7":"473227868306931712","PARAM_6":"498474569439387649","PARAM_5":"487568387254255616","PARAM_110":"472331141001510912","PARAM_4":"498473196719185920","PARAM_111":"486485770673065984","PARAM_3":"479218764370411520","PARAM_2":0,"PARAM_1":0,"PARAM_64":"473534973345792000","PARAM_65":"467361506980265985","PARAM_66":"521281129047654400","PARAM_67":"482865239696605184","PARAM_68":"463399693292929024","PARAM_69":"482877688894193664","PARAM_60":"513733380219600896","PARAM_61":"495244169128706048","PARAM_62":"498780083792642049","PARAM_63":"501072374041411584","PARAM_100":"471974294486777856","PARAM_125":"499954050071007232","PARAM_126":"484680929105674240","PARAM_123":"473771446246572032","PARAM_124":"482864646571687936","PARAM_129":"477956229818220544","PARAM_127":"478585185282031616","PARAM_128":"482581332891795456","PARAM_53":"483567801252978688","PARAM_54":"526446505431666688","PARAM_55":"473733264926834688","PARAM_56":"463397743721709568","PARAM_57":"473612688681861120","PARAM_58":"515118155274649600","PARAM_59":"485415810584555521","PARAM_50":"515118156822347777","PARAM_51":"473612721665867776","PARAM_52":"473503433886793728","PARAM_130":"473549948382609408","PARAM_131":0,"PARAM_114":"463401818576125952","PARAM_115":"514445360546975744","PARAM_112":"480486574191026176","PARAM_113":"479220720316973056","PARAM_118":"495243934444814336","PARAM_119":"471986431431016449","PARAM_116":"472331333985632256","PARAM_117":"524600153961660416","PARAM_42":"473534962767757312","PARAM_43":"479219970929065984","PARAM_44":"471985681850171393","PARAM_45":"489815796164329472","PARAM_46":"495924945906302976","PARAM_47":"463401581010747392","PARAM_48":"482581103912157184","PARAM_49":"498962218231005184","PARAM_40":"515190021716705280","PARAM_41":"501653242430623745","PARAM_121":"481119852547801088","PARAM_122":"478603521634074624","PARAM_120":"479329585788354560"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479218764370411520' , '498473196719185920' , '487568387254255616' , '498474569439387649' , '473227868306931712' , '498962211822108672' , '487559557153816576' , '481749158911279104' , '489077816151769088' , '485560945611898880' , '463400013167329280' , '478688773647892480' , '501390061263130624' , '474157822892834817' , '501653323472965633' , '463429362776014848' , '471666425635799040' , '463400823850795008' , '499940744069382145' , '515117881764085760' , '476673982108532736' , '498809674066296832' , '474159041438810113' , '501072627838746624' , '498472886441353216' , '500338282807173120' , '489922978209857536' , '479219958253879296' , '471623119950315520' , '475686692922064896' , '486485883655032833' , '471653532135587840' , '499939063264968705' , '490638839023411200' , '474158548662616065' , '521282477461864448' , '501072386968256512' , '515190021716705280' , '501653242430623745' , '473534962767757312' , '479219970929065984' , '471985681850171393' , '489815796164329472' , '495924945906302976' , '463401581010747392' , '482581103912157184' , '498962218231005184' , '515118156822347777' , '473612721665867776' , '473503433886793728' , '483567801252978688' , '526446505431666688' , '473733264926834688' , '463397743721709568' , '473612688681861120' , '515118155274649600' , '485415810584555521' , '513733380219600896' , '495244169128706048' , '498780083792642049' , '501072374041411584' , '473534973345792000' , '467361506980265985' , '521281129047654400' , '482865239696605184' , '463399693292929024' , '482877688894193664' , '490909866307620865' , '501072641218576384' , '479959576465113088' , '498779937252048897' , '489424103724285952' , '491206513122086913' , '498472529019543553' , '463401590787670016' , '516603746558414848' , '498963890651004929' , '497513389245857793' , '510887820517179392' , '472023711478710272' , '501073274482987009' , '478598569259962368' , '475955437510852608' , '471986344285962240' , '485395845907230720' , '498809056404701185' , '515190259999309825' , '481749145669861376' , '502170004054085633' , '517689123146829824' , '471653543871250432' , '498971162877886465' , '479956473208635392' , '495244157174939648' , '490908208253112321' , '463399158544334848' , '471622526703763456' , '471974294486777856' , '472358185009676289' , '490920008524763136' , '478625384087158785' , '476660952759009280' , '515109194081239040' , '517689121376833536' , '481749756972892160' , '473036391530364929' , '481068382628610048' , '472331141001510912' , '486485770673065984' , '480486574191026176' , '479220720316973056' , '463401818576125952' , '514445360546975744' , '472331333985632256' , '524600153961660416' , '495243934444814336' , '471986431431016449' , '479329585788354560' , '481119852547801088' , '478603521634074624' , '473771446246572032' , '482864646571687936' , '499954050071007232' , '484680929105674240' , '478585185282031616' , '482581332891795456' , '477956229818220544' , '473549948382609408' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：150ms , start = 1640329659028
┣━ 返回：RcdSet,size=146
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:39.217 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"473626745392594944","PARAM_31":"475686688278970368","PARAM_32":"479598113862975488","PARAM_33":"494597324853477376","PARAM_34":"482581099617189888","PARAM_35":"486551847209795584","PARAM_36":"480492967832846336","PARAM_37":"472331137151139840","PARAM_38":"472036243182452736","PARAM_30":"463402976384385024","PARAM_28":"484683939244408832","PARAM_29":"473534969646415872","PARAM_20":"480481733238587392","PARAM_21":"473626753412104192","PARAM_22":"479220714138763264","PARAM_23":"478688769155792896","PARAM_24":"479330042220904448","PARAM_25":"486313027243606016","PARAM_26":"472331136572325888","PARAM_27":"463400008926887936","PARAM_17":"479354718158585856","PARAM_18":"485853808635678720","PARAM_19":"463401815308763136","PARAM_97":"521358571854626816","PARAM_10":"481749752275271680","PARAM_98":"479329294410055680","PARAM_11":"487559548404498432","PARAM_99":"472023116420218880","PARAM_12":"482573215365857280","PARAM_13":"481338870340780032","PARAM_14":"479329293776715776","PARAM_15":"479598114576007168","PARAM_16":"464788445420584960","PARAM_90":"511607135692390400","PARAM_91":"479219966495686656","PARAM_92":"471666421412134912","PARAM_93":"480137016143511552","PARAM_94":"485747532043911168","PARAM_95":"463402977026113536","PARAM_96":"472023707355709440","PARAM_86":"494597325411319808","PARAM_87":"463401814696394752","PARAM_88":"479330042942324736","PARAM_89":"478625116503146496","PARAM_80":"495243930166624256","PARAM_81":"501072635946336256","PARAM_82":"471974290447663104","PARAM_83":"472331329199931392","PARAM_84":"480377921387626496","PARAM_85":"472331329841659904","PARAM_103":"495244164322033664","PARAM_104":"479219965778460672","PARAM_101":"486551847834746880","PARAM_102":"479959571725549568","PARAM_107":"478922690648866816","PARAM_108":"498770477079068673","PARAM_105":"481068389998002176","PARAM_106":"480481725646897152","PARAM_75":"473534969071796224","PARAM_76":"485560941274988544","PARAM_77":"476673976400084992","PARAM_109":"480377920796229632","PARAM_78":"494904455913799680","PARAM_79":"485747532740165632","PARAM_70":"482865235867205632","PARAM_71":"475686688891338752","PARAM_72":"482877683861028864","PARAM_73":"487568378521714688","PARAM_74":"494904220248440832","PARAM_9":"481338871154475008","PARAM_8":"521358826281107456","PARAM_7":"508300433685479424","PARAM_6":"521358826079780864","PARAM_5":"476319989616345088","PARAM_110":"508300434876661760","PARAM_4":"482865235280003072","PARAM_111":"495244164963762176","PARAM_3":"484683939894525952","PARAM_2":0,"PARAM_1":0,"PARAM_64":"472023706713980928","PARAM_65":"463401587079905280","PARAM_66":"471666420770406400","PARAM_67":"482581100191809536","PARAM_68":"478688769768161280","PARAM_69":"494904219631878144","PARAM_60":"471653539840524288","PARAM_61":"481749752891834368","PARAM_62":"476679548692332544","PARAM_63":"481068389410799616","PARAM_100":"480481733892898816","PARAM_125":"464788446058119168","PARAM_126":"485560941845413888","PARAM_123":"482573214719934464","PARAM_124":"463399690289807360","PARAM_129":"477952352960118784","PARAM_127":"487559533120454656","PARAM_128":"479220714860183552","PARAM_53":"521358572051759104","PARAM_54":"482877684532117504","PARAM_55":"498885074154946560","PARAM_56":"480492967241449472","PARAM_57":"486313028048912384","PARAM_58":"494904455314014208","PARAM_59":"487568377175343104","PARAM_50":"480137015552114688","PARAM_51":"463399148318621696","PARAM_52":"475954743840079872","PARAM_130":"476679548117712896","PARAM_131":0,"PARAM_114":"511607135537201152","PARAM_115":"483218064226123776","PARAM_112":"523843704117526528","PARAM_113":"476660939324653568","PARAM_118":"471653539131686912","PARAM_119":"495243929508118528","PARAM_116":"479354718896783360","PARAM_117":"490245514780999680","PARAM_42":"476517102736375808","PARAM_43":"479959572333723648","PARAM_44":"476319990312599552","PARAM_45":"477952352276447232","PARAM_46":"514022968620220416","PARAM_47":"463399689744547840","PARAM_48":"473626754091581440","PARAM_49":"463400009585393664","PARAM_40":"478922691353509888","PARAM_41":"eam","PARAM_121":"472023117196165120","PARAM_122":"483218063576006656","PARAM_120":"487559547058126848"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '484683939894525952' , '482865235280003072' , '476319989616345088' , '521358826079780864' , '508300433685479424' , '521358826281107456' , '481338871154475008' , '481749752275271680' , '487559548404498432' , '482573215365857280' , '481338870340780032' , '479329293776715776' , '479598114576007168' , '464788445420584960' , '479354718158585856' , '485853808635678720' , '463401815308763136' , '480481733238587392' , '473626753412104192' , '479220714138763264' , '478688769155792896' , '479330042220904448' , '486313027243606016' , '472331136572325888' , '463400008926887936' , '484683939244408832' , '473534969646415872' , '463402976384385024' , '475686688278970368' , '479598113862975488' , '494597324853477376' , '482581099617189888' , '486551847209795584' , '480492967832846336' , '472331137151139840' , '472036243182452736' , '473626745392594944' , '478922691353509888' , 'eam' , '476517102736375808' , '479959572333723648' , '476319990312599552' , '477952352276447232' , '514022968620220416' , '463399689744547840' , '473626754091581440' , '463400009585393664' , '480137015552114688' , '463399148318621696' , '475954743840079872' , '521358572051759104' , '482877684532117504' , '498885074154946560' , '480492967241449472' , '486313028048912384' , '494904455314014208' , '487568377175343104' , '471653539840524288' , '481749752891834368' , '476679548692332544' , '481068389410799616' , '472023706713980928' , '463401587079905280' , '471666420770406400' , '482581100191809536' , '478688769768161280' , '494904219631878144' , '482865235867205632' , '475686688891338752' , '482877683861028864' , '487568378521714688' , '494904220248440832' , '473534969071796224' , '485560941274988544' , '476673976400084992' , '494904455913799680' , '485747532740165632' , '495243930166624256' , '501072635946336256' , '471974290447663104' , '472331329199931392' , '480377921387626496' , '472331329841659904' , '494597325411319808' , '463401814696394752' , '479330042942324736' , '478625116503146496' , '511607135692390400' , '479219966495686656' , '471666421412134912' , '480137016143511552' , '485747532043911168' , '463402977026113536' , '472023707355709440' , '521358571854626816' , '479329294410055680' , '472023116420218880' , '480481733892898816' , '486551847834746880' , '479959571725549568' , '495244164322033664' , '479219965778460672' , '481068389998002176' , '480481725646897152' , '478922690648866816' , '498770477079068673' , '480377920796229632' , '508300434876661760' , '495244164963762176' , '523843704117526528' , '476660939324653568' , '511607135537201152' , '483218064226123776' , '479354718896783360' , '490245514780999680' , '471653539131686912' , '495243929508118528' , '487559547058126848' , '472023117196165120' , '483218063576006656' , '482573214719934464' , '463399690289807360' , '464788446058119168' , '485560941845413888' , '487559533120454656' , '479220714860183552' , '477952352960118784' , '476679548117712896' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：123ms , start = 1640329659091
┣━ 返回：RcdSet,size=177
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:39.230 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_9":0,"PARAM_8":"480481725315547136","PARAM_7":"473626745103187968","PARAM_6":"487559532503891968","PARAM_5":"490803286488645632","PARAM_4":"476660938984914944","PARAM_3":"463399148020826112","PARAM_2":"498885073529995264"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '498885073529995264' , '463399148020826112' , '476660938984914944' , '490803286488645632' , '487559532503891968' , '473626745103187968' , '480481725315547136' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：71ms , start = 1640329659156
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:39.234 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"490245507856203776","PARAM_31":"471623117005914112","PARAM_32":"501074107681472512","PARAM_33":"481563573261172736","PARAM_34":"523843705900105728","PARAM_35":"482581329603461120","PARAM_36":"474154919352336384","PARAM_37":"490245515401756672","PARAM_38":"501072116880244736","PARAM_30":"479956468586512384","PARAM_28":"492410582486482944","PARAM_29":"485888537137250304","PARAM_20":"476673977113116672","PARAM_21":"489922973885530112","PARAM_22":"477956226529886208","PARAM_23":"494904221175382016","PARAM_24":"463401587662913536","PARAM_25":"486313029152014336","PARAM_26":"472810496475529216","PARAM_27":"476673978719535104","PARAM_17":"476660948308852736","PARAM_18":"498885090605006848","PARAM_19":"471623115881840640","PARAM_97":"501416298853433344","PARAM_10":"478080882322702336","PARAM_98":"494903523763298304","PARAM_11":"501072637603086336","PARAM_99":"473609134411874304","PARAM_12":"463429358598488064","PARAM_13":"463399156178747392","PARAM_14":"479388233323511808","PARAM_15":"472036556115279872","PARAM_16":"517640838696665088","PARAM_90":"521359010843066368","PARAM_91":"479218751359680512","PARAM_92":"519151991289544704","PARAM_93":"483218065169842176","PARAM_94":"482865228682362880","PARAM_95":"490245516341280768","PARAM_96":"482581328609411072","PARAM_86":"485936564942143488","PARAM_87":"473733260023693312","PARAM_88":"521358028818087936","PARAM_89":"474123298494480384","PARAM_80":"519151990970777600","PARAM_81":"489815791709978624","PARAM_82":"523843704876695552","PARAM_83":"477956225548419072","PARAM_84":"480488586022486016","PARAM_85":"484684755145588736","PARAM_103":"476679549543776256","PARAM_104":"510887822752743424","PARAM_101":"482864642218000384","PARAM_102":"463401588501774336","PARAM_107":"478956693833646080","PARAM_108":"479956469668642816","PARAM_105":"476660949365817344","PARAM_106":"480481734924697600","PARAM_75":"481749155358703616","PARAM_76":"480488585066184704","PARAM_77":"478080881207017472","PARAM_109":"489077813450637312","PARAM_78":"510887822513668096","PARAM_79":"501072636617424896","PARAM_70":"507635163908276224","PARAM_71":"481563563891097600","PARAM_72":"479959573277442048","PARAM_73":"479218759966392320","PARAM_74":"515109189920489472","PARAM_9":"478603517087449088","PARAM_8":"489922974875385856","PARAM_7":"487568362436558848","PARAM_6":"484681028040916992","PARAM_5":"517640838939934720","PARAM_110":"473503441142939648","PARAM_4":"463397732229316608","PARAM_111":"482864643224633344","PARAM_3":"485936565877473280","PARAM_2":0,"PARAM_1":0,"PARAM_64":"510887583106990080","PARAM_65":"471622523520286720","PARAM_66":"479008672874233856","PARAM_67":"484681017538379776","PARAM_68":"479008671947292672","PARAM_69":"478585181314220032","PARAM_60":"510887582830166016","PARAM_61":"482583850896064512","PARAM_62":"478956684903972864","PARAM_63":"482864634051690496","PARAM_100":"463399155289554944","PARAM_125":"471974290984534016","PARAM_126":"480389140282605568","PARAM_123":"478956694827696128","PARAM_124":"478624924152365056","PARAM_129":"481749154318516224","PARAM_127":"463397739833589760","PARAM_128":"501072382371299328","PARAM_53":"514022970520240128","PARAM_54":"481119861406171136","PARAM_55":"501416300740870144","PARAM_56":"489901523904495616","PARAM_57":"472814243020800001","PARAM_58":"472023699592052736","PARAM_59":"480488576866320384","PARAM_50":"501072117886877696","PARAM_51":"473771455499206656","PARAM_52":"489077812460781568","PARAM_130":"498885088876953600","PARAM_131":0,"PARAM_114":"463397740718587904","PARAM_115":"488696597023031296","PARAM_112":"484684756085112832","PARAM_113":"474281124533633024","PARAM_118":"481119860437286912","PARAM_119":"501072383491178496","PARAM_116":"515109188829970432","PARAM_117":"475954744494391296","PARAM_42":"480389139313721344","PARAM_43":"471622522614317056","PARAM_44":"501074106590953472","PARAM_45":"514022969345835008","PARAM_46":"479329593644285952","PARAM_47":"471974291777257472","PARAM_48":"463400831778029568","PARAM_49":"479329594474758144","PARAM_40":"473609135473033216","PARAM_41":"479388232048443392","PARAM_121":"482583851852365824","PARAM_122":"472357984110903296","PARAM_120":"507635161886621696"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '485936565877473280' , '463397732229316608' , '517640838939934720' , '484681028040916992' , '487568362436558848' , '489922974875385856' , '478603517087449088' , '478080882322702336' , '501072637603086336' , '463429358598488064' , '463399156178747392' , '479388233323511808' , '472036556115279872' , '517640838696665088' , '476660948308852736' , '498885090605006848' , '471623115881840640' , '476673977113116672' , '489922973885530112' , '477956226529886208' , '494904221175382016' , '463401587662913536' , '486313029152014336' , '472810496475529216' , '476673978719535104' , '492410582486482944' , '485888537137250304' , '479956468586512384' , '471623117005914112' , '501074107681472512' , '481563573261172736' , '523843705900105728' , '482581329603461120' , '474154919352336384' , '490245515401756672' , '501072116880244736' , '490245507856203776' , '473609135473033216' , '479388232048443392' , '480389139313721344' , '471622522614317056' , '501074106590953472' , '514022969345835008' , '479329593644285952' , '471974291777257472' , '463400831778029568' , '479329594474758144' , '501072117886877696' , '473771455499206656' , '489077812460781568' , '514022970520240128' , '481119861406171136' , '501416300740870144' , '489901523904495616' , '472814243020800001' , '472023699592052736' , '480488576866320384' , '510887582830166016' , '482583850896064512' , '478956684903972864' , '482864634051690496' , '510887583106990080' , '471622523520286720' , '479008672874233856' , '484681017538379776' , '479008671947292672' , '478585181314220032' , '507635163908276224' , '481563563891097600' , '479959573277442048' , '479218759966392320' , '515109189920489472' , '481749155358703616' , '480488585066184704' , '478080881207017472' , '510887822513668096' , '501072636617424896' , '519151990970777600' , '489815791709978624' , '523843704876695552' , '477956225548419072' , '480488586022486016' , '484684755145588736' , '485936564942143488' , '473733260023693312' , '521358028818087936' , '474123298494480384' , '521359010843066368' , '479218751359680512' , '519151991289544704' , '483218065169842176' , '482865228682362880' , '490245516341280768' , '482581328609411072' , '501416298853433344' , '494903523763298304' , '473609134411874304' , '463399155289554944' , '482864642218000384' , '463401588501774336' , '476679549543776256' , '510887822752743424' , '476660949365817344' , '480481734924697600' , '478956693833646080' , '479956469668642816' , '489077813450637312' , '473503441142939648' , '482864643224633344' , '484684756085112832' , '474281124533633024' , '463397740718587904' , '488696597023031296' , '515109188829970432' , '475954744494391296' , '481119860437286912' , '501072383491178496' , '507635161886621696' , '482583851852365824' , '472357984110903296' , '478956694827696128' , '478624924152365056' , '471974290984534016' , '480389140282605568' , '463397739833589760' , '501072382371299328' , '481749154318516224' , '498885088876953600' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：112ms , start = 1640329659120
┣━ 返回：RcdSet,size=273
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:39.234 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"473733250494234624","PARAM_18":"478585173336653824","PARAM_19":"489818737319346176","PARAM_20":"480377913464586240","PARAM_10":"494904212426063872","PARAM_21":"490923970208468992","PARAM_11":"471623107291906048","PARAM_22":0,"PARAM_12":"480137007553576960","PARAM_13":"498885073529995264","PARAM_14":"479008663701291008","PARAM_15":"490923311769849856","PARAM_16":"485888529612668928","PARAM_9":"490924065570164737","PARAM_8":"463429350247628800","PARAM_7":"507635144501231616","PARAM_6":"515109178721697792","PARAM_5":"494904448380829696","PARAM_4":"[]","PARAM_3":"494597317773492224","PARAM_2":"521358569375793152"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '521358569375793152' , '494597317773492224' , '[]' , '494904448380829696' , '515109178721697792' , '507635144501231616' , '463429350247628800' , '490924065570164737' , '494904212426063872' , '471623107291906048' , '480137007553576960' , '498885073529995264' , '479008663701291008' , '490923311769849856' , '485888529612668928' , '473733250494234624' , '478585173336653824' , '489818737319346176' , '480377913464586240' , '490923970208468992' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：106ms , start = 1640329659125
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:39.315 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"501389626531909632","PARAM_18":0,"PARAM_10":"472331321499189248","PARAM_11":"476679540945453056","PARAM_12":"479220705905344512","PARAM_13":"473609125796773888","PARAM_14":"492410573934297088","PARAM_15":"480389130912530432","PARAM_16":"486551839098011648","PARAM_9":"474281113125126144","PARAM_8":"486313018175520768","PARAM_7":"482581092939857920","PARAM_6":"482877676047040512","PARAM_5":"510887580426829824","PARAM_4":"[]","PARAM_3":"505300850025955328","PARAM_2":"464788438000861184"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '464788438000861184' , '505300850025955328' , '[]' , '510887580426829824' , '482877676047040512' , '482581092939857920' , '486313018175520768' , '474281113125126144' , '472331321499189248' , '476679540945453056' , '479220705905344512' , '473609125796773888' , '492410573934297088' , '480389130912530432' , '486551839098011648' , '501389626531909632' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：80ms , start = 1640329659234
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:39.319 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"482581320229191680","PARAM_18":"516603629470224384","PARAM_19":"479956459375820800","PARAM_20":0,"PARAM_10":"498885073529995264","PARAM_11":"476319981961740288","PARAM_12":"481749744998154240","PARAM_13":"478688762159693824","PARAM_14":"490803384081711104","PARAM_15":"476673967462023168","PARAM_16":"517640836658233344","PARAM_9":"463399683914465280","PARAM_8":"485747524208951296","PARAM_7":"490923211228188672","PARAM_6":"498582527229820928","PARAM_5":"482573207459594240","PARAM_4":"475954735753461760","PARAM_3":"495243921824153600","PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '495243921824153600' , '475954735753461760' , '482573207459594240' , '498582527229820928' , '490923211228188672' , '485747524208951296' , '463399683914465280' , '498885073529995264' , '476319981961740288' , '481749744998154240' , '478688762159693824' , '490803384081711104' , '476673967462023168' , '517640836658233344' , '482581320229191680' , '516603629470224384' , '479956459375820800' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：69ms , start = 1640329659245
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:07:39.322 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"489815792691445760","PARAM_31":"479220715891982336","PARAM_32":"488696601678708736","PARAM_33":"478603519541116928","PARAM_34":"473626754943025152","PARAM_35":"501416282843774976","PARAM_36":"463400010562666496","PARAM_37":"521359011593846784","PARAM_38":"521358826583097344","PARAM_30":"508300436529217536","PARAM_28":"482877686885122048","PARAM_29":"489901527587094528","PARAM_20":"474281126987300864","PARAM_21":"463399691917197312","PARAM_22":"478922694239191040","PARAM_23":"473733261147766784","PARAM_24":"481563575630954496","PARAM_25":"479329295395717120","PARAM_26":"479388413435314177","PARAM_27":"471653540754882560","PARAM_17":"478922681874382848","PARAM_18":"479218762373922816","PARAM_19":"472023708303622144","PARAM_97":"463400011548327936","PARAM_10":"478688770657353728","PARAM_98":"473626756130013184","PARAM_11":"485560943879651328","PARAM_99":"480492959574261760","PARAM_12":"482877685547139072","PARAM_13":"479218760989802496","PARAM_14":"521358826977361920","PARAM_15":"481749753835552768","PARAM_16":"498770298326220801","PARAM_90":"494597326321483776","PARAM_91":"481338874124042240","PARAM_92":"495244165920063488","PARAM_93":"478603518131830784","PARAM_94":"475686691072376832","PARAM_95":"492410583505698816","PARAM_96":"479354721128153088","PARAM_86":"480492968805924864","PARAM_87":"485888539251179520","PARAM_88":"463402978934521856","PARAM_89":"482581101043253248","PARAM_80":"480377922318761984","PARAM_81":"485747535109947392","PARAM_82":"463397741918158848","PARAM_83":"463402977978220544","PARAM_84":"463401816202149888","PARAM_85":"473771456543588352","PARAM_103":"479220717896859648","PARAM_104":"501074109107535872","PARAM_101":"487568383219335168","PARAM_102":"478585183470092288","PARAM_107":"463429359550595072","PARAM_108":"517640839262896128","PARAM_105":"482581330920472576","PARAM_106":"477952353941585920","PARAM_75":"472331332110778368","PARAM_76":"489815794193006592","PARAM_77":"478922692477583360","PARAM_109":"479354719760809984","PARAM_78":"475954746797064192","PARAM_79":"484683940846632960","PARAM_70":"494597327642689536","PARAM_71":"479330044003483648","PARAM_72":"471666422389407744","PARAM_73":"475954745446498304","PARAM_74":"487559553085341696","PARAM_9":"495243931164868608","PARAM_8":"481338872328880128","PARAM_7":"489901525628354560","PARAM_6":"463429360842440704","PARAM_5":"485747533784547328","PARAM_110":"481068390891388928","PARAM_4":"474123299400450048","PARAM_111":"476319991407312896","PARAM_3":"501072108940427264","PARAM_2":0,"PARAM_1":0,"PARAM_64":"472023709545136128","PARAM_65":"472331139210543104","PARAM_66":"474123300629381120","PARAM_67":"487568380539174912","PARAM_68":"481563574288777216","PARAM_69":"464788447014420480","PARAM_60":"494904456811380736","PARAM_61":"521358028998443008","PARAM_62":"473534970493665280","PARAM_63":"479598115674914816","PARAM_100":"463400833808072704","PARAM_125":"511607135931465728","PARAM_126":"464788448306266112","PARAM_123":"481119862664462336","PARAM_124":"480137017104007168","PARAM_129":"473733262674493440","PARAM_127":"473503441981800448","PARAM_128":"472331138002583552","PARAM_53":"521358572345360384","PARAM_54":"521359011174416384","PARAM_55":"482573216284409856","PARAM_56":"471666423702224896","PARAM_57":"494904458010951680","PARAM_58":"481068392111931392","PARAM_59":"472331330856681472","PARAM_50":"485560942738800640","PARAM_51":"479219968966131712","PARAM_52":"479208678382108672","PARAM_130":"480377923652550656","PARAM_131":0,"PARAM_114":"482865236752203776","PARAM_115":"475686689822474240","PARAM_112":"488696599002742784","PARAM_113":"486551848799436800","PARAM_118":"487559550405181440","PARAM_119":"471653541992202240","PARAM_116":"463400832793051136","PARAM_117":"472023118244741120","PARAM_42":"482581102209269760","PARAM_43":"478585182215995392","PARAM_44":"473503443139428352","PARAM_45":"463399691099308032","PARAM_46":"479598117155504128","PARAM_47":"477952355304734720","PARAM_48":"485888538064191488","PARAM_49":"473771458015789056","PARAM_40":"479329296838557696","PARAM_41":"474281125611569152","PARAM_121":"498885092861542400","PARAM_122":"479219967531679744","PARAM_120":"484683942113312768"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501072108940427264' , '474123299400450048' , '485747533784547328' , '463429360842440704' , '489901525628354560' , '481338872328880128' , '495243931164868608' , '478688770657353728' , '485560943879651328' , '482877685547139072' , '479218760989802496' , '521358826977361920' , '481749753835552768' , '498770298326220801' , '478922681874382848' , '479218762373922816' , '472023708303622144' , '474281126987300864' , '463399691917197312' , '478922694239191040' , '473733261147766784' , '481563575630954496' , '479329295395717120' , '479388413435314177' , '471653540754882560' , '482877686885122048' , '489901527587094528' , '508300436529217536' , '479220715891982336' , '488696601678708736' , '478603519541116928' , '473626754943025152' , '501416282843774976' , '463400010562666496' , '521359011593846784' , '521358826583097344' , '489815792691445760' , '479329296838557696' , '474281125611569152' , '482581102209269760' , '478585182215995392' , '473503443139428352' , '463399691099308032' , '479598117155504128' , '477952355304734720' , '485888538064191488' , '473771458015789056' , '485560942738800640' , '479219968966131712' , '479208678382108672' , '521358572345360384' , '521359011174416384' , '482573216284409856' , '471666423702224896' , '494904458010951680' , '481068392111931392' , '472331330856681472' , '494904456811380736' , '521358028998443008' , '473534970493665280' , '479598115674914816' , '472023709545136128' , '472331139210543104' , '474123300629381120' , '487568380539174912' , '481563574288777216' , '464788447014420480' , '494597327642689536' , '479330044003483648' , '471666422389407744' , '475954745446498304' , '487559553085341696' , '472331332110778368' , '489815794193006592' , '478922692477583360' , '475954746797064192' , '484683940846632960' , '480377922318761984' , '485747535109947392' , '463397741918158848' , '463402977978220544' , '463401816202149888' , '473771456543588352' , '480492968805924864' , '485888539251179520' , '463402978934521856' , '482581101043253248' , '494597326321483776' , '481338874124042240' , '495244165920063488' , '478603518131830784' , '475686691072376832' , '492410583505698816' , '479354721128153088' , '463400011548327936' , '473626756130013184' , '480492959574261760' , '463400833808072704' , '487568383219335168' , '478585183470092288' , '479220717896859648' , '501074109107535872' , '482581330920472576' , '477952353941585920' , '463429359550595072' , '517640839262896128' , '479354719760809984' , '481068390891388928' , '476319991407312896' , '488696599002742784' , '486551848799436800' , '482865236752203776' , '475686689822474240' , '463400832793051136' , '472023118244741120' , '487559550405181440' , '471653541992202240' , '484683942113312768' , '498885092861542400' , '479219967531679744' , '481119862664462336' , '480137017104007168' , '511607135931465728' , '464788448306266112' , '473503441981800448' , '472331138002583552' , '473733262674493440' , '480377923652550656' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：159ms , start = 1640329659160
┣━ 返回：RcdSet,size=374
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:39.338 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"510887583488671744","PARAM_31":"489815795505823744","PARAM_32":"495244167178354688","PARAM_33":"482865239109402624","PARAM_34":"479959574523150336","PARAM_35":"480492970060021760","PARAM_36":"479219970283143168","PARAM_37":"480137018328743936","PARAM_38":"486551850187751424","PARAM_30":"498890640633892865","PARAM_28":"521358572748013568","PARAM_29":"471623119124037632","PARAM_20":"473534972766978048","PARAM_21":"501072386309750784","PARAM_22":"501072640497156096","PARAM_23":"473733264192831488","PARAM_24":"471974292850999296","PARAM_25":"495243932481880064","PARAM_26":"472331333301960704","PARAM_27":"485560945016307712","PARAM_17":"515109191736623104","PARAM_18":"481749158206636032","PARAM_19":"471623117999964160","PARAM_97":"474123301828952064","PARAM_10":"482573217517535232","PARAM_98":"463399157952937984","PARAM_11":"474123302428737536","PARAM_99":"480389141578645504","PARAM_12":"485936567093821440","PARAM_13":"479956472495603712","PARAM_14":"478585184673857536","PARAM_15":"487559555773890560","PARAM_16":"471622524862464000","PARAM_90":"478603520921042944","PARAM_91":"477956227867869184","PARAM_92":"463402979890823168","PARAM_93":"495244168478588928","PARAM_94":"463400012525600768","PARAM_95":"482864644558422016","PARAM_96":"479959575810801664","PARAM_86":"501072119862394880","PARAM_87":"489077805410156544","PARAM_88":"487568385933049856","PARAM_89":"489922977547157504","PARAM_80":"492410584894013440","PARAM_81":"489077814461464576","PARAM_82":"482877688223105024","PARAM_83":"515109193246572544","PARAM_84":"471622526116560896","PARAM_85":"471666413560397824","PARAM_103":"479330045333078016","PARAM_104":"479959564469403648","PARAM_101":"514022971866611712","PARAM_102":"501072384963379200","PARAM_107":"523843707472969728","PARAM_108":"483218066432327680","PARAM_105":"473609136769073152","PARAM_106":"480488587389829120","PARAM_75":"481749756356329472","PARAM_76":"484683104078794753","PARAM_77":"511607136254427136","PARAM_109":"479329595586248704","PARAM_78":"477956229193269248","PARAM_79":"463399692735086592","PARAM_70":"507635166470995968","PARAM_71":"478956696207622144","PARAM_72":"476660952100503552","PARAM_73":"472023119704358912","PARAM_74":"484684757343404032","PARAM_9":"463429362113314816","PARAM_8":"472036810977968129","PARAM_7":"476673980116238336","PARAM_6":"495243933782114304","PARAM_5":"463401589349023744","PARAM_110":"480481736321400832","PARAM_4":"472331140393336832","PARAM_111":"463397743117729792","PARAM_3":"463401808295886848","PARAM_2":0,"PARAM_1":0,"PARAM_64":"479388237341655040","PARAM_65":"482581103345926144","PARAM_66":"501416303421030400","PARAM_67":"510887823079899136","PARAM_68":"476679550688821248","PARAM_69":"463401817988923392","PARAM_60":"478688771848536064","PARAM_61":"508300439058382848","PARAM_62":"494904222408507392","PARAM_63":"476673981483581440","PARAM_100":"475686692318085120","PARAM_125":"498778136893194240","PARAM_126":"484681029190156288","PARAM_123":"481749755081261056","PARAM_124":"478688773039718400","PARAM_129":"479220719629107200","PARAM_127":"489077815459708928","PARAM_128":"479956471090511872","PARAM_53":"463401817099730944","PARAM_54":"471666424977293312","PARAM_55":"463401590217244672","PARAM_56":"521358029262684160","PARAM_57":"501072639033344000","PARAM_58":"482865237926608896","PARAM_59":"476319992707547136","PARAM_50":"519151991713169408","PARAM_51":"472023710841176064","PARAM_52":"470155869825269760","PARAM_130":"523843695414345728","PARAM_131":0,"PARAM_114":"463402980524163072","PARAM_115":"489922976217563136","PARAM_112":"481338861507575808","PARAM_113":"478080883799097344","PARAM_118":"482864645908987904","PARAM_119":"463399157072134144","PARAM_116":"471974293945712640","PARAM_117":"471620891906670593","PARAM_42":"476660950745743360","PARAM_43":"479218763728683008","PARAM_44":"482583853127434240","PARAM_45":"463400835502571520","PARAM_46":"463400834823094272","PARAM_47":"482583842985607168","PARAM_48":"481749156772184064","PARAM_49":"482581332237484032","PARAM_40":"490245517545046016","PARAM_41":"471653543221133312","PARAM_121":"479008674094776320","PARAM_122":"473534971609350144","PARAM_120":"486313030599049216"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463401808295886848' , '472331140393336832' , '463401589349023744' , '495243933782114304' , '476673980116238336' , '472036810977968129' , '463429362113314816' , '482573217517535232' , '474123302428737536' , '485936567093821440' , '479956472495603712' , '478585184673857536' , '487559555773890560' , '471622524862464000' , '515109191736623104' , '481749158206636032' , '471623117999964160' , '473534972766978048' , '501072386309750784' , '501072640497156096' , '473733264192831488' , '471974292850999296' , '495243932481880064' , '472331333301960704' , '485560945016307712' , '521358572748013568' , '471623119124037632' , '498890640633892865' , '489815795505823744' , '495244167178354688' , '482865239109402624' , '479959574523150336' , '480492970060021760' , '479219970283143168' , '480137018328743936' , '486551850187751424' , '510887583488671744' , '490245517545046016' , '471653543221133312' , '476660950745743360' , '479218763728683008' , '482583853127434240' , '463400835502571520' , '463400834823094272' , '482583842985607168' , '481749156772184064' , '482581332237484032' , '519151991713169408' , '472023710841176064' , '470155869825269760' , '463401817099730944' , '471666424977293312' , '463401590217244672' , '521358029262684160' , '501072639033344000' , '482865237926608896' , '476319992707547136' , '478688771848536064' , '508300439058382848' , '494904222408507392' , '476673981483581440' , '479388237341655040' , '482581103345926144' , '501416303421030400' , '510887823079899136' , '476679550688821248' , '463401817988923392' , '507635166470995968' , '478956696207622144' , '476660952100503552' , '472023119704358912' , '484684757343404032' , '481749756356329472' , '484683104078794753' , '511607136254427136' , '477956229193269248' , '463399692735086592' , '492410584894013440' , '489077814461464576' , '482877688223105024' , '515109193246572544' , '471622526116560896' , '471666413560397824' , '501072119862394880' , '489077805410156544' , '487568385933049856' , '489922977547157504' , '478603520921042944' , '477956227867869184' , '463402979890823168' , '495244168478588928' , '463400012525600768' , '482864644558422016' , '479959575810801664' , '474123301828952064' , '463399157952937984' , '480389141578645504' , '475686692318085120' , '514022971866611712' , '501072384963379200' , '479330045333078016' , '479959564469403648' , '473609136769073152' , '480488587389829120' , '523843707472969728' , '483218066432327680' , '479329595586248704' , '480481736321400832' , '463397743117729792' , '481338861507575808' , '478080883799097344' , '463402980524163072' , '489922976217563136' , '471974293945712640' , '471620891906670593' , '482864645908987904' , '463399157072134144' , '486313030599049216' , '479008674094776320' , '473534971609350144' , '481749755081261056' , '478688773039718400' , '498778136893194240' , '484681029190156288' , '489077815459708928' , '479956471090511872' , '479220719629107200' , '523843695414345728' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：127ms , start = 1640329659201
┣━ 返回：RcdSet,size=274
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:07:39.441 [ForkJoinPool-2-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_company","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_company'
┣ 结果： 
┣━ 耗时：47ms , start = 1640329659392
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:39.492 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_organization","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_organization'
┣ 结果： 
┣━ 耗时：46ms , start = 1640329659445
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:39.499 [ForkJoinPool-2-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"002"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '002' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640329659446
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 

15:07:39.546 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_position'
┣ 结果： 
┣━ 耗时：48ms , start = 1640329659497
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:39.611 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee_position'
┣ 结果： 
┣━ 耗时：59ms , start = 1640329659551
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:39.666 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_busi_role","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_busi_role'
┣ 结果： 
┣━ 耗时：48ms , start = 1640329659614
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:39.683 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( valid=1) AND ( deleted= ? ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( ? ) AND t_2.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_5":0,"PARAM_4":"E001","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( valid=1) AND ( deleted= 0 ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( 'E001' ) AND t_2.deleted= 0
┣ 结果： 
┣━ 耗时：61ms , start = 1640329659618
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 

15:07:39.736 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_busi_role_member","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_busi_role_member'
┣ 结果： 
┣━ 耗时：59ms , start = 1640329659676
┣━ 返回：RcdSet,size=6
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:39.807 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = ? ) AND ( member_type = ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"E001","PARAM_3":"employee","PARAM_2":"employee"}
┣ 执行：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = 'employee' ) AND ( member_type = 'employee' ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：64ms , start = 1640329659742
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 

15:07:39.817 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_position'
┣ 结果： 
┣━ 耗时：70ms , start = 1640329659746
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:39.871 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"E001","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( 'E001' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640329659821
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 

15:07:39.873 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_person","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_person'
┣ 结果： 
┣━ 耗时：51ms , start = 1640329659821
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:39.938 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"P001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'P001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640329659891
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

15:07:39.963 [XNIO-1 task-5] - [] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 2596ms
15:07:40.025 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640329659968
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:40.092 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640329660032
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:40.139 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640329660103
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:40.442 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 
┣ 语句：UPDATE sys_user SET last_login_time = ? WHERE id = ?
┣ 参数：{"PARAM_1":1640329660392,"PARAM_2":"110588348101165911"}
┣ 执行：UPDATE sys_user SET last_login_time = str_to_date('2021-12-24 15:07:40','%Y-%m-%d %H:%i:%s') WHERE id = '110588348101165911'
┣ 结果： 
┣━ 耗时：43ms , start = 1640329660396
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.update(UserServiceImpl.java:202)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.setupAuthentication(LoginSuccessHandler.java:84)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:127)
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 

15:07:40.492 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_session_online","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_session_online'
┣ 结果： 
┣━ 耗时：45ms , start = 1640329660444
┣━ 返回：RcdSet,size=19
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.setupAuthentication(LoginSuccessHandler.java:91)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:127)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:40.554 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_session_online WHERE id = ?
┣ 参数：{"PARAM_1":"oVEY9_OzcoAw4V5qjUX4heL9lqM5QmCgzbHaqLst"}
┣ 执行：select * from sys_session_online WHERE id = 'oVEY9_OzcoAw4V5qjUX4heL9lqM5QmCgzbHaqLst'
┣ 结果： 
┣━ 耗时：52ms , start = 1640329660500
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.setupAuthentication(LoginSuccessHandler.java:91)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:127)
┣ TID：null
┗━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 

15:07:40.620 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 
┣ 语句：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"oVEY9_OzcoAw4V5qjUX4heL9lqM5QmCgzbHaqLst","PARAM_9":"31-6a9f1323c3-3520","PARAM_8":"D7B67D75818C671B","PARAM_10":"110588348101165911","PARAM_7":1,"PARAM_11":1640329660571,"PARAM_6":12000,"PARAM_12":1,"PARAM_5":1640329660555,"PARAM_4":1640329660555,"PARAM_3":"110588348101165911","PARAM_2":"BN17uLVCc-OeSV0u9KDaoZq9h02lhwMRO2c_qgoW"}
┣ 执行：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( 'oVEY9_OzcoAw4V5qjUX4heL9lqM5QmCgzbHaqLst' , 'BN17uLVCc-OeSV0u9KDaoZq9h02lhwMRO2c_qgoW' , '110588348101165911' , str_to_date('2021-12-24 15:07:40','%Y-%m-%d %H:%i:%s') , str_to_date('2021-12-24 15:07:40','%Y-%m-%d %H:%i:%s') , 12000 , 1 , 'D7B67D75818C671B' , '31-6a9f1323c3-3520' , '110588348101165911' , str_to_date('2021-12-24 15:07:40','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：45ms , start = 1640329660574
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.insert(SessionOnlineServiceImpl.java:74)
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 

15:07:40.974 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_token","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_token'
┣ 结果： 
┣━ 耗时：60ms , start = 1640329660912
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:41.047 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 
┣ 语句：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526777994337849344","PARAM_9":0,"PARAM_8":1640331660881,"PARAM_10":"110588348101165911","PARAM_7":0,"PARAM_11":1640329660980,"PARAM_6":1640331460623,"PARAM_12":1,"PARAM_5":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTU6NDE6MDAiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjA3OjQwIiwianRpIjoiNWJhOGI0OTItZTY2YS00YWVlLTkxYzktMGU5NzI0ZjZjNmU4In0.L-QFh60ozfVyjrLa4SNYBCz4q_KC1mBRGKdxmbgBGiQ4bLiK2_0ji4FFeJnaXqMF1Sa_TkdrQRo7ZrVSDZFkdVy_zO4mkLF4SvzsHWraoj_VB2TCxFo1JorxO8ynon_vIKWaClR2Hn8ngLqs7rQqmm_tZDPKQxk3flV85l00sP33NTlk5BdesP_I3cHOVka7JdLb4xCyrryym4cdEFWTSQASPTWWCROn02UPq3R0wrZesd3RJp9a8NPJGD8AnsnD-y0P0D5n5eACMJqUvitFpQgHjXuidTRwOo-ztrnK3hbak7mY_u2aQ5mJxu9WTf8pz5h-rkU83y3IrmwdL-syag","PARAM_4":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTU6Mzc6NDAiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjA3OjQwIiwianRpIjoiNWJhOGI0OTItZTY2YS00YWVlLTkxYzktMGU5NzI0ZjZjNmU4In0.SwgNoT2_J8omccA5nRADLPE0jsP6nZMO6jEcjo0QyGtnCwlQNnlv6rGBm8rzfqyyccdPqkfuxdOg-68CxPBU3Li7tTe5WDJHwHfD-llrlB7L5XC2Qb62eJjBgRylIOHNMoE5pHRsr7e6D8BoSo53zqvVijy94Wgx0s8MNa1-kYFp8uNXlGuk4Llynt64jd_nYYr75Ddy8aLnGSPBcujtJUc_Rw0kUklsf59Gdd6K3tHQ-JyaUC0KRBZ5ppHm5Uh4JJqeNBTyhis5jMofFJSqg6vEB2Xyit5m8o8hvpLOzpWFk2n2uxL52JXzquNAmWk1hDTzKK9jWsIZKbzLjIf5iw","PARAM_3":"5ba8b492-e66a-4aee-91c9-0e9724f6c6e8","PARAM_2":"110588348101165911"}
┣ 执行：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( '526777994337849344' , '110588348101165911' , '5ba8b492-e66a-4aee-91c9-0e9724f6c6e8' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTU6Mzc6NDAiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjA3OjQwIiwianRpIjoiNWJhOGI0OTItZTY2YS00YWVlLTkxYzktMGU5NzI0ZjZjNmU4In0.SwgNoT2_J8omccA5nRADLPE0jsP6nZMO6jEcjo0QyGtnCwlQNnlv6rGBm8rzfqyyccdPqkfuxdOg-68CxPBU3Li7tTe5WDJHwHfD-llrlB7L5XC2Qb62eJjBgRylIOHNMoE5pHRsr7e6D8BoSo53zqvVijy94Wgx0s8MNa1-kYFp8uNXlGuk4Llynt64jd_nYYr75Ddy8aLnGSPBcujtJUc_Rw0kUklsf59Gdd6K3tHQ-JyaUC0KRBZ5ppHm5Uh4JJqeNBTyhis5jMofFJSqg6vEB2Xyit5m8o8hvpLOzpWFk2n2uxL52JXzquNAmWk1hDTzKK9jWsIZKbzLjIf5iw' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTU6NDE6MDAiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjA3OjQwIiwianRpIjoiNWJhOGI0OTItZTY2YS00YWVlLTkxYzktMGU5NzI0ZjZjNmU4In0.L-QFh60ozfVyjrLa4SNYBCz4q_KC1mBRGKdxmbgBGiQ4bLiK2_0ji4FFeJnaXqMF1Sa_TkdrQRo7ZrVSDZFkdVy_zO4mkLF4SvzsHWraoj_VB2TCxFo1JorxO8ynon_vIKWaClR2Hn8ngLqs7rQqmm_tZDPKQxk3flV85l00sP33NTlk5BdesP_I3cHOVka7JdLb4xCyrryym4cdEFWTSQASPTWWCROn02UPq3R0wrZesd3RJp9a8NPJGD8AnsnD-y0P0D5n5eACMJqUvitFpQgHjXuidTRwOo-ztrnK3hbak7mY_u2aQ5mJxu9WTf8pz5h-rkU83y3IrmwdL-syag' , str_to_date('2021-12-24 15:37:40','%Y-%m-%d %H:%i:%s') , 0 , str_to_date('2021-12-24 15:41:00','%Y-%m-%d %H:%i:%s') , 0 , '110588348101165911' , str_to_date('2021-12-24 15:07:40','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：62ms , start = 1640329660981
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 

15:07:42.177 [XNIO-1 task-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 
┣ 语句：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= ?
┣ 参数：{"PARAM_1":0}
┣ 执行：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：392ms , start = 1640329661784
┣━ 返回：RcdSet,size=1743
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:195)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:180)
    org.github.foxnic.web.oauth.service.impl.ResourzeServiceImpl.getMatchd(ResourzeServiceImpl.java:293)
┣ TID：null
┗━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 

15:07:42.324 [XNIO-1 task-5] - [526777999916273664] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_lang","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_lang'
┣ 结果： 
┣━ 耗时：63ms , start = 1640329662257
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：526777999916273664
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:42.482 [XNIO-1 task-5] - [526777999916273664] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：140ms , start = 1640329662338
┣━ 返回：RcdSet,size=1390
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：526777999916273664
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

15:07:42.695 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：62ms , start = 1640329662630
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:42.751 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640329662699
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:42.806 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640329662756
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:42.864 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640329662815
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:42.918 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640329662867
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:42.975 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.index.logo"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.index.logo' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640329662928
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.047 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640329662993
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.098 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640329663049
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.162 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640329663101
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.224 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640329663166
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:43.299 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：65ms , start = 1640329663230
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.344 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640329663300
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.418 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640329663347
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:43.512 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640329663426
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.581 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640329663522
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.632 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640329663583
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:43.723 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640329663635
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.775 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640329663727
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.821 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.ui.table.pageLevels","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640329663777
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:43.896 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640329663833
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.946 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640329663901
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:43.986 [XNIO-1 task-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.portal.module.enable","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：31ms , start = 1640329663948
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:46.398 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_file","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_file'
┣ 结果： 
┣━ 耗时：76ms , start = 1640329666319
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.download(FileController.java:99)
┣ TID：526778016668323840
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:07:46.465 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"465814972102868992"}
┣ 执行：select * from sys_file WHERE id = '465814972102868992'
┣ 结果： 
┣━ 耗时：36ms , start = 1640329666419
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.download(FileController.java:99)
┣ TID：526778016668323840
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:07:46.518 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640329666473}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:07:46','%Y-%m-%d %H:%i:%s') WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：40ms , start = 1640329666474
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526778016668323840
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:07:46.559 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640329666520}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:07:46','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：36ms , start = 1640329666520
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526778016668323840
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:07:46.561 [XNIO-1 task-3] - [526778016668323840] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210709/465814972098674688.jpg
15:07:52.537 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：68ms , start = 1640329672464
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526778016668323840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:52.592 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640329672540
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526778016668323840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:52.643 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640329672599
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526778016668323840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:52.964 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640329672647
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526778016668323840
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:53.014 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640329672967
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526778016668323840
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:53.177 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640329673128
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526778016668323840
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:53.224 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请输入关键字","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请输入关键字' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：33ms , start = 1640329673188
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526778016668323840
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:53.301 [XNIO-1 task-3] - [526778016668323840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"添加","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '添加' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：60ms , start = 1640329673228
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526778016668323840
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:53.380 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640329673322
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:53.448 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640329673382
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:53.462 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640329673396
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:53.496 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640329673452
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:53.549 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640329673468
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:53.621 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640329673554
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:53.685 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：50ms , start = 1640329673633
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:53.754 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请输入","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请输入' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：55ms , start = 1640329673697
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:53.811 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"名称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '名称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1640329673763
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:53.869 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单类型","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单类型' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：51ms , start = 1640329673815
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:53.935 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"批次号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '批次号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640329673880
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:53.999 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"权限","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '权限' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640329673948
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.053 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否显示","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否显示' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：35ms , start = 1640329674016
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.093 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否隐藏","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否隐藏' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：34ms , start = 1640329674057
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.162 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单图标","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单图标' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：57ms , start = 1640329674097
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.214 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"样式","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '样式' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640329674166
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.258 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择图标","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择图标' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：34ms , start = 1640329674222
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.305 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"页面路径","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '页面路径' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：35ms , start = 1640329674261
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.355 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"页面参数","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '页面参数' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640329674313
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.412 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"路由地址","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '路由地址' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：48ms , start = 1640329674359
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.425 [XNIO-1 task-1] - [526778050663157760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：55ms , start = 1640329674369
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryRootNotes(MenuServiceImpl.java:263)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:274)
┣ TID：526778050663157760
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:07:54.453 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资源清单","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资源清单' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640329674415
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.516 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"动态控制","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '动态控制' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：57ms , start = 1640329674457
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.567 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"动态控制类","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '动态控制类' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1640329674519
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.614 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"上级ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '上级ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1640329674570
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.664 [XNIO-1 task-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"保存","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '保存' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640329674618
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:07:54.727 [XNIO-1 task-1] - [526778050663157760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640329674685
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526778050663157760
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:54.778 [XNIO-1 task-1] - [526778050663157760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640329674729
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526778050663157760
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:07:54.815 [XNIO-1 task-6] - [526778052370239488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：63ms , start = 1640329674750
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryRootNotes(MenuServiceImpl.java:263)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:274)
┣ TID：526778052370239488
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:07:54.825 [XNIO-1 task-1] - [526778050663157760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640329674779
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526778050663157760
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:07:55.481 [XNIO-1 task-1] - [526778055142674432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：51ms , start = 1640329675428
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778055142674432
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:07:55.492 [XNIO-1 task-6] - [526778055281086464] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：47ms , start = 1640329675444
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778055281086464
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:07:55.530 [XNIO-1 task-1] - [526778055142674432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：46ms , start = 1640329675483
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778055142674432
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:07:55.541 [XNIO-1 task-6] - [526778055281086464] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：47ms , start = 1640329675493
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778055281086464
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:07:55.578 [XNIO-1 task-3] - [526778055679545344] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：38ms , start = 1640329675538
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778055679545344
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:07:55.593 [XNIO-1 task-4] - [526778055557910528] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：82ms , start = 1640329675509
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778055557910528
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:07:55.632 [XNIO-1 task-3] - [526778055679545344] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：52ms , start = 1640329675578
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778055679545344
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:07:55.646 [XNIO-1 task-4] - [526778055557910528] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：45ms , start = 1640329675594
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778055557910528
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:07:57.450 [XNIO-1 task-4] - [526778063531282432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"eam"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= 'eam' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：37ms , start = 1640329677412
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526778063531282432
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:07:58.764 [XNIO-1 task-4] - [526778068992266240] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"498769910416015360"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '498769910416015360' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：45ms , start = 1640329678713
┣━ 返回：RcdSet,size=6
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526778068992266240
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:08:05.973 [XNIO-1 task-4] - [526778099161894912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"473549948382609408"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '473549948382609408' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：65ms , start = 1640329685906
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526778099161894912
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:08:07.540 [XNIO-1 task-4] - [526778105784700928] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"473549948382609408"}
┣ 执行：select * from sys_menu WHERE id = '473549948382609408'
┣ 结果： 
┣━ 耗时：53ms , start = 1640329687485
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778105784700928
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:08:07.591 [XNIO-1 task-4] - [526778105784700928] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"473549948382609408","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '473549948382609408' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：47ms , start = 1640329687543
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778105784700928
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:08:07.733 [XNIO-1 task-4] - [526778106594201600] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：53ms , start = 1640329687678
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778106594201600
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:07.788 [XNIO-1 task-6] - [526778106766168064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：68ms , start = 1640329687718
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778106766168064
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:07.815 [XNIO-1 task-4] - [526778106594201600] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：78ms , start = 1640329687734
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778106594201600
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:07.849 [XNIO-1 task-6] - [526778106766168064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：48ms , start = 1640329687799
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778106766168064
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:10.776 [XNIO-1 task-6] - [526778119336497152] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , crea... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526778119344885760","PARAM_9":1,"PARAM_8":1640329690716,"PARAM_7":"110588348101165911","PARAM_6":999999,"PARAM_5":"473549948382609408","PARAM_4":"folder","PARAM_3":"新菜单-1640329690715","PARAM_2":"61-f5f401b9f1-211d"}
┣ 执行：INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , create_by , create_time , version ) VALUES ( '526778119344885760' , '61-f5f401b9f1-211d' , '新菜单-1640329690715' , 'folder' , '473549948382609408' , 999999 , '110588348101165911' , str_to_date('2021-12-24 15:08:10','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：55ms , start = 1640329690717
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:83)
┣ TID：526778119336497152
┗━━━━━ SQL [ INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , crea... ] ━━━━━ 

15:08:10.822 [XNIO-1 task-6] - [526778119336497152] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu set hierarchy=id where parent_id='0' ] ━━━━━ 
┣ 语句：UPDATE sys_menu set hierarchy=id where parent_id='0'
┣ 参数：{}
┣ 执行：UPDATE sys_menu set hierarchy=id where parent_id='0'
┣ 结果： 
┣━ 耗时：42ms , start = 1640329690778
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:338)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：526778119336497152
┗━━━━━ SQL [ UPDATE sys_menu set hierarchy=id where parent_id='0' ] ━━━━━ 

15:08:10.919 [XNIO-1 task-6] - [526778119336497152] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 
┣ 语句：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 参数：{}
┣ 执行：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 结果： 
┣━ 耗时：94ms , start = 1640329690823
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:340)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：526778119336497152
┗━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 

15:08:10.985 [XNIO-1 task-6] - [526778119336497152] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 
┣ 语句：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 参数：{}
┣ 执行：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 结果： 
┣━ 耗时：61ms , start = 1640329690922
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:340)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：526778119336497152
┗━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 

15:08:12.137 [XNIO-1 task-6] - [526778125112053760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：44ms , start = 1640329692092
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778125112053760
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:08:12.191 [XNIO-1 task-6] - [526778125112053760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：52ms , start = 1640329692138
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778125112053760
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:08:12.358 [XNIO-1 task-6] - [526778126018023424] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：48ms , start = 1640329692308
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778126018023424
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:12.420 [XNIO-1 task-6] - [526778126018023424] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：55ms , start = 1640329692359
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778126018023424
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:12.435 [XNIO-1 task-4] - [526778126269681664] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：64ms , start = 1640329692369
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778126269681664
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:12.499 [XNIO-1 task-4] - [526778126269681664] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：60ms , start = 1640329692435
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778126269681664
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:27.787 [XNIO-1 task-4] - [526778189792415744] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"473549948382609408","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1640329707683,"PARAM_14":"526778119344885760","PARAM_9":"","PARAM_8":"","PARAM_7":"","PARAM_6":"page","PARAM_5":"新菜单-1640329690715","PARAM_4":"","PARAM_3":0,"PARAM_2":"资产清理清单"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = '资产清理清单' , hidden = 0 , css = '' , label = '新菜单-1640329690715' , type = 'page' , path_resource_id = '' , url = '' , params = '' , parent_id = '473549948382609408' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:08:27','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：85ms , start = 1640329707692
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：526778189792415744
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

15:08:27.880 [XNIO-1 task-4] - [526778189792415744] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_menu_resource WHERE menu_id= ? AND deleted = ?
┣ 参数：{"PARAM_1":"526778119344885760","PARAM_2":0}
┣ 执行：select * from sys_menu_resource WHERE menu_id= '526778119344885760' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640329707831
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:241)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
┣ TID：526778189792415744
┗━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:08:27.948 [XNIO-1 task-4] - [526778189792415744] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：delete from sys_menu_resource where menu_id= '526778119344885760'
┣ 结果： 
┣━ 耗时：38ms , start = 1640329707909
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:245)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：526778189792415744
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

15:08:33.231 [XNIO-1 task-4] - [526778213347627008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"473549948382609408","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1640329713179,"PARAM_14":"526778119344885760","PARAM_9":"","PARAM_8":"","PARAM_7":"","PARAM_6":"page","PARAM_5":"资产清理清单","PARAM_4":"","PARAM_3":0,"PARAM_2":"资产清理清单"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = '资产清理清单' , hidden = 0 , css = '' , label = '资产清理清单' , type = 'page' , path_resource_id = '' , url = '' , params = '' , parent_id = '473549948382609408' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:08:33','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：48ms , start = 1640329713180
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：526778213347627008
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

15:08:33.301 [XNIO-1 task-4] - [526778213347627008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_menu_resource WHERE menu_id= ? AND deleted = ?
┣ 参数：{"PARAM_1":"526778119344885760","PARAM_2":0}
┣ 执行：select * from sys_menu_resource WHERE menu_id= '526778119344885760' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640329713233
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:241)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
┣ TID：526778213347627008
┗━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:08:33.365 [XNIO-1 task-4] - [526778213347627008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：delete from sys_menu_resource where menu_id= '526778119344885760'
┣ 结果： 
┣━ 耗时：50ms , start = 1640329713306
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:245)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：526778213347627008
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

15:08:42.672 [XNIO-1 task-4] - [526778252975411200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"473549948382609408","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1640329722635,"PARAM_14":"526778119344885760","PARAM_9":"","PARAM_8":"","PARAM_7":"","PARAM_6":"page","PARAM_5":"资产清理清单","PARAM_4":"","PARAM_3":0,"PARAM_2":"asset-clean-list"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'asset-clean-list' , hidden = 0 , css = '' , label = '资产清理清单' , type = 'page' , path_resource_id = '' , url = '' , params = '' , parent_id = '473549948382609408' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:08:42','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：33ms , start = 1640329722636
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：526778252975411200
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

15:08:42.769 [XNIO-1 task-4] - [526778252975411200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_menu_resource WHERE menu_id= ? AND deleted = ?
┣ 参数：{"PARAM_1":"526778119344885760","PARAM_2":0}
┣ 执行：select * from sys_menu_resource WHERE menu_id= '526778119344885760' AND deleted = 0
┣ 结果： 
┣━ 耗时：90ms , start = 1640329722674
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:241)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
┣ TID：526778252975411200
┗━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:08:42.815 [XNIO-1 task-4] - [526778252975411200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：delete from sys_menu_resource where menu_id= '526778119344885760'
┣ 结果： 
┣━ 耗时：44ms , start = 1640329722770
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:245)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：526778252975411200
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

15:08:43.640 [XNIO-1 task-4] - [526778257232629760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"474155529355132929"}
┣ 执行：select * from sys_menu WHERE id = '474155529355132929'
┣ 结果： 
┣━ 耗时：46ms , start = 1640329723592
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778257232629760
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:08:43.678 [XNIO-1 task-4] - [526778257232629760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"490923211228188672"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '490923211228188672' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：30ms , start = 1640329723647
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778257232629760
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:08:43.730 [XNIO-1 task-4] - [526778257232629760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"474155529355132929","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '474155529355132929' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：47ms , start = 1640329723681
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778257232629760
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:08:43.902 [XNIO-1 task-4] - [526778258247651328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：63ms , start = 1640329723835
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778258247651328
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:43.941 [XNIO-1 task-6] - [526778258503503872] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：40ms , start = 1640329723896
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778258503503872
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:43.955 [XNIO-1 task-4] - [526778258247651328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：49ms , start = 1640329723903
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778258247651328
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:44.005 [XNIO-1 task-6] - [526778258503503872] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：60ms , start = 1640329723943
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778258503503872
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:44.695 [XNIO-1 task-6] - [526778261674397696] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：44ms , start = 1640329724650
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778261674397696
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:08:44.749 [XNIO-1 task-6] - [526778261674397696] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640329724697
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778261674397696
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:08:44.807 [XNIO-1 task-6] - [526778261674397696] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：55ms , start = 1640329724751
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778261674397696
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:08:44.998 [XNIO-1 task-6] - [526778262911717376] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：50ms , start = 1640329724946
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778262911717376
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:45.043 [XNIO-1 task-6] - [526778262911717376] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：39ms , start = 1640329725002
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778262911717376
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:45.119 [XNIO-1 task-4] - [526778263385673728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：57ms , start = 1640329725059
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778263385673728
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:45.176 [XNIO-1 task-4] - [526778263385673728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：53ms , start = 1640329725119
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778263385673728
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:49.381 [XNIO-1 task-4] - [526778281119191040] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"473549948382609408","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1640329729333,"PARAM_14":"526778119344885760","PARAM_9":"","PARAM_8":"","PARAM_7":"","PARAM_6":"page","PARAM_5":"资产清理清单","PARAM_4":"","PARAM_3":0,"PARAM_2":"asset-clean-list:mgr"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'asset-clean-list:mgr' , hidden = 0 , css = '' , label = '资产清理清单' , type = 'page' , path_resource_id = '' , url = '' , params = '' , parent_id = '473549948382609408' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:08:49','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：47ms , start = 1640329729333
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：526778281119191040
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

15:08:49.442 [XNIO-1 task-4] - [526778281119191040] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_menu_resource WHERE menu_id= ? AND deleted = ?
┣ 参数：{"PARAM_1":"526778119344885760","PARAM_2":0}
┣ 执行：select * from sys_menu_resource WHERE menu_id= '526778119344885760' AND deleted = 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640329729382
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:241)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
┣ TID：526778281119191040
┗━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:08:49.482 [XNIO-1 task-4] - [526778281119191040] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：delete from sys_menu_resource where menu_id= '526778119344885760'
┣ 结果： 
┣━ 耗时：32ms , start = 1640329729443
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:245)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：526778281119191040
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

15:08:51.330 [XNIO-1 task-4] - [526778289377775616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , crea... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526778289386164224","PARAM_9":1,"PARAM_8":1640329731258,"PARAM_7":"110588348101165911","PARAM_6":999999,"PARAM_5":"526778119344885760","PARAM_4":"folder","PARAM_3":"新菜单-1640329731256","PARAM_2":"4b-ba6f9eef66-ccb5"}
┣ 执行：INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , create_by , create_time , version ) VALUES ( '526778289386164224' , '4b-ba6f9eef66-ccb5' , '新菜单-1640329731256' , 'folder' , '526778119344885760' , 999999 , '110588348101165911' , str_to_date('2021-12-24 15:08:51','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：71ms , start = 1640329731258
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:83)
┣ TID：526778289377775616
┗━━━━━ SQL [ INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , crea... ] ━━━━━ 

15:08:51.380 [XNIO-1 task-4] - [526778289377775616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu set hierarchy=id where parent_id='0' ] ━━━━━ 
┣ 语句：UPDATE sys_menu set hierarchy=id where parent_id='0'
┣ 参数：{}
┣ 执行：UPDATE sys_menu set hierarchy=id where parent_id='0'
┣ 结果： 
┣━ 耗时：48ms , start = 1640329731331
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:338)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：526778289377775616
┗━━━━━ SQL [ UPDATE sys_menu set hierarchy=id where parent_id='0' ] ━━━━━ 

15:08:51.439 [XNIO-1 task-4] - [526778289377775616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 
┣ 语句：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 参数：{}
┣ 执行：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 结果： 
┣━ 耗时：57ms , start = 1640329731381
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:340)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：526778289377775616
┗━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 

15:08:51.479 [XNIO-1 task-4] - [526778289377775616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 
┣ 语句：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 参数：{}
┣ 执行：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 结果： 
┣━ 耗时：37ms , start = 1640329731440
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:340)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：526778289377775616
┗━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 

15:08:51.660 [XNIO-1 task-4] - [526778290740924416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"526778119344885760"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '526778119344885760' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：77ms , start = 1640329731582
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526778290740924416
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:08:53.555 [XNIO-1 task-4] - [526778298789793792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778289386164224"}
┣ 执行：select * from sys_menu WHERE id = '526778289386164224'
┣ 结果： 
┣━ 耗时：55ms , start = 1640329733499
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778298789793792
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:08:53.605 [XNIO-1 task-4] - [526778298789793792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778289386164224","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778289386164224' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：47ms , start = 1640329733557
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778298789793792
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:08:53.761 [XNIO-1 task-4] - [526778299674791936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：47ms , start = 1640329733712
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778299674791936
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:53.796 [XNIO-1 task-6] - [526778299855147008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：35ms , start = 1640329733757
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778299855147008
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:53.813 [XNIO-1 task-4] - [526778299674791936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：49ms , start = 1640329733762
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778299674791936
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:53.847 [XNIO-1 task-6] - [526778299855147008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：46ms , start = 1640329733797
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778299855147008
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:55.888 [XNIO-1 task-6] - [526778308445081600] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：87ms , start = 1640329735801
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778308445081600
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:08:55.944 [XNIO-1 task-6] - [526778308445081600] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640329735890
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778308445081600
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:08:55.992 [XNIO-1 task-6] - [526778308445081600] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：43ms , start = 1640329735946
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778308445081600
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:08:56.121 [XNIO-1 task-6] - [526778309598515200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：39ms , start = 1640329736078
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778309598515200
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:56.170 [XNIO-1 task-6] - [526778309598515200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：45ms , start = 1640329736122
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778309598515200
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:56.197 [XNIO-1 task-4] - [526778309900505088] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：41ms , start = 1640329736154
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778309900505088
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:56.242 [XNIO-1 task-4] - [526778309900505088] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：42ms , start = 1640329736198
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778309900505088
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:57.896 [XNIO-1 task-4] - [526778317018238976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778289386164224"}
┣ 执行：select * from sys_menu WHERE id = '526778289386164224'
┣ 结果： 
┣━ 耗时：49ms , start = 1640329737845
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778317018238976
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:08:57.947 [XNIO-1 task-4] - [526778317018238976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778289386164224","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778289386164224' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：46ms , start = 1640329737898
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778317018238976
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:08:58.078 [XNIO-1 task-4] - [526778317865488384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：28ms , start = 1640329738048
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778317865488384
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:58.138 [XNIO-1 task-4] - [526778317865488384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：57ms , start = 1640329738078
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778317865488384
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:08:58.150 [XNIO-1 task-6] - [526778318024871936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：58ms , start = 1640329738086
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778318024871936
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:08:58.226 [XNIO-1 task-6] - [526778318024871936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：72ms , start = 1640329738152
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778318024871936
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:09:04.564 [XNIO-1 task-6] - [526778344889389056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"526778289386164224"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '526778289386164224' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：66ms , start = 1640329744497
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.deleteById(MenuController.java:108)
┣ TID：526778344889389056
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:09:04.610 [XNIO-1 task-6] - [526778344889389056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778289386164224"}
┣ 执行：select * from sys_menu WHERE id = '526778289386164224'
┣ 结果： 
┣━ 耗时：43ms , start = 1640329744565
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.deleteByIdLogical(MenuServiceImpl.java:125)
    org.github.foxnic.web.oauth.controller.MenuController.deleteById(MenuController.java:114)
┣ TID：526778344889389056
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:09:04.665 [XNIO-1 task-6] - [526778344889389056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778289386164224","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778289386164224' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：51ms , start = 1640329744613
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.deleteByIdLogical(MenuServiceImpl.java:125)
    org.github.foxnic.web.oauth.controller.MenuController.deleteById(MenuController.java:114)
┣ TID：526778344889389056
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:09:04.720 [XNIO-1 task-6] - [526778344889389056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu where authority = :PARAM_1 and deleted=1 ] ━━━━━ 
┣ 语句：delete from sys_menu where authority = ? and deleted=1
┣ 参数：{"PARAM_1":"4b-ba6f9eef66-ccb5"}
┣ 执行：delete from sys_menu where authority = '4b-ba6f9eef66-ccb5' and deleted=1
┣ 结果： 
┣━ 耗时：52ms , start = 1640329744666
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.deleteByIdLogical(MenuServiceImpl.java:130)
    org.github.foxnic.web.oauth.controller.MenuController.deleteById(MenuController.java:114)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778344889389056
┗━━━━━ SQL [ delete from sys_menu where authority = :PARAM_1 and deleted=1 ] ━━━━━ 

15:09:04.770 [XNIO-1 task-6] - [526778344889389056] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET deleted = :PARAM_1 , delete_by = :PARAM_2 , delete_time = ... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET deleted = ? , delete_by = ? , delete_time = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":1,"PARAM_6":"526778289386164224","PARAM_5":1640329744721,"PARAM_4":"110588348101165911","PARAM_3":1640329744721,"PARAM_2":"110588348101165911"}
┣ 执行：UPDATE sys_menu SET deleted = 1 , delete_by = '110588348101165911' , delete_time = str_to_date('2021-12-24 15:09:04','%Y-%m-%d %H:%i:%s') , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:09:04','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '526778289386164224'
┣ 结果： 
┣━ 耗时：48ms , start = 1640329744721
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.deleteByIdLogical(MenuServiceImpl.java:138)
    org.github.foxnic.web.oauth.controller.MenuController.deleteById(MenuController.java:114)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778344889389056
┗━━━━━ SQL [ UPDATE sys_menu SET deleted = :PARAM_1 , delete_by = :PARAM_2 , delete_time = ... ] ━━━━━ 

15:09:04.956 [XNIO-1 task-6] - [526778346701328384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：32ms , start = 1640329744922
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778346701328384
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:09:05.015 [XNIO-1 task-6] - [526778346701328384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640329744958
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778346701328384
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:09:05.064 [XNIO-1 task-6] - [526778346701328384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：45ms , start = 1640329745018
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778346701328384
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:09:05.247 [XNIO-1 task-6] - [526778347821207552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：56ms , start = 1640329745190
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778347821207552
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:09:05.307 [XNIO-1 task-6] - [526778347821207552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：50ms , start = 1640329745248
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778347821207552
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:09:05.312 [XNIO-1 task-4] - [526778348156751872] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：37ms , start = 1640329745273
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778348156751872
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:09:05.375 [XNIO-1 task-4] - [526778348156751872] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：61ms , start = 1640329745313
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778348156751872
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:09:06.130 [XNIO-1 task-4] - [526778351629635584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"474155529355132929"}
┣ 执行：select * from sys_menu WHERE id = '474155529355132929'
┣ 结果： 
┣━ 耗时：31ms , start = 1640329746097
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778351629635584
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:09:06.174 [XNIO-1 task-4] - [526778351629635584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"490923211228188672"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '490923211228188672' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640329746131
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778351629635584
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:09:06.230 [XNIO-1 task-4] - [526778351629635584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"474155529355132929","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '474155529355132929' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：53ms , start = 1640329746175
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778351629635584
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:09:06.385 [XNIO-1 task-4] - [526778352560771072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：61ms , start = 1640329746320
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778352560771072
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:09:06.399 [XNIO-1 task-6] - [526778352720154624] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：39ms , start = 1640329746358
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778352720154624
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:09:06.435 [XNIO-1 task-4] - [526778352560771072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：42ms , start = 1640329746385
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778352560771072
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:09:06.466 [XNIO-1 task-6] - [526778352720154624] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：64ms , start = 1640329746400
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778352720154624
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:09:06.570 [XNIO-1 task-4] - [526778353449963520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：36ms , start = 1640329746532
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778353449963520
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:09:06.648 [XNIO-1 task-4] - [526778353449963520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640329746579
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778353449963520
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:09:06.723 [XNIO-1 task-4] - [526778353449963520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：67ms , start = 1640329746653
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778353449963520
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:09:06.902 [XNIO-1 task-4] - [526778354750197760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：55ms , start = 1640329746844
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778354750197760
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:09:06.954 [XNIO-1 task-6] - [526778354959912960] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：58ms , start = 1640329746893
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778354959912960
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:09:06.969 [XNIO-1 task-4] - [526778354750197760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：62ms , start = 1640329746904
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778354750197760
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:09:07.027 [XNIO-1 task-6] - [526778354959912960] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：64ms , start = 1640329746956
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778354959912960
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:10:51.728 [XNIO-1 task-6] - [526778794439086080] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"474154919352336384"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '474154919352336384' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：45ms , start = 1640329851680
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526778794439086080
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:10:52.632 [XNIO-1 task-6] - [526778798213959680] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"478626344431779840"}
┣ 执行：select * from sys_menu WHERE id = '478626344431779840'
┣ 结果： 
┣━ 耗时：55ms , start = 1640329852574
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778798213959680
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:10:52.686 [XNIO-1 task-6] - [526778798213959680] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"490888724289159168"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '490888724289159168' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640329852635
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778798213959680
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:10:52.747 [XNIO-1 task-6] - [526778798213959680] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"478626344431779840","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478626344431779840' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：55ms , start = 1640329852689
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526778798213959680
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:10:52.939 [XNIO-1 task-6] - [526778799451279360] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：52ms , start = 1640329852882
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778799451279360
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:10:53.009 [XNIO-1 task-6] - [526778799451279360] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：64ms , start = 1640329852942
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778799451279360
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:10:53.058 [XNIO-1 task-4] - [526778800004927488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：52ms , start = 1640329853000
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778800004927488
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:10:53.115 [XNIO-1 task-4] - [526778800004927488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：52ms , start = 1640329853059
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526778800004927488
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:16:13.013 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarting,55] - Starting WrapperAllApp on lankdeMacBook-Pro-2.local with PID 90201 (/Users/lank/IdeaProjectsnew/eam/eam/wrapper/wrapper-all/target/classes started by lank in /Users/lank/IdeaProjectsnew/eam)
15:16:13.027 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStartupProfileInfo,651] - No active profile set, falling back to default profiles: default
15:16:16.747 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [setApplicationContext,50] - service-all(default) is ready on port 8089
15:24:28.598 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarting,55] - Starting WrapperAllApp on lankdeMacBook-Pro-2.local with PID 94622 (/Users/lank/IdeaProjectsnew/eam/eam/wrapper/wrapper-all/target/classes started by lank in /Users/lank/IdeaProjectsnew/eam)
15:24:28.611 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStartupProfileInfo,651] - No active profile set, falling back to default profiles: default
15:24:33.141 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [setApplicationContext,50] - service-all(default) is ready on port 8089
15:24:43.190 [main] - [] - INFO  c.d.p.f.d.DAOConfig - [primaryDAO,103] - dao is ready : 

user=root
url=jdbc:mysql://121.43.103.102:3306/eam?useSSL=false&serverTimezone=Hongkong&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowPublicKeyRetrieval=true&tinyInt1isBit=false

15:24:43.317 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,215] - TQL Scan Complete
15:24:43.318 [simple-taskmgr] - [] - INFO  c.g.f.d.s.l.TQLCache - [scan,217] - default sql count : 29
15:24:44.265 [main] - [] - INFO  c.g.f.s.m.ControllerAspector - [init,56] - ControllerAspector Init
15:24:47.433 [main] - [] - INFO  o.g.f.w.f.v.a.PageAspector - [init,74] - PageAspector Init
15:24:50.098 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES W... ] ━━━━━ 
┣ 语句：SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN( ? ,UPPER( ? ))
┣ 参数：{"PARAM_1":"eam","PARAM_2":"eam"}
┣ 执行：SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' ))
┣ 结果： 
┣━ 耗时：80ms , start = 1640330689940
┣━ 返回：RcdSet,size=143
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：null
┗━━━━━ SQL [ SELECT TABLE_NAME,TABLE_COMMENT TC,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES W... ] ━━━━━ 

15:24:50.281 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule'
┣ 结果： 
┣━ 耗时：73ms , start = 1640330690207
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:24:50.441 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( valid = :PARAM... ] ━━━━━ 
┣ 语句：select t.* from dp_rule t WHERE ( ( t.deleted= ? ) AND ( valid = ? ) AND ( deleted = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":1}
┣ 执行：select t.* from dp_rule t WHERE ( ( t.deleted= 0 ) AND ( valid = 1 ) AND ( deleted = 0 ))
┣ 结果： 
┣━ 耗时：62ms , start = 1640330690378
┣━ 返回：RcdSet,size=21
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.queryList(RuleServiceImpl.java:244)
┣ TID：null
┗━━━━━ SQL [ select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 ) AND ( valid = :PARAM... ] ━━━━━ 

15:24:50.518 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule_range","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule_range'
┣ 结果： 
┣━ 耗时：62ms , start = 1640330690455
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.applyAll(RuleServiceImpl.java:426)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl$1.run(RuleServiceImpl.java:87)
    com.github.foxnic.commons.concurrent.task.SimpleTaskManager$1.run(SimpleTaskManager.java:132)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:24:50.574 [simple-parallel-task] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.rule_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"506776075892690944","PARAM_18":"509650653266575361","PARAM_19":"520970316604768256","PARAM_20":"523903460316286976","PARAM_10":"509657055074713600","PARAM_21":"509647933944102912","PARAM_11":"505378699583950848","PARAM_22":"509655484735684608","PARAM_12":"509656547438100480","PARAM_23":0,"PARAM_13":"520966111794036736","PARAM_14":"505378833612935169","PARAM_15":"509655566583332865","PARAM_16":"509650758551994368","PARAM_9":"509655623806222337","PARAM_8":"509650369479966720","PARAM_7":"509650558735351808","PARAM_6":"509656923604254721","PARAM_5":"506777407038951424","PARAM_4":"509650440854437889","PARAM_3":"509650043460911104","PARAM_2":"509650212042571776"}
┣ 执行：SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.rule_id IN ( '509650212042571776' , '509650043460911104' , '509650440854437889' , '506777407038951424' , '509656923604254721' , '509650558735351808' , '509650369479966720' , '509655623806222337' , '509657055074713600' , '505378699583950848' , '509656547438100480' , '520966111794036736' , '505378833612935169' , '509655566583332865' , '509650758551994368' , '506776075892690944' , '509650653266575361' , '520970316604768256' , '523903460316286976' , '509647933944102912' , '509655484735684608' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640330690528
┣━ 返回：RcdSet,size=22
┣ 调用栈：
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl.applyAll(RuleServiceImpl.java:426)
    org.github.foxnic.web.dataperm.service.impl.RuleServiceImpl$1.run(RuleServiceImpl.java:87)
    com.github.foxnic.commons.concurrent.task.SimpleTaskManager$1.run(SimpleTaskManager.java:132)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.rule_id join_f0 FROM (select * from dp_rule_range WHERE ( d... ] ━━━━━ 

15:24:50.655 [ForkJoinPool-2-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dp_rule_condition","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dp_rule_condition'
┣ 结果： 
┣━ 耗时：62ms , start = 1640330690592
┣━ 返回：RcdSet,size=24
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:24:50.782 [ForkJoinPool-2-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.range_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"520987592619982848","PARAM_18":"507545845873246208","PARAM_19":"510026172998881280","PARAM_20":"510025118479552512","PARAM_10":"524224110830555136","PARAM_21":"510025732596961280","PARAM_11":"507519270167511040","PARAM_22":"507546341619007488","PARAM_12":"509648598934224896","PARAM_23":"510024900207972352","PARAM_13":"509653130233774080","PARAM_24":0,"PARAM_14":"509283833821007872","PARAM_15":"510025213606367232","PARAM_16":"510373868452450304","PARAM_9":"520988549055512576","PARAM_8":"510373972957728768","PARAM_7":"510024950115995648","PARAM_6":"510024837347938304","PARAM_5":"510026109497118720","PARAM_4":"510025000925794304","PARAM_3":"509042008610836480","PARAM_2":"510373932180705280"}
┣ 执行：SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.range_id IN ( '510373932180705280' , '509042008610836480' , '510025000925794304' , '510026109497118720' , '510024837347938304' , '510024950115995648' , '510373972957728768' , '520988549055512576' , '524224110830555136' , '507519270167511040' , '509648598934224896' , '509653130233774080' , '509283833821007872' , '510025213606367232' , '510373868452450304' , '520987592619982848' , '507545845873246208' , '510026172998881280' , '510025118479552512' , '510025732596961280' , '507546341619007488' , '510024900207972352' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：111ms , start = 1640330690670
┣━ 返回：RcdSet,size=71
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.range_id join_f0 FROM (select * from dp_rule_condition WHER... ] ━━━━━ 

15:24:50.802 [simple-parallel-task] - [] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 351ms
15:24:50.811 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我起草的流程(chs_instance_drafted) 成功
15:24:50.812 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我待审的流程(chs_instance_approving) 成功
15:24:50.812 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我办结的流程(chs_instance_approved) 成功
15:24:50.813 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:我参与的流程(默认)(chs_instance_joined) 成功
15:24:50.813 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产登记审批(eam_asset_insert_approving) 成功
15:24:50.814 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产调拨单据(eam_asset_allocate) 成功
15:24:50.814 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产转移单据(eam_asset_tranfer) 成功
15:24:50.814 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维修单据(eam_asset_repair) 成功
15:24:50.815 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产借用单据(eam_asset_borrow) 成功
15:24:50.815 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产领用单据(eam_asset_collection) 成功
15:24:50.815 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产退库单据(eam_asset_collection_return) 成功
15:24:50.816 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产报废单据(eam_asset_scrap) 成功
15:24:50.817 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本变更单据(eam_asset_change_base_info) 成功
15:24:50.817 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维保变更单据(eam_asset_change_maintenance) 成功
15:24:50.817 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产财务变更单据(eam_asset_change_financial) 成功
15:24:50.818 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产财务变更审批(eam_asset_change_financial_approving) 成功
15:24:50.818 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产维保变更审批(eam_asset_change_maintenance_approving) 成功
15:24:50.818 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产基本变更审批(eam_asset_change_base_info_approving) 成功
15:24:50.819 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产耗材领用单据(eam_asset_consumables_collection) 成功
15:24:50.819 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产库存分配单据(eam_asset_stock_distribute) 成功
15:24:50.820 [simple-parallel-task] - [] - INFO  o.g.f.w.d.s.i.RuleServiceImpl - [applyAll,432] - 注册数据权限:EAM_资产全局数据权限(eam_asset_global_data_permission) 成功
15:24:56.434 [main] - [] - INFO  c.d.p.w.WrapperAllApp - [logStarted,61] - Started WrapperAllApp in 30.114 seconds (JVM running for 33.374)
15:24:56.487 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,66] - url scan time : 36ms
15:24:56.490 [main] - [] - INFO  c.g.f.s.a.a.ApplicationAwareHandler - [onApplicationEvent,86] - 

======================== FOX-NIC-WEB IS READY ========================
	Internal Version				1.6.2-20211214
	Machine Id						D7B67D75818C671B
	Process Id						94622
	Application Name				service-all
	Active Profile					default
	Port							8089
	Boot Time						23s
	Visit Local						http://127.0.0.1:8089/
	Visit LAN(0)					http://172.20.10.3:8089/
	Visit LAN(1)					http://172.31.199.40:8089/
======================== FOX-NIC-WEB IS READY ========================

15:24:56.492 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-customer
15:24:56.493 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-contract
15:24:56.493 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-knowledgebase
15:24:56.494 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-common
15:24:56.495 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-console
15:24:56.495 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-datacenter
15:24:56.496 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-eam
15:24:56.497 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-hrm
15:24:56.498 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,57] - start monitor view-ops
15:24:56.640 [simple-parallel-task] - [] - INFO  o.g.f.w.f.d.DeployMonitor - [regist,72] - deploy is ready on 139 dirs
15:25:10.779 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_config","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_config'
┣ 结果： 
┣━ 耗时：64ms , start = 1640330710712
┣━ 返回：RcdSet,size=18
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getDBTableMeta(SuperService.java:63)
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:229)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:25:10.843 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640330710797
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:10.892 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330710848
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:10.949 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640330710895
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.001 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640330710951
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.044 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640330711005
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:11.104 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.background"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.background' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640330711057
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.157 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640330711115
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.197 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640330711159
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.239 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330711198
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.300 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640330711246
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:11.347 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640330711305
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.393 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640330711349
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.439 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330711394
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:11.493 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640330711442
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.555 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640330711500
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.619 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640330711559
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:11.667 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330711623
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.724 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640330711670
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.780 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.default","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640330711725
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:11.834 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640330711784
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.884 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640330711839
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:11.933 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.text","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640330711889
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:11.981 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640330711937
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:12.041 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640330711989
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:12.091 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.link","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640330712043
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:12.839 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"ChinaYIE(测试版本_1.0.2)","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'ChinaYIE(测试版本_1.0.2)' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1640330712789
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:25:12.892 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"用户登录","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '用户登录' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640330712845
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:25:13.321 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"ChinaYIE","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'ChinaYIE' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640330713272
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:25:13.378 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"© 2021 Foxnic-Web 版权所有","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '© 2021 Foxnic-Web 版权所有' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640330713337
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:25:13.522 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640330713463
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:13.570 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640330713524
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:13.616 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640330713571
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:13.678 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.background"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.background' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640330713618
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:13.736 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640330713684
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:13.890 [XNIO-1 task-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：268ms , start = 1640330713610
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:13.929 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640330713874
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:13.958 [XNIO-1 task-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640330713902
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:13.975 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640330713931
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:13.987 [XNIO-1 task-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：26ms , start = 1640330713959
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:14.033 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640330713978
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:14.078 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330714038
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:14.123 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330714081
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:14.127 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330714081
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:14.161 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640330714125
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:14.175 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330714133
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:14.226 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640330714183
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:14.226 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640330714171
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:14.275 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330714229
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:14.320 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330714278
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:14.380 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640330714324
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:14.441 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640330714382
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:15.757 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.default","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：1303ms , start = 1640330714450
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:15.823 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640330715766
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:15.882 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640330715829
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:15.918 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.text","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640330715883
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:25:15.979 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640330715921
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:16.054 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640330715992
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:25:16.124 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.link","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640330716061
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:26:30.503 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.captcha.any"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.captcha.any' AND deleted = 0
┣ 结果： 
┣━ 耗时：72ms , start = 1640330790430
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:30.548 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.captcha.any"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.captcha.any' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640330790505
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:30.589 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.captcha.any","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.captcha.any' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330790549
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:26:30.790 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = 'admin' ) A
┣ 结果： 
┣━ 耗时：43ms , start = 1640330790746
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:279)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:86)
┣ TID：null
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 

15:26:30.828 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_user WHERE name = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"admin","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_user WHERE name = 'admin' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：36ms , start = 1640330790791
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:279)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:86)
┣ TID：null
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 

15:26:30.882 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role'
┣ 结果： 
┣━ 耗时：47ms , start = 1640330790834
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:30.940 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu'
┣ 结果： 
┣━ 耗时：56ms , start = 1640330790883
┣━ 返回：RcdSet,size=22
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.012 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_user_tenant","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_user_tenant'
┣ 结果： 
┣━ 耗时：65ms , start = 1640330790947
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.075 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_menu'
┣ 结果： 
┣━ 耗时：59ms , start = 1640330791015
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.082 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? ) AND t_0.deleted= ? ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"110588348101165911"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '110588348101165911' ) AND t_0.deleted= 0 ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：62ms , start = 1640330791020
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

15:26:31.125 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_menu","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_menu'
┣ 结果： 
┣━ 耗时：46ms , start = 1640330791078
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.165 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_user'
┣ 结果： 
┣━ 耗时：38ms , start = 1640330791126
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.242 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '110588348101165911' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：72ms , start = 1640330791170
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

15:26:31.247 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_user'
┣ 结果： 
┣━ 耗时：79ms , start = 1640330791168
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.308 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_role_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_role_user'
┣ 结果： 
┣━ 耗时：57ms , start = 1640330791250
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.531 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 
┣ 语句：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= ? ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( ? ) AND t_2.deleted= ? ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_5":0,"PARAM_4":"110588348101165911","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( '110588348101165911' ) AND t_2.deleted= 0 ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：280ms , start = 1640330791251
┣━ 返回：RcdSet,size=1268
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 

15:26:31.587 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( '110588348101165911' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：276ms , start = 1640330791311
┣━ 返回：RcdSet,size=1268
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 

15:26:31.727 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee'
┣ 结果： 
┣━ 耗时：93ms , start = 1640330791634
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.813 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：81ms , start = 1640330791731
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:26:31.816 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：86ms , start = 1640330791730
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.881 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：60ms , start = 1640330791820
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.888 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_9":"465893030000328704","PARAM_8":"491342618928611328","PARAM_10":0,"PARAM_7":"517640836658233344","PARAM_6":"487660170021703680","PARAM_5":"501416282168492032","PARAM_4":"[]","PARAM_3":"482877676047040511","PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '482877676047040511' , '[]' , '501416282168492032' , '487660170021703680' , '517640836658233344' , '491342618928611328' , '465893030000328704' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640330791833
┣━ 返回：RcdSet,size=6
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:31.926 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：42ms , start = 1640330791884
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:31.953 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_17":"500337554411757568","PARAM_18":"471653531770683392","PARAM_19":"473771445873278976","PARAM_10":"481749145309151232","PARAM_11":"473503433593192448","PARAM_12":"484680928828850176","PARAM_13":"490638744550907904","PARAM_14":"481119852224839680","PARAM_15":"481068382330814464","PARAM_16":"479219957951889408","PARAM_9":"501072373705867264","PARAM_8":"463400823506862080","PARAM_7":"495244156847783936","PARAM_6":"[]","PARAM_5":"526510493767045120","PARAM_4":"501072627503202304","PARAM_3":"502195284776849408","PARAM_2":"","PARAM_1":0,"PARAM_20":"473534962490933248","PARAM_21":"487660170021703680","PARAM_22":"463401580721340416","PARAM_23":"516603629470224384","PARAM_24":"510887820433293312","PARAM_25":"479329585473781760","PARAM_26":0}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '502195284776849408' , '501072627503202304' , '526510493767045120' , '[]' , '495244156847783936' , '463400823506862080' , '501072373705867264' , '481749145309151232' , '473503433593192448' , '484680928828850176' , '490638744550907904' , '481119852224839680' , '481068382330814464' , '479219957951889408' , '500337554411757568' , '471653531770683392' , '473771445873278976' , '473534962490933248' , '487660170021703680' , '463401580721340416' , '516603629470224384' , '510887820433293312' , '479329585473781760' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640330791901
┣━ 返回：RcdSet,size=22
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:31.978 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：49ms , start = 1640330791928
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.003 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"481338861117505536","PARAM_11":"489077805078806528","PARAM_12":"471666413233242112","PARAM_13":0,"PARAM_9":"463401807993896960","PARAM_8":"482583842692005888","PARAM_7":"479959564171608064","PARAM_6":"523843695028469760","PARAM_5":"[]","PARAM_4":"498885073529995264","PARAM_3":"","PARAM_2":"492410573934297088"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '492410573934297088' , '' , '498885073529995264' , '[]' , '523843695028469760' , '479959564171608064' , '482583842692005888' , '463401807993896960' , '481338861117505536' , '489077805078806528' , '471666413233242112' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640330791957
┣━ 返回：RcdSet,size=9
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:32.036 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_resourze","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_resourze'
┣ 结果： 
┣━ 耗时：55ms , start = 1640330791980
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.046 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_8":0,"PARAM_7":"501072108604882944","PARAM_6":"480492959255494656","PARAM_5":"501416282168492032","PARAM_4":"498885073529995264","PARAM_3":"478922681358483456","PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '478922681358483456' , '498885073529995264' , '501416282168492032' , '480492959255494656' , '501072108604882944' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640330792006
┣━ 返回：RcdSet,size=5
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:32.091 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_17":"484684747155439616","PARAM_39":0,"PARAM_18":"485936556654198784","PARAM_19":"479354710537535488","PARAM_31":"525223461266653184","PARAM_10":"489901512886059008","PARAM_32":"521358026301505536","PARAM_11":"471622514443812864","PARAM_33":"484687827645239296","PARAM_12":"498885073529995264","PARAM_34":"472023108039999488","PARAM_13":"508300419328376832","PARAM_35":"471974283854217216","PARAM_14":"521359007194021888","PARAM_36":"477956217075924992","PARAM_15":"478603507688013824","PARAM_37":"511607133662347264","PARAM_16":"487660170021703680","PARAM_38":"521358823697416192","PARAM_30":"490888724289159168","PARAM_9":"472331129437814784","PARAM_8":"463402969874825216","PARAM_7":"478080872159903744","PARAM_6":"483218056047230976","PARAM_5":"463708992481263616","PARAM_4":"","PARAM_3":"479388218479869952","PARAM_2":"485560933834293248","PARAM_1":0,"PARAM_28":"515109178721697792","PARAM_29":"501074097552228352","PARAM_20":"489922965425618944","PARAM_21":"474123290672103424","PARAM_22":"477952342537273344","PARAM_23":"519150902574055424","PARAM_24":"463400000391479296","PARAM_25":"488696580300341248","PARAM_26":"514022960453910528","PARAM_27":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '485560933834293248' , '479388218479869952' , '' , '463708992481263616' , '483218056047230976' , '478080872159903744' , '463402969874825216' , '472331129437814784' , '489901512886059008' , '471622514443812864' , '498885073529995264' , '508300419328376832' , '521359007194021888' , '478603507688013824' , '487660170021703680' , '484684747155439616' , '485936556654198784' , '479354710537535488' , '489922965425618944' , '474123290672103424' , '477952342537273344' , '519150902574055424' , '463400000391479296' , '488696580300341248' , '514022960453910528' , '[]' , '515109178721697792' , '501074097552228352' , '490888724289159168' , '525223461266653184' , '521358026301505536' , '484687827645239296' , '472023108039999488' , '471974283854217216' , '477956217075924992' , '511607133662347264' , '521358823697416192' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640330792041
┣━ 返回：RcdSet,size=35
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:32.102 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"487568361882910720","PARAM_11":"478956684543262720","PARAM_12":"481563563521998848","PARAM_13":"490803523777200128","PARAM_14":0,"PARAM_9":"480488576534970368","PARAM_8":"472023699273285632","PARAM_7":"479218751024136192","PARAM_6":"490245507570991104","PARAM_5":"482864633716146176","PARAM_4":"[]","PARAM_3":"463397731918938112","PARAM_2":"482865228384567296"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '482865228384567296' , '463397731918938112' , '[]' , '482864633716146176' , '490245507570991104' , '479218751024136192' , '472023699273285632' , '480488576534970368' , '487568361882910720' , '478956684543262720' , '481563563521998848' , '490803523777200128' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640330792049
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:32.143 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_9":0,"PARAM_8":"480481725315547136","PARAM_7":"473626745103187968","PARAM_6":"487559532503891968","PARAM_5":"490803286488645632","PARAM_4":"476660938984914944","PARAM_3":"463399148020826112","PARAM_2":"498885073529995264"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '498885073529995264' , '463399148020826112' , '476660938984914944' , '490803286488645632' , '487559532503891968' , '473626745103187968' , '480481725315547136' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330792104
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:32.165 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_tenant","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_tenant'
┣ 结果： 
┣━ 耗时：124ms , start = 1640330792041
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.196 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"501389626531909632","PARAM_18":0,"PARAM_10":"472331321499189248","PARAM_11":"476679540945453056","PARAM_12":"479220705905344512","PARAM_13":"473609125796773888","PARAM_14":"492410573934297088","PARAM_15":"480389130912530432","PARAM_16":"486551839098011648","PARAM_9":"474281113125126144","PARAM_8":"486313018175520768","PARAM_7":"482581092939857920","PARAM_6":"482877676047040512","PARAM_5":"510887580426829824","PARAM_4":"[]","PARAM_3":"505300850025955328","PARAM_2":"464788438000861184"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '464788438000861184' , '505300850025955328' , '[]' , '510887580426829824' , '482877676047040512' , '482581092939857920' , '486313018175520768' , '474281113125126144' , '472331321499189248' , '476679540945453056' , '479220705905344512' , '473609125796773888' , '492410573934297088' , '480389130912530432' , '486551839098011648' , '501389626531909632' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640330792148
┣━ 返回：RcdSet,size=15
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:32.212 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'T001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640330792168
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 

15:26:32.214 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：47ms , start = 1640330792167
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.247 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"482581320229191680","PARAM_18":"516603629470224384","PARAM_19":"479956459375820800","PARAM_20":0,"PARAM_10":"498885073529995264","PARAM_11":"476319981961740288","PARAM_12":"481749744998154240","PARAM_13":"478688762159693824","PARAM_14":"490803384081711104","PARAM_15":"476673967462023168","PARAM_16":"517640836658233344","PARAM_9":"463399683914465280","PARAM_8":"485747524208951296","PARAM_7":"490923211228188672","PARAM_6":"498582527229820928","PARAM_5":"482573207459594240","PARAM_4":"475954735753461760","PARAM_3":"495243921824153600","PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '495243921824153600' , '475954735753461760' , '482573207459594240' , '498582527229820928' , '490923211228188672' , '485747524208951296' , '463399683914465280' , '498885073529995264' , '476319981961740288' , '481749744998154240' , '478688762159693824' , '490803384081711104' , '476673967462023168' , '517640836658233344' , '482581320229191680' , '516603629470224384' , '479956459375820800' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640330792198
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:32.275 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"473733250494234624","PARAM_18":"478585173336653824","PARAM_19":"489818737319346176","PARAM_20":"480377913464586240","PARAM_10":"494904212426063872","PARAM_21":"490923970208468992","PARAM_11":"471623107291906048","PARAM_22":0,"PARAM_12":"480137007553576960","PARAM_13":"498885073529995264","PARAM_14":"479008663701291008","PARAM_15":"490923311769849856","PARAM_16":"485888529612668928","PARAM_9":"490924065570164737","PARAM_8":"463429350247628800","PARAM_7":"507635144501231616","PARAM_6":"515109178721697792","PARAM_5":"494904448380829696","PARAM_4":"[]","PARAM_3":"494597317773492224","PARAM_2":"521358569375793152"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '521358569375793152' , '494597317773492224' , '[]' , '494904448380829696' , '515109178721697792' , '507635144501231616' , '463429350247628800' , '490924065570164737' , '494904212426063872' , '471623107291906048' , '480137007553576960' , '498885073529995264' , '479008663701291008' , '490923311769849856' , '485888529612668928' , '473733250494234624' , '478585173336653824' , '489818737319346176' , '480377913464586240' , '490923970208468992' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640330792217
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:26:32.277 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：60ms , start = 1640330792217
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.307 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"481749751662903296","PARAM_31":"494904218386169856","PARAM_32":"473534967930945536","PARAM_33":"514022967143825408","PARAM_34":"463399684191289344","PARAM_35":"501072380383199232","PARAM_36":"485747524523524096","PARAM_37":"481338869564833792","PARAM_38":"483218062917500928","PARAM_30":"516601919007887360","PARAM_28":"478688767939444736","PARAM_29":"495243928195301376","PARAM_20":"471653538498347008","PARAM_21":"463401814398599168","PARAM_22":"490245513522708480","PARAM_23":"482573214082400256","PARAM_24":"471623114069901312","PARAM_25":"478688762461683712","PARAM_26":"486551846547095552","PARAM_27":"system_config","PARAM_17":"473534968501370880","PARAM_18":"492410580473217024","PARAM_19":"485560940150915072","PARAM_97":"514022967743610880","PARAM_10":"498581971681673216","PARAM_98":"463401586794692608","PARAM_11":"472023115707187200","PARAM_99":"476319982246952960","PARAM_12":"521358825886842880","PARAM_13":"473609132373442560","PARAM_14":"482573213478420480","PARAM_15":"475686687532384256","PARAM_16":"495243928853807104","PARAM_90":"482864640871628800","PARAM_91":"476673974453927936","PARAM_92":"463402976065617920","PARAM_93":"486551845917949952","PARAM_94":"501072381054287872","PARAM_95":"521358571649105920","PARAM_96":"478922689868726272","PARAM_86":"482581320564736000","PARAM_87":"498769993710698497","PARAM_88":"521358571439390720","PARAM_89":"474155093021687808","PARAM_80":"482864640208928768","PARAM_81":"501072635275247616","PARAM_82":"471623114736795648","PARAM_83":"475954736080617472","PARAM_84":"495244163676110848","PARAM_85":"479220713446703104","PARAM_103":"472023706080641024","PARAM_104":"486313026476048384","PARAM_101":"489815790388772864","PARAM_102":"472331135993511936","PARAM_107":"508300431265366016","PARAM_108":"498770119770505217","PARAM_105":"510887822199095296","PARAM_106":"511607135369428992","PARAM_75":"480481731707666432","PARAM_76":"474158815193858049","PARAM_77":"473228716474892288","PARAM_109":"507635157855895552","PARAM_78":"478922689172471808","PARAM_79":"479598105545670656","PARAM_70":"476319988295139328","PARAM_71":"479330040773869568","PARAM_72":"471666420116094976","PARAM_73":"486313025783988224","PARAM_74":"523843702414639104","PARAM_9":"479329591786209280","PARAM_8":"485560940721340416","PARAM_7":"480137014788751360","PARAM_6":"523843703270277120","PARAM_5":"492410581156888576","PARAM_110":"479008669908860928","PARAM_4":"495244163038576640","PARAM_111":"480492966025101312","PARAM_3":"479354717600743424","PARAM_2":0,"PARAM_1":0,"PARAM_64":"495201409763901440","PARAM_65":"482865234667634688","PARAM_66":"484683938606874624","PARAM_67":"472023114964795392","PARAM_68":"507635159172907008","PARAM_69":"479959570941214720","PARAM_60":"481749745337892864","PARAM_61":"473626752741015552","PARAM_62":"463401813807202304","PARAM_63":"517640838222708736","PARAM_100":"476673975825465344","PARAM_125":"478178015856033792","PARAM_126":"490245514197991424","PARAM_123":"481749152221364224","PARAM_124":"481749751037952000","PARAM_129":"494904219002732544","PARAM_127":"476319988987199488","PARAM_128":"463401586228461568","PARAM_53":"495243922151309312","PARAM_54":"476679547505344512","PARAM_55":"479956459719753728","PARAM_56":"476660946173952000","PARAM_57":"482865234084626432","PARAM_58":"473609133057114112","PARAM_59":"479959570282708992","PARAM_50":"482877683189940224","PARAM_51":"480481732412309504","PARAM_52":"510887822043906048","PARAM_130":"482573207753195520","PARAM_131":0,"PARAM_114":"oauth","PARAM_115":"517640836742119424","PARAM_112":"479008670655447040","PARAM_113":"480492966641664000","PARAM_118":"511607135210045440","PARAM_119":"479219965136732160","PARAM_116":"474155529355132929","PARAM_117":"473626751956680704","PARAM_42":"463402975415500800","PARAM_43":"476673967776595968","PARAM_44":"476660946866012160","PARAM_45":"479330041516261376","PARAM_46":"501072634599964672","PARAM_47":"485747531372822528","PARAM_48":"487559545757892608","PARAM_49":"480137014188965888","PARAM_40":"481338868780498944","PARAM_41":"478688768535035904","PARAM_121":"508300432511074304","PARAM_122":"494904454714228736","PARAM_120":"476679546897170432"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479354717600743424' , '495244163038576640' , '492410581156888576' , '523843703270277120' , '480137014788751360' , '485560940721340416' , '479329591786209280' , '498581971681673216' , '472023115707187200' , '521358825886842880' , '473609132373442560' , '482573213478420480' , '475686687532384256' , '495243928853807104' , '473534968501370880' , '492410580473217024' , '485560940150915072' , '471653538498347008' , '463401814398599168' , '490245513522708480' , '482573214082400256' , '471623114069901312' , '478688762461683712' , '486551846547095552' , 'system_config' , '478688767939444736' , '495243928195301376' , '516601919007887360' , '494904218386169856' , '473534967930945536' , '514022967143825408' , '463399684191289344' , '501072380383199232' , '485747524523524096' , '481338869564833792' , '483218062917500928' , '481749751662903296' , '481338868780498944' , '478688768535035904' , '463402975415500800' , '476673967776595968' , '476660946866012160' , '479330041516261376' , '501072634599964672' , '485747531372822528' , '487559545757892608' , '480137014188965888' , '482877683189940224' , '480481732412309504' , '510887822043906048' , '495243922151309312' , '476679547505344512' , '479956459719753728' , '476660946173952000' , '482865234084626432' , '473609133057114112' , '479959570282708992' , '481749745337892864' , '473626752741015552' , '463401813807202304' , '517640838222708736' , '495201409763901440' , '482865234667634688' , '484683938606874624' , '472023114964795392' , '507635159172907008' , '479959570941214720' , '476319988295139328' , '479330040773869568' , '471666420116094976' , '486313025783988224' , '523843702414639104' , '480481731707666432' , '474158815193858049' , '473228716474892288' , '478922689172471808' , '479598105545670656' , '482864640208928768' , '501072635275247616' , '471623114736795648' , '475954736080617472' , '495244163676110848' , '479220713446703104' , '482581320564736000' , '498769993710698497' , '521358571439390720' , '474155093021687808' , '482864640871628800' , '476673974453927936' , '463402976065617920' , '486551845917949952' , '501072381054287872' , '521358571649105920' , '478922689868726272' , '514022967743610880' , '463401586794692608' , '476319982246952960' , '476673975825465344' , '489815790388772864' , '472331135993511936' , '472023706080641024' , '486313026476048384' , '510887822199095296' , '511607135369428992' , '508300431265366016' , '498770119770505217' , '507635157855895552' , '479008669908860928' , '480492966025101312' , '479008670655447040' , '480492966641664000' , 'oauth' , '517640836742119424' , '474155529355132929' , '473626751956680704' , '511607135210045440' , '479219965136732160' , '476679546897170432' , '508300432511074304' , '494904454714228736' , '481749152221364224' , '481749751037952000' , '478178015856033792' , '490245514197991424' , '476319988987199488' , '463401586228461568' , '494904219002732544' , '482573207753195520' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：85ms , start = 1640330792221
┣━ 返回：RcdSet,size=101
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.345 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"490245507856203776","PARAM_31":"471623117005914112","PARAM_32":"501074107681472512","PARAM_33":"481563573261172736","PARAM_34":"523843705900105728","PARAM_35":"482581329603461120","PARAM_36":"474154919352336384","PARAM_37":"490245515401756672","PARAM_38":"501072116880244736","PARAM_30":"479956468586512384","PARAM_28":"492410582486482944","PARAM_29":"485888537137250304","PARAM_20":"476673977113116672","PARAM_21":"489922973885530112","PARAM_22":"477956226529886208","PARAM_23":"494904221175382016","PARAM_24":"463401587662913536","PARAM_25":"486313029152014336","PARAM_26":"472810496475529216","PARAM_27":"476673978719535104","PARAM_17":"476660948308852736","PARAM_18":"498885090605006848","PARAM_19":"471623115881840640","PARAM_97":"501416298853433344","PARAM_10":"478080882322702336","PARAM_98":"494903523763298304","PARAM_11":"501072637603086336","PARAM_99":"473609134411874304","PARAM_12":"463429358598488064","PARAM_13":"463399156178747392","PARAM_14":"479388233323511808","PARAM_15":"472036556115279872","PARAM_16":"517640838696665088","PARAM_90":"521359010843066368","PARAM_91":"479218751359680512","PARAM_92":"519151991289544704","PARAM_93":"483218065169842176","PARAM_94":"482865228682362880","PARAM_95":"490245516341280768","PARAM_96":"482581328609411072","PARAM_86":"485936564942143488","PARAM_87":"473733260023693312","PARAM_88":"521358028818087936","PARAM_89":"474123298494480384","PARAM_80":"519151990970777600","PARAM_81":"489815791709978624","PARAM_82":"523843704876695552","PARAM_83":"477956225548419072","PARAM_84":"480488586022486016","PARAM_85":"484684755145588736","PARAM_103":"476679549543776256","PARAM_104":"510887822752743424","PARAM_101":"482864642218000384","PARAM_102":"463401588501774336","PARAM_107":"478956693833646080","PARAM_108":"479956469668642816","PARAM_105":"476660949365817344","PARAM_106":"480481734924697600","PARAM_75":"481749155358703616","PARAM_76":"480488585066184704","PARAM_77":"478080881207017472","PARAM_109":"489077813450637312","PARAM_78":"510887822513668096","PARAM_79":"501072636617424896","PARAM_70":"507635163908276224","PARAM_71":"481563563891097600","PARAM_72":"479959573277442048","PARAM_73":"479218759966392320","PARAM_74":"515109189920489472","PARAM_9":"478603517087449088","PARAM_8":"489922974875385856","PARAM_7":"487568362436558848","PARAM_6":"484681028040916992","PARAM_5":"517640838939934720","PARAM_110":"473503441142939648","PARAM_4":"463397732229316608","PARAM_111":"482864643224633344","PARAM_3":"485936565877473280","PARAM_2":0,"PARAM_1":0,"PARAM_64":"510887583106990080","PARAM_65":"471622523520286720","PARAM_66":"479008672874233856","PARAM_67":"484681017538379776","PARAM_68":"479008671947292672","PARAM_69":"478585181314220032","PARAM_60":"510887582830166016","PARAM_61":"482583850896064512","PARAM_62":"478956684903972864","PARAM_63":"482864634051690496","PARAM_100":"463399155289554944","PARAM_125":"471974290984534016","PARAM_126":"480389140282605568","PARAM_123":"478956694827696128","PARAM_124":"478624924152365056","PARAM_129":"481749154318516224","PARAM_127":"463397739833589760","PARAM_128":"501072382371299328","PARAM_53":"514022970520240128","PARAM_54":"481119861406171136","PARAM_55":"501416300740870144","PARAM_56":"489901523904495616","PARAM_57":"472814243020800001","PARAM_58":"472023699592052736","PARAM_59":"480488576866320384","PARAM_50":"501072117886877696","PARAM_51":"473771455499206656","PARAM_52":"489077812460781568","PARAM_130":"498885088876953600","PARAM_131":0,"PARAM_114":"463397740718587904","PARAM_115":"488696597023031296","PARAM_112":"484684756085112832","PARAM_113":"474281124533633024","PARAM_118":"481119860437286912","PARAM_119":"501072383491178496","PARAM_116":"515109188829970432","PARAM_117":"475954744494391296","PARAM_42":"480389139313721344","PARAM_43":"471622522614317056","PARAM_44":"501074106590953472","PARAM_45":"514022969345835008","PARAM_46":"479329593644285952","PARAM_47":"471974291777257472","PARAM_48":"463400831778029568","PARAM_49":"479329594474758144","PARAM_40":"473609135473033216","PARAM_41":"479388232048443392","PARAM_121":"482583851852365824","PARAM_122":"472357984110903296","PARAM_120":"507635161886621696"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '485936565877473280' , '463397732229316608' , '517640838939934720' , '484681028040916992' , '487568362436558848' , '489922974875385856' , '478603517087449088' , '478080882322702336' , '501072637603086336' , '463429358598488064' , '463399156178747392' , '479388233323511808' , '472036556115279872' , '517640838696665088' , '476660948308852736' , '498885090605006848' , '471623115881840640' , '476673977113116672' , '489922973885530112' , '477956226529886208' , '494904221175382016' , '463401587662913536' , '486313029152014336' , '472810496475529216' , '476673978719535104' , '492410582486482944' , '485888537137250304' , '479956468586512384' , '471623117005914112' , '501074107681472512' , '481563573261172736' , '523843705900105728' , '482581329603461120' , '474154919352336384' , '490245515401756672' , '501072116880244736' , '490245507856203776' , '473609135473033216' , '479388232048443392' , '480389139313721344' , '471622522614317056' , '501074106590953472' , '514022969345835008' , '479329593644285952' , '471974291777257472' , '463400831778029568' , '479329594474758144' , '501072117886877696' , '473771455499206656' , '489077812460781568' , '514022970520240128' , '481119861406171136' , '501416300740870144' , '489901523904495616' , '472814243020800001' , '472023699592052736' , '480488576866320384' , '510887582830166016' , '482583850896064512' , '478956684903972864' , '482864634051690496' , '510887583106990080' , '471622523520286720' , '479008672874233856' , '484681017538379776' , '479008671947292672' , '478585181314220032' , '507635163908276224' , '481563563891097600' , '479959573277442048' , '479218759966392320' , '515109189920489472' , '481749155358703616' , '480488585066184704' , '478080881207017472' , '510887822513668096' , '501072636617424896' , '519151990970777600' , '489815791709978624' , '523843704876695552' , '477956225548419072' , '480488586022486016' , '484684755145588736' , '485936564942143488' , '473733260023693312' , '521358028818087936' , '474123298494480384' , '521359010843066368' , '479218751359680512' , '519151991289544704' , '483218065169842176' , '482865228682362880' , '490245516341280768' , '482581328609411072' , '501416298853433344' , '494903523763298304' , '473609134411874304' , '463399155289554944' , '482864642218000384' , '463401588501774336' , '476679549543776256' , '510887822752743424' , '476660949365817344' , '480481734924697600' , '478956693833646080' , '479956469668642816' , '489077813450637312' , '473503441142939648' , '482864643224633344' , '484684756085112832' , '474281124533633024' , '463397740718587904' , '488696597023031296' , '515109188829970432' , '475954744494391296' , '481119860437286912' , '501072383491178496' , '507635161886621696' , '482583851852365824' , '472357984110903296' , '478956694827696128' , '478624924152365056' , '471974290984534016' , '480389140282605568' , '463397739833589760' , '501072382371299328' , '481749154318516224' , '498885088876953600' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：63ms , start = 1640330792279
┣━ 返回：RcdSet,size=273
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.356 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：75ms , start = 1640330792281
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.385 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"473626745392594944","PARAM_31":"475686688278970368","PARAM_32":"479598113862975488","PARAM_33":"494597324853477376","PARAM_34":"482581099617189888","PARAM_35":"486551847209795584","PARAM_36":"480492967832846336","PARAM_37":"472331137151139840","PARAM_38":"472036243182452736","PARAM_30":"463402976384385024","PARAM_28":"484683939244408832","PARAM_29":"473534969646415872","PARAM_20":"480481733238587392","PARAM_21":"473626753412104192","PARAM_22":"479220714138763264","PARAM_23":"478688769155792896","PARAM_24":"479330042220904448","PARAM_25":"486313027243606016","PARAM_26":"472331136572325888","PARAM_27":"463400008926887936","PARAM_17":"479354718158585856","PARAM_18":"485853808635678720","PARAM_19":"463401815308763136","PARAM_97":"521358571854626816","PARAM_10":"481749752275271680","PARAM_98":"479329294410055680","PARAM_11":"487559548404498432","PARAM_99":"472023116420218880","PARAM_12":"482573215365857280","PARAM_13":"481338870340780032","PARAM_14":"479329293776715776","PARAM_15":"479598114576007168","PARAM_16":"464788445420584960","PARAM_90":"511607135692390400","PARAM_91":"479219966495686656","PARAM_92":"471666421412134912","PARAM_93":"480137016143511552","PARAM_94":"485747532043911168","PARAM_95":"463402977026113536","PARAM_96":"472023707355709440","PARAM_86":"494597325411319808","PARAM_87":"463401814696394752","PARAM_88":"479330042942324736","PARAM_89":"478625116503146496","PARAM_80":"495243930166624256","PARAM_81":"501072635946336256","PARAM_82":"471974290447663104","PARAM_83":"472331329199931392","PARAM_84":"480377921387626496","PARAM_85":"472331329841659904","PARAM_103":"495244164322033664","PARAM_104":"479219965778460672","PARAM_101":"486551847834746880","PARAM_102":"479959571725549568","PARAM_107":"478922690648866816","PARAM_108":"498770477079068673","PARAM_105":"481068389998002176","PARAM_106":"480481725646897152","PARAM_75":"473534969071796224","PARAM_76":"485560941274988544","PARAM_77":"476673976400084992","PARAM_109":"480377920796229632","PARAM_78":"494904455913799680","PARAM_79":"485747532740165632","PARAM_70":"482865235867205632","PARAM_71":"475686688891338752","PARAM_72":"482877683861028864","PARAM_73":"487568378521714688","PARAM_74":"494904220248440832","PARAM_9":"481338871154475008","PARAM_8":"521358826281107456","PARAM_7":"508300433685479424","PARAM_6":"521358826079780864","PARAM_5":"476319989616345088","PARAM_110":"508300434876661760","PARAM_4":"482865235280003072","PARAM_111":"495244164963762176","PARAM_3":"484683939894525952","PARAM_2":0,"PARAM_1":0,"PARAM_64":"472023706713980928","PARAM_65":"463401587079905280","PARAM_66":"471666420770406400","PARAM_67":"482581100191809536","PARAM_68":"478688769768161280","PARAM_69":"494904219631878144","PARAM_60":"471653539840524288","PARAM_61":"481749752891834368","PARAM_62":"476679548692332544","PARAM_63":"481068389410799616","PARAM_100":"480481733892898816","PARAM_125":"464788446058119168","PARAM_126":"485560941845413888","PARAM_123":"482573214719934464","PARAM_124":"463399690289807360","PARAM_129":"477952352960118784","PARAM_127":"487559533120454656","PARAM_128":"479220714860183552","PARAM_53":"521358572051759104","PARAM_54":"482877684532117504","PARAM_55":"498885074154946560","PARAM_56":"480492967241449472","PARAM_57":"486313028048912384","PARAM_58":"494904455314014208","PARAM_59":"487568377175343104","PARAM_50":"480137015552114688","PARAM_51":"463399148318621696","PARAM_52":"475954743840079872","PARAM_130":"476679548117712896","PARAM_131":0,"PARAM_114":"511607135537201152","PARAM_115":"483218064226123776","PARAM_112":"523843704117526528","PARAM_113":"476660939324653568","PARAM_118":"471653539131686912","PARAM_119":"495243929508118528","PARAM_116":"479354718896783360","PARAM_117":"490245514780999680","PARAM_42":"476517102736375808","PARAM_43":"479959572333723648","PARAM_44":"476319990312599552","PARAM_45":"477952352276447232","PARAM_46":"514022968620220416","PARAM_47":"463399689744547840","PARAM_48":"473626754091581440","PARAM_49":"463400009585393664","PARAM_40":"478922691353509888","PARAM_41":"eam","PARAM_121":"472023117196165120","PARAM_122":"483218063576006656","PARAM_120":"487559547058126848"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '484683939894525952' , '482865235280003072' , '476319989616345088' , '521358826079780864' , '508300433685479424' , '521358826281107456' , '481338871154475008' , '481749752275271680' , '487559548404498432' , '482573215365857280' , '481338870340780032' , '479329293776715776' , '479598114576007168' , '464788445420584960' , '479354718158585856' , '485853808635678720' , '463401815308763136' , '480481733238587392' , '473626753412104192' , '479220714138763264' , '478688769155792896' , '479330042220904448' , '486313027243606016' , '472331136572325888' , '463400008926887936' , '484683939244408832' , '473534969646415872' , '463402976384385024' , '475686688278970368' , '479598113862975488' , '494597324853477376' , '482581099617189888' , '486551847209795584' , '480492967832846336' , '472331137151139840' , '472036243182452736' , '473626745392594944' , '478922691353509888' , 'eam' , '476517102736375808' , '479959572333723648' , '476319990312599552' , '477952352276447232' , '514022968620220416' , '463399689744547840' , '473626754091581440' , '463400009585393664' , '480137015552114688' , '463399148318621696' , '475954743840079872' , '521358572051759104' , '482877684532117504' , '498885074154946560' , '480492967241449472' , '486313028048912384' , '494904455314014208' , '487568377175343104' , '471653539840524288' , '481749752891834368' , '476679548692332544' , '481068389410799616' , '472023706713980928' , '463401587079905280' , '471666420770406400' , '482581100191809536' , '478688769768161280' , '494904219631878144' , '482865235867205632' , '475686688891338752' , '482877683861028864' , '487568378521714688' , '494904220248440832' , '473534969071796224' , '485560941274988544' , '476673976400084992' , '494904455913799680' , '485747532740165632' , '495243930166624256' , '501072635946336256' , '471974290447663104' , '472331329199931392' , '480377921387626496' , '472331329841659904' , '494597325411319808' , '463401814696394752' , '479330042942324736' , '478625116503146496' , '511607135692390400' , '479219966495686656' , '471666421412134912' , '480137016143511552' , '485747532043911168' , '463402977026113536' , '472023707355709440' , '521358571854626816' , '479329294410055680' , '472023116420218880' , '480481733892898816' , '486551847834746880' , '479959571725549568' , '495244164322033664' , '479219965778460672' , '481068389998002176' , '480481725646897152' , '478922690648866816' , '498770477079068673' , '480377920796229632' , '508300434876661760' , '495244164963762176' , '523843704117526528' , '476660939324653568' , '511607135537201152' , '483218064226123776' , '479354718896783360' , '490245514780999680' , '471653539131686912' , '495243929508118528' , '487559547058126848' , '472023117196165120' , '483218063576006656' , '482573214719934464' , '463399690289807360' , '464788446058119168' , '485560941845413888' , '487559533120454656' , '479220714860183552' , '477952352960118784' , '476679548117712896' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：104ms , start = 1640330792280
┣━ 返回：RcdSet,size=177
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.418 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"489815792691445760","PARAM_31":"479220715891982336","PARAM_32":"488696601678708736","PARAM_33":"478603519541116928","PARAM_34":"473626754943025152","PARAM_35":"501416282843774976","PARAM_36":"463400010562666496","PARAM_37":"521359011593846784","PARAM_38":"521358826583097344","PARAM_30":"508300436529217536","PARAM_28":"482877686885122048","PARAM_29":"489901527587094528","PARAM_20":"474281126987300864","PARAM_21":"463399691917197312","PARAM_22":"478922694239191040","PARAM_23":"473733261147766784","PARAM_24":"481563575630954496","PARAM_25":"479329295395717120","PARAM_26":"479388413435314177","PARAM_27":"471653540754882560","PARAM_17":"478922681874382848","PARAM_18":"479218762373922816","PARAM_19":"472023708303622144","PARAM_97":"463400011548327936","PARAM_10":"478688770657353728","PARAM_98":"473626756130013184","PARAM_11":"485560943879651328","PARAM_99":"480492959574261760","PARAM_12":"482877685547139072","PARAM_13":"479218760989802496","PARAM_14":"521358826977361920","PARAM_15":"481749753835552768","PARAM_16":"498770298326220801","PARAM_90":"494597326321483776","PARAM_91":"481338874124042240","PARAM_92":"495244165920063488","PARAM_93":"478603518131830784","PARAM_94":"475686691072376832","PARAM_95":"492410583505698816","PARAM_96":"479354721128153088","PARAM_86":"480492968805924864","PARAM_87":"485888539251179520","PARAM_88":"463402978934521856","PARAM_89":"482581101043253248","PARAM_80":"480377922318761984","PARAM_81":"485747535109947392","PARAM_82":"463397741918158848","PARAM_83":"463402977978220544","PARAM_84":"463401816202149888","PARAM_85":"473771456543588352","PARAM_103":"479220717896859648","PARAM_104":"501074109107535872","PARAM_101":"487568383219335168","PARAM_102":"478585183470092288","PARAM_107":"463429359550595072","PARAM_108":"517640839262896128","PARAM_105":"482581330920472576","PARAM_106":"477952353941585920","PARAM_75":"472331332110778368","PARAM_76":"489815794193006592","PARAM_77":"478922692477583360","PARAM_109":"479354719760809984","PARAM_78":"475954746797064192","PARAM_79":"484683940846632960","PARAM_70":"494597327642689536","PARAM_71":"479330044003483648","PARAM_72":"471666422389407744","PARAM_73":"475954745446498304","PARAM_74":"487559553085341696","PARAM_9":"495243931164868608","PARAM_8":"481338872328880128","PARAM_7":"489901525628354560","PARAM_6":"463429360842440704","PARAM_5":"485747533784547328","PARAM_110":"481068390891388928","PARAM_4":"474123299400450048","PARAM_111":"476319991407312896","PARAM_3":"501072108940427264","PARAM_2":0,"PARAM_1":0,"PARAM_64":"472023709545136128","PARAM_65":"472331139210543104","PARAM_66":"474123300629381120","PARAM_67":"487568380539174912","PARAM_68":"481563574288777216","PARAM_69":"464788447014420480","PARAM_60":"494904456811380736","PARAM_61":"521358028998443008","PARAM_62":"473534970493665280","PARAM_63":"479598115674914816","PARAM_100":"463400833808072704","PARAM_125":"511607135931465728","PARAM_126":"464788448306266112","PARAM_123":"481119862664462336","PARAM_124":"480137017104007168","PARAM_129":"473733262674493440","PARAM_127":"473503441981800448","PARAM_128":"472331138002583552","PARAM_53":"521358572345360384","PARAM_54":"521359011174416384","PARAM_55":"482573216284409856","PARAM_56":"471666423702224896","PARAM_57":"494904458010951680","PARAM_58":"481068392111931392","PARAM_59":"472331330856681472","PARAM_50":"485560942738800640","PARAM_51":"479219968966131712","PARAM_52":"479208678382108672","PARAM_130":"480377923652550656","PARAM_131":0,"PARAM_114":"482865236752203776","PARAM_115":"475686689822474240","PARAM_112":"488696599002742784","PARAM_113":"486551848799436800","PARAM_118":"487559550405181440","PARAM_119":"471653541992202240","PARAM_116":"463400832793051136","PARAM_117":"472023118244741120","PARAM_42":"482581102209269760","PARAM_43":"478585182215995392","PARAM_44":"473503443139428352","PARAM_45":"463399691099308032","PARAM_46":"479598117155504128","PARAM_47":"477952355304734720","PARAM_48":"485888538064191488","PARAM_49":"473771458015789056","PARAM_40":"479329296838557696","PARAM_41":"474281125611569152","PARAM_121":"498885092861542400","PARAM_122":"479219967531679744","PARAM_120":"484683942113312768"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501072108940427264' , '474123299400450048' , '485747533784547328' , '463429360842440704' , '489901525628354560' , '481338872328880128' , '495243931164868608' , '478688770657353728' , '485560943879651328' , '482877685547139072' , '479218760989802496' , '521358826977361920' , '481749753835552768' , '498770298326220801' , '478922681874382848' , '479218762373922816' , '472023708303622144' , '474281126987300864' , '463399691917197312' , '478922694239191040' , '473733261147766784' , '481563575630954496' , '479329295395717120' , '479388413435314177' , '471653540754882560' , '482877686885122048' , '489901527587094528' , '508300436529217536' , '479220715891982336' , '488696601678708736' , '478603519541116928' , '473626754943025152' , '501416282843774976' , '463400010562666496' , '521359011593846784' , '521358826583097344' , '489815792691445760' , '479329296838557696' , '474281125611569152' , '482581102209269760' , '478585182215995392' , '473503443139428352' , '463399691099308032' , '479598117155504128' , '477952355304734720' , '485888538064191488' , '473771458015789056' , '485560942738800640' , '479219968966131712' , '479208678382108672' , '521358572345360384' , '521359011174416384' , '482573216284409856' , '471666423702224896' , '494904458010951680' , '481068392111931392' , '472331330856681472' , '494904456811380736' , '521358028998443008' , '473534970493665280' , '479598115674914816' , '472023709545136128' , '472331139210543104' , '474123300629381120' , '487568380539174912' , '481563574288777216' , '464788447014420480' , '494597327642689536' , '479330044003483648' , '471666422389407744' , '475954745446498304' , '487559553085341696' , '472331332110778368' , '489815794193006592' , '478922692477583360' , '475954746797064192' , '484683940846632960' , '480377922318761984' , '485747535109947392' , '463397741918158848' , '463402977978220544' , '463401816202149888' , '473771456543588352' , '480492968805924864' , '485888539251179520' , '463402978934521856' , '482581101043253248' , '494597326321483776' , '481338874124042240' , '495244165920063488' , '478603518131830784' , '475686691072376832' , '492410583505698816' , '479354721128153088' , '463400011548327936' , '473626756130013184' , '480492959574261760' , '463400833808072704' , '487568383219335168' , '478585183470092288' , '479220717896859648' , '501074109107535872' , '482581330920472576' , '477952353941585920' , '463429359550595072' , '517640839262896128' , '479354719760809984' , '481068390891388928' , '476319991407312896' , '488696599002742784' , '486551848799436800' , '482865236752203776' , '475686689822474240' , '463400832793051136' , '472023118244741120' , '487559550405181440' , '471653541992202240' , '484683942113312768' , '498885092861542400' , '479219967531679744' , '481119862664462336' , '480137017104007168' , '511607135931465728' , '464788448306266112' , '473503441981800448' , '472331138002583552' , '473733262674493440' , '480377923652550656' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：136ms , start = 1640330792281
┣━ 返回：RcdSet,size=374
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.423 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"477956217403080704","PARAM_31":"473534966525853696","PARAM_32":"474123290978287616","PARAM_33":"489922965769551872","PARAM_34":"478080877377617920","PARAM_35":"463401812293058560","PARAM_36":"474159090990317568","PARAM_37":"479330038903209984","PARAM_38":"485936556943605760","PARAM_30":"472331133846028288","PARAM_28":"489922970169376768","PARAM_29":"514022960873340928","PARAM_20":"501072632922243072","PARAM_21":"472818971712684033","PARAM_22":"472023113178021888","PARAM_23":"472331129806913536","PARAM_24":"index","PARAM_25":"473626750312513536","PARAM_26":"495244161406992384","PARAM_27":"484683936333561856","PARAM_17":"480389135564013568","PARAM_18":"484684747470012416","PARAM_19":"482864638480875520","PARAM_97":"474123295055151104","PARAM_10":"488696580921098240","PARAM_98":"519150902678913024","PARAM_11":"479354710923411456","PARAM_99":"463402970206175232","PARAM_12":"508300419894607872","PARAM_13":"481749150413619200","PARAM_14":"482573211888779264","PARAM_15":"517640837794889728","PARAM_16":"463397133957988352","PARAM_90":"476679545236226048","PARAM_91":"478626344431779840","PARAM_92":"490245511899512832","PARAM_93":"494597321997156352","PARAM_94":"472331326201004032","PARAM_95":"521358570889936896","PARAM_96":"463401584798203904","PARAM_86":"495243926484025344","PARAM_87":"521358823823245312","PARAM_88":"464788442501349376","PARAM_89":"477952342965092352","PARAM_80":"471622514821300224","PARAM_81":"473609130683138048","PARAM_82":"471974284126846976","PARAM_83":"486313023716196352","PARAM_84":"471623112182464512","PARAM_85":"482877680811769856","PARAM_103":"480377918011211776","PARAM_104":"489901513284517888","PARAM_101":"508300428283215872","PARAM_102":"485747528893988864","PARAM_107":"501074097912938496","PARAM_108":"507635154248794112","PARAM_105":"487559541341290496","PARAM_106":"471666417796644864","PARAM_75":"475686681035407360","PARAM_76":"484680990048911360","PARAM_77":"484683932139257856","PARAM_109":"481749749448310784","PARAM_78":"476660944341041152","PARAM_79":"521359007324045312","PARAM_70":"479330034058788864","PARAM_71":"472023108392321024","PARAM_72":"492410578774523904","PARAM_73":"521358026385391616","PARAM_74":"483218060644188160","PARAM_9":"481338866817564672","PARAM_8":"478603508019363840","PARAM_7":"463400006318030848","PARAM_6":"479956464534814720","PARAM_5":"479959568621764608","PARAM_110":"494904452583522304","PARAM_4":"511607134790615040","PARAM_111":"489077809105338368","PARAM_3":"463402973779722240","PARAM_2":0,"PARAM_1":0,"PARAM_64":"525222633608839168","PARAM_65":"485560938628382720","PARAM_66":"521358825169616896","PARAM_67":"486551844089233408","PARAM_68":"482865232566288384","PARAM_69":"478080872541585408","PARAM_60":"525268121129320448","PARAM_61":"482581096999944192","PARAM_62":"481068386625781760","PARAM_63":"471622519044964352","PARAM_100":"479354715398733824","PARAM_125":"478922687092097024","PARAM_126":"515109184639860736","PARAM_123":"479329590288842752","PARAM_124":"511607133742039040","PARAM_129":"501072113185062912","PARAM_127":"479329289888595968","PARAM_128":"472814616229969920","PARAM_53":"479008668327608320","PARAM_54":"485560934119505920","PARAM_55":"494904216788140032","PARAM_56":"479598110457200640","PARAM_57":"463399152273850368","PARAM_58":"514022965487075328","PARAM_59":"485936561238573056","PARAM_50":"482583847255408640","PARAM_51":"472023703798939648","PARAM_52":"515109179094990848","PARAM_130":"463399687542538240","PARAM_131":0,"PARAM_114":"473228835811229696","PARAM_115":"501416291903471616","PARAM_112":"480488581421334528","PARAM_113":"480137012393803776","PARAM_118":"489815788086099968","PARAM_119":"501072378579648512","PARAM_116":"483218056353415168","PARAM_117":"478688766404329472","PARAM_42":"476673972792983552","PARAM_43":"471653536266977280","PARAM_44":"479388218932854784","PARAM_45":"479220710963675136","PARAM_46":"480492964435460096","PARAM_47":"523843700309098496","PARAM_48":"463400000727023616","PARAM_49":"480481730000584704","PARAM_40":"510887821632864256","PARAM_41":"477956221781934080","PARAM_121":"519151989741846528","PARAM_122":"475686685250682880","PARAM_120":"476319986613223424"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463402973779722240' , '511607134790615040' , '479959568621764608' , '479956464534814720' , '463400006318030848' , '478603508019363840' , '481338866817564672' , '488696580921098240' , '479354710923411456' , '508300419894607872' , '481749150413619200' , '482573211888779264' , '517640837794889728' , '463397133957988352' , '480389135564013568' , '484684747470012416' , '482864638480875520' , '501072632922243072' , '472818971712684033' , '472023113178021888' , '472331129806913536' , 'index' , '473626750312513536' , '495244161406992384' , '484683936333561856' , '489922970169376768' , '514022960873340928' , '472331133846028288' , '473534966525853696' , '474123290978287616' , '489922965769551872' , '478080877377617920' , '463401812293058560' , '474159090990317568' , '479330038903209984' , '485936556943605760' , '477956217403080704' , '510887821632864256' , '477956221781934080' , '476673972792983552' , '471653536266977280' , '479388218932854784' , '479220710963675136' , '480492964435460096' , '523843700309098496' , '463400000727023616' , '480481730000584704' , '482583847255408640' , '472023703798939648' , '515109179094990848' , '479008668327608320' , '485560934119505920' , '494904216788140032' , '479598110457200640' , '463399152273850368' , '514022965487075328' , '485936561238573056' , '525268121129320448' , '482581096999944192' , '481068386625781760' , '471622519044964352' , '525222633608839168' , '485560938628382720' , '521358825169616896' , '486551844089233408' , '482865232566288384' , '478080872541585408' , '479330034058788864' , '472023108392321024' , '492410578774523904' , '521358026385391616' , '483218060644188160' , '475686681035407360' , '484680990048911360' , '484683932139257856' , '476660944341041152' , '521359007324045312' , '471622514821300224' , '473609130683138048' , '471974284126846976' , '486313023716196352' , '471623112182464512' , '482877680811769856' , '495243926484025344' , '521358823823245312' , '464788442501349376' , '477952342965092352' , '476679545236226048' , '478626344431779840' , '490245511899512832' , '494597321997156352' , '472331326201004032' , '521358570889936896' , '463401584798203904' , '474123295055151104' , '519150902678913024' , '463402970206175232' , '479354715398733824' , '508300428283215872' , '485747528893988864' , '480377918011211776' , '489901513284517888' , '487559541341290496' , '471666417796644864' , '501074097912938496' , '507635154248794112' , '481749749448310784' , '494904452583522304' , '489077809105338368' , '480488581421334528' , '480137012393803776' , '473228835811229696' , '501416291903471616' , '483218056353415168' , '478688766404329472' , '489815788086099968' , '501072378579648512' , '476319986613223424' , '519151989741846528' , '475686685250682880' , '479329590288842752' , '511607133742039040' , '478922687092097024' , '515109184639860736' , '479329289888595968' , '472814616229969920' , '501072113185062912' , '463399687542538240' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：139ms , start = 1640330792282
┣━ 返回：RcdSet,size=272
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.473 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：113ms , start = 1640330792359
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.484 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"501072386968256512","PARAM_31":"471623119950315520","PARAM_32":"475686692922064896","PARAM_33":"486485883655032833","PARAM_34":"471653532135587840","PARAM_35":"499939063264968705","PARAM_36":"490638839023411200","PARAM_37":"474158548662616065","PARAM_38":"521282477461864448","PARAM_30":"479219958253879296","PARAM_28":"500338282807173120","PARAM_29":"489922978209857536","PARAM_20":"463400823850795008","PARAM_21":"499940744069382145","PARAM_22":"515117881764085760","PARAM_23":"476673982108532736","PARAM_24":"498809674066296832","PARAM_25":"474159041438810113","PARAM_26":"501072627838746624","PARAM_27":"498472886441353216","PARAM_17":"501653323472965633","PARAM_18":"463429362776014848","PARAM_19":"471666425635799040","PARAM_97":"490908208253112321","PARAM_10":"481749158911279104","PARAM_98":"463399158544334848","PARAM_11":"489077816151769088","PARAM_99":"471622526703763456","PARAM_12":"485560945611898880","PARAM_13":"463400013167329280","PARAM_14":"478688773647892480","PARAM_15":"501390061263130624","PARAM_16":"474157822892834817","PARAM_90":"481749145669861376","PARAM_91":"502170004054085633","PARAM_92":"517689123146829824","PARAM_93":"471653543871250432","PARAM_94":"498971162877886465","PARAM_95":"479956473208635392","PARAM_96":"495244157174939648","PARAM_86":"471986344285962240","PARAM_87":"485395845907230720","PARAM_88":"498809056404701185","PARAM_89":"515190259999309825","PARAM_80":"497513389245857793","PARAM_81":"510887820517179392","PARAM_82":"472023711478710272","PARAM_83":"501073274482987009","PARAM_84":"478598569259962368","PARAM_85":"475955437510852608","PARAM_103":"478625384087158785","PARAM_104":"476660952759009280","PARAM_101":"472358185009676289","PARAM_102":"490920008524763136","PARAM_107":"481749756972892160","PARAM_108":"473036391530364929","PARAM_105":"515109194081239040","PARAM_106":"517689121376833536","PARAM_75":"491206513122086913","PARAM_76":"498472529019543553","PARAM_77":"463401590787670016","PARAM_109":"481068382628610048","PARAM_78":"516603746558414848","PARAM_79":"498963890651004929","PARAM_70":"490909866307620865","PARAM_71":"501072641218576384","PARAM_72":"479959576465113088","PARAM_73":"498779937252048897","PARAM_74":"489424103724285952","PARAM_9":"487559557153816576","PARAM_8":"498962211822108672","PARAM_7":"473227868306931712","PARAM_6":"498474569439387649","PARAM_5":"487568387254255616","PARAM_110":"472331141001510912","PARAM_4":"498473196719185920","PARAM_111":"486485770673065984","PARAM_3":"479218764370411520","PARAM_2":0,"PARAM_1":0,"PARAM_64":"473534973345792000","PARAM_65":"467361506980265985","PARAM_66":"521281129047654400","PARAM_67":"482865239696605184","PARAM_68":"463399693292929024","PARAM_69":"482877688894193664","PARAM_60":"513733380219600896","PARAM_61":"495244169128706048","PARAM_62":"498780083792642049","PARAM_63":"501072374041411584","PARAM_100":"471974294486777856","PARAM_125":"499954050071007232","PARAM_126":"484680929105674240","PARAM_123":"473771446246572032","PARAM_124":"482864646571687936","PARAM_129":"477956229818220544","PARAM_127":"478585185282031616","PARAM_128":"482581332891795456","PARAM_53":"483567801252978688","PARAM_54":"526446505431666688","PARAM_55":"473733264926834688","PARAM_56":"463397743721709568","PARAM_57":"473612688681861120","PARAM_58":"515118155274649600","PARAM_59":"485415810584555521","PARAM_50":"515118156822347777","PARAM_51":"473612721665867776","PARAM_52":"473503433886793728","PARAM_130":"473549948382609408","PARAM_131":0,"PARAM_114":"463401818576125952","PARAM_115":"514445360546975744","PARAM_112":"480486574191026176","PARAM_113":"479220720316973056","PARAM_118":"495243934444814336","PARAM_119":"471986431431016449","PARAM_116":"472331333985632256","PARAM_117":"524600153961660416","PARAM_42":"473534962767757312","PARAM_43":"479219970929065984","PARAM_44":"471985681850171393","PARAM_45":"489815796164329472","PARAM_46":"495924945906302976","PARAM_47":"463401581010747392","PARAM_48":"482581103912157184","PARAM_49":"498962218231005184","PARAM_40":"515190021716705280","PARAM_41":"501653242430623745","PARAM_121":"481119852547801088","PARAM_122":"478603521634074624","PARAM_120":"479329585788354560"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479218764370411520' , '498473196719185920' , '487568387254255616' , '498474569439387649' , '473227868306931712' , '498962211822108672' , '487559557153816576' , '481749158911279104' , '489077816151769088' , '485560945611898880' , '463400013167329280' , '478688773647892480' , '501390061263130624' , '474157822892834817' , '501653323472965633' , '463429362776014848' , '471666425635799040' , '463400823850795008' , '499940744069382145' , '515117881764085760' , '476673982108532736' , '498809674066296832' , '474159041438810113' , '501072627838746624' , '498472886441353216' , '500338282807173120' , '489922978209857536' , '479219958253879296' , '471623119950315520' , '475686692922064896' , '486485883655032833' , '471653532135587840' , '499939063264968705' , '490638839023411200' , '474158548662616065' , '521282477461864448' , '501072386968256512' , '515190021716705280' , '501653242430623745' , '473534962767757312' , '479219970929065984' , '471985681850171393' , '489815796164329472' , '495924945906302976' , '463401581010747392' , '482581103912157184' , '498962218231005184' , '515118156822347777' , '473612721665867776' , '473503433886793728' , '483567801252978688' , '526446505431666688' , '473733264926834688' , '463397743721709568' , '473612688681861120' , '515118155274649600' , '485415810584555521' , '513733380219600896' , '495244169128706048' , '498780083792642049' , '501072374041411584' , '473534973345792000' , '467361506980265985' , '521281129047654400' , '482865239696605184' , '463399693292929024' , '482877688894193664' , '490909866307620865' , '501072641218576384' , '479959576465113088' , '498779937252048897' , '489424103724285952' , '491206513122086913' , '498472529019543553' , '463401590787670016' , '516603746558414848' , '498963890651004929' , '497513389245857793' , '510887820517179392' , '472023711478710272' , '501073274482987009' , '478598569259962368' , '475955437510852608' , '471986344285962240' , '485395845907230720' , '498809056404701185' , '515190259999309825' , '481749145669861376' , '502170004054085633' , '517689123146829824' , '471653543871250432' , '498971162877886465' , '479956473208635392' , '495244157174939648' , '490908208253112321' , '463399158544334848' , '471622526703763456' , '471974294486777856' , '472358185009676289' , '490920008524763136' , '478625384087158785' , '476660952759009280' , '515109194081239040' , '517689121376833536' , '481749756972892160' , '473036391530364929' , '481068382628610048' , '472331141001510912' , '486485770673065984' , '480486574191026176' , '479220720316973056' , '463401818576125952' , '514445360546975744' , '472331333985632256' , '524600153961660416' , '495243934444814336' , '471986431431016449' , '479329585788354560' , '481119852547801088' , '478603521634074624' , '473771446246572032' , '482864646571687936' , '499954050071007232' , '484680929105674240' , '478585185282031616' , '482581332891795456' , '477956229818220544' , '473549948382609408' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：124ms , start = 1640330792359
┣━ 返回：RcdSet,size=146
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.496 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"510887583488671744","PARAM_31":"489815795505823744","PARAM_32":"495244167178354688","PARAM_33":"482865239109402624","PARAM_34":"479959574523150336","PARAM_35":"480492970060021760","PARAM_36":"479219970283143168","PARAM_37":"480137018328743936","PARAM_38":"486551850187751424","PARAM_30":"498890640633892865","PARAM_28":"521358572748013568","PARAM_29":"471623119124037632","PARAM_20":"473534972766978048","PARAM_21":"501072386309750784","PARAM_22":"501072640497156096","PARAM_23":"473733264192831488","PARAM_24":"471974292850999296","PARAM_25":"495243932481880064","PARAM_26":"472331333301960704","PARAM_27":"485560945016307712","PARAM_17":"515109191736623104","PARAM_18":"481749158206636032","PARAM_19":"471623117999964160","PARAM_97":"474123301828952064","PARAM_10":"482573217517535232","PARAM_98":"463399157952937984","PARAM_11":"474123302428737536","PARAM_99":"480389141578645504","PARAM_12":"485936567093821440","PARAM_13":"479956472495603712","PARAM_14":"478585184673857536","PARAM_15":"487559555773890560","PARAM_16":"471622524862464000","PARAM_90":"478603520921042944","PARAM_91":"477956227867869184","PARAM_92":"463402979890823168","PARAM_93":"495244168478588928","PARAM_94":"463400012525600768","PARAM_95":"482864644558422016","PARAM_96":"479959575810801664","PARAM_86":"501072119862394880","PARAM_87":"489077805410156544","PARAM_88":"487568385933049856","PARAM_89":"489922977547157504","PARAM_80":"492410584894013440","PARAM_81":"489077814461464576","PARAM_82":"482877688223105024","PARAM_83":"515109193246572544","PARAM_84":"471622526116560896","PARAM_85":"471666413560397824","PARAM_103":"479330045333078016","PARAM_104":"479959564469403648","PARAM_101":"514022971866611712","PARAM_102":"501072384963379200","PARAM_107":"523843707472969728","PARAM_108":"483218066432327680","PARAM_105":"473609136769073152","PARAM_106":"480488587389829120","PARAM_75":"481749756356329472","PARAM_76":"484683104078794753","PARAM_77":"511607136254427136","PARAM_109":"479329595586248704","PARAM_78":"477956229193269248","PARAM_79":"463399692735086592","PARAM_70":"507635166470995968","PARAM_71":"478956696207622144","PARAM_72":"476660952100503552","PARAM_73":"472023119704358912","PARAM_74":"484684757343404032","PARAM_9":"463429362113314816","PARAM_8":"472036810977968129","PARAM_7":"476673980116238336","PARAM_6":"495243933782114304","PARAM_5":"463401589349023744","PARAM_110":"480481736321400832","PARAM_4":"472331140393336832","PARAM_111":"463397743117729792","PARAM_3":"463401808295886848","PARAM_2":0,"PARAM_1":0,"PARAM_64":"479388237341655040","PARAM_65":"482581103345926144","PARAM_66":"501416303421030400","PARAM_67":"510887823079899136","PARAM_68":"476679550688821248","PARAM_69":"463401817988923392","PARAM_60":"478688771848536064","PARAM_61":"508300439058382848","PARAM_62":"494904222408507392","PARAM_63":"476673981483581440","PARAM_100":"475686692318085120","PARAM_125":"498778136893194240","PARAM_126":"484681029190156288","PARAM_123":"481749755081261056","PARAM_124":"478688773039718400","PARAM_129":"479220719629107200","PARAM_127":"489077815459708928","PARAM_128":"479956471090511872","PARAM_53":"463401817099730944","PARAM_54":"471666424977293312","PARAM_55":"463401590217244672","PARAM_56":"521358029262684160","PARAM_57":"501072639033344000","PARAM_58":"482865237926608896","PARAM_59":"476319992707547136","PARAM_50":"519151991713169408","PARAM_51":"472023710841176064","PARAM_52":"470155869825269760","PARAM_130":"523843695414345728","PARAM_131":0,"PARAM_114":"463402980524163072","PARAM_115":"489922976217563136","PARAM_112":"481338861507575808","PARAM_113":"478080883799097344","PARAM_118":"482864645908987904","PARAM_119":"463399157072134144","PARAM_116":"471974293945712640","PARAM_117":"471620891906670593","PARAM_42":"476660950745743360","PARAM_43":"479218763728683008","PARAM_44":"482583853127434240","PARAM_45":"463400835502571520","PARAM_46":"463400834823094272","PARAM_47":"482583842985607168","PARAM_48":"481749156772184064","PARAM_49":"482581332237484032","PARAM_40":"490245517545046016","PARAM_41":"471653543221133312","PARAM_121":"479008674094776320","PARAM_122":"473534971609350144","PARAM_120":"486313030599049216"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463401808295886848' , '472331140393336832' , '463401589349023744' , '495243933782114304' , '476673980116238336' , '472036810977968129' , '463429362113314816' , '482573217517535232' , '474123302428737536' , '485936567093821440' , '479956472495603712' , '478585184673857536' , '487559555773890560' , '471622524862464000' , '515109191736623104' , '481749158206636032' , '471623117999964160' , '473534972766978048' , '501072386309750784' , '501072640497156096' , '473733264192831488' , '471974292850999296' , '495243932481880064' , '472331333301960704' , '485560945016307712' , '521358572748013568' , '471623119124037632' , '498890640633892865' , '489815795505823744' , '495244167178354688' , '482865239109402624' , '479959574523150336' , '480492970060021760' , '479219970283143168' , '480137018328743936' , '486551850187751424' , '510887583488671744' , '490245517545046016' , '471653543221133312' , '476660950745743360' , '479218763728683008' , '482583853127434240' , '463400835502571520' , '463400834823094272' , '482583842985607168' , '481749156772184064' , '482581332237484032' , '519151991713169408' , '472023710841176064' , '470155869825269760' , '463401817099730944' , '471666424977293312' , '463401590217244672' , '521358029262684160' , '501072639033344000' , '482865237926608896' , '476319992707547136' , '478688771848536064' , '508300439058382848' , '494904222408507392' , '476673981483581440' , '479388237341655040' , '482581103345926144' , '501416303421030400' , '510887823079899136' , '476679550688821248' , '463401817988923392' , '507635166470995968' , '478956696207622144' , '476660952100503552' , '472023119704358912' , '484684757343404032' , '481749756356329472' , '484683104078794753' , '511607136254427136' , '477956229193269248' , '463399692735086592' , '492410584894013440' , '489077814461464576' , '482877688223105024' , '515109193246572544' , '471622526116560896' , '471666413560397824' , '501072119862394880' , '489077805410156544' , '487568385933049856' , '489922977547157504' , '478603520921042944' , '477956227867869184' , '463402979890823168' , '495244168478588928' , '463400012525600768' , '482864644558422016' , '479959575810801664' , '474123301828952064' , '463399157952937984' , '480389141578645504' , '475686692318085120' , '514022971866611712' , '501072384963379200' , '479330045333078016' , '479959564469403648' , '473609136769073152' , '480488587389829120' , '523843707472969728' , '483218066432327680' , '479329595586248704' , '480481736321400832' , '463397743117729792' , '481338861507575808' , '478080883799097344' , '463402980524163072' , '489922976217563136' , '471974293945712640' , '471620891906670593' , '482864645908987904' , '463399157072134144' , '486313030599049216' , '479008674094776320' , '473534971609350144' , '481749755081261056' , '478688773039718400' , '498778136893194240' , '484681029190156288' , '489077815459708928' , '479956471090511872' , '479220719629107200' , '523843695414345728' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：177ms , start = 1640330792315
┣━ 返回：RcdSet,size=274
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.526 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"515109186632155136","PARAM_31":"479598112373997568","PARAM_32":"485936562941460480","PARAM_33":"472331135444058112","PARAM_34":"479388227191439360","PARAM_35":"479354717013540864","PARAM_36":"481119858512101376","PARAM_37":"472023705464078336","PARAM_38":"479329284624744448","PARAM_30":"498885085060136960","PARAM_28":"473733257758769152","PARAM_29":"474281120842645504","PARAM_20":"482583848937324544","PARAM_21":"473503437766524928","PARAM_22":"498885082019266560","PARAM_23":"485888535333699584","PARAM_24":"480377919596658688","PARAM_25":"480137007910092800","PARAM_26":"484684753241374720","PARAM_27":"473733255862943744","PARAM_17":"get-current-user","PARAM_18":"463400830083530752","PARAM_19":"478080879135031296","PARAM_97":"521359008745914368","PARAM_10":"519151990324854784","PARAM_98":"494597318092259328","PARAM_11":"494904448682819584","PARAM_99":"494904212736442368","PARAM_12":"521358027220058112","PARAM_13":"485747530676568064","PARAM_14":"481119856855351296","PARAM_15":"477956223535153152","PARAM_16":"478585179489697792","PARAM_90":"471974289361338368","PARAM_91":"471986331946319872","PARAM_92":"489901521874452480","PARAM_93":"501074104456052736","PARAM_94":"498769910416015360","PARAM_95":"507635145327509504","PARAM_96":"472818410917462016","PARAM_86":"521358028428017664","PARAM_87":"484683937952563200","PARAM_88":"488696593290100736","PARAM_89":"521358569501622272","PARAM_80":"501416295116308480","PARAM_81":"480389137287872512","PARAM_82":"484680991584026624","PARAM_83":"504682762972704768","PARAM_84":"478585173638643712","PARAM_85":"473771451304902656","PARAM_103":"487559544579293184","PARAM_104":"475954742317547520","PARAM_101":"482581324939395072","PARAM_102":"483218062279966720","PARAM_107":"485888533777612800","PARAM_108":"487568374700703744","PARAM_105":"477952348665151488","PARAM_106":"478585177820364800","PARAM_75":"480488583120027648","PARAM_76":"489901519739551744","PARAM_77":"485888529902075904","PARAM_109":"463400828363866112","PARAM_78":"488696589599113216","PARAM_79":"479956466397085696","PARAM_70":"479388229263425536","PARAM_71":"463399688926658560","PARAM_72":"478603513186746368","PARAM_73":"472819784346501121","PARAM_74":"473550018758836225","PARAM_9":"494597323653906432","PARAM_8":"489077810774671360","PARAM_7":"471622520550719488","PARAM_6":"489922971863875584","PARAM_5":"481068388223811584","PARAM_110":"472811438801420289","PARAM_4":"471974287931080704","PARAM_111":"472331327836782592","PARAM_3":"501072114866978816","PARAM_2":0,"PARAM_1":0,"PARAM_64":"471620638545543168","PARAM_65":"474281122537144320","PARAM_66":"479219962657898496","PARAM_67":"480377913779159040","PARAM_68":"472037131183718400","PARAM_69":"473503439284862976","PARAM_60":"463429350570590208","PARAM_61":"472819614665932801","PARAM_62":"479218756208295936","PARAM_63":"489815789730267136","PARAM_100":"464788444141322240","PARAM_125":"521358825685516288","PARAM_126":"472358699843715073","PARAM_123":"489815783782744064","PARAM_124":"521359009299562496","PARAM_129":"471653537873395712","PARAM_127":"482877682514657280","PARAM_128":"471666419482755072","PARAM_53":"479220712784003072","PARAM_54":"477952350720360448","PARAM_55":"487568371366232064","PARAM_56":"481563568920068096","PARAM_57":"463399153808965632","PARAM_58":"479218757961515008","PARAM_59":"463429355423399936","PARAM_50":"473733250888499200","PARAM_51":"463397738055204864","PARAM_52":"463397736541061120","PARAM_130":"463400007958003712","PARAM_131":0,"PARAM_114":"478956689802919936","PARAM_115":"482581098463756288","PARAM_112":"471623107698753536","PARAM_113":"474123296653180928","PARAM_118":"463429357021429760","PARAM_119":"484684751630761984","PARAM_116":"494904454114443264","PARAM_117":"481563570933334016","PARAM_42":"510887581764812800","PARAM_43":"482581326621310976","PARAM_44":"479008663990697984","PARAM_45":"473771453230088192","PARAM_46":"479219964406923264","PARAM_47":"475686686903238656","PARAM_48":"510887582259740672","PARAM_49":"478603514990297088","PARAM_40":"478956691585499136","PARAM_41":"475954740530774016","PARAM_121":"490924383968169985","PARAM_122":"479329291742478336","PARAM_120":"501074102618947584"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501072114866978816' , '471974287931080704' , '481068388223811584' , '489922971863875584' , '471622520550719488' , '489077810774671360' , '494597323653906432' , '519151990324854784' , '494904448682819584' , '521358027220058112' , '485747530676568064' , '481119856855351296' , '477956223535153152' , '478585179489697792' , 'get-current-user' , '463400830083530752' , '478080879135031296' , '482583848937324544' , '473503437766524928' , '498885082019266560' , '485888535333699584' , '480377919596658688' , '480137007910092800' , '484684753241374720' , '473733255862943744' , '473733257758769152' , '474281120842645504' , '498885085060136960' , '479598112373997568' , '485936562941460480' , '472331135444058112' , '479388227191439360' , '479354717013540864' , '481119858512101376' , '472023705464078336' , '479329284624744448' , '515109186632155136' , '478956691585499136' , '475954740530774016' , '510887581764812800' , '482581326621310976' , '479008663990697984' , '473771453230088192' , '479219964406923264' , '475686686903238656' , '510887582259740672' , '478603514990297088' , '473733250888499200' , '463397738055204864' , '463397736541061120' , '479220712784003072' , '477952350720360448' , '487568371366232064' , '481563568920068096' , '463399153808965632' , '479218757961515008' , '463429355423399936' , '463429350570590208' , '472819614665932801' , '479218756208295936' , '489815789730267136' , '471620638545543168' , '474281122537144320' , '479219962657898496' , '480377913779159040' , '472037131183718400' , '473503439284862976' , '479388229263425536' , '463399688926658560' , '478603513186746368' , '472819784346501121' , '473550018758836225' , '480488583120027648' , '489901519739551744' , '485888529902075904' , '488696589599113216' , '479956466397085696' , '501416295116308480' , '480389137287872512' , '484680991584026624' , '504682762972704768' , '478585173638643712' , '473771451304902656' , '521358028428017664' , '484683937952563200' , '488696593290100736' , '521358569501622272' , '471974289361338368' , '471986331946319872' , '489901521874452480' , '501074104456052736' , '498769910416015360' , '507635145327509504' , '472818410917462016' , '521359008745914368' , '494597318092259328' , '494904212736442368' , '464788444141322240' , '482581324939395072' , '483218062279966720' , '487559544579293184' , '475954742317547520' , '477952348665151488' , '478585177820364800' , '485888533777612800' , '487568374700703744' , '463400828363866112' , '472811438801420289' , '472331327836782592' , '471623107698753536' , '474123296653180928' , '478956689802919936' , '482581098463756288' , '494904454114443264' , '481563570933334016' , '463429357021429760' , '484684751630761984' , '501074102618947584' , '490924383968169985' , '479329291742478336' , '489815783782744064' , '521359009299562496' , '521358825685516288' , '472358699843715073' , '482877682514657280' , '471666419482755072' , '471653537873395712' , '463400007958003712' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：165ms , start = 1640330792360
┣━ 返回：RcdSet,size=160
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.526 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_menu_resource","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_menu_resource'
┣ 结果： 
┣━ 耗时：50ms , start = 1640330792476
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.552 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"464828186346127361","PARAM_31":"498472737438703616","PARAM_32":"521282330438926337","PARAM_33":"498780101593268225","PARAM_34":"498963858317115392","PARAM_35":"515117880593874945","PARAM_36":"501653361645326336","PARAM_37":"501653278359031809","PARAM_38":"498963857323065345","PARAM_30":"501653165884575744","PARAM_28":"472814706734661633","PARAM_29":"490909222070915073","PARAM_20":"525222910407737344","PARAM_21":"497513282840559617","PARAM_22":"498780063144083457","PARAM_23":"490920319637262337","PARAM_24":"498472430189158400","PARAM_25":"498808937571680257","PARAM_26":"485819338599706624","PARAM_27":"498780092948807681","PARAM_17":"490925002938388480","PARAM_18":"499939051860656128","PARAM_19":"485415687787917312","PARAM_97":"514445388736892928","PARAM_10":"521281126673678336","PARAM_98":"521281127378321409","PARAM_11":"497490986344120320","PARAM_99":"525268291409674240","PARAM_12":"464827069453303809","PARAM_13":"521281128124907521","PARAM_14":"517689118029778944","PARAM_15":"516602639874527232","PARAM_16":"514445387440852993","PARAM_90":"501424056243851264","PARAM_91":"498963847839744001","PARAM_92":"486485877028032513","PARAM_93":"491342702357512192","PARAM_94":"498963895084384257","PARAM_95":"463779102176837633","PARAM_96":"490915625305116672","PARAM_86":"515190045229973505","PARAM_87":"498963844891148289","PARAM_88":"503188930321977344","PARAM_89":"517689122060505089","PARAM_80":"504683060067840001","PARAM_81":"465893287996162048","PARAM_82":"497513348733075457","PARAM_83":"486487652200091649","PARAM_84":"463779099165327360","PARAM_85":"498963891439534081","PARAM_103":"474158954033709056","PARAM_104":"498970914482814977","PARAM_101":"497513458128912385","PARAM_102":"499940736691601409","PARAM_107":"521282329352601600","PARAM_108":"496813531019083776","PARAM_105":"499939054448541696","PARAM_106":"491206464543657984","PARAM_75":"498473113529360385","PARAM_76":"499954026838757376","PARAM_77":"499954055192252417","PARAM_109":"499939072068812801","PARAM_78":"515190259152060416","PARAM_79":"501653226060255233","PARAM_70":"504060697101996032","PARAM_71":"515117882481311744","PARAM_72":"515120996273881089","PARAM_73":"464827137099038721","PARAM_74":"498809287695400961","PARAM_9":"497513009569071104","PARAM_8":"498971349855764481","PARAM_7":"499954030739460097","PARAM_6":"502170156177297409","PARAM_5":"478626411003772928","PARAM_110":"521282334683561984","PARAM_4":"514445384425148416","PARAM_111":"515190044768600064","PARAM_3":"504412977160523776","PARAM_2":0,"PARAM_1":0,"PARAM_64":"498472318377402368","PARAM_65":"498809154048098304","PARAM_66":"498963856643588097","PARAM_67":"464827257593004033","PARAM_68":"498963846124273665","PARAM_69":"478625404161097728","PARAM_60":"499954038733803521","PARAM_61":"490907983723630592","PARAM_62":"498970926130397185","PARAM_63":"515190262654304256","PARAM_100":"515120913977442304","PARAM_53":"499954049295060993","PARAM_54":"478598694187307009","PARAM_55":"478625395923484673","PARAM_56":"515190261375041536","PARAM_57":"497513204994277377","PARAM_58":"515190041257967617","PARAM_59":"498809237418278912","PARAM_50":"515119470813904896","PARAM_51":"526446579532435456","PARAM_52":"498474299326210049","PARAM_114":"499939062635823104","PARAM_115":"516603899361103872","PARAM_112":"521281129953624065","PARAM_113":"472811546343374849","PARAM_118":"474158850757361665","PARAM_119":0,"PARAM_116":"499939072706347008","PARAM_117":"498582106398523393","PARAM_42":"515118156595855360","PARAM_43":"514445388166467584","PARAM_44":"498962214124781568","PARAM_45":"515119470113456128","PARAM_46":"498809191108968448","PARAM_47":"498808864725008384","PARAM_48":"498472974811144192","PARAM_49":"490908428638621696","PARAM_40":"499940724104495105","PARAM_41":"497514241515847681"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '504412977160523776' , '514445384425148416' , '478626411003772928' , '502170156177297409' , '499954030739460097' , '498971349855764481' , '497513009569071104' , '521281126673678336' , '497490986344120320' , '464827069453303809' , '521281128124907521' , '517689118029778944' , '516602639874527232' , '514445387440852993' , '490925002938388480' , '499939051860656128' , '485415687787917312' , '525222910407737344' , '497513282840559617' , '498780063144083457' , '490920319637262337' , '498472430189158400' , '498808937571680257' , '485819338599706624' , '498780092948807681' , '472814706734661633' , '490909222070915073' , '501653165884575744' , '498472737438703616' , '521282330438926337' , '498780101593268225' , '498963858317115392' , '515117880593874945' , '501653361645326336' , '501653278359031809' , '498963857323065345' , '464828186346127361' , '499940724104495105' , '497514241515847681' , '515118156595855360' , '514445388166467584' , '498962214124781568' , '515119470113456128' , '498809191108968448' , '498808864725008384' , '498472974811144192' , '490908428638621696' , '515119470813904896' , '526446579532435456' , '498474299326210049' , '499954049295060993' , '478598694187307009' , '478625395923484673' , '515190261375041536' , '497513204994277377' , '515190041257967617' , '498809237418278912' , '499954038733803521' , '490907983723630592' , '498970926130397185' , '515190262654304256' , '498472318377402368' , '498809154048098304' , '498963856643588097' , '464827257593004033' , '498963846124273665' , '478625404161097728' , '504060697101996032' , '515117882481311744' , '515120996273881089' , '464827137099038721' , '498809287695400961' , '498473113529360385' , '499954026838757376' , '499954055192252417' , '515190259152060416' , '501653226060255233' , '504683060067840001' , '465893287996162048' , '497513348733075457' , '486487652200091649' , '463779099165327360' , '498963891439534081' , '515190045229973505' , '498963844891148289' , '503188930321977344' , '517689122060505089' , '501424056243851264' , '498963847839744001' , '486485877028032513' , '491342702357512192' , '498963895084384257' , '463779102176837633' , '490915625305116672' , '514445388736892928' , '521281127378321409' , '525268291409674240' , '515120913977442304' , '497513458128912385' , '499940736691601409' , '474158954033709056' , '498970914482814977' , '499939054448541696' , '491206464543657984' , '521282329352601600' , '496813531019083776' , '499939072068812801' , '521282334683561984' , '515190044768600064' , '521281129953624065' , '472811546343374849' , '499939062635823104' , '516603899361103872' , '499939072706347008' , '498582106398523393' , '474158850757361665' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：73ms , start = 1640330792478
┣━ 返回：RcdSet,size=142
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.591 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"510887582641422336","PARAM_31":"517640838537281536","PARAM_32":"501072115496124416","PARAM_33":"480389131239686144","PARAM_34":"473733259285495808","PARAM_35":"482583849616801792","PARAM_36":"473609126128123904","PARAM_37":"473733258505355264","PARAM_38":"482581327279816704","PARAM_30":"482581099034181632","PARAM_28":"478956693149974528","PARAM_29":"463429357977731072","PARAM_20":"482581327950905344","PARAM_21":"463399154698158080","PARAM_22":"482581093229264896","PARAM_23":"488696594527420416","PARAM_24":"481563572455866368","PARAM_25":"474123297894694912","PARAM_26":"484681008940056576","PARAM_27":"492410574299201536","PARAM_17":"485936563683852288","PARAM_18":"486313018553008128","PARAM_19":"481749153626456064","PARAM_97":"472331321801179136","PARAM_10":"463397133957988354","PARAM_98":"472331328520454144","PARAM_11":"485888535908319232","PARAM_99":"494597324215943168","PARAM_12":"476679541226471424","PARAM_13":"479218759370801152","PARAM_14":"480488583736590336","PARAM_15":"473771454769397760","PARAM_16":"479956467907035136","PARAM_90":"463397738646601728","PARAM_91":"478956692394999808","PARAM_92":"475954743139631104","PARAM_93":"477956224856358912","PARAM_94":"479388230924369920","PARAM_95":"489815791064055808","PARAM_96":"463400831098552320","PARAM_86":"471622521137922048","PARAM_87":"464788438315433984","PARAM_88":"476660947629375488","PARAM_89":"481119859145441280","PARAM_80":"474281123879321600","PARAM_81":"482583850279501824","PARAM_82":"484684753866326016","PARAM_83":"501416296345239552","PARAM_84":"479329592423743488","PARAM_85":"hrm","PARAM_103":"515109188150493184","PARAM_104":"478603516361834496","PARAM_101":"507635160540250112","PARAM_102":"479008671368478720","PARAM_107":"478585180710240256","PARAM_108":"471622521846759424","PARAM_105":"498885087492833280","PARAM_106":"463399689467723776","PARAM_75":"477952351441780736","PARAM_76":"498770254759985153","PARAM_77":"479329292388401152","PARAM_109":"501389817515347968","PARAM_78":"479218758599049216","PARAM_79":"510887580523298816","PARAM_70":"473771454031200256","PARAM_71":"489922973222830080","PARAM_72":"471985490283724800","PARAM_73":"480488584403484672","PARAM_74":"489901522558124032","PARAM_9":"463399154400362496","PARAM_8":"473503440530571264","PARAM_7":"477956224147521536","PARAM_6":"480389138625855488","PARAM_5":"485936564371718144","PARAM_110":"471623115152031744","PARAM_4":"478080879852257280","PARAM_111":"486551839387418624","PARAM_3":"479329592994168832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"485888536512299008","PARAM_65":"481563571654754304","PARAM_66":"479220706257666048","PARAM_67":"484684754508054528","PARAM_68":"487568375958994944","PARAM_69":"489901523275350016","PARAM_60":"498885086280679424","PARAM_61":"481749152917618688","PARAM_62":"478080880531734528","PARAM_63":"480377920209027072","PARAM_100":"481119859787169792","PARAM_125":"521359009509277696","PARAM_126":"488696595773128704","PARAM_123":"479598113124777984","PARAM_124":"501072381725376512","PARAM_129":"474281123241787392","PARAM_127":"481068388831985664","PARAM_128":"479956467156254720","PARAM_53":"501074105877921792","PARAM_54":"482864641542717440","PARAM_55":"464788444783050752","PARAM_56":"463397739233804288","PARAM_57":"489077811793887232","PARAM_58":"478603515636219904","PARAM_59":"463400830758813696","PARAM_50":"489922972543352832","PARAM_51":"473503439867871232","PARAM_52":"521359009735770112","PARAM_130":"501416297607725056","PARAM_131":0,"PARAM_114":"492410581827977216","PARAM_115":"463400008603926528","PARAM_112":"521358028679675904","PARAM_113":"482877676386779136","PARAM_118":"484681000786329600","PARAM_119":"519151990534569984","PARAM_116":"501072116167213056","PARAM_117":"471974289902403584","PARAM_42":"473609133728202752","PARAM_43":"479388230056148992","PARAM_44":"474281113531973632","PARAM_45":"463429357650575360","PARAM_46":"478585180114649088","PARAM_47":"510887582448484352","PARAM_48":"480389137958961152","PARAM_49":"521358028549652480","PARAM_40":"510887822354284544","PARAM_41":"489077811454148608","PARAM_121":"474123297290715136","PARAM_122":"519151990744285184","PARAM_120":"501074105164890112"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479329592994168832' , '478080879852257280' , '485936564371718144' , '480389138625855488' , '477956224147521536' , '473503440530571264' , '463399154400362496' , '463397133957988354' , '485888535908319232' , '476679541226471424' , '479218759370801152' , '480488583736590336' , '473771454769397760' , '479956467907035136' , '485936563683852288' , '486313018553008128' , '481749153626456064' , '482581327950905344' , '463399154698158080' , '482581093229264896' , '488696594527420416' , '481563572455866368' , '474123297894694912' , '484681008940056576' , '492410574299201536' , '478956693149974528' , '463429357977731072' , '482581099034181632' , '517640838537281536' , '501072115496124416' , '480389131239686144' , '473733259285495808' , '482583849616801792' , '473609126128123904' , '473733258505355264' , '482581327279816704' , '510887582641422336' , '510887822354284544' , '489077811454148608' , '473609133728202752' , '479388230056148992' , '474281113531973632' , '463429357650575360' , '478585180114649088' , '510887582448484352' , '480389137958961152' , '521358028549652480' , '489922972543352832' , '473503439867871232' , '521359009735770112' , '501074105877921792' , '482864641542717440' , '464788444783050752' , '463397739233804288' , '489077811793887232' , '478603515636219904' , '463400830758813696' , '498885086280679424' , '481749152917618688' , '478080880531734528' , '480377920209027072' , '485888536512299008' , '481563571654754304' , '479220706257666048' , '484684754508054528' , '487568375958994944' , '489901523275350016' , '473771454031200256' , '489922973222830080' , '471985490283724800' , '480488584403484672' , '489901522558124032' , '477952351441780736' , '498770254759985153' , '479329292388401152' , '479218758599049216' , '510887580523298816' , '474281123879321600' , '482583850279501824' , '484684753866326016' , '501416296345239552' , '479329592423743488' , 'hrm' , '471622521137922048' , '464788438315433984' , '476660947629375488' , '481119859145441280' , '463397738646601728' , '478956692394999808' , '475954743139631104' , '477956224856358912' , '479388230924369920' , '489815791064055808' , '463400831098552320' , '472331321801179136' , '472331328520454144' , '494597324215943168' , '481119859787169792' , '507635160540250112' , '479008671368478720' , '515109188150493184' , '478603516361834496' , '498885087492833280' , '463399689467723776' , '478585180710240256' , '471622521846759424' , '501389817515347968' , '471623115152031744' , '486551839387418624' , '521358028679675904' , '482877676386779136' , '492410581827977216' , '463400008603926528' , '501072116167213056' , '471974289902403584' , '484681000786329600' , '519151990534569984' , '501074105164890112' , '474123297290715136' , '519151990744285184' , '479598113124777984' , '501072381725376512' , '521359009509277696' , '488696595773128704' , '481068388831985664' , '479956467156254720' , '474281123241787392' , '501416297607725056' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：60ms , start = 1640330792530
┣━ 返回：RcdSet,size=109
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:26:32.649 [ForkJoinPool-2-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_company","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_company'
┣ 结果： 
┣━ 耗时：47ms , start = 1640330792601
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.688 [ForkJoinPool-2-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"002"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '002' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640330792653
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 

15:26:32.691 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_organization","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_organization'
┣ 结果： 
┣━ 耗时：39ms , start = 1640330792651
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.747 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_person","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_person'
┣ 结果： 
┣━ 耗时：50ms , start = 1640330792696
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.802 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"P001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'P001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640330792750
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

15:26:32.802 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_position'
┣ 结果： 
┣━ 耗时：53ms , start = 1640330792749
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.881 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_busi_role","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_busi_role'
┣ 结果： 
┣━ 耗时：76ms , start = 1640330792805
┣━ 返回：RcdSet,size=13
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.925 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_employee_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_employee_position'
┣ 结果： 
┣━ 耗时：41ms , start = 1640330792883
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:32.968 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"E001","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( 'E001' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640330792928
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 

15:26:32.972 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"hrm_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'hrm_position'
┣ 结果： 
┣━ 耗时：44ms , start = 1640330792928
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:33.043 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_busi_role_member","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_busi_role_member'
┣ 结果： 
┣━ 耗时：65ms , start = 1640330792977
┣━ 返回：RcdSet,size=6
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:33.046 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( valid=1) AND ( deleted= ? ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( ? ) AND t_2.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_5":0,"PARAM_4":"E001","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( valid=1) AND ( deleted= 0 ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( 'E001' ) AND t_2.deleted= 0
┣ 结果： 
┣━ 耗时：67ms , start = 1640330792977
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 

15:26:33.097 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = ? ) AND ( member_type = ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"E001","PARAM_3":"employee","PARAM_2":"employee"}
┣ 执行：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = 'employee' ) AND ( member_type = 'employee' ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：47ms , start = 1640330793049
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 

15:26:33.101 [XNIO-1 task-2] - [] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 2268ms
15:26:33.143 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640330793103
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:33.203 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640330793147
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:33.237 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640330793204
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:26:33.403 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 
┣ 语句：UPDATE sys_user SET last_login_time = ? WHERE id = ?
┣ 参数：{"PARAM_1":1640330793354,"PARAM_2":"110588348101165911"}
┣ 执行：UPDATE sys_user SET last_login_time = str_to_date('2021-12-24 15:26:33','%Y-%m-%d %H:%i:%s') WHERE id = '110588348101165911'
┣ 结果： 
┣━ 耗时：46ms , start = 1640330793355
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.update(UserServiceImpl.java:202)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.setupAuthentication(LoginSuccessHandler.java:84)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:127)
┣ TID：null
┗━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 

15:26:33.446 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_session_online","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_session_online'
┣ 结果： 
┣━ 耗时：40ms , start = 1640330793404
┣━ 返回：RcdSet,size=19
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.setupAuthentication(LoginSuccessHandler.java:91)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:127)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:33.498 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_session_online WHERE id = ?
┣ 参数：{"PARAM_1":"6hsNKCyMzCCGuTWvmAJkJw0C1rvQxM5Ru0E0BqAo"}
┣ 执行：select * from sys_session_online WHERE id = '6hsNKCyMzCCGuTWvmAJkJw0C1rvQxM5Ru0E0BqAo'
┣ 结果： 
┣━ 耗时：44ms , start = 1640330793453
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.setupAuthentication(LoginSuccessHandler.java:91)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:127)
┣ TID：null
┗━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 

15:26:33.553 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 
┣ 语句：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"6hsNKCyMzCCGuTWvmAJkJw0C1rvQxM5Ru0E0BqAo","PARAM_9":"df-ce62104b46-5d9b","PARAM_8":"D7B67D75818C671B","PARAM_10":"110588348101165911","PARAM_7":1,"PARAM_11":1640330793504,"PARAM_6":12000,"PARAM_12":1,"PARAM_5":1640330793499,"PARAM_4":1640330793499,"PARAM_3":"110588348101165911","PARAM_2":"HlpHXX78p_BEsnN2mu-YiNtYW_OLzRdQfhBcEP_6"}
┣ 执行：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( '6hsNKCyMzCCGuTWvmAJkJw0C1rvQxM5Ru0E0BqAo' , 'HlpHXX78p_BEsnN2mu-YiNtYW_OLzRdQfhBcEP_6' , '110588348101165911' , str_to_date('2021-12-24 15:26:33','%Y-%m-%d %H:%i:%s') , str_to_date('2021-12-24 15:26:33','%Y-%m-%d %H:%i:%s') , 12000 , 1 , 'D7B67D75818C671B' , 'df-ce62104b46-5d9b' , '110588348101165911' , str_to_date('2021-12-24 15:26:33','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：48ms , start = 1640330793504
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.insert(SessionOnlineServiceImpl.java:74)
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 

15:26:33.668 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_token","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_token'
┣ 结果： 
┣━ 耗时：58ms , start = 1640330793609
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:33.733 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 
┣ 语句：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526782745213407232","PARAM_9":0,"PARAM_8":1640332793590,"PARAM_10":"110588348101165911","PARAM_7":0,"PARAM_11":1640330793671,"PARAM_6":1640332593554,"PARAM_12":1,"PARAM_5":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTU6NTk6NTMiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjI2OjMzIiwianRpIjoiYmVmMTczZDctYzg2Ny00MThiLWFjYjQtZjJjNTRiMDEzN2I0In0.VIHyS27NRnvSv4WDIHjKJORKHsqscECwLj7IPULL7vDCB6qCbFOpV5mYW-hLYaVaT1cmV3EnRXMq3vdEuW2Zm9dlvKbQED1qqTY-BLVULZ_KMk3i2ixk9j35X2qKSQEP4cKtznXe-T6OE0K3GSaP9UpPtZFmde9kGdFkily2ONzLNNgPeOHwK3kG8jXzgOL_QRIkgQ9kVGcbpbnzGTjSal3R5GK1WN2BVmq8w55gc_9CQqeANaKsut3FRUNuc_O-4vSkQPWRNI13sukceeeUi7LWvOHQGtleap2zWo6230tTJYl-Zr8C7zqT7QKLZrFSiz6TnhlYvUUju0rIDEo49A","PARAM_4":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTU6NTY6MzMiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjI2OjMzIiwianRpIjoiYmVmMTczZDctYzg2Ny00MThiLWFjYjQtZjJjNTRiMDEzN2I0In0.d2A81HoNhSfzewvTvfjCIBfVUUOHXacHlea-Z0jbf30LWe3q45x4OfldoXaGMk2xTLHiA95AutgW9JzOSXkngCYf-iRLDFaiFNNa0Wi3Rz0ePBmMsEUXwFjca8akJbykYSX-DPxaTvc69BtgTQTwKOyt5F7hUzPiRcHvHCaNZwtNwlmH_DspFTizdNI35niM0dIjw7tIa8GBsfZb8_91bPQcApd0wcKAy-ffii7aXLZSLh8utAuQBx6tv1VlrKned6Gcw8dQCZT7yziFqidsFj2h8ghUHDTmYRE3xLvefs6_7rHKm0Ti-HomZWwKXBstSoEd7GpWLNOI9olgioDIsw","PARAM_3":"bef173d7-c867-418b-acb4-f2c54b0137b4","PARAM_2":"110588348101165911"}
┣ 执行：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( '526782745213407232' , '110588348101165911' , 'bef173d7-c867-418b-acb4-f2c54b0137b4' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTU6NTY6MzMiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjI2OjMzIiwianRpIjoiYmVmMTczZDctYzg2Ny00MThiLWFjYjQtZjJjNTRiMDEzN2I0In0.d2A81HoNhSfzewvTvfjCIBfVUUOHXacHlea-Z0jbf30LWe3q45x4OfldoXaGMk2xTLHiA95AutgW9JzOSXkngCYf-iRLDFaiFNNa0Wi3Rz0ePBmMsEUXwFjca8akJbykYSX-DPxaTvc69BtgTQTwKOyt5F7hUzPiRcHvHCaNZwtNwlmH_DspFTizdNI35niM0dIjw7tIa8GBsfZb8_91bPQcApd0wcKAy-ffii7aXLZSLh8utAuQBx6tv1VlrKned6Gcw8dQCZT7yziFqidsFj2h8ghUHDTmYRE3xLvefs6_7rHKm0Ti-HomZWwKXBstSoEd7GpWLNOI9olgioDIsw' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTU6NTk6NTMiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjI2OjMzIiwianRpIjoiYmVmMTczZDctYzg2Ny00MThiLWFjYjQtZjJjNTRiMDEzN2I0In0.VIHyS27NRnvSv4WDIHjKJORKHsqscECwLj7IPULL7vDCB6qCbFOpV5mYW-hLYaVaT1cmV3EnRXMq3vdEuW2Zm9dlvKbQED1qqTY-BLVULZ_KMk3i2ixk9j35X2qKSQEP4cKtznXe-T6OE0K3GSaP9UpPtZFmde9kGdFkily2ONzLNNgPeOHwK3kG8jXzgOL_QRIkgQ9kVGcbpbnzGTjSal3R5GK1WN2BVmq8w55gc_9CQqeANaKsut3FRUNuc_O-4vSkQPWRNI13sukceeeUi7LWvOHQGtleap2zWo6230tTJYl-Zr8C7zqT7QKLZrFSiz6TnhlYvUUju0rIDEo49A' , str_to_date('2021-12-24 15:56:33','%Y-%m-%d %H:%i:%s') , 0 , str_to_date('2021-12-24 15:59:53','%Y-%m-%d %H:%i:%s') , 0 , '110588348101165911' , str_to_date('2021-12-24 15:26:33','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：60ms , start = 1640330793671
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：null
┗━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 

15:26:34.354 [XNIO-1 task-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 
┣ 语句：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= ?
┣ 参数：{"PARAM_1":0}
┣ 执行：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：211ms , start = 1640330794143
┣━ 返回：RcdSet,size=1743
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:195)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:180)
    org.github.foxnic.web.oauth.service.impl.ResourzeServiceImpl.getMatchd(ResourzeServiceImpl.java:293)
┣ TID：null
┗━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 

15:26:34.462 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_lang","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_lang'
┣ 结果： 
┣━ 耗时：56ms , start = 1640330794404
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:34.570 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：97ms , start = 1640330794472
┣━ 返回：RcdSet,size=1390
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：526782748518518784
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

15:26:34.918 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640330794875
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:34.963 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330794919
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.001 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640330794964
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.043 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640330795002
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.083 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640330795046
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:26:35.129 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.index.logo"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.index.logo' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330795084
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.168 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640330795130
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.209 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330795169
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.259 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640330795210
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.303 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640330795262
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:26:35.343 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640330795304
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.394 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640330795345
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.444 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640330795398
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:26:35.509 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640330795449
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.552 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640330795511
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.589 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640330795553
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:26:35.631 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640330795591
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.683 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640330795633
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.724 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.ui.table.pageLevels","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330795684
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:26:35.787 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640330795726
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.827 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640330795788
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:26:35.868 [XNIO-1 task-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.portal.module.enable","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640330795828
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：null
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:26:36.711 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_file","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_file'
┣ 结果： 
┣━ 耗时：46ms , start = 1640330796663
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.download(FileController.java:99)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:26:36.766 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"465814972102868992"}
┣ 执行：select * from sys_file WHERE id = '465814972102868992'
┣ 结果： 
┣━ 耗时：43ms , start = 1640330796721
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.download(FileController.java:99)
┣ TID：526782757846650880
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:26:36.829 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640330796771}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:26:36','%Y-%m-%d %H:%i:%s') WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：53ms , start = 1640330796772
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526782757846650880
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:26:36.882 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640330796830}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:26:36','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：51ms , start = 1640330796830
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526782757846650880
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:26:36.883 [XNIO-1 task-1] - [526782757846650880] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210709/465814972098674688.jpg
15:27:32.672 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640330852615
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526782757846650880
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:32.739 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640330852678
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526782757846650880
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:32.816 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640330852745
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526782757846650880
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:32.888 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640330852818
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526782757846650880
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:32.930 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：31ms , start = 1640330852895
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526782757846650880
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:27:33.050 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据权限规则","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据权限规则' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640330853005
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.134 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640330853067
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526782748518518784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:33.142 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"代码","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '代码' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：70ms , start = 1640330853064
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.188 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640330853135
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526782748518518784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:33.210 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"名称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '名称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1640330853147
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.266 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"有效","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '有效' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640330853225
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.280 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：89ms , start = 1640330853190
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526782748518518784
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:27:33.307 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：36ms , start = 1640330853268
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.343 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640330853301
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.361 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"搜索","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '搜索' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：43ms , start = 1640330853316
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.398 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"搜索","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '搜索' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1640330853347
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.461 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"新建","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '新建' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：48ms , start = 1640330853398
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.463 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"新建","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '新建' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：50ms , start = 1640330853411
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.508 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：26ms , start = 1640330853479
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.522 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1640330853478
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.590 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"查看","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '查看' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：55ms , start = 1640330853526
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.593 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"查看","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '查看' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：68ms , start = 1640330853516
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.642 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：38ms , start = 1640330853596
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.646 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640330853596
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.705 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"范围","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '范围' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：53ms , start = 1640330853649
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.708 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"范围","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '范围' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：53ms , start = 1640330853650
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.761 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"应用","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '应用' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1640330853712
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.761 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"应用","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '应用' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：48ms , start = 1640330853711
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:33.842 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_db_cache","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_db_cache'
┣ 结果： 
┣━ 耗时：42ms , start = 1640330853798
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：526782757846650880
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:27:33.900 [XNIO-1 task-1] - [526782757846650880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/dataperm/rule/rule_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/dataperm/rule/rule_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：48ms , start = 1640330853851
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526782757846650880
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:27:33.900 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_db_cache","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_db_cache'
┣ 结果： 
┣━ 耗时：48ms , start = 1640330853851
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：526782748518518784
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:27:33.963 [XNIO-1 task-2] - [526782748518518784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/dataperm/rule/rule_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/dataperm/rule/rule_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：47ms , start = 1640330853914
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526782748518518784
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:27:35.089 [XNIO-1 task-1] - [526783002831753216] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select 1 from sys_lang WHERE defaults = :PARAM_1 AND deleted =... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select 1 from sys_lang WHERE defaults = ? AND deleted = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"PO类型","PARAM_4":1,"PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select 1 from sys_lang WHERE defaults = 'PO类型' AND deleted = 0 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1640330855032
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.checkExists(SuperService.java:1353)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.insert(LangServiceImpl.java:80)
    org.github.foxnic.web.system.controller.LangController.insert(LangController.java:78)
┣ TID：526783002831753216
┗━━━━━ SQL [ SELECT * FROM ( select 1 from sys_lang WHERE defaults = :PARAM_1 AND deleted =... ] ━━━━━ 

15:27:35.485 [XNIO-1 task-2] - [526783004551417856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select 1 from sys_lang WHERE defaults = :PARAM_1 AND deleted =... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select 1 from sys_lang WHERE defaults = ? AND deleted = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"PO类型","PARAM_4":1,"PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select 1 from sys_lang WHERE defaults = 'PO类型' AND deleted = 0 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：42ms , start = 1640330855442
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.checkExists(SuperService.java:1353)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.insert(LangServiceImpl.java:80)
    org.github.foxnic.web.system.controller.LangController.insert(LangController.java:78)
┣ TID：526783004551417856
┗━━━━━ SQL [ SELECT * FROM ( select 1 from sys_lang WHERE defaults = :PARAM_1 AND deleted =... ] ━━━━━ 

15:27:35.522 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM dp_rule t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM dp_rule t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM dp_rule t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：40ms , start = 1640330855480
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783004387840000
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM dp_rule t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 

15:27:35.561 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 )) ORD... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from dp_rule t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from dp_rule t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：36ms , start = 1640330855523
┣━ 返回：RcdSet,size=23
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783004387840000
┗━━━━━ SQL [ SELECT * FROM ( select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 )) ORD... ] ━━━━━ 

15:27:35.589 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 0ms
15:27:35.624 [XNIO-1 task-3] - [526783005000208384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM dp_rule t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM dp_rule t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM dp_rule t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：60ms , start = 1640330855554
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783005000208384
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM dp_rule t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 

15:27:35.686 [XNIO-1 task-3] - [526783005000208384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 )) ORD... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from dp_rule t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from dp_rule t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：56ms , start = 1640330855627
┣━ 返回：RcdSet,size=23
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783005000208384
┗━━━━━ SQL [ SELECT * FROM ( select t.* from dp_rule t WHERE ( ( t.deleted= :PARAM_1 )) ORD... ] ━━━━━ 

15:27:35.691 [XNIO-1 task-3] - [526783005000208384] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 1ms
15:27:40.427 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640330860377
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783004387840000
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:40.487 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640330860429
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783004387840000
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:40.527 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640330860489
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783004387840000
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:40.582 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640330860537
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783004387840000
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:40.626 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640330860584
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783004387840000
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:27:40.716 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"系统资源","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '系统资源' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1640330860654
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783004387840000
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:40.800 [XNIO-1 task-3] - [526783005000208384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640330860753
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783005000208384
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:40.805 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"类型","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '类型' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1640330860759
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783004387840000
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:40.834 [XNIO-1 task-3] - [526783005000208384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：32ms , start = 1640330860801
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783005000208384
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:40.851 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"访问控制","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '访问控制' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640330860810
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783004387840000
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:40.881 [XNIO-1 task-3] - [526783005000208384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640330860835
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783005000208384
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:27:40.900 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"地址","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '地址' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1640330860854
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783004387840000
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:40.940 [XNIO-1 task-3] - [526783005000208384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"地址","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '地址' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640330860898
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783005000208384
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:40.972 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"模块","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '模块' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：61ms , start = 1640330860904
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783004387840000
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:40.991 [XNIO-1 task-3] - [526783005000208384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"模块","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '模块' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：42ms , start = 1640330860947
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783005000208384
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:41.060 [XNIO-1 task-1] - [526783004387840000] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/oauth/resourze/resourze_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/oauth/resourze/resourze_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：47ms , start = 1640330861011
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526783004387840000
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:27:41.060 [XNIO-1 task-3] - [526783005000208384] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/oauth/resourze/resourze_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/oauth/resourze/resourze_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：55ms , start = 1640330861004
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526783005000208384
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:27:42.542 [XNIO-1 task-3] - [526783033462755328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：202ms , start = 1640330862333
┣━ 返回：RcdSet,size=1390
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：526783033462755328
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

15:27:42.657 [XNIO-1 task-1] - [526783034016403456] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：189ms , start = 1640330862466
┣━ 返回：RcdSet,size=1390
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：526783034016403456
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

15:27:43.640 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：155ms , start = 1640330863484
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783038122627072
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:27:43.686 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：42ms , start = 1640330863641
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783038122627072
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:27:43.801 [XNIO-1 task-1] - [526783039435444224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：37ms , start = 1640330863759
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783039435444224
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:27:43.845 [XNIO-1 task-1] - [526783039435444224] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：42ms , start = 1640330863802
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783039435444224
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:27:49.227 [XNIO-1 task-1] - [526783062168571904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND t.url LIKE ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"%asset_search%"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND t.url LIKE '%asset_search%' ) A
┣ 结果： 
┣━ 耗时：44ms , start = 1640330869182
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783062168571904
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:27:49.307 [XNIO-1 task-1] - [526783062168571904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( ( t.url like ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":50,"PARAM_3":0,"PARAM_2":"%asset_search%"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( ( t.url like '%asset_search%' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：78ms , start = 1640330869228
┣━ 返回：RcdSet,size=7
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783062168571904
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:27:56.340 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330876283
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783038122627072
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:56.402 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640330876360
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783038122627072
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:56.444 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640330876403
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783038122627072
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:56.483 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640330876445
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783038122627072
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:27:56.543 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640330876485
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783038122627072
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:27:56.742 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：141ms , start = 1640330876575
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783038122627072
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:56.805 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请输入","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请输入' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1640330876761
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783038122627072
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:56.879 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"Method","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= 'Method' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：51ms , start = 1640330876826
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783038122627072
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:56.919 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"批次号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '批次号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：34ms , start = 1640330876883
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783038122627072
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:56.962 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据表","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据表' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640330876922
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783038122627072
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:57.014 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"取消","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '取消' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640330876967
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783038122627072
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:27:57.068 [XNIO-1 task-2] - [526783038122627072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"保存","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '保存' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1640330877023
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783038122627072
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:20.398 [XNIO-1 task-2] - [526783192707895296] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_resourze ( id , name , type , access_type , url , method , bat... ] ━━━━━ 
┣ 语句：INSERT INTO sys_resourze ( id , name , type , access_type , url , method , batch_id , table_name , module , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526783192724672512","PARAM_9":"","PARAM_8":"","PARAM_10":"110588348101165911","PARAM_7":"","PARAM_11":1640330900306,"PARAM_6":"GET","PARAM_12":1,"PARAM_5":"/business/eam/asset/asset_search/asset_clean_search.html","PARAM_4":"GRANT","PARAM_3":"page","PARAM_2":"资产清理"}
┣ 执行：INSERT INTO sys_resourze ( id , name , type , access_type , url , method , batch_id , table_name , module , create_by , create_time , version ) VALUES ( '526783192724672512' , '资产清理' , 'page' , 'GRANT' , '/business/eam/asset/asset_search/asset_clean_search.html' , 'GET' , '' , '' , '' , '110588348101165911' , str_to_date('2021-12-24 15:28:20','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：87ms , start = 1640330900308
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    org.github.foxnic.web.oauth.service.impl.ResourzeServiceImpl.insert(ResourzeServiceImpl.java:71)
    org.github.foxnic.web.oauth.controller.ResourzeController.insert(ResourzeController.java:82)
┣ TID：526783192707895296
┗━━━━━ SQL [ INSERT INTO sys_resourze ( id , name , type , access_type , url , method , bat... ] ━━━━━ 

15:28:20.849 [XNIO-1 task-2] - [526783192707895296] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 
┣ 语句：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= ?
┣ 参数：{"PARAM_1":0}
┣ 执行：select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.deleted= 0
┣ 结果： 
┣━ 耗时：358ms , start = 1640330900485
┣━ 返回：RcdSet,size=1744
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:195)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:180)
    org.github.foxnic.web.oauth.service.impl.ResourzeServiceImpl.getMatchd(ResourzeServiceImpl.java:293)
┣ TID：526783192707895296
┗━━━━━ SQL [ select * from sys_resourze t WHERE length(url)>0 and length(url)>0 AND t.delet... ] ━━━━━ 

15:28:20.940 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND t.url LIKE ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"%asset_search%"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND t.url LIKE '%asset_search%' ) A
┣ 结果： 
┣━ 耗时：40ms , start = 1640330900899
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783195211894784
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:28:21.002 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( ( t.url like ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":50,"PARAM_3":0,"PARAM_2":"%asset_search%"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( ( t.url like '%asset_search%' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：59ms , start = 1640330900940
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783195211894784
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:28:23.340 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640330903274
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783195211894784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:23.387 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640330903344
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783195211894784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:23.427 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：30ms , start = 1640330903392
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783195211894784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:23.479 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640330903428
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783195211894784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:23.559 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：71ms , start = 1640330903481
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783195211894784
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:28:23.650 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"账户","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '账户' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：50ms , start = 1640330903591
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783195211894784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:23.713 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"手机","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '手机' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1640330903661
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783195211894784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:23.760 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"语言","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '语言' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640330903718
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783195211894784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:23.794 [XNIO-1 task-1] - [526783062168571904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640330903747
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783062168571904
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:23.807 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否有效","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否有效' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640330903763
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783195211894784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:23.844 [XNIO-1 task-1] - [526783062168571904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640330903798
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783062168571904
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:23.859 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"姓名","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '姓名' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：48ms , start = 1640330903809
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783195211894784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:23.878 [XNIO-1 task-1] - [526783062168571904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：32ms , start = 1640330903845
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783062168571904
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:28:23.919 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"角色","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '角色' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640330903871
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783195211894784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:23.920 [XNIO-1 task-1] - [526783062168571904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"角色","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '角色' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：33ms , start = 1640330903886
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783062168571904
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:23.974 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"属主","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '属主' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1640330903924
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783195211894784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:23.975 [XNIO-1 task-1] - [526783062168571904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"属主","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '属主' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1640330903924
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783062168571904
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:24.044 [XNIO-1 task-1] - [526783062168571904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/oauth/user/user_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/oauth/user/user_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：61ms , start = 1640330903979
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526783062168571904
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:28:24.065 [XNIO-1 task-2] - [526783195211894784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/oauth/user/user_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/oauth/user/user_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：77ms , start = 1640330903978
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526783195211894784
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:28:24.705 [XNIO-1 task-1] - [526783210785345536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_role t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_role t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：57ms , start = 1640330904646
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.oauth.service.impl.RoleServiceImpl.queryList(RoleServiceImpl.java:204)
┣ TID：526783210785345536
┗━━━━━ SQL [ select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

15:28:24.960 [XNIO-1 task-3] - [526783211968139264] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_role t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_role t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：65ms , start = 1640330904893
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.oauth.service.impl.RoleServiceImpl.queryList(RoleServiceImpl.java:204)
┣ TID：526783211968139264
┗━━━━━ SQL [ select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

15:28:25.044 [XNIO-1 task-1] - [526783212026859520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_user'
┣ 结果： 
┣━ 耗时：79ms , start = 1640330904959
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:393)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783212026859520
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:28:25.104 [XNIO-1 task-2] - [526783212475650048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_user","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_user'
┣ 结果： 
┣━ 耗时：45ms , start = 1640330905055
┣━ 返回：RcdSet,size=17
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:393)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783212475650048
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:28:25.106 [XNIO-1 task-1] - [526783212026859520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：46ms , start = 1640330905058
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783212026859520
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 

15:28:25.157 [XNIO-1 task-1] - [526783212026859520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_user t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_user t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_user t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：35ms , start = 1640330905114
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783212026859520
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_user t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 

15:28:25.157 [XNIO-1 task-2] - [526783212475650048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：37ms , start = 1640330905116
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783212475650048
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 

15:28:25.222 [XNIO-1 task-2] - [526783212475650048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_user t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_user t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_user t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：62ms , start = 1640330905158
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783212475650048
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_user t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 

15:28:25.238 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_39":"520265289695232000","PARAM_31":"501033666810482688","PARAM_32":"501033553186787328","PARAM_33":"491255954671665152","PARAM_34":"501032359194267648","PARAM_35":"488730934917476352","PARAM_36":"488735424617922560","PARAM_37":"488728744194748416","PARAM_38":"522800180374798336","PARAM_30":"520976505585532928","PARAM_9":"490546664172421120","PARAM_8":"520970772898910208","PARAM_7":"488443335959126016","PARAM_6":"488729654128029696","PARAM_5":"488739235516387328","PARAM_4":"477842557343105024","PARAM_3":"517300919172341760","PARAM_2":0,"PARAM_1":0,"PARAM_28":"518091388701642752","PARAM_29":"515583244364677120","PARAM_20":"522803002680016896","PARAM_21":"488441114123046912","PARAM_22":"488741244889993216","PARAM_23":"521343938888470528","PARAM_24":"488730524882317312","PARAM_25":"501033766714609664","PARAM_26":"490551488725123072","PARAM_27":"488728618743115776","PARAM_17":"509286903699214336","PARAM_18":"501034302373367808","PARAM_19":"520270252781600768","PARAM_53":0,"PARAM_10":"501034478160842752","PARAM_11":"522802716624289792","PARAM_12":"515583127335206912","PARAM_13":"491255833494028288","PARAM_14":"522800351674368000","PARAM_15":"491255807921356800","PARAM_16":"110588348101165000","PARAM_50":"520976707029565440","PARAM_51":"491258421899689984","PARAM_52":"490542185968570368","PARAM_42":"488443069251723264","PARAM_43":"515567129194397696","PARAM_44":"501033432273391616","PARAM_45":"467366872312971264","PARAM_46":"488730137047609344","PARAM_47":"520271614609195008","PARAM_48":"522801027766812672","PARAM_49":"480790327339261952","PARAM_40":"488736067722166272","PARAM_41":"520269448322482176"}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '517300919172341760' , '477842557343105024' , '488739235516387328' , '488729654128029696' , '488443335959126016' , '520970772898910208' , '490546664172421120' , '501034478160842752' , '522802716624289792' , '515583127335206912' , '491255833494028288' , '522800351674368000' , '491255807921356800' , '110588348101165000' , '509286903699214336' , '501034302373367808' , '520270252781600768' , '522803002680016896' , '488441114123046912' , '488741244889993216' , '521343938888470528' , '488730524882317312' , '501033766714609664' , '490551488725123072' , '488728618743115776' , '518091388701642752' , '515583244364677120' , '520976505585532928' , '501033666810482688' , '501033553186787328' , '491255954671665152' , '501032359194267648' , '488730934917476352' , '488735424617922560' , '488728744194748416' , '522800180374798336' , '520265289695232000' , '488736067722166272' , '520269448322482176' , '488443069251723264' , '515567129194397696' , '501033432273391616' , '467366872312971264' , '488730137047609344' , '520271614609195008' , '522801027766812672' , '480790327339261952' , '520976707029565440' , '491258421899689984' , '490542185968570368' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640330905184
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

15:28:25.280 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_39":"488736067722166272","PARAM_31":"501033553186787328","PARAM_32":"491255954671665152","PARAM_33":"501032359194267648","PARAM_34":"488730934917476352","PARAM_35":"488735424617922560","PARAM_36":"488728744194748416","PARAM_37":"522800180374798336","PARAM_38":"520265289695232000","PARAM_30":"501033666810482688","PARAM_9":"501034478160842752","PARAM_8":"490546664172421120","PARAM_7":"520970772898910208","PARAM_6":"488443335959126016","PARAM_5":"488729654128029696","PARAM_4":"488739235516387328","PARAM_3":"477842557343105024","PARAM_2":"517300919172341760","PARAM_1":0,"PARAM_28":"515583244364677120","PARAM_29":"520976505585532928","PARAM_20":"488441114123046912","PARAM_21":"488741244889993216","PARAM_22":"521343938888470528","PARAM_23":"488730524882317312","PARAM_24":"501033766714609664","PARAM_25":"490551488725123072","PARAM_26":"488728618743115776","PARAM_27":"518091388701642752","PARAM_17":"501034302373367808","PARAM_18":"520270252781600768","PARAM_19":"522803002680016896","PARAM_10":"522802716624289792","PARAM_11":"515583127335206912","PARAM_12":"491255833494028288","PARAM_13":"522800351674368000","PARAM_14":"491255807921356800","PARAM_15":"110588348101165000","PARAM_16":"509286903699214336","PARAM_50":"491258421899689984","PARAM_51":"490542185968570368","PARAM_52":0,"PARAM_42":"515567129194397696","PARAM_43":"501033432273391616","PARAM_44":"467366872312971264","PARAM_45":"488730137047609344","PARAM_46":"520271614609195008","PARAM_47":"522801027766812672","PARAM_48":"480790327339261952","PARAM_49":"520976707029565440","PARAM_40":"520269448322482176","PARAM_41":"488443069251723264"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '517300919172341760' , '477842557343105024' , '488739235516387328' , '488729654128029696' , '488443335959126016' , '520970772898910208' , '490546664172421120' , '501034478160842752' , '522802716624289792' , '515583127335206912' , '491255833494028288' , '522800351674368000' , '491255807921356800' , '110588348101165000' , '509286903699214336' , '501034302373367808' , '520270252781600768' , '522803002680016896' , '488441114123046912' , '488741244889993216' , '521343938888470528' , '488730524882317312' , '501033766714609664' , '490551488725123072' , '488728618743115776' , '518091388701642752' , '515583244364677120' , '520976505585532928' , '501033666810482688' , '501033553186787328' , '491255954671665152' , '501032359194267648' , '488730934917476352' , '488735424617922560' , '488728744194748416' , '522800180374798336' , '520265289695232000' , '488736067722166272' , '520269448322482176' , '488443069251723264' , '515567129194397696' , '501033432273391616' , '467366872312971264' , '488730137047609344' , '520271614609195008' , '522801027766812672' , '480790327339261952' , '520976707029565440' , '491258421899689984' , '490542185968570368' ) AND t_0.deleted= 0 ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：93ms , start = 1640330905185
┣━ 返回：RcdSet,size=20
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

15:28:25.346 [ForkJoinPool-2-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"522800351791808512","PARAM_18":0,"PARAM_10":"520265388966019072","PARAM_11":"E001","PARAM_12":"E002","PARAM_13":"520976509817585664","PARAM_14":"491964681963962368","PARAM_15":"522800180618067968","PARAM_16":"520271614802132992","PARAM_9":"521343941908369408","PARAM_8":"522802716712370176","PARAM_7":"491961971495665664","PARAM_6":"522803002768097280","PARAM_5":"520970777340678144","PARAM_4":"522801150106271744","PARAM_3":"515567129546719232","PARAM_2":"520976707671293952"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '520976707671293952' , '515567129546719232' , '522801150106271744' , '520970777340678144' , '522803002768097280' , '491961971495665664' , '522802716712370176' , '521343941908369408' , '520265388966019072' , 'E001' , 'E002' , '520976509817585664' , '491964681963962368' , '522800180618067968' , '520271614802132992' , '522800351791808512' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640330905288
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:28:25.365 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_39":"488736067722166272","PARAM_31":"501033553186787328","PARAM_32":"491255954671665152","PARAM_33":"501032359194267648","PARAM_34":"488730934917476352","PARAM_35":"488735424617922560","PARAM_36":"488728744194748416","PARAM_37":"522800180374798336","PARAM_38":"520265289695232000","PARAM_30":"501033666810482688","PARAM_9":"501034478160842752","PARAM_8":"490546664172421120","PARAM_7":"520970772898910208","PARAM_6":"488443335959126016","PARAM_5":"488729654128029696","PARAM_4":"488739235516387328","PARAM_3":"477842557343105024","PARAM_2":"517300919172341760","PARAM_1":0,"PARAM_28":"515583244364677120","PARAM_29":"520976505585532928","PARAM_20":"488441114123046912","PARAM_21":"488741244889993216","PARAM_22":"521343938888470528","PARAM_23":"488730524882317312","PARAM_24":"501033766714609664","PARAM_25":"490551488725123072","PARAM_26":"488728618743115776","PARAM_27":"518091388701642752","PARAM_17":"501034302373367808","PARAM_18":"520270252781600768","PARAM_19":"522803002680016896","PARAM_10":"522802716624289792","PARAM_11":"515583127335206912","PARAM_12":"491255833494028288","PARAM_13":"522800351674368000","PARAM_14":"491255807921356800","PARAM_15":"110588348101165000","PARAM_16":"509286903699214336","PARAM_50":"491258421899689984","PARAM_51":"490542185968570368","PARAM_52":0,"PARAM_42":"515567129194397696","PARAM_43":"501033432273391616","PARAM_44":"467366872312971264","PARAM_45":"488730137047609344","PARAM_46":"520271614609195008","PARAM_47":"522801027766812672","PARAM_48":"480790327339261952","PARAM_49":"520976707029565440","PARAM_40":"520269448322482176","PARAM_41":"488443069251723264"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '517300919172341760' , '477842557343105024' , '488739235516387328' , '488729654128029696' , '488443335959126016' , '520970772898910208' , '490546664172421120' , '501034478160842752' , '522802716624289792' , '515583127335206912' , '491255833494028288' , '522800351674368000' , '491255807921356800' , '110588348101165000' , '509286903699214336' , '501034302373367808' , '520270252781600768' , '522803002680016896' , '488441114123046912' , '488741244889993216' , '521343938888470528' , '488730524882317312' , '501033766714609664' , '490551488725123072' , '488728618743115776' , '518091388701642752' , '515583244364677120' , '520976505585532928' , '501033666810482688' , '501033553186787328' , '491255954671665152' , '501032359194267648' , '488730934917476352' , '488735424617922560' , '488728744194748416' , '522800180374798336' , '520265289695232000' , '488736067722166272' , '520269448322482176' , '488443069251723264' , '515567129194397696' , '501033432273391616' , '467366872312971264' , '488730137047609344' , '520271614609195008' , '522801027766812672' , '480790327339261952' , '520976707029565440' , '491258421899689984' , '490542185968570368' ) AND t_0.deleted= 0 ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：130ms , start = 1640330905233
┣━ 返回：RcdSet,size=20
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

15:28:25.402 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_39":"520265289695232000","PARAM_31":"501033666810482688","PARAM_32":"501033553186787328","PARAM_33":"491255954671665152","PARAM_34":"501032359194267648","PARAM_35":"488730934917476352","PARAM_36":"488735424617922560","PARAM_37":"488728744194748416","PARAM_38":"522800180374798336","PARAM_30":"520976505585532928","PARAM_9":"490546664172421120","PARAM_8":"520970772898910208","PARAM_7":"488443335959126016","PARAM_6":"488729654128029696","PARAM_5":"488739235516387328","PARAM_4":"477842557343105024","PARAM_3":"517300919172341760","PARAM_2":0,"PARAM_1":0,"PARAM_28":"518091388701642752","PARAM_29":"515583244364677120","PARAM_20":"522803002680016896","PARAM_21":"488441114123046912","PARAM_22":"488741244889993216","PARAM_23":"521343938888470528","PARAM_24":"488730524882317312","PARAM_25":"501033766714609664","PARAM_26":"490551488725123072","PARAM_27":"488728618743115776","PARAM_17":"509286903699214336","PARAM_18":"501034302373367808","PARAM_19":"520270252781600768","PARAM_53":0,"PARAM_10":"501034478160842752","PARAM_11":"522802716624289792","PARAM_12":"515583127335206912","PARAM_13":"491255833494028288","PARAM_14":"522800351674368000","PARAM_15":"491255807921356800","PARAM_16":"110588348101165000","PARAM_50":"520976707029565440","PARAM_51":"491258421899689984","PARAM_52":"490542185968570368","PARAM_42":"488443069251723264","PARAM_43":"515567129194397696","PARAM_44":"501033432273391616","PARAM_45":"467366872312971264","PARAM_46":"488730137047609344","PARAM_47":"520271614609195008","PARAM_48":"522801027766812672","PARAM_49":"480790327339261952","PARAM_40":"488736067722166272","PARAM_41":"520269448322482176"}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '517300919172341760' , '477842557343105024' , '488739235516387328' , '488729654128029696' , '488443335959126016' , '520970772898910208' , '490546664172421120' , '501034478160842752' , '522802716624289792' , '515583127335206912' , '491255833494028288' , '522800351674368000' , '491255807921356800' , '110588348101165000' , '509286903699214336' , '501034302373367808' , '520270252781600768' , '522803002680016896' , '488441114123046912' , '488741244889993216' , '521343938888470528' , '488730524882317312' , '501033766714609664' , '490551488725123072' , '488728618743115776' , '518091388701642752' , '515583244364677120' , '520976505585532928' , '501033666810482688' , '501033553186787328' , '491255954671665152' , '501032359194267648' , '488730934917476352' , '488735424617922560' , '488728744194748416' , '522800180374798336' , '520265289695232000' , '488736067722166272' , '520269448322482176' , '488443069251723264' , '515567129194397696' , '501033432273391616' , '467366872312971264' , '488730137047609344' , '520271614609195008' , '522801027766812672' , '480790327339261952' , '520976707029565440' , '491258421899689984' , '490542185968570368' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：167ms , start = 1640330905233
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

15:28:25.414 [ForkJoinPool-2-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"522800351733088256","PARAM_18":0,"PARAM_10":"521343941707042816","PARAM_11":"515567129303449600","PARAM_12":"520271614701469696","PARAM_13":"520265388919881728","PARAM_14":"522802716670427136","PARAM_15":"522800180555153408","PARAM_16":"522801082598948864","PARAM_9":"520976707440607232","PARAM_8":"522803002721959936","PARAM_7":"P002","PARAM_6":"520970777286152192","PARAM_5":"520976509591093248","PARAM_4":"P001","PARAM_3":"491964681657778176","PARAM_2":"491961900645482496"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '491961900645482496' , '491964681657778176' , 'P001' , '520976509591093248' , '520970777286152192' , 'P002' , '522803002721959936' , '520976707440607232' , '521343941707042816' , '515567129303449600' , '520271614701469696' , '520265388919881728' , '522802716670427136' , '522800180555153408' , '522801082598948864' , '522800351733088256' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640330905360
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

15:28:25.433 [XNIO-1 task-1] - [526783212026859520] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 262ms
15:28:25.468 [ForkJoinPool-2-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"522800351791808512","PARAM_18":0,"PARAM_10":"520265388966019072","PARAM_11":"E001","PARAM_12":"E002","PARAM_13":"520976509817585664","PARAM_14":"491964681963962368","PARAM_15":"522800180618067968","PARAM_16":"520271614802132992","PARAM_9":"521343941908369408","PARAM_8":"522802716712370176","PARAM_7":"491961971495665664","PARAM_6":"522803002768097280","PARAM_5":"520970777340678144","PARAM_4":"522801150106271744","PARAM_3":"515567129546719232","PARAM_2":"520976707671293952"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '520976707671293952' , '515567129546719232' , '522801150106271744' , '520970777340678144' , '522803002768097280' , '491961971495665664' , '522802716712370176' , '521343941908369408' , '520265388966019072' , 'E001' , 'E002' , '520976509817585664' , '491964681963962368' , '522800180618067968' , '520271614802132992' , '522800351791808512' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640330905425
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:28:25.537 [ForkJoinPool-2-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"522800351733088256","PARAM_18":0,"PARAM_10":"521343941707042816","PARAM_11":"515567129303449600","PARAM_12":"520271614701469696","PARAM_13":"520265388919881728","PARAM_14":"522802716670427136","PARAM_15":"522800180555153408","PARAM_16":"522801082598948864","PARAM_9":"520976707440607232","PARAM_8":"522803002721959936","PARAM_7":"P002","PARAM_6":"520970777286152192","PARAM_5":"520976509591093248","PARAM_4":"P001","PARAM_3":"491964681657778176","PARAM_2":"491961900645482496"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '491961900645482496' , '491964681657778176' , 'P001' , '520976509591093248' , '520970777286152192' , 'P002' , '522803002721959936' , '520976707440607232' , '521343941707042816' , '515567129303449600' , '520271614701469696' , '520265388919881728' , '522802716670427136' , '522800180555153408' , '522801082598948864' , '522800351733088256' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：65ms , start = 1640330905472
┣━ 返回：RcdSet,size=16
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

15:28:25.540 [XNIO-1 task-2] - [526783212475650048] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 310ms
15:28:25.980 [XNIO-1 task-3] - [526783216376352768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"509286852004417536"}
┣ 执行：select * from sys_file WHERE id = '509286852004417536'
┣ 结果： 
┣━ 耗时：33ms , start = 1640330905946
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783216376352768
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:25.984 [XNIO-1 task-1] - [526783216393129984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":""}
┣ 执行：select * from sys_file WHERE id = ''
┣ 结果： 
┣━ 耗时：33ms , start = 1640330905949
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783216393129984
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:25.999 [XNIO-1 task-2] - [526783216372158464] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"undefined"}
┣ 执行：select * from sys_file WHERE id = 'undefined'
┣ 结果： 
┣━ 耗时：51ms , start = 1640330905946
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783216372158464
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.032 [XNIO-1 task-5] - [526783216460238848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"488443049404276736"}
┣ 执行：select * from sys_file WHERE id = '488443049404276736'
┣ 结果： 
┣━ 耗时：64ms , start = 1640330905964
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783216460238848
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.032 [XNIO-1 task-4] - [526783216456044544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"488443277217898496"}
┣ 执行：select * from sys_file WHERE id = '488443277217898496'
┣ 结果： 
┣━ 耗时：65ms , start = 1640330905964
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783216456044544
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.040 [XNIO-1 task-6] - [526783216472821760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"488441171157192704"}
┣ 执行：select * from sys_file WHERE id = '488441171157192704'
┣ 结果： 
┣━ 耗时：68ms , start = 1640330905969
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783216472821760
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.082 [XNIO-1 task-1] - [526783216393129984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"","PARAM_2":1640330905985}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:25','%Y-%m-%d %H:%i:%s') WHERE id IN ( '' )
┣ 结果： 
┣━ 耗时：92ms , start = 1640330905985
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783216393129984
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.083 [XNIO-1 task-3] - [526783216376352768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"509286852004417536","PARAM_2":1640330905982}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:25','%Y-%m-%d %H:%i:%s') WHERE id IN ( '509286852004417536' )
┣ 结果： 
┣━ 耗时：97ms , start = 1640330905983
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783216376352768
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.086 [XNIO-1 task-2] - [526783216372158464] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"undefined","PARAM_2":1640330906000}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( 'undefined' )
┣ 结果： 
┣━ 耗时：83ms , start = 1640330906000
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783216372158464
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.121 [XNIO-1 task-4] - [526783216456044544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488443277217898496","PARAM_2":1640330906033}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '488443277217898496' )
┣ 结果： 
┣━ 耗时：85ms , start = 1640330906033
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783216456044544
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.132 [XNIO-1 task-5] - [526783216460238848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488443049404276736","PARAM_2":1640330906033}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '488443049404276736' )
┣ 结果： 
┣━ 耗时：96ms , start = 1640330906033
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783216460238848
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.132 [XNIO-1 task-6] - [526783216472821760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488441171157192704","PARAM_2":1640330906040}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '488441171157192704' )
┣ 结果： 
┣━ 耗时：87ms , start = 1640330906041
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783216472821760
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.169 [XNIO-1 task-3] - [526783216376352768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"509286852004417536","PARAM_2":1640330906084}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '509286852004417536' )
┣ 结果： 
┣━ 耗时：81ms , start = 1640330906084
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783216376352768
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.171 [XNIO-1 task-3] - [526783216376352768] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20211106/509286852000223232.png
15:28:26.212 [XNIO-1 task-5] - [526783216460238848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488443049404276736","PARAM_2":1640330906132}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '488443049404276736' )
┣ 结果： 
┣━ 耗时：75ms , start = 1640330906133
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783216460238848
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.215 [XNIO-1 task-5] - [526783216460238848] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210909/488443049400082432.png
15:28:26.223 [XNIO-1 task-4] - [526783216456044544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488443277217898496","PARAM_2":1640330906122}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '488443277217898496' )
┣ 结果： 
┣━ 耗时：93ms , start = 1640330906122
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783216456044544
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.224 [XNIO-1 task-6] - [526783216472821760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488441171157192704","PARAM_2":1640330906133}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '488441171157192704' )
┣ 结果： 
┣━ 耗时：86ms , start = 1640330906133
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783216472821760
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.228 [XNIO-1 task-4] - [526783216456044544] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210909/488443277209509888.png
15:28:26.231 [XNIO-1 task-6] - [526783216472821760] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210909/488441171148804096.png
15:28:26.276 [XNIO-1 task-2] - [526783217387180032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"undefined"}
┣ 执行：select * from sys_file WHERE id = 'undefined'
┣ 结果： 
┣━ 耗时：84ms , start = 1640330906186
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783217387180032
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.277 [XNIO-1 task-1] - [526783217345236992] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":""}
┣ 执行：select * from sys_file WHERE id = ''
┣ 结果： 
┣━ 耗时：96ms , start = 1640330906176
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783217345236992
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.337 [XNIO-1 task-2] - [526783217387180032] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"undefined","PARAM_2":1640330906277}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( 'undefined' )
┣ 结果： 
┣━ 耗时：58ms , start = 1640330906277
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783217387180032
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.381 [XNIO-1 task-1] - [526783217345236992] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"","PARAM_2":1640330906283}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '' )
┣ 结果： 
┣━ 耗时：83ms , start = 1640330906285
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783217345236992
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.384 [XNIO-1 task-3] - [526783217827581952] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"477842585453330432"}
┣ 执行：select * from sys_file WHERE id = '477842585453330432'
┣ 结果： 
┣━ 耗时：76ms , start = 1640330906298
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783217827581952
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.384 [XNIO-1 task-6] - [526783217970188288] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"467367145731260416"}
┣ 执行：select * from sys_file WHERE id = '467367145731260416'
┣ 结果： 
┣━ 耗时：54ms , start = 1640330906326
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783217970188288
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.420 [XNIO-1 task-4] - [526783217970188289] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"509286852004417536"}
┣ 执行：select * from sys_file WHERE id = '509286852004417536'
┣ 结果： 
┣━ 耗时：90ms , start = 1640330906326
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783217970188289
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.439 [XNIO-1 task-5] - [526783218129571840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"465814936602279936"}
┣ 执行：select * from sys_file WHERE id = '465814936602279936'
┣ 结果： 
┣━ 耗时：73ms , start = 1640330906363
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783218129571840
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.482 [XNIO-1 task-3] - [526783217827581952] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"477842585453330432","PARAM_2":1640330906385}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '477842585453330432' )
┣ 结果： 
┣━ 耗时：94ms , start = 1640330906385
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783217827581952
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.481 [XNIO-1 task-6] - [526783217970188288] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"467367145731260416","PARAM_2":1640330906385}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '467367145731260416' )
┣ 结果： 
┣━ 耗时：93ms , start = 1640330906385
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783217970188288
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.499 [XNIO-1 task-2] - [526783218393812992] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"488443277217898496"}
┣ 执行：select * from sys_file WHERE id = '488443277217898496'
┣ 结果： 
┣━ 耗时：72ms , start = 1640330906425
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783218393812992
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.499 [XNIO-1 task-4] - [526783217970188289] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"509286852004417536","PARAM_2":1640330906422}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '509286852004417536' )
┣ 结果： 
┣━ 耗时：74ms , start = 1640330906422
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783217970188289
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.523 [XNIO-1 task-5] - [526783218129571840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814936602279936","PARAM_2":1640330906441}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '465814936602279936' )
┣ 结果： 
┣━ 耗时：80ms , start = 1640330906441
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783218129571840
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.524 [XNIO-1 task-1] - [526783218469310464] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"488441171157192704"}
┣ 执行：select * from sys_file WHERE id = '488441171157192704'
┣ 结果： 
┣━ 耗时：77ms , start = 1640330906444
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783218469310464
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.539 [XNIO-1 task-6] - [526783217970188288] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"467367145731260416","PARAM_2":1640330906482}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '467367145731260416' )
┣ 结果： 
┣━ 耗时：54ms , start = 1640330906483
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783217970188288
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.546 [XNIO-1 task-6] - [526783217970188288] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210713/467367145718677504.jpg
15:28:26.559 [XNIO-1 task-3] - [526783217827581952] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"477842585453330432","PARAM_2":1640330906482}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '477842585453330432' )
┣ 结果： 
┣━ 耗时：74ms , start = 1640330906483
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783217827581952
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.561 [XNIO-1 task-3] - [526783217827581952] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210811/477842585436553216.jpg
15:28:26.561 [XNIO-1 task-2] - [526783218393812992] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488443277217898496","PARAM_2":1640330906501}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '488443277217898496' )
┣ 结果： 
┣━ 耗时：58ms , start = 1640330906501
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783218393812992
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.591 [XNIO-1 task-4] - [526783217970188289] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"509286852004417536","PARAM_2":1640330906501}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '509286852004417536' )
┣ 结果： 
┣━ 耗时：86ms , start = 1640330906501
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783217970188289
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.592 [XNIO-1 task-4] - [526783217970188289] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20211106/509286852000223232.png
15:28:26.598 [XNIO-1 task-5] - [526783218129571840] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814936602279936","PARAM_2":1640330906525}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '465814936602279936' )
┣ 结果： 
┣━ 耗时：71ms , start = 1640330906525
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783218129571840
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.599 [XNIO-1 task-5] - [526783218129571840] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210709/465814936593891328.jpg
15:28:26.620 [XNIO-1 task-1] - [526783218469310464] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488441171157192704","PARAM_2":1640330906525}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '488441171157192704' )
┣ 结果： 
┣━ 耗时：94ms , start = 1640330906525
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783218469310464
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.646 [XNIO-1 task-2] - [526783218393812992] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488443277217898496","PARAM_2":1640330906562}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '488443277217898496' )
┣ 结果： 
┣━ 耗时：81ms , start = 1640330906562
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783218393812992
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.650 [XNIO-1 task-2] - [526783218393812992] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210909/488443277209509888.png
15:28:26.742 [XNIO-1 task-6] - [526783219354308608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"488443049404276736"}
┣ 执行：select * from sys_file WHERE id = '488443049404276736'
┣ 结果： 
┣━ 耗时：82ms , start = 1640330906657
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783219354308608
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.742 [XNIO-1 task-1] - [526783218469310464] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488441171157192704","PARAM_2":1640330906620}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '488441171157192704' )
┣ 结果： 
┣━ 耗时：118ms , start = 1640330906621
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783218469310464
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.743 [XNIO-1 task-1] - [526783218469310464] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210909/488441171148804096.png
15:28:26.771 [XNIO-1 task-3] - [526783219350114304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"467367145731260416"}
┣ 执行：select * from sys_file WHERE id = '467367145731260416'
┣ 结果： 
┣━ 耗时：111ms , start = 1640330906658
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783219350114304
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.784 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"465814936602279936"}
┣ 执行：select * from sys_file WHERE id = '465814936602279936'
┣ 结果： 
┣━ 耗时：48ms , start = 1640330906734
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783219677270016
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.784 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"477842585453330432"}
┣ 执行：select * from sys_file WHERE id = '477842585453330432'
┣ 结果： 
┣━ 耗时：78ms , start = 1640330906704
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.image(FileController.java:108)
┣ TID：526783219555635200
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:28:26.797 [XNIO-1 task-6] - [526783219354308608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488443049404276736","PARAM_2":1640330906743}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '488443049404276736' )
┣ 结果： 
┣━ 耗时：53ms , start = 1640330906743
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783219354308608
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.861 [XNIO-1 task-3] - [526783219350114304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"467367145731260416","PARAM_2":1640330906772}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '467367145731260416' )
┣ 结果： 
┣━ 耗时：88ms , start = 1640330906772
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783219350114304
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.862 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814936602279936","PARAM_2":1640330906785}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '465814936602279936' )
┣ 结果： 
┣━ 耗时：75ms , start = 1640330906785
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783219677270016
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.877 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"477842585453330432","PARAM_2":1640330906785}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') WHERE id IN ( '477842585453330432' )
┣ 结果： 
┣━ 耗时：91ms , start = 1640330906785
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526783219555635200
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:28:26.882 [XNIO-1 task-6] - [526783219354308608] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"488443049404276736","PARAM_2":1640330906798}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '488443049404276736' )
┣ 结果： 
┣━ 耗时：82ms , start = 1640330906798
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783219354308608
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.883 [XNIO-1 task-6] - [526783219354308608] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210909/488443049400082432.png
15:28:26.913 [XNIO-1 task-3] - [526783219350114304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"467367145731260416","PARAM_2":1640330906862}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '467367145731260416' )
┣ 结果： 
┣━ 耗时：49ms , start = 1640330906862
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783219350114304
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.914 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814936602279936","PARAM_2":1640330906863}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '465814936602279936' )
┣ 结果： 
┣━ 耗时：45ms , start = 1640330906863
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783219677270016
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.914 [XNIO-1 task-3] - [526783219350114304] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210713/467367145718677504.jpg
15:28:26.915 [XNIO-1 task-5] - [526783219677270016] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210709/465814936593891328.jpg
15:28:26.929 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"477842585453330432","PARAM_2":1640330906877}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:28:26','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '477842585453330432' )
┣ 结果： 
┣━ 耗时：47ms , start = 1640330906878
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526783219555635200
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:28:26.930 [XNIO-1 task-4] - [526783219555635200] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210811/477842585436553216.jpg
15:28:50.303 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640330930247
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219555635200
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:50.401 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：94ms , start = 1640330930305
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219555635200
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:50.450 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640330930403
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219555635200
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:50.510 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640330930451
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219555635200
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:50.563 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640330930512
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219555635200
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:28:50.677 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：61ms , start = 1640330930612
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219555635200
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:50.717 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请输入关键字","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请输入关键字' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640330930679
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219555635200
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:50.761 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"添加","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '添加' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640330930719
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219555635200
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:50.829 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330930783
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219555635200
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:50.864 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640330930827
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219677270016
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:50.880 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640330930831
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219555635200
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:50.908 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640330930867
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219677270016
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:50.929 [XNIO-1 task-4] - [526783219555635200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640330930881
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219555635200
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:28:50.980 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640330930909
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219677270016
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:28:51.068 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1640330931011
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.120 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单类型","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单类型' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：42ms , start = 1640330931076
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.181 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"权限","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '权限' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640330931131
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.235 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否显示","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否显示' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：34ms , start = 1640330931194
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.316 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否隐藏","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否隐藏' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：66ms , start = 1640330931245
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.360 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单图标","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单图标' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：36ms , start = 1640330931320
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.417 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"样式","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '样式' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640330931368
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.523 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择图标","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择图标' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1640330931472
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.600 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"页面路径","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '页面路径' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：62ms , start = 1640330931536
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.667 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"页面参数","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '页面参数' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640330931607
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.708 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"路由地址","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '路由地址' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：35ms , start = 1640330931671
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.761 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资源清单","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资源清单' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1640330931714
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.813 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"动态控制","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '动态控制' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640330931771
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.874 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"动态控制类","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '动态控制类' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640330931827
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:51.929 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"上级ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '上级ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640330931879
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526783219677270016
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:28:52.001 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330931954
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219677270016
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:52.051 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640330932003
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219677270016
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:28:52.085 [XNIO-1 task-5] - [526783219677270016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：29ms , start = 1640330932052
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783219677270016
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:28:53.081 [XNIO-1 task-4] - [526783330021019648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：39ms , start = 1640330933039
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryRootNotes(MenuServiceImpl.java:263)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:274)
┣ TID：526783330021019648
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:28:53.137 [XNIO-1 task-5] - [526783328389435392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：120ms , start = 1640330933013
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryRootNotes(MenuServiceImpl.java:263)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:274)
┣ TID：526783328389435392
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:28:53.323 [XNIO-1 task-5] - [526783330813743104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：58ms , start = 1640330933229
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783330813743104
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:28:53.388 [XNIO-1 task-5] - [526783330813743104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：62ms , start = 1640330933324
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783330813743104
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:28:53.416 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：40ms , start = 1640330933372
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783331413528576
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:28:53.481 [XNIO-1 task-3] - [526783331690352640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：41ms , start = 1640330933438
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783331690352640
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:28:53.481 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：63ms , start = 1640330933416
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783331413528576
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:28:53.545 [XNIO-1 task-3] - [526783331690352640] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：57ms , start = 1640330933481
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783331690352640
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:28:53.551 [XNIO-1 task-5] - [526783331942010880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：50ms , start = 1640330933497
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783331942010880
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:28:53.651 [XNIO-1 task-5] - [526783331942010880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：84ms , start = 1640330933565
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526783331942010880
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:28:57.778 [XNIO-1 task-5] - [526783349616807936] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"eam"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= 'eam' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：63ms , start = 1640330937713
┣━ 返回：RcdSet,size=14
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526783349616807936
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:36:29.237 [XNIO-1 task-5] - [526785243164708864] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"473549948382609408"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '473549948382609408' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：60ms , start = 1640331389174
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526785243164708864
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:36:30.503 [XNIO-1 task-5] - [526785248579555328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：39ms , start = 1640331390461
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785248579555328
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:36:30.568 [XNIO-1 task-5] - [526785248579555328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331390510
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785248579555328
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:36:30.616 [XNIO-1 task-5] - [526785248579555328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：45ms , start = 1640331390570
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785248579555328
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:36:30.924 [XNIO-1 task-5] - [526785250345357312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：41ms , start = 1640331390882
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785250345357312
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:36:30.964 [XNIO-1 task-5] - [526785250345357312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：39ms , start = 1640331390924
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785250345357312
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:36:30.978 [XNIO-1 task-3] - [526785250601209856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：33ms , start = 1640331390942
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785250601209856
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:36:31.028 [XNIO-1 task-3] - [526785250601209856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：47ms , start = 1640331390979
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785250601209856
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:36:34.621 [XNIO-1 task-3] - [526785265096724480] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"473549948382609408","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1640331394569,"PARAM_14":"526778119344885760","PARAM_9":"","PARAM_8":"","PARAM_7":"526783192724672512","PARAM_6":"page","PARAM_5":"资产清理清单","PARAM_4":"","PARAM_3":0,"PARAM_2":"asset-clean-list:mgr"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'asset-clean-list:mgr' , hidden = 0 , css = '' , label = '资产清理清单' , type = 'page' , path_resource_id = '526783192724672512' , url = '' , params = '' , parent_id = '473549948382609408' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:36:34','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：47ms , start = 1640331394570
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：526785265096724480
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

15:36:34.707 [XNIO-1 task-3] - [526785265096724480] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_menu_resource WHERE menu_id= ? AND deleted = ?
┣ 参数：{"PARAM_1":"526778119344885760","PARAM_2":0}
┣ 执行：select * from sys_menu_resource WHERE menu_id= '526778119344885760' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640331394671
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:241)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
┣ TID：526785265096724480
┗━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:36:34.807 [XNIO-1 task-3] - [526785265096724480] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：delete from sys_menu_resource where menu_id= '526778119344885760'
┣ 结果： 
┣━ 耗时：28ms , start = 1640331394777
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:245)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：526785265096724480
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

15:36:37.497 [XNIO-1 task-3] - [526785277818048512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"474154919352336384"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '474154919352336384' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：66ms , start = 1640331397430
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526785277818048512
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:36:38.283 [XNIO-1 task-3] - [526785281169297408] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"478626344431779840"}
┣ 执行：select * from sys_menu WHERE id = '478626344431779840'
┣ 结果： 
┣━ 耗时：53ms , start = 1640331398228
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785281169297408
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:36:38.327 [XNIO-1 task-3] - [526785281169297408] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"490888724289159168"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '490888724289159168' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331398284
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785281169297408
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:36:38.379 [XNIO-1 task-3] - [526785281169297408] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"478626344431779840","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478626344431779840' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：45ms , start = 1640331398331
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785281169297408
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:36:38.528 [XNIO-1 task-3] - [526785282154958848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：51ms , start = 1640331398465
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785282154958848
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:36:38.588 [XNIO-1 task-3] - [526785282154958848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：54ms , start = 1640331398529
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785282154958848
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:36:38.606 [XNIO-1 task-5] - [526785282490503168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：53ms , start = 1640331398544
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785282490503168
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:36:38.683 [XNIO-1 task-5] - [526785282490503168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：74ms , start = 1640331398607
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785282490503168
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:36:42.165 [XNIO-1 task-5] - [526785297451585536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"474155529355132929"}
┣ 执行：select * from sys_menu WHERE id = '474155529355132929'
┣ 结果： 
┣━ 耗时：54ms , start = 1640331402110
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785297451585536
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:36:42.239 [XNIO-1 task-5] - [526785297451585536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"490923211228188672"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '490923211228188672' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：70ms , start = 1640331402166
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785297451585536
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:36:42.283 [XNIO-1 task-5] - [526785297451585536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"474155529355132929","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '474155529355132929' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：40ms , start = 1640331402240
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785297451585536
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:36:42.469 [XNIO-1 task-5] - [526785298722459648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1640331402417
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785298722459648
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:36:42.549 [XNIO-1 task-3] - [526785299041226752] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：55ms , start = 1640331402491
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785299041226752
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:36:42.550 [XNIO-1 task-5] - [526785298722459648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：78ms , start = 1640331402470
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785298722459648
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:36:42.617 [XNIO-1 task-3] - [526785299041226752] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：67ms , start = 1640331402549
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785299041226752
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:36:42.752 [XNIO-1 task-5] - [526785299976556544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：35ms , start = 1640331402712
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785299976556544
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:36:42.814 [XNIO-1 task-5] - [526785299976556544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"526783192724672512"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '526783192724672512' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331402755
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785299976556544
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:36:42.864 [XNIO-1 task-5] - [526785299976556544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：46ms , start = 1640331402815
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785299976556544
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:36:43.050 [XNIO-1 task-5] - [526785301163544576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1640331402998
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785301163544576
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:36:43.103 [XNIO-1 task-3] - [526785301377454080] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：41ms , start = 1640331403058
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785301377454080
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:36:43.111 [XNIO-1 task-5] - [526785301163544576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：56ms , start = 1640331403050
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785301163544576
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:36:43.181 [XNIO-1 task-3] - [526785301377454080] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：60ms , start = 1640331403104
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785301377454080
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:36:55.770 [XNIO-1 task-3] - [526785354259238912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"473549948382609408","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1640331415704,"PARAM_14":"526778119344885760","PARAM_9":"","PARAM_8":"#!eam_clean_search_list","PARAM_7":"526783192724672512","PARAM_6":"page","PARAM_5":"资产清理清单","PARAM_4":"","PARAM_3":0,"PARAM_2":"asset-clean-list:mgr"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'asset-clean-list:mgr' , hidden = 0 , css = '' , label = '资产清理清单' , type = 'page' , path_resource_id = '526783192724672512' , url = '#!eam_clean_search_list' , params = '' , parent_id = '473549948382609408' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:36:55','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：62ms , start = 1640331415705
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：526785354259238912
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

15:36:55.820 [XNIO-1 task-3] - [526785354259238912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_menu_resource WHERE menu_id= ? AND deleted = ?
┣ 参数：{"PARAM_1":"526778119344885760","PARAM_2":0}
┣ 执行：select * from sys_menu_resource WHERE menu_id= '526778119344885760' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331415772
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:241)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
┣ TID：526785354259238912
┗━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:36:55.865 [XNIO-1 task-3] - [526785354259238912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：delete from sys_menu_resource where menu_id= '526778119344885760'
┣ 结果： 
┣━ 耗时：38ms , start = 1640331415822
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:245)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：526785354259238912
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

15:36:59.874 [XNIO-1 task-3] - [526785371669794816] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"478626344431779840"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '478626344431779840' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：66ms , start = 1640331419806
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526785371669794816
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:37:02.094 [XNIO-1 task-3] - [526785381014704128] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , crea... ] ━━━━━ 
┣ 语句：INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526785381023092736","PARAM_9":1,"PARAM_8":1640331422035,"PARAM_7":"110588348101165911","PARAM_6":999999,"PARAM_5":"526778119344885760","PARAM_4":"folder","PARAM_3":"新菜单-1640331422034","PARAM_2":"33-b87f7f9621-fda8"}
┣ 执行：INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , create_by , create_time , version ) VALUES ( '526785381023092736' , '33-b87f7f9621-fda8' , '新菜单-1640331422034' , 'folder' , '526778119344885760' , 999999 , '110588348101165911' , str_to_date('2021-12-24 15:37:02','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：56ms , start = 1640331422035
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:83)
┣ TID：526785381014704128
┗━━━━━ SQL [ INSERT INTO sys_menu ( id , authority , label , type , parent_id , sort , crea... ] ━━━━━ 

15:37:02.144 [XNIO-1 task-3] - [526785381014704128] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu set hierarchy=id where parent_id='0' ] ━━━━━ 
┣ 语句：UPDATE sys_menu set hierarchy=id where parent_id='0'
┣ 参数：{}
┣ 执行：UPDATE sys_menu set hierarchy=id where parent_id='0'
┣ 结果： 
┣━ 耗时：44ms , start = 1640331422097
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:338)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：526785381014704128
┗━━━━━ SQL [ UPDATE sys_menu set hierarchy=id where parent_id='0' ] ━━━━━ 

15:37:02.194 [XNIO-1 task-3] - [526785381014704128] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 
┣ 语句：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 参数：{}
┣ 执行：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 结果： 
┣━ 耗时：45ms , start = 1640331422146
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:340)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：526785381014704128
┗━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 

15:37:02.261 [XNIO-1 task-3] - [526785381014704128] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 
┣ 语句：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 参数：{}
┣ 执行：UPDATE sys_menu c, sys_menu p
SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id)
WHERE p.id=c.parent_id and c.hierarchy is null and p.hierarchy is not null
┣ 结果： 
┣━ 耗时：61ms , start = 1640331422195
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.fillHierarchy(MenuServiceImpl.java:340)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.insert(MenuServiceImpl.java:85)
    org.github.foxnic.web.oauth.controller.MenuController.insert(MenuController.java:86)
┣ TID：526785381014704128
┗━━━━━ SQL [ UPDATE sys_menu c, sys_menu p SET c.hierarchy=CONCAT(p.hierarchy,"/",c.id) WHE... ] ━━━━━ 

15:37:02.506 [XNIO-1 task-3] - [526785382763728896] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_2":"526778119344885760"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= null and m.id=r.menu_id
where m.parent_id= '526778119344885760' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：51ms , start = 1640331422451
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:256)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildNodes(MenuServiceImpl.java:270)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:276)
┣ TID：526785382763728896
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:37:03.402 [XNIO-1 task-3] - [526785386517630976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526785381023092736"}
┣ 执行：select * from sys_menu WHERE id = '526785381023092736'
┣ 结果： 
┣━ 耗时：55ms , start = 1640331423345
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785386517630976
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:37:03.458 [XNIO-1 task-3] - [526785386517630976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526785381023092736","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526785381023092736' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：52ms , start = 1640331423404
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785386517630976
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:37:03.629 [XNIO-1 task-3] - [526785387444572160] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：53ms , start = 1640331423567
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785387444572160
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:03.665 [XNIO-1 task-5] - [526785387629121536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：43ms , start = 1640331423613
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785387629121536
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:03.696 [XNIO-1 task-3] - [526785387444572160] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：59ms , start = 1640331423631
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785387444572160
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:03.715 [XNIO-1 task-5] - [526785387629121536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：42ms , start = 1640331423666
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785387629121536
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:05.096 [XNIO-1 task-5] - [526785393559867392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：68ms , start = 1640331425025
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785393559867392
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:37:05.145 [XNIO-1 task-5] - [526785393559867392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"526783192724672512"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '526783192724672512' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331425097
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785393559867392
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:37:05.196 [XNIO-1 task-5] - [526785393559867392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：48ms , start = 1640331425147
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785393559867392
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:37:05.331 [XNIO-1 task-5] - [526785394608443392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：50ms , start = 1640331425276
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785394608443392
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:05.380 [XNIO-1 task-5] - [526785394608443392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：45ms , start = 1640331425332
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785394608443392
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:05.383 [XNIO-1 task-3] - [526785394784604160] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1640331425316
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785394784604160
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:05.447 [XNIO-1 task-3] - [526785394784604160] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：60ms , start = 1640331425384
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785394784604160
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:07.062 [XNIO-1 task-3] - [526785401889755136] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526785381023092736"}
┣ 执行：select * from sys_menu WHERE id = '526785381023092736'
┣ 结果： 
┣━ 耗时：49ms , start = 1640331427010
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785401889755136
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:37:07.115 [XNIO-1 task-3] - [526785401889755136] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526785381023092736","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526785381023092736' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：50ms , start = 1640331427064
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785401889755136
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:37:07.244 [XNIO-1 task-3] - [526785402640535552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：48ms , start = 1640331427191
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785402640535552
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:07.284 [XNIO-1 task-5] - [526785402812502016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1640331427232
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785402812502016
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:07.313 [XNIO-1 task-3] - [526785402640535552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：58ms , start = 1640331427245
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785402640535552
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:07.347 [XNIO-1 task-5] - [526785402812502016] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：54ms , start = 1640331427284
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785402812502016
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:15.018 [XNIO-1 task-5] - [526785435146391552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"526778119344885760","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1640331434978,"PARAM_14":"526785381023092736","PARAM_9":"","PARAM_8":"","PARAM_7":"","PARAM_6":"function","PARAM_5":"新菜单-1640331422034","PARAM_4":"","PARAM_3":0,"PARAM_2":"asset-clean-list:query"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'asset-clean-list:query' , hidden = 0 , css = '' , label = '新菜单-1640331422034' , type = 'function' , path_resource_id = '' , url = '' , params = '' , parent_id = '526778119344885760' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:37:14','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '526785381023092736'
┣ 结果： 
┣━ 耗时：37ms , start = 1640331434978
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：526785435146391552
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

15:37:15.060 [XNIO-1 task-5] - [526785435146391552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_menu_resource WHERE menu_id= ? AND deleted = ?
┣ 参数：{"PARAM_1":"526785381023092736","PARAM_2":0}
┣ 执行：select * from sys_menu_resource WHERE menu_id= '526785381023092736' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331435019
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:241)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
┣ TID：526785435146391552
┗━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:37:15.095 [XNIO-1 task-5] - [526785435146391552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"526785381023092736"}
┣ 执行：delete from sys_menu_resource where menu_id= '526785381023092736'
┣ 结果： 
┣━ 耗时：33ms , start = 1640331435061
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:245)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：526785435146391552
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

15:37:16.193 [XNIO-1 task-5] - [526785440154390528] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"478626411003772928"}
┣ 执行：select * from sys_menu WHERE id = '478626411003772928'
┣ 结果： 
┣━ 耗时：56ms , start = 1640331436134
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785440154390528
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:37:16.251 [XNIO-1 task-5] - [526785440154390528] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"478626411003772928","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478626411003772928' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：55ms , start = 1640331436194
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785440154390528
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:37:16.447 [XNIO-1 task-5] - [526785441140051968] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：66ms , start = 1640331436373
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785441140051968
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:16.498 [XNIO-1 task-3] - [526785441509150720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：35ms , start = 1640331436459
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785441509150720
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:16.525 [XNIO-1 task-5] - [526785441140051968] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：57ms , start = 1640331436464
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785441140051968
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:16.542 [XNIO-1 task-3] - [526785441509150720] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：39ms , start = 1640331436501
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785441509150720
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:19.304 [XNIO-1 task-3] - [526785453253201920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"478626344431779840"}
┣ 执行：select * from sys_menu WHERE id = '478626344431779840'
┣ 结果： 
┣━ 耗时：45ms , start = 1640331439256
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785453253201920
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:37:19.339 [XNIO-1 task-3] - [526785453253201920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"490888724289159168"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '490888724289159168' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640331439305
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785453253201920
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:37:19.386 [XNIO-1 task-3] - [526785453253201920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"478626344431779840","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478626344431779840' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：42ms , start = 1640331439341
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785453253201920
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:37:19.524 [XNIO-1 task-3] - [526785454180143104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：44ms , start = 1640331439478
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785454180143104
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:19.580 [XNIO-1 task-5] - [526785454347915264] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：53ms , start = 1640331439522
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785454347915264
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:19.613 [XNIO-1 task-3] - [526785454180143104] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：87ms , start = 1640331439524
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785454180143104
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:19.635 [XNIO-1 task-5] - [526785454347915264] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：49ms , start = 1640331439584
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785454347915264
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:21.069 [XNIO-1 task-5] - [526785460689702912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"478626411003772928"}
┣ 执行：select * from sys_menu WHERE id = '478626411003772928'
┣ 结果： 
┣━ 耗时：36ms , start = 1640331441029
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785460689702912
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:37:21.127 [XNIO-1 task-5] - [526785460689702912] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"478626411003772928","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478626411003772928' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：53ms , start = 1640331441071
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785460689702912
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:37:21.255 [XNIO-1 task-5] - [526785461419511808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：48ms , start = 1640331441205
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785461419511808
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:21.303 [XNIO-1 task-3] - [526785461549535232] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：56ms , start = 1640331441235
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785461549535232
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:21.309 [XNIO-1 task-5] - [526785461419511808] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：47ms , start = 1640331441257
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785461419511808
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:21.364 [XNIO-1 task-3] - [526785461549535232] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：57ms , start = 1640331441304
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785461549535232
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:22.615 [XNIO-1 task-3] - [526785467073433600] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526785381023092736"}
┣ 执行：select * from sys_menu WHERE id = '526785381023092736'
┣ 结果： 
┣━ 耗时：62ms , start = 1640331442552
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785467073433600
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:37:22.678 [XNIO-1 task-3] - [526785467073433600] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331442616
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785467073433600
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:37:22.751 [XNIO-1 task-3] - [526785467073433600] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526785381023092736","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526785381023092736' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：66ms , start = 1640331442682
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785467073433600
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:37:22.941 [XNIO-1 task-3] - [526785468574994432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：27ms , start = 1640331442911
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785468574994432
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:22.993 [XNIO-1 task-3] - [526785468574994432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：47ms , start = 1640331442942
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785468574994432
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:23.001 [XNIO-1 task-5] - [526785468738572288] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1640331442949
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785468738572288
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:37:23.082 [XNIO-1 task-5] - [526785468738572288] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：77ms , start = 1640331443002
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785468738572288
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:37:31.577 [XNIO-1 task-5] - [526785504608260096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 
┣ 语句：UPDATE sys_menu SET batch_id = ? , authority = ? , hidden = ? , css = ? , label = ? , type = ? , path_resource_id = ? , url = ? , params = ? , parent_id = ? , dynamic_handler = ? , update_by = ? , update_time = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"","PARAM_10":"526778119344885760","PARAM_11":"","PARAM_12":"110588348101165911","PARAM_13":1640331451537,"PARAM_14":"526785381023092736","PARAM_9":"","PARAM_8":"","PARAM_7":"","PARAM_6":"function","PARAM_5":"查询","PARAM_4":"","PARAM_3":0,"PARAM_2":"asset-clean-list:query"}
┣ 执行：UPDATE sys_menu SET batch_id = '' , authority = 'asset-clean-list:query' , hidden = 0 , css = '' , label = '查询' , type = 'function' , path_resource_id = '' , url = '' , params = '' , parent_id = '526778119344885760' , dynamic_handler = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:37:31','%Y-%m-%d %H:%i:%s') , version = version+1 WHERE id = '526785381023092736'
┣ 结果： 
┣━ 耗时：37ms , start = 1640331451537
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:150)
┣ TID：526785504608260096
┗━━━━━ SQL [ UPDATE sys_menu SET batch_id = :PARAM_1 , authority = :PARAM_2 , hidden = :PAR... ] ━━━━━ 

15:37:31.635 [XNIO-1 task-5] - [526785504608260096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_menu_resource WHERE menu_id= ? AND deleted = ?
┣ 参数：{"PARAM_1":"526785381023092736","PARAM_2":0}
┣ 执行：select * from sys_menu_resource WHERE menu_id= '526785381023092736' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331451579
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:241)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
┣ TID：526785504608260096
┗━━━━━ SQL [ select * from sys_menu_resource WHERE menu_id= :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:37:31.705 [XNIO-1 task-5] - [526785504608260096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 
┣ 语句：delete from sys_menu_resource where menu_id= ?
┣ 参数：{"PARAM_1":"526785381023092736"}
┣ 执行：delete from sys_menu_resource where menu_id= '526785381023092736'
┣ 结果： 
┣━ 耗时：57ms , start = 1640331451636
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuResourceServiceImpl.saveResourceIds(MenuResourceServiceImpl.java:245)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.update(MenuServiceImpl.java:152)
    org.github.foxnic.web.oauth.controller.MenuController.update(MenuController.java:163)
┣ TID：526785504608260096
┗━━━━━ SQL [ delete from sys_menu_resource where menu_id= :PARAM_1 ] ━━━━━ 

15:38:19.628 [XNIO-1 task-5] - [526785706236841984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"478626344431779840"}
┣ 执行：select * from sys_menu WHERE id = '478626344431779840'
┣ 结果： 
┣━ 耗时：54ms , start = 1640331499572
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785706236841984
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:38:19.679 [XNIO-1 task-5] - [526785706236841984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"490888724289159168"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '490888724289159168' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331499631
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785706236841984
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:38:19.733 [XNIO-1 task-5] - [526785706236841984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"478626344431779840","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478626344431779840' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：50ms , start = 1640331499680
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785706236841984
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:38:19.958 [XNIO-1 task-5] - [526785707675488256] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：38ms , start = 1640331499918
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785707675488256
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:20.014 [XNIO-1 task-5] - [526785707675488256] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：54ms , start = 1640331499958
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785707675488256
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:20.047 [XNIO-1 task-3] - [526785708019421184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：35ms , start = 1640331499998
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785708019421184
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:20.093 [XNIO-1 task-3] - [526785708019421184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：43ms , start = 1640331500048
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785708019421184
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:20.618 [XNIO-1 task-3] - [526785710389202944] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"478626411003772928"}
┣ 执行：select * from sys_menu WHERE id = '478626411003772928'
┣ 结果： 
┣━ 耗时：54ms , start = 1640331500562
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785710389202944
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:38:20.668 [XNIO-1 task-3] - [526785710389202944] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"478626411003772928","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478626411003772928' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：46ms , start = 1640331500620
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785710389202944
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:38:20.837 [XNIO-1 task-3] - [526785711253229568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：58ms , start = 1640331500769
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785711253229568
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:20.883 [XNIO-1 task-5] - [526785711488110592] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：52ms , start = 1640331500827
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785711488110592
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:20.902 [XNIO-1 task-3] - [526785711253229568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：60ms , start = 1640331500839
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785711253229568
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:20.940 [XNIO-1 task-5] - [526785711488110592] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：51ms , start = 1640331500884
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785711488110592
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:21.928 [XNIO-1 task-5] - [526785715908907008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"478626344431779840"}
┣ 执行：select * from sys_menu WHERE id = '478626344431779840'
┣ 结果： 
┣━ 耗时：48ms , start = 1640331501878
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785715908907008
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:38:21.974 [XNIO-1 task-5] - [526785715908907008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"490888724289159168"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '490888724289159168' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331501929
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785715908907008
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:38:22.028 [XNIO-1 task-5] - [526785715908907008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"478626344431779840","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '478626344431779840' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：50ms , start = 1640331501976
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785715908907008
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:38:22.196 [XNIO-1 task-5] - [526785716932317184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：62ms , start = 1640331502123
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785716932317184
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:22.251 [XNIO-1 task-5] - [526785716932317184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：47ms , start = 1640331502197
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785716932317184
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:22.265 [XNIO-1 task-3] - [526785717297221632] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：39ms , start = 1640331502216
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785717297221632
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:22.345 [XNIO-1 task-3] - [526785717297221632] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：78ms , start = 1640331502266
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785717297221632
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:29.397 [XNIO-1 task-3] - [526785747215192064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：51ms , start = 1640331509344
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785747215192064
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:38:29.437 [XNIO-1 task-3] - [526785747215192064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"526783192724672512"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '526783192724672512' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331509399
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785747215192064
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:38:29.493 [XNIO-1 task-3] - [526785747215192064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：52ms , start = 1640331509439
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785747215192064
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:38:29.645 [XNIO-1 task-3] - [526785748242796544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：51ms , start = 1640331509589
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785748242796544
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:29.683 [XNIO-1 task-5] - [526785748393791488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1640331509624
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785748393791488
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:29.715 [XNIO-1 task-3] - [526785748242796544] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：52ms , start = 1640331509646
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785748242796544
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:29.743 [XNIO-1 task-5] - [526785748393791488] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：52ms , start = 1640331509684
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785748393791488
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:30.680 [XNIO-1 task-5] - [526785752634232832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526785381023092736"}
┣ 执行：select * from sys_menu WHERE id = '526785381023092736'
┣ 结果： 
┣━ 耗时：42ms , start = 1640331510635
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785752634232832
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:38:30.719 [XNIO-1 task-5] - [526785752634232832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331510681
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785752634232832
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:38:30.773 [XNIO-1 task-5] - [526785752634232832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526785381023092736","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526785381023092736' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：51ms , start = 1640331510720
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785752634232832
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:38:30.897 [XNIO-1 task-5] - [526785753515036672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：46ms , start = 1640331510845
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785753515036672
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:30.931 [XNIO-1 task-3] - [526785753666031616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：38ms , start = 1640331510882
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785753666031616
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:30.958 [XNIO-1 task-5] - [526785753515036672] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：42ms , start = 1640331510898
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785753515036672
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:31.013 [XNIO-1 task-3] - [526785753666031616] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：69ms , start = 1640331510931
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785753666031616
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:31.673 [XNIO-1 task-3] - [526785756434272256] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：131ms , start = 1640331511540
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785756434272256
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:38:31.713 [XNIO-1 task-3] - [526785756434272256] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"526783192724672512"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '526783192724672512' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331511674
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785756434272256
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:38:31.764 [XNIO-1 task-3] - [526785756434272256] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：46ms , start = 1640331511715
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785756434272256
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:38:31.951 [XNIO-1 task-3] - [526785757734506496] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：93ms , start = 1640331511851
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785757734506496
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:31.976 [XNIO-1 task-5] - [526785757919055872] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：77ms , start = 1640331511895
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785757919055872
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:32.016 [XNIO-1 task-3] - [526785757734506496] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：60ms , start = 1640331511953
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785757734506496
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:32.032 [XNIO-1 task-5] - [526785757919055872] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：48ms , start = 1640331511981
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785757919055872
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:32.612 [XNIO-1 task-5] - [526785760779571200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526785381023092736"}
┣ 执行：select * from sys_menu WHERE id = '526785381023092736'
┣ 结果： 
┣━ 耗时：35ms , start = 1640331512576
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785760779571200
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:38:32.669 [XNIO-1 task-5] - [526785760779571200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331512613
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785760779571200
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:38:32.724 [XNIO-1 task-5] - [526785760779571200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526785381023092736","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526785381023092736' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：51ms , start = 1640331512671
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785760779571200
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:38:32.861 [XNIO-1 task-5] - [526785761790398464] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：37ms , start = 1640331512820
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785761790398464
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:32.936 [XNIO-1 task-5] - [526785761790398464] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：54ms , start = 1640331512862
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785761790398464
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:32.967 [XNIO-1 task-3] - [526785762109165568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：70ms , start = 1640331512894
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785762109165568
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:33.016 [XNIO-1 task-3] - [526785762109165568] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：46ms , start = 1640331512968
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785762109165568
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:34.239 [XNIO-1 task-3] - [526785767544983552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526778119344885760"}
┣ 执行：select * from sys_menu WHERE id = '526778119344885760'
┣ 结果： 
┣━ 耗时：46ms , start = 1640331514190
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785767544983552
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:38:34.293 [XNIO-1 task-3] - [526785767544983552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"526783192724672512"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '526783192724672512' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331514246
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785767544983552
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:38:34.348 [XNIO-1 task-3] - [526785767544983552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526778119344885760","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526778119344885760' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：51ms , start = 1640331514295
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785767544983552
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:38:34.478 [XNIO-1 task-3] - [526785768631308288] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：26ms , start = 1640331514449
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785768631308288
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:34.536 [XNIO-1 task-3] - [526785768631308288] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：53ms , start = 1640331514479
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785768631308288
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:34.575 [XNIO-1 task-5] - [526785768887160832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：46ms , start = 1640331514518
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785768887160832
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:34.644 [XNIO-1 task-5] - [526785768887160832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：59ms , start = 1640331514580
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785768887160832
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:35.119 [XNIO-1 task-5] - [526785771189833728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_menu WHERE id = ?
┣ 参数：{"PARAM_1":"526785381023092736"}
┣ 执行：select * from sys_menu WHERE id = '526785381023092736'
┣ 结果： 
┣━ 耗时：57ms , start = 1640331515059
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:193)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785771189833728
┗━━━━━ SQL [ select * from sys_menu WHERE id = :PARAM_1 ] ━━━━━ 

15:38:35.158 [XNIO-1 task-5] - [526785771189833728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331515120
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785771189833728
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:38:35.218 [XNIO-1 task-5] - [526785771189833728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"526785381023092736","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '526785381023092736' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：55ms , start = 1640331515160
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.getById(MenuServiceImpl.java:194)
    org.github.foxnic.web.oauth.controller.MenuController.getById(MenuController.java:212)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785771189833728
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:38:35.368 [XNIO-1 task-5] - [526785772230021120] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? AND type = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"page"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 AND type = 'page' ) A
┣ 结果： 
┣━ 耗时：58ms , start = 1640331515307
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785772230021120
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:35.390 [XNIO-1 task-3] - [526785772418764800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_resourze t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：33ms , start = 1640331515353
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785772418764800
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_resourze t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:38:35.415 [XNIO-1 task-5] - [526785772230021120] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? ) AND ( type = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":20,"PARAM_3":0,"PARAM_2":"page"}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 ) AND ( type = 'page' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 20
┣ 结果： 
┣━ 耗时：40ms , start = 1640331515373
┣━ 返回：RcdSet,size=20
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785772230021120
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:35.456 [XNIO-1 task-3] - [526785772418764800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：57ms , start = 1640331515394
┣━ 返回：RcdSet,size=50
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785772418764800
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_resourze t WHERE ( ( t.deleted= :PARAM_1 )... ] ━━━━━ 

15:38:43.283 [XNIO-1 task-3] - [526785772418764800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331523220
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785772418764800
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:43.319 [XNIO-1 task-3] - [526785772418764800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：27ms , start = 1640331523287
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785772418764800
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:43.362 [XNIO-1 task-3] - [526785772418764800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331523324
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785772418764800
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:43.395 [XNIO-1 task-3] - [526785772418764800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：30ms , start = 1640331523364
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785772418764800
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:43.434 [XNIO-1 task-3] - [526785772418764800] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640331523396
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785772418764800
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:38:43.562 [XNIO-1 task-5] - [526785772230021120] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331523504
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785772230021120
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:43.597 [XNIO-1 task-5] - [526785772230021120] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：28ms , start = 1640331523567
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785772230021120
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:43.651 [XNIO-1 task-5] - [526785772230021120] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331523598
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785772230021120
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:38:44.540 [XNIO-1 task-5] - [526785810704371712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_role t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_role t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_role t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：53ms , start = 1640331524483
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785810704371712
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_role t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 

15:38:44.591 [XNIO-1 task-5] - [526785810704371712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：45ms , start = 1640331524541
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785810704371712
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 

15:38:44.596 [XNIO-1 task-3] - [526785811060887552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_role t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_role t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_role t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：29ms , start = 1640331524565
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785811060887552
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_role t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 

15:38:44.662 [XNIO-1 task-3] - [526785811060887552] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：62ms , start = 1640331524598
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785811060887552
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 

15:38:48.738 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_role WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_role WHERE id = ?
┣ 参数：{"PARAM_1":"110352963290923110"}
┣ 执行：select * from sys_role WHERE id = '110352963290923110'
┣ 结果： 
┣━ 耗时：29ms , start = 1640331528706
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.RoleServiceImpl.getById(RoleServiceImpl.java:186)
    org.github.foxnic.web.oauth.controller.RoleController.getById(RoleController.java:169)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785828429500416
┗━━━━━ SQL [ select * from sys_role WHERE id = :PARAM_1 ] ━━━━━ 

15:38:48.938 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：68ms , start = 1640331528865
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785828429500416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:48.991 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331528940
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785828429500416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:49.043 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331528999
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785828429500416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:49.119 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640331529048
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785828429500416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:49.174 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331529122
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785828429500416
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:38:49.278 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"创建人ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '创建人ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：63ms , start = 1640331529209
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:49.353 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"创建时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '创建时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：48ms , start = 1640331529289
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:49.397 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改人ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改人ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640331529358
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:49.434 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"修改时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '修改时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：31ms , start = 1640331529399
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:49.492 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"是否已删除","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '是否已删除' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：52ms , start = 1640331529437
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:49.555 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除人ID","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除人ID' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：52ms , start = 1640331529495
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:49.621 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"删除时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '删除时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：51ms , start = 1640331529569
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:49.670 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据版本号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据版本号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640331529623
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:49.723 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"菜单权限","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '菜单权限' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640331529672
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:49.783 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择菜单","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择菜单' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1640331529736
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:51.169 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331531115
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785828429500416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:51.234 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331531171
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785828429500416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:38:51.278 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640331531241
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785828429500416
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:38:51.379 [XNIO-1 task-3] - [526785828429500416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"确定","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '确定' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：70ms , start = 1640331531306
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526785828429500416
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:38:51.794 [XNIO-1 task-3] - [526785841196961792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= ? and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"110352963290923110"}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= '110352963290923110' and m.id=r.menu_id
where m.parent_id='0' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：41ms , start = 1640331531751
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryChildMenus(MenuServiceImpl.java:254)
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.queryRootNotes(MenuServiceImpl.java:263)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:274)
┣ TID：526785841196961792
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:38:52.276 [XNIO-1 task-3] - [526785841196961792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= '110352963290923110' and m.id=r.menu_id
where m.deleted=0 and ( hierarchy like '463397133957988352/%' OR hierarchy like '495201409763901440/%' OR hierarchy like 'hrm/%' OR hierarchy like 'eam/%' OR hierarchy like '472036556115279872/%' OR hierarchy like '470155869825269760/%' OR hierarchy like '472036810977968129/%' OR hierarchy like '472358185009676289/%' OR hierarchy like '474155549546512385/%' OR hierarchy like '473036391530364929/%' OR hierarchy like '474157822892834817/%' OR hierarchy like '474159041438810113/%' OR hierarchy like '473612721665867776/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.deleted=0) child_count,r.id checked from sys_menu m
left join sys_role_menu r on r.role_id= '110352963290923110' and m.id=r.menu_id
where m.deleted=0 and ( hierarchy like '463397133957988352/%' OR hierarchy like '495201409763901440/%' OR hierarchy like 'hrm/%' OR hierarchy like 'eam/%' OR hierarchy like '472036556115279872/%' OR hierarchy like '470155869825269760/%' OR hierarchy like '472036810977968129/%' OR hierarchy like '472358185009676289/%' OR hierarchy like '474155549546512385/%' OR hierarchy like '473036391530364929/%' OR hierarchy like '474157822892834817/%' OR hierarchy like '474159041438810113/%' OR hierarchy like '473612721665867776/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：419ms , start = 1640331531855
┣━ 返回：RcdSet,size=1414
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.MenuServiceImpl.buildingHierarchicalRelationships(MenuServiceImpl.java:359)
    org.github.foxnic.web.oauth.controller.MenuController.queryNodes(MenuController.java:282)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526785841196961792
┗━━━━━ SQL [ select m.*,(select count(1) from sys_menu cm  where m.id=cm.parent_id and cm.d... ] ━━━━━ 

15:39:02.095 [XNIO-1 task-3] - [526785841196961792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：69ms , start = 1640331542010
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785841196961792
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:02.144 [XNIO-1 task-3] - [526785841196961792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331542097
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785841196961792
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:02.191 [XNIO-1 task-3] - [526785841196961792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331542146
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785841196961792
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:02.241 [XNIO-1 task-3] - [526785841196961792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331542193
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785841196961792
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:02.293 [XNIO-1 task-3] - [526785841196961792] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331542243
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785841196961792
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:03.150 [XNIO-1 task-3] - [526785888533876736] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_role SET code = :PARAM_1 , name = :PARAM_2 , create_by = :PARAM_3 ,... ] ━━━━━ 
┣ 语句：UPDATE sys_role SET code = ? , name = ? , create_by = ? , update_by = ? , update_time = ? , deleted = ? , delete_by = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"super_admin","PARAM_8":"110352963290923110","PARAM_7":"","PARAM_6":0,"PARAM_5":1640331543114,"PARAM_4":"110588348101165911","PARAM_3":"","PARAM_2":"超级管理员"}
┣ 执行：UPDATE sys_role SET code = 'super_admin' , name = '超级管理员' , create_by = '' , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:39:03','%Y-%m-%d %H:%i:%s') , deleted = 0 , delete_by = '' , version = version+1 WHERE id = '110352963290923110'
┣ 结果： 
┣━ 耗时：35ms , start = 1640331543114
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.oauth.service.impl.RoleServiceImpl.update(RoleServiceImpl.java:139)
┣ TID：526785888533876736
┗━━━━━ SQL [ UPDATE sys_role SET code = :PARAM_1 , name = :PARAM_2 , create_by = :PARAM_3 ,... ] ━━━━━ 

15:39:03.378 [XNIO-1 task-3] - [526785888533876736] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_role_menu t WHERE ( ( t.deleted= :PARAM_1 ) AND ( role_id ... ] ━━━━━ 
┣ 语句：select t.* from sys_role_menu t WHERE ( ( t.deleted= ? ) AND ( role_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"110352963290923110"}
┣ 执行：select t.* from sys_role_menu t WHERE ( ( t.deleted= 0 ) AND ( role_id = '110352963290923110' ))
┣ 结果： 
┣━ 耗时：190ms , start = 1640331543170
┣━ 返回：RcdSet,size=1268
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.oauth.service.impl.RoleMenuServiceImpl.queryList(RoleMenuServiceImpl.java:159)
┣ TID：526785888533876736
┗━━━━━ SQL [ select t.* from sys_role_menu t WHERE ( ( t.deleted= :PARAM_1 ) AND ( role_id ... ] ━━━━━ 

15:39:03.572 [XNIO-1 task-3] - [526785888533876736] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ insert into sys_role_menu(id,menu_id,role_id,create_by,create_time)  values( :... ] ━━━━━ 
┣ 语句：insert into sys_role_menu(id,menu_id,role_id,create_by,create_time)  values( ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526785890186432513","PARAM_5":1640331543429,"PARAM_4":"110588348101165911","PARAM_3":"110352963290923110","PARAM_2":"526785381023092736"}
┣ 执行：insert into sys_role_menu(id,menu_id,role_id,create_by,create_time)  values( '526785890186432513' , '526785381023092736' , '110352963290923110' , '110588348101165911' , str_to_date('2021-12-24 15:39:03','%Y-%m-%d %H:%i:%s') )
┣ 结果： 
┣━ 耗时：137ms , start = 1640331543431
┣━ 返回：[I
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.RoleMenuServiceImpl.saveMenuIds(RoleMenuServiceImpl.java:228)
    org.github.foxnic.web.oauth.service.impl.RoleServiceImpl.update(RoleServiceImpl.java:144)
    org.github.foxnic.web.oauth.controller.RoleController.update(RoleController.java:132)
┣ TID：526785888533876736
┗━━━━━ SQL [ insert into sys_role_menu(id,menu_id,role_id,create_by,create_time)  values( :... ] ━━━━━ 

15:39:03.822 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_role t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_role t
WHERE t.deleted = ? ) A
┣ 参数：{"PARAM_1":0}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_role t
WHERE t.deleted = 0 ) A
┣ 结果： 
┣━ 耗时：54ms , start = 1640331543759
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785891557969920
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_role t WHERE t.deleted = :PARAM_1 ) A ] ━━━━━ 

15:39:03.866 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_3":50,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= 0 )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：37ms , start = 1640331543827
┣━ 返回：RcdSet,size=8
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526785891557969920
┗━━━━━ SQL [ SELECT * FROM ( select t.* from sys_role t WHERE ( ( t.deleted= :PARAM_1 )) OR... ] ━━━━━ 

15:39:09.705 [XNIO-1 task-3] - [526785891557969920] - INFO  o.g.f.w.o.l.UserLogoutHandler - [logout,32] - username: admin  is offline now
15:39:09.712 [XNIO-1 task-3] - [526785891557969920] - INFO  o.g.f.w.o.l.UserLogoutSuccessHandler - [onLogoutSuccess,42] - username: admin  is offline now
15:39:09.891 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331549836
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:09.951 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331549893
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.026 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640331549960
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.082 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331550027
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.132 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331550083
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:10.187 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.background"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.background' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331550134
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.237 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331550188
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.289 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331550240
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.332 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331550290
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.370 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640331550334
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:10.410 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331550371
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.471 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331550411
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.509 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331550472
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:10.575 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640331550510
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.645 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331550576
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.693 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331550647
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:10.745 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331550696
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.807 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331550746
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.863 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.default","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331550808
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:10.910 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331550865
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.958 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331550916
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:10.997 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.text","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640331550961
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:11.036 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331550998
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.079 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331551037
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.120 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.link","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331551080
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:11.437 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640331551367
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.456 [XNIO-1 task-5] - [526785810704371712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331551417
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785810704371712
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.499 [XNIO-1 task-5] - [526785810704371712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331551457
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785810704371712
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.503 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：61ms , start = 1640331551438
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.571 [XNIO-1 task-5] - [526785810704371712] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：68ms , start = 1640331551501
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785810704371712
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:11.572 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331551505
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:11.611 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.background"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.background' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331551573
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.658 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：103ms , start = 1640331551545
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.706 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：87ms , start = 1640331551612
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.732 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：69ms , start = 1640331551660
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.759 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331551710
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.771 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331551733
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:11.794 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640331551760
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.838 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331551795
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:11.875 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640331551839
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.938 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331551882
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:11.978 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331551940
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:12.027 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331551979
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:12.071 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331552028
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:12.122 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331552072
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:12.189 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331552132
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:12.242 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.default"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331552196
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:12.293 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.default","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.default' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331552243
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:12.351 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331552295
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:12.418 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.text"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331552357
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:12.478 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.text","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.text' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331552424
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:12.532 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331552480
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:12.576 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.copyright.link"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331552533
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:12.626 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.copyright.link","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.copyright.link' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331552581
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:56.874 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.login.captcha.any"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.login.captcha.any' AND deleted = 0
┣ 结果： 
┣━ 耗时：72ms , start = 1640331596800
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:56.930 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.login.captcha.any"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.login.captcha.any' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331596875
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:56.962 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.login.captcha.any","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.login.captcha.any' AND deleted = 0
┣ 结果： 
┣━ 耗时：27ms , start = 1640331596931
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:57.008 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = ? ) A
┣ 参数：{"PARAM_1":"admin"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_user
WHERE name = 'admin' ) A
┣ 结果： 
┣━ 耗时：39ms , start = 1640331596967
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:279)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:86)
┣ TID：526785891557969920
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_user WHERE name = :PARAM_1 ) A ] ━━━━━ 

15:39:57.066 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_user WHERE name = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"admin","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_user WHERE name = 'admin' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1640331597008
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.getUserByIdentity(UserServiceImpl.java:279)
    org.github.foxnic.web.oauth.config.user.SessionUserDetailsManager.loadUserByUsername(SessionUserDetailsManager.java:108)
    org.github.foxnic.web.oauth.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:86)
┣ TID：526785891557969920
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_user WHERE name = :PARAM_1 ) PAGED_QUERY LIM... ] ━━━━━ 

15:39:57.124 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.user_id IN ( '110588348101165911' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331597068
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role WHERE ( delete... ] ━━━━━ 

15:39:57.258 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"110588348101165911","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_1 on t_1.role_id = t_0.role_id 
 WHERE t_1.user_id IN ( '110588348101165911' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：190ms , start = 1640331597068
┣━ 返回：RcdSet,size=1270
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.user_id join_f0 FROM (select * from sys_role_menu WHERE ( d... ] ━━━━━ 

15:39:57.302 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
 WHERE t_0.user_id IN ( ? ) AND t_0.deleted= ? ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"110588348101165911"}
┣ 执行：SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
 WHERE t_0.user_id IN ( '110588348101165911' ) AND t_0.deleted= 0 ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：231ms , start = 1640331597069
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.user_id join_f0 FROM (select * from sys_user_tenant WHERE (... ] ━━━━━ 

15:39:57.375 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 
┣ 语句：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= ? ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= ? ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= ? ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( ? ) AND t_2.deleted= ? ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_5":0,"PARAM_4":"110588348101165911","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css , t_0.path_resource_id , t_0.dynamic_handler , t_0.hidden , t_0.params , t_0.type , t_0.url , t_0.sort , t_2.user_id join_f0 FROM (select * from sys_menu WHERE ( deleted= 0 ) ) t_0 
join (select * from sys_role_menu WHERE ( deleted= 0 ) ) t_1 on t_1.menu_id = t_0.id 
join (select * from sys_role_user WHERE ( deleted= 0 ) ) t_2 on t_2.role_id = t_1.role_id 
 WHERE t_2.user_id IN ( '110588348101165911' ) AND t_2.deleted= 0 ORDER BY isnull( t_0.sort ) -1 ASC, t_0.sort ASC
┣ 结果： 
┣━ 耗时：304ms , start = 1640331597070
┣━ 返回：RcdSet,size=1270
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT t_0.id , t_0.label , t_0.parent_id , t_0.authority , t_0.css ,... ] ━━━━━ 

15:39:57.487 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'T001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：62ms , start = 1640331597424
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_tenant WHERE ( deleted= ... ] ━━━━━ 

15:39:57.487 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：62ms , start = 1640331597424
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:39:57.536 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_9":"516603629470224384","PARAM_8":"490638744550907904","PARAM_10":"526783192724672512","PARAM_7":"487660170021703680","PARAM_11":0,"PARAM_6":"501416282168492032","PARAM_5":"[]","PARAM_4":"526510493767045120","PARAM_3":"482877676047040511","PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '482877676047040511' , '526510493767045120' , '[]' , '501416282168492032' , '487660170021703680' , '490638744550907904' , '516603629470224384' , '526783192724672512' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：95ms , start = 1640331597428
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.541 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_17":"484684747155439616","PARAM_18":"489922965425618944","PARAM_19":"474123290672103424","PARAM_31":"521358026301505536","PARAM_10":"489901512886059008","PARAM_32":"484687827645239296","PARAM_11":"471622514443812864","PARAM_33":"472023108039999488","PARAM_12":"498885073529995264","PARAM_34":"471623107291906048","PARAM_13":"521359007194021888","PARAM_35":"477956217075924992","PARAM_14":"478603507688013824","PARAM_36":0,"PARAM_15":"487660170021703680","PARAM_16":"485936556654198784","PARAM_30":"490924065570164737","PARAM_9":"472331129437814784","PARAM_8":"463402969874825216","PARAM_7":"494904212426063872","PARAM_6":"507635144501231616","PARAM_5":"478080872159903744","PARAM_4":"","PARAM_3":"485560933834293248","PARAM_2":"479388218479869952","PARAM_1":0,"PARAM_28":"525223461266653184","PARAM_29":"490888724289159168","PARAM_20":"477952342537273344","PARAM_21":"519150902574055424","PARAM_22":"488696580300341248","PARAM_23":"514022960453910528","PARAM_24":"463400000391479296","PARAM_25":"521358569375793152","PARAM_26":"[]","PARAM_27":"501074097552228352"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '479388218479869952' , '485560933834293248' , '' , '478080872159903744' , '507635144501231616' , '494904212426063872' , '463402969874825216' , '472331129437814784' , '489901512886059008' , '471622514443812864' , '498885073529995264' , '521359007194021888' , '478603507688013824' , '487660170021703680' , '485936556654198784' , '484684747155439616' , '489922965425618944' , '474123290672103424' , '477952342537273344' , '519150902574055424' , '488696580300341248' , '514022960453910528' , '463400000391479296' , '521358569375793152' , '[]' , '501074097552228352' , '525223461266653184' , '490888724289159168' , '490924065570164737' , '521358026301505536' , '484687827645239296' , '472023108039999488' , '471623107291906048' , '477956217075924992' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：100ms , start = 1640331597428
┣━ 返回：RcdSet,size=32
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.609 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"480377913464586240","PARAM_18":"511607133662347264","PARAM_19":"521358823697416192","PARAM_20":"479956459375820800","PARAM_10":"508300419328376832","PARAM_21":0,"PARAM_11":"481749744998154240","PARAM_12":"479008663701291008","PARAM_13":"476673967462023168","PARAM_14":"479354710537535488","PARAM_15":"485888529612668928","PARAM_16":"478585173336653824","PARAM_9":"463399683914465280","PARAM_8":"471974283854217216","PARAM_7":"463429350247628800","PARAM_6":"515109178721697792","PARAM_5":"483218056047230976","PARAM_4":"463708992481263616","PARAM_3":"","PARAM_2":"494597317773492224"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '494597317773492224' , '' , '463708992481263616' , '483218056047230976' , '515109178721697792' , '463429350247628800' , '471974283854217216' , '463399683914465280' , '508300419328376832' , '481749744998154240' , '479008663701291008' , '476673967462023168' , '479354710537535488' , '485888529612668928' , '478585173336653824' , '480377913464586240' , '511607133662347264' , '521358823697416192' , '479956459375820800' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：175ms , start = 1640331597431
┣━ 返回：RcdSet,size=18
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.620 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"479388218932854784","PARAM_31":"474159090990317568","PARAM_32":"479330038903209984","PARAM_33":"485936556943605760","PARAM_34":"475954740530774016","PARAM_35":"510887581764812800","PARAM_36":"477956217403080704","PARAM_37":"477956221781934080","PARAM_38":"471653536266977280","PARAM_30":"463401812293058560","PARAM_28":"489922965769551872","PARAM_29":"478080877377617920","PARAM_20":"472331129806913536","PARAM_21":"495244161406992384","PARAM_22":"484683936333561856","PARAM_23":"473733255862943744","PARAM_24":"514022960873340928","PARAM_25":"479388227191439360","PARAM_26":"472331133846028288","PARAM_27":"474123290978287616","PARAM_17":"501072632922243072","PARAM_18":"472818971712684033","PARAM_19":"472023113178021888","PARAM_97":"474123295055151104","PARAM_10":"488696580921098240","PARAM_98":"519150902678913024","PARAM_11":"482573211888779264","PARAM_99":"463402970206175232","PARAM_12":"481749150413619200","PARAM_13":"517640837794889728","PARAM_14":"521358027220058112","PARAM_15":"463397133957988352","PARAM_16":"484684747470012416","PARAM_90":"521358569501622272","PARAM_91":"476679545236226048","PARAM_92":"478626344431779840","PARAM_93":"494597321997156352","PARAM_94":"472331326201004032","PARAM_95":"521358570889936896","PARAM_96":"463401584798203904","PARAM_86":"471623112182464512","PARAM_87":"495243926484025344","PARAM_88":"464788442501349376","PARAM_89":"477952342965092352","PARAM_80":"484683932139257856","PARAM_81":"521359007324045312","PARAM_82":"471622514821300224","PARAM_83":"473609130683138048","PARAM_84":"486313023716196352","PARAM_85":"482877680811769856","PARAM_103":"521359008745914368","PARAM_104":"485747528893988864","PARAM_101":"479354715398733824","PARAM_102":"508300428283215872","PARAM_107":"489901513284517888","PARAM_108":"487559541341290496","PARAM_105":"480377918011211776","PARAM_106":"494904212736442368","PARAM_75":"492410578774523904","PARAM_76":"483218060644188160","PARAM_77":"521358026385391616","PARAM_109":"482581324939395072","PARAM_78":"475686681035407360","PARAM_79":"484680990048911360","PARAM_70":"482865232566288384","PARAM_71":"478080872541585408","PARAM_72":"472023108392321024","PARAM_73":"473771451304902656","PARAM_74":"479330034058788864","PARAM_9":"471974287931080704","PARAM_8":"481338866817564672","PARAM_7":"478603508019363840","PARAM_6":"479956464534814720","PARAM_5":"479959568621764608","PARAM_110":"471666417796644864","PARAM_4":"511607134790615040","PARAM_111":"501074097912938496","PARAM_3":"463402973779722240","PARAM_2":0,"PARAM_1":0,"PARAM_64":"481068386625781760","PARAM_65":"471622519044964352","PARAM_66":"525222633608839168","PARAM_67":"485560938628382720","PARAM_68":"521358825169616896","PARAM_69":"486551844089233408","PARAM_60":"525268121129320448","PARAM_61":"489901519739551744","PARAM_62":"482581096999944192","PARAM_63":"488696589599113216","PARAM_100":"507635145327509504","PARAM_125":"490924383968169985","PARAM_126":"515109184639860736","PARAM_123":"476319986613223424","PARAM_124":"475686685250682880","PARAM_129":"472814616229969920","PARAM_127":"478922687092097024","PARAM_128":"479329289888595968","PARAM_53":"485560934119505920","PARAM_54":"479219962657898496","PARAM_55":"494904216788140032","PARAM_56":"479598110457200640","PARAM_57":"463399152273850368","PARAM_58":"514022965487075328","PARAM_59":"478603513186746368","PARAM_50":"472023703798939648","PARAM_51":"479008668327608320","PARAM_52":"471620638545543168","PARAM_130":"463399687542538240","PARAM_131":0,"PARAM_114":"477952348665151488","PARAM_115":"478585177820364800","PARAM_112":"507635154248794112","PARAM_113":"494904452583522304","PARAM_118":"485888533777612800","PARAM_119":"478688766404329472","PARAM_116":"480137012393803776","PARAM_117":"473228835811229696","PARAM_42":"487568371366232064","PARAM_43":"481563568920068096","PARAM_44":"463429355423399936","PARAM_45":"480492964435460096","PARAM_46":"523843700309098496","PARAM_47":"480481730000584704","PARAM_48":"463400000727023616","PARAM_49":"482583847255408640","PARAM_40":"463397736541061120","PARAM_41":"479220710963675136","PARAM_121":"489815788086099968","PARAM_122":"501072378579648512","PARAM_120":"471623107698753536"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463402973779722240' , '511607134790615040' , '479959568621764608' , '479956464534814720' , '478603508019363840' , '481338866817564672' , '471974287931080704' , '488696580921098240' , '482573211888779264' , '481749150413619200' , '517640837794889728' , '521358027220058112' , '463397133957988352' , '484684747470012416' , '501072632922243072' , '472818971712684033' , '472023113178021888' , '472331129806913536' , '495244161406992384' , '484683936333561856' , '473733255862943744' , '514022960873340928' , '479388227191439360' , '472331133846028288' , '474123290978287616' , '489922965769551872' , '478080877377617920' , '463401812293058560' , '474159090990317568' , '479330038903209984' , '485936556943605760' , '475954740530774016' , '510887581764812800' , '477956217403080704' , '477956221781934080' , '471653536266977280' , '479388218932854784' , '463397736541061120' , '479220710963675136' , '487568371366232064' , '481563568920068096' , '463429355423399936' , '480492964435460096' , '523843700309098496' , '480481730000584704' , '463400000727023616' , '482583847255408640' , '472023703798939648' , '479008668327608320' , '471620638545543168' , '485560934119505920' , '479219962657898496' , '494904216788140032' , '479598110457200640' , '463399152273850368' , '514022965487075328' , '478603513186746368' , '525268121129320448' , '489901519739551744' , '482581096999944192' , '488696589599113216' , '481068386625781760' , '471622519044964352' , '525222633608839168' , '485560938628382720' , '521358825169616896' , '486551844089233408' , '482865232566288384' , '478080872541585408' , '472023108392321024' , '473771451304902656' , '479330034058788864' , '492410578774523904' , '483218060644188160' , '521358026385391616' , '475686681035407360' , '484680990048911360' , '484683932139257856' , '521359007324045312' , '471622514821300224' , '473609130683138048' , '486313023716196352' , '482877680811769856' , '471623112182464512' , '495243926484025344' , '464788442501349376' , '477952342965092352' , '521358569501622272' , '476679545236226048' , '478626344431779840' , '494597321997156352' , '472331326201004032' , '521358570889936896' , '463401584798203904' , '474123295055151104' , '519150902678913024' , '463402970206175232' , '507635145327509504' , '479354715398733824' , '508300428283215872' , '521359008745914368' , '485747528893988864' , '480377918011211776' , '494904212736442368' , '489901513284517888' , '487559541341290496' , '482581324939395072' , '471666417796644864' , '501074097912938496' , '507635154248794112' , '494904452583522304' , '477952348665151488' , '478585177820364800' , '480137012393803776' , '473228835811229696' , '485888533777612800' , '478688766404329472' , '471623107698753536' , '489815788086099968' , '501072378579648512' , '476319986613223424' , '475686685250682880' , '490924383968169985' , '515109184639860736' , '478922687092097024' , '479329289888595968' , '472814616229969920' , '463399687542538240' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：184ms , start = 1640331597429
┣━ 返回：RcdSet,size=277
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:57.676 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"473733250494234624","PARAM_18":"516603629470224384","PARAM_19":"489818737319346176","PARAM_20":"490923970208468992","PARAM_10":"473609125796773888","PARAM_21":0,"PARAM_11":"498885073529995264","PARAM_12":"480389130912530432","PARAM_13":"478688762159693824","PARAM_14":"517640836658233344","PARAM_15":"490803384081711104","PARAM_16":"490923311769849856","PARAM_9":"480137007553576960","PARAM_8":"485747524208951296","PARAM_7":"490923211228188672","PARAM_6":"498582527229820928","PARAM_5":"510887580426829824","PARAM_4":"494904448380829696","PARAM_3":"[]","PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '[]' , '494904448380829696' , '510887580426829824' , '498582527229820928' , '490923211228188672' , '485747524208951296' , '480137007553576960' , '473609125796773888' , '498885073529995264' , '480389130912530432' , '478688762159693824' , '517640836658233344' , '490803384081711104' , '490923311769849856' , '473733250494234624' , '516603629470224384' , '489818737319346176' , '490923970208468992' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：186ms , start = 1640331597489
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.680 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"515190021716705280","PARAM_31":"486485883655032833","PARAM_32":"498780101593268225","PARAM_33":"498963858317115392","PARAM_34":"515117880593874945","PARAM_35":"490638839023411200","PARAM_36":"501653361645326336","PARAM_37":"501653278359031809","PARAM_38":"521282477461864448","PARAM_30":"498472737438703616","PARAM_28":"472814706734661633","PARAM_29":"498472886441353216","PARAM_20":"501653323472965633","PARAM_21":"498780063144083457","PARAM_22":"498472430189158400","PARAM_23":"498808937571680257","PARAM_24":"498809674066296832","PARAM_25":"498780092948807681","PARAM_26":"485819338599706624","PARAM_27":"490909222070915073","PARAM_17":"499939051860656128","PARAM_18":"485415687787917312","PARAM_19":"525222910407737344","PARAM_97":"498963895084384257","PARAM_10":"497490986344120320","PARAM_98":"463779102176837633","PARAM_11":"464827069453303809","PARAM_99":"490920008524763136","PARAM_12":"526778119344885760","PARAM_13":"521281128124907521","PARAM_14":"517689118029778944","PARAM_15":"516602639874527232","PARAM_16":"514445387440852993","PARAM_90":"501424056243851264","PARAM_91":"498809056404701185","PARAM_92":"498963847839744001","PARAM_93":"515190259999309825","PARAM_94":"517689123146829824","PARAM_95":"498971162877886465","PARAM_96":"490908208253112321","PARAM_86":"463779099165327360","PARAM_87":"498963891439534081","PARAM_88":"503188930321977344","PARAM_89":"517689122060505089","PARAM_80":"499954026838757376","PARAM_81":"499954055192252417","PARAM_82":"515190259152060416","PARAM_83":"497513389245857793","PARAM_84":"501653226060255233","PARAM_85":"497513348733075457","PARAM_103":"486485770673065984","PARAM_104":"525268291409674240","PARAM_101":"514445388736892928","PARAM_102":"517689121376833536","PARAM_107":"524600153961660416","PARAM_108":"474158954033709056","PARAM_105":"497513458128912385","PARAM_106":"499940736691601409","PARAM_75":"491206513122086913","PARAM_76":"498809287695400961","PARAM_77":"516603746558414848","PARAM_109":"491206464543657984","PARAM_78":"498473113529360385","PARAM_79":"498963890651004929","PARAM_70":"498779937252048897","PARAM_71":"478625404161097728","PARAM_72":"515117882481311744","PARAM_73":"515120996273881089","PARAM_74":"464827137099038721","PARAM_9":"521281126673678336","PARAM_8":"498971349855764481","PARAM_7":"499954030739460097","PARAM_6":"478626411003772928","PARAM_5":"498474569439387649","PARAM_110":"521282329352601600","PARAM_4":"514445384425148416","PARAM_111":"496813531019083776","PARAM_3":"504412977160523776","PARAM_2":0,"PARAM_1":0,"PARAM_64":"515190262654304256","PARAM_65":"490909866307620865","PARAM_66":"498809154048098304","PARAM_67":"498963856643588097","PARAM_68":"464827257593004033","PARAM_69":"498963846124273665","PARAM_60":"499954038733803521","PARAM_61":"490907983723630592","PARAM_62":"521281129047654400","PARAM_63":"498970926130397185","PARAM_100":"490915625305116672","PARAM_53":"499954049295060993","PARAM_54":"498780083792642049","PARAM_55":"478598694187307009","PARAM_56":"478625395923484673","PARAM_57":"515190261375041536","PARAM_58":"497513204994277377","PARAM_59":"467361506980265985","PARAM_50":"515119470813904896","PARAM_51":"526446579532435456","PARAM_52":"498474299326210049","PARAM_114":"515190044768600064","PARAM_115":"472811546343374849","PARAM_112":"499939072068812801","PARAM_113":"521282334683561984","PARAM_118":"499939072706347008","PARAM_119":"498582106398523393","PARAM_116":"499939062635823104","PARAM_117":"516603899361103872","PARAM_42":"497514241515847681","PARAM_43":"498962214124781568","PARAM_44":"515118156822347777","PARAM_45":"498962218231005184","PARAM_46":"498809191108968448","PARAM_47":"526446505431666688","PARAM_48":"473612688681861120","PARAM_49":"515118155274649600","PARAM_40":"501653242430623745","PARAM_41":"464828186346127361","PARAM_121":0,"PARAM_120":"474158850757361665"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '504412977160523776' , '514445384425148416' , '498474569439387649' , '478626411003772928' , '499954030739460097' , '498971349855764481' , '521281126673678336' , '497490986344120320' , '464827069453303809' , '526778119344885760' , '521281128124907521' , '517689118029778944' , '516602639874527232' , '514445387440852993' , '499939051860656128' , '485415687787917312' , '525222910407737344' , '501653323472965633' , '498780063144083457' , '498472430189158400' , '498808937571680257' , '498809674066296832' , '498780092948807681' , '485819338599706624' , '490909222070915073' , '472814706734661633' , '498472886441353216' , '498472737438703616' , '486485883655032833' , '498780101593268225' , '498963858317115392' , '515117880593874945' , '490638839023411200' , '501653361645326336' , '501653278359031809' , '521282477461864448' , '515190021716705280' , '501653242430623745' , '464828186346127361' , '497514241515847681' , '498962214124781568' , '515118156822347777' , '498962218231005184' , '498809191108968448' , '526446505431666688' , '473612688681861120' , '515118155274649600' , '515119470813904896' , '526446579532435456' , '498474299326210049' , '499954049295060993' , '498780083792642049' , '478598694187307009' , '478625395923484673' , '515190261375041536' , '497513204994277377' , '467361506980265985' , '499954038733803521' , '490907983723630592' , '521281129047654400' , '498970926130397185' , '515190262654304256' , '490909866307620865' , '498809154048098304' , '498963856643588097' , '464827257593004033' , '498963846124273665' , '498779937252048897' , '478625404161097728' , '515117882481311744' , '515120996273881089' , '464827137099038721' , '491206513122086913' , '498809287695400961' , '516603746558414848' , '498473113529360385' , '498963890651004929' , '499954026838757376' , '499954055192252417' , '515190259152060416' , '497513389245857793' , '501653226060255233' , '497513348733075457' , '463779099165327360' , '498963891439534081' , '503188930321977344' , '517689122060505089' , '501424056243851264' , '498809056404701185' , '498963847839744001' , '515190259999309825' , '517689123146829824' , '498971162877886465' , '490908208253112321' , '498963895084384257' , '463779102176837633' , '490920008524763136' , '490915625305116672' , '514445388736892928' , '517689121376833536' , '486485770673065984' , '525268291409674240' , '497513458128912385' , '499940736691601409' , '524600153961660416' , '474158954033709056' , '491206464543657984' , '521282329352601600' , '496813531019083776' , '499939072068812801' , '521282334683561984' , '515190044768600064' , '472811546343374849' , '499939062635823104' , '516603899361103872' , '499939072706347008' , '498582106398523393' , '474158850757361665' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：239ms , start = 1640331597438
┣━ 返回：RcdSet,size=129
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:57.728 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"476660938984914944","PARAM_18":"482581320229191680","PARAM_19":0,"PARAM_10":"472331321499189248","PARAM_11":"476679540945453056","PARAM_12":"473626745103187968","PARAM_13":"492410573934297088","PARAM_14":"498885073529995264","PARAM_15":"476319981961740288","PARAM_16":"501389626531909632","PARAM_9":"463399148020826112","PARAM_8":"482573207459594240","PARAM_7":"475954735753461760","PARAM_6":"486313018175520768","PARAM_5":"[]","PARAM_4":"495243921824153600","PARAM_3":"505300850025955328","PARAM_2":"464788438000861184"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '464788438000861184' , '505300850025955328' , '495243921824153600' , '[]' , '486313018175520768' , '475954735753461760' , '482573207459594240' , '463399148020826112' , '472331321499189248' , '476679540945453056' , '473626745103187968' , '492410573934297088' , '498885073529995264' , '476319981961740288' , '501389626531909632' , '476660938984914944' , '482581320229191680' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：166ms , start = 1640331597561
┣━ 返回：RcdSet,size=16
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.734 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_17":"500337554411757568","PARAM_18":"471653531770683392","PARAM_19":"473771445873278976","PARAM_10":"473503433593192448","PARAM_11":"491342618928611328","PARAM_12":"465893030000328704","PARAM_13":"484680928828850176","PARAM_14":"481119852224839680","PARAM_15":"481068382330814464","PARAM_16":"479219957951889408","PARAM_9":"481749145309151232","PARAM_8":"501072373705867264","PARAM_7":"463400823506862080","PARAM_6":"495244156847783936","PARAM_5":"[]","PARAM_4":"501072627503202304","PARAM_3":"502195284776849408","PARAM_2":"","PARAM_1":0,"PARAM_20":"473534962490933248","PARAM_21":"487660170021703680","PARAM_22":"517640836658233344","PARAM_23":"463401580721340416","PARAM_24":"510887820433293312","PARAM_25":"479329585473781760","PARAM_26":0}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' , '502195284776849408' , '501072627503202304' , '[]' , '495244156847783936' , '463400823506862080' , '501072373705867264' , '481749145309151232' , '473503433593192448' , '491342618928611328' , '465893030000328704' , '484680928828850176' , '481119852224839680' , '481068382330814464' , '479219957951889408' , '500337554411757568' , '471653531770683392' , '473771445873278976' , '473534962490933248' , '487660170021703680' , '517640836658233344' , '463401580721340416' , '510887820433293312' , '479329585473781760' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：186ms , start = 1640331597546
┣━ 返回：RcdSet,size=22
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.736 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"473534967930945536","PARAM_31":"489922970169376768","PARAM_32":"484684753241374720","PARAM_33":"474281120842645504","PARAM_34":"498885085060136960","PARAM_35":"485936562941460480","PARAM_36":"472331135444058112","PARAM_37":"473534966525853696","PARAM_38":"481119858512101376","PARAM_30":"471623114069901312","PARAM_28":"index","PARAM_29":"473626750312513536","PARAM_20":"482864638480875520","PARAM_21":"485560940150915072","PARAM_22":"463400830083530752","PARAM_23":"478080879135031296","PARAM_24":"482583848937324544","PARAM_25":"498885082019266560","PARAM_26":"473503437766524928","PARAM_27":"490245513522708480","PARAM_17":"480389135564013568","PARAM_18":"492410580473217024","PARAM_19":"478585179489697792","PARAM_97":"521358571439390720","PARAM_10":"519151990324854784","PARAM_98":"498769910416015360","PARAM_11":"479329591786209280","PARAM_99":"476673974453927936","PARAM_12":"485747530676568064","PARAM_13":"473609132373442560","PARAM_14":"482573213478420480","PARAM_15":"481119856855351296","PARAM_16":"477956223535153152","PARAM_90":"488696593290100736","PARAM_91":"482864640208928768","PARAM_92":"471986331946319872","PARAM_93":"489901521874452480","PARAM_94":"490245511899512832","PARAM_95":"501074104456052736","PARAM_96":"498769993710698497","PARAM_86":"486313025783988224","PARAM_87":"523843702414639104","PARAM_88":"478922689172471808","PARAM_89":"521358823823245312","PARAM_80":"476319988295139328","PARAM_81":"521358028428017664","PARAM_82":"484683937952563200","PARAM_83":"479330040773869568","PARAM_84":"476660944341041152","PARAM_85":"471974284126846976","PARAM_103":"464788444141322240","PARAM_104":"481749749448310784","PARAM_101":"486551845917949952","PARAM_102":"494597318092259328","PARAM_107":"507635157855895552","PARAM_108":"463400828363866112","PARAM_105":"489077809105338368","PARAM_106":"480488581421334528","PARAM_75":"479956466397085696","PARAM_76":"501416295116308480","PARAM_77":"480389137287872512","PARAM_109":"483218056353415168","PARAM_78":"484680991584026624","PARAM_79":"478585173638643712","PARAM_70":"472819784346501121","PARAM_71":"480488583120027648","PARAM_72":"517640838222708736","PARAM_73":"485888529902075904","PARAM_74":"495201409763901440","PARAM_9":"508300419894607872","PARAM_8":"489077810774671360","PARAM_7":"479354710923411456","PARAM_6":"489922971863875584","PARAM_5":"471622520550719488","PARAM_110":"501416291903471616","PARAM_4":"501072114866978816","PARAM_111":"472811438801420289","PARAM_3":"463400006318030848","PARAM_2":0,"PARAM_1":0,"PARAM_64":"472037131183718400","PARAM_65":"473503439284862976","PARAM_66":"463399688926658560","PARAM_67":"479388229263425536","PARAM_68":"485936561238573056","PARAM_69":"481749745337892864","PARAM_60":"474281122537144320","PARAM_61":"480377913779159040","PARAM_62":"476660946173952000","PARAM_63":"482865234084626432","PARAM_100":"472818410917462016","PARAM_125":"481749751037952000","PARAM_126":"472358699843715073","PARAM_123":"481749152221364224","PARAM_124":"521359009299562496","PARAM_129":"463400007958003712","PARAM_127":"471666419482755072","PARAM_128":"471653537873395712","PARAM_53":"479218757961515008","PARAM_54":"463429350570590208","PARAM_55":"472819614665932801","PARAM_56":"510887822043906048","PARAM_57":"515109179094990848","PARAM_58":"479218756208295936","PARAM_59":"479956459719753728","PARAM_50":"481338868780498944","PARAM_51":"476673967776595968","PARAM_52":"463399153808965632","PARAM_130":"501072113185062912","PARAM_131":0,"PARAM_114":"473626751956680704","PARAM_115":"478956689802919936","PARAM_112":"472331327836782592","PARAM_113":"oauth","PARAM_118":"519151989741846528","PARAM_119":"501074102618947584","PARAM_116":"476679546897170432","PARAM_117":"463429357021429760","PARAM_42":"472023705464078336","PARAM_43":"463399684191289344","PARAM_44":"478956691585499136","PARAM_45":"479008663990697984","PARAM_46":"475686686903238656","PARAM_47":"510887582259740672","PARAM_48":"510887821632864256","PARAM_49":"476673972792983552","PARAM_40":"494904218386169856","PARAM_41":"514022967143825408","PARAM_121":"479329590288842752","PARAM_122":"511607133742039040","PARAM_120":"484684751630761984"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463400006318030848' , '501072114866978816' , '471622520550719488' , '489922971863875584' , '479354710923411456' , '489077810774671360' , '508300419894607872' , '519151990324854784' , '479329591786209280' , '485747530676568064' , '473609132373442560' , '482573213478420480' , '481119856855351296' , '477956223535153152' , '480389135564013568' , '492410580473217024' , '478585179489697792' , '482864638480875520' , '485560940150915072' , '463400830083530752' , '478080879135031296' , '482583848937324544' , '498885082019266560' , '473503437766524928' , '490245513522708480' , 'index' , '473626750312513536' , '471623114069901312' , '489922970169376768' , '484684753241374720' , '474281120842645504' , '498885085060136960' , '485936562941460480' , '472331135444058112' , '473534966525853696' , '481119858512101376' , '473534967930945536' , '494904218386169856' , '514022967143825408' , '472023705464078336' , '463399684191289344' , '478956691585499136' , '479008663990697984' , '475686686903238656' , '510887582259740672' , '510887821632864256' , '476673972792983552' , '481338868780498944' , '476673967776595968' , '463399153808965632' , '479218757961515008' , '463429350570590208' , '472819614665932801' , '510887822043906048' , '515109179094990848' , '479218756208295936' , '479956459719753728' , '474281122537144320' , '480377913779159040' , '476660946173952000' , '482865234084626432' , '472037131183718400' , '473503439284862976' , '463399688926658560' , '479388229263425536' , '485936561238573056' , '481749745337892864' , '472819784346501121' , '480488583120027648' , '517640838222708736' , '485888529902075904' , '495201409763901440' , '479956466397085696' , '501416295116308480' , '480389137287872512' , '484680991584026624' , '478585173638643712' , '476319988295139328' , '521358028428017664' , '484683937952563200' , '479330040773869568' , '476660944341041152' , '471974284126846976' , '486313025783988224' , '523843702414639104' , '478922689172471808' , '521358823823245312' , '488696593290100736' , '482864640208928768' , '471986331946319872' , '489901521874452480' , '490245511899512832' , '501074104456052736' , '498769993710698497' , '521358571439390720' , '498769910416015360' , '476673974453927936' , '472818410917462016' , '486551845917949952' , '494597318092259328' , '464788444141322240' , '481749749448310784' , '489077809105338368' , '480488581421334528' , '507635157855895552' , '463400828363866112' , '483218056353415168' , '501416291903471616' , '472811438801420289' , '472331327836782592' , 'oauth' , '473626751956680704' , '478956689802919936' , '476679546897170432' , '463429357021429760' , '519151989741846528' , '501074102618947584' , '484684751630761984' , '479329590288842752' , '511607133742039040' , '481749152221364224' , '521359009299562496' , '481749751037952000' , '472358699843715073' , '471666419482755072' , '471653537873395712' , '463400007958003712' , '501072113185062912' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：244ms , start = 1640331597490
┣━ 返回：RcdSet,size=154
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:57.763 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"481563563521998848","PARAM_11":"480481725315547136","PARAM_12":"490803523777200128","PARAM_13":0,"PARAM_9":"479220705905344512","PARAM_8":"490803286488645632","PARAM_7":"474281113125126144","PARAM_6":"482581092939857920","PARAM_5":"482877676047040512","PARAM_4":"463397731918938112","PARAM_3":"486551839098011648","PARAM_2":"498885073529995264"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '498885073529995264' , '486551839098011648' , '463397731918938112' , '482877676047040512' , '482581092939857920' , '474281113125126144' , '490803286488645632' , '479220705905344512' , '481563563521998848' , '480481725315547136' , '490803523777200128' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：143ms , start = 1640331597620
┣━ 返回：RcdSet,size=11
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.795 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"510887822354284544","PARAM_31":"478956693149974528","PARAM_32":"481338869564833792","PARAM_33":"481749751662903296","PARAM_34":"473626745392594944","PARAM_35":"501072115496124416","PARAM_36":"473733259285495808","PARAM_37":"476660946866012160","PARAM_38":"479330041516261376","PARAM_30":"492410574299201536","PARAM_28":"486551847209795584","PARAM_29":"484681008940056576","PARAM_20":"479330042220904448","PARAM_21":"486313027243606016","PARAM_22":"482573214082400256","PARAM_23":"463400008926887936","PARAM_24":"486551846547095552","PARAM_25":"system_config","PARAM_26":"485936563683852288","PARAM_27":"486313018553008128","PARAM_17":"479218759370801152","PARAM_18":"480488583736590336","PARAM_19":"471653538498347008","PARAM_97":"481119859787169792","PARAM_10":"481338870340780032","PARAM_98":"507635160540250112","PARAM_11":"480389138625855488","PARAM_99":"510887822199095296","PARAM_12":"473503440530571264","PARAM_13":"480481733238587392","PARAM_14":"473534968501370880","PARAM_15":"473626753412104192","PARAM_16":"476679541226471424","PARAM_90":"514022967743610880","PARAM_91":"463400831098552320","PARAM_92":"476319982246952960","PARAM_93":"472331321801179136","PARAM_94":"476673975825465344","PARAM_95":"472023706080641024","PARAM_96":"486313026476048384","PARAM_86":"482864640871628800","PARAM_87":"478956692394999808","PARAM_88":"501072381054287872","PARAM_89":"521358571649105920","PARAM_80":"476660947629375488","PARAM_81":"475954736080617472","PARAM_82":"501072635946336256","PARAM_83":"471974290447663104","PARAM_84":"482581320564736000","PARAM_85":"481119859145441280","PARAM_103":"479959571725549568","PARAM_104":"501389817515347968","PARAM_101":"515109188150493184","PARAM_102":"498885087492833280","PARAM_107":"523843704117526528","PARAM_108":"476660939324653568","PARAM_105":"498770119770505217","PARAM_106":"479219965778460672","PARAM_75":"471623114736795648","PARAM_76":"501416296345239552","PARAM_77":"484684753866326016","PARAM_109":"511607135537201152","PARAM_78":"479329592423743488","PARAM_79":"464788438315433984","PARAM_70":"479218758599049216","PARAM_71":"473534969071796224","PARAM_72":"479598105545670656","PARAM_73":"474281123879321600","PARAM_74":"476673976400084992","PARAM_9":"523843703270277120","PARAM_8":"492410581156888576","PARAM_7":"481749752275271680","PARAM_6":"476319989616345088","PARAM_5":"478080879852257280","PARAM_110":"492410581827977216","PARAM_4":"482865235280003072","PARAM_111":"463400008603926528","PARAM_3":"479329592994168832","PARAM_2":0,"PARAM_1":0,"PARAM_64":"507635159172907008","PARAM_65":"489922973222830080","PARAM_66":"480488584403484672","PARAM_67":"482877683861028864","PARAM_68":"471666420116094976","PARAM_69":"498770254759985153","PARAM_60":"471666420770406400","PARAM_61":"482865234667634688","PARAM_62":"494904219631878144","PARAM_63":"484684754508054528","PARAM_100":"521358571854626816","PARAM_125":"476319988987199488","PARAM_126":"490245514197991424","PARAM_123":"474281123241787392","PARAM_124":"478178015856033792","PARAM_129":"501416297607725056","PARAM_127":"476679548117712896","PARAM_128":"494904219002732544","PARAM_53":"501074105877921792","PARAM_54":"482864641542717440","PARAM_55":"473626752741015552","PARAM_56":"489077811793887232","PARAM_57":"463400830758813696","PARAM_58":"498885086280679424","PARAM_59":"481749152917618688","PARAM_50":"498885074154946560","PARAM_51":"473503439867871232","PARAM_52":"473609133057114112","PARAM_130":"482573207753195520","PARAM_131":0,"PARAM_114":"490245514780999680","PARAM_115":"495243929508118528","PARAM_112":"501072116167213056","PARAM_113":"471653539131686912","PARAM_118":"501074105164890112","PARAM_119":"483218063576006656","PARAM_116":"484681000786329600","PARAM_117":"519151990534569984","PARAM_42":"463399689744547840","PARAM_43":"482877683189940224","PARAM_44":"479388230056148992","PARAM_45":"463399148318621696","PARAM_46":"495243922151309312","PARAM_47":"480389137958961152","PARAM_48":"476679547505344512","PARAM_49":"489922972543352832","PARAM_40":"514022968620220416","PARAM_41":"489077811454148608","PARAM_121":"482573214719934464","PARAM_122":"501072381725376512","PARAM_120":"519151990744285184"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479329592994168832' , '482865235280003072' , '478080879852257280' , '476319989616345088' , '481749752275271680' , '492410581156888576' , '523843703270277120' , '481338870340780032' , '480389138625855488' , '473503440530571264' , '480481733238587392' , '473534968501370880' , '473626753412104192' , '476679541226471424' , '479218759370801152' , '480488583736590336' , '471653538498347008' , '479330042220904448' , '486313027243606016' , '482573214082400256' , '463400008926887936' , '486551846547095552' , 'system_config' , '485936563683852288' , '486313018553008128' , '486551847209795584' , '484681008940056576' , '492410574299201536' , '478956693149974528' , '481338869564833792' , '481749751662903296' , '473626745392594944' , '501072115496124416' , '473733259285495808' , '476660946866012160' , '479330041516261376' , '510887822354284544' , '514022968620220416' , '489077811454148608' , '463399689744547840' , '482877683189940224' , '479388230056148992' , '463399148318621696' , '495243922151309312' , '480389137958961152' , '476679547505344512' , '489922972543352832' , '498885074154946560' , '473503439867871232' , '473609133057114112' , '501074105877921792' , '482864641542717440' , '473626752741015552' , '489077811793887232' , '463400830758813696' , '498885086280679424' , '481749152917618688' , '471666420770406400' , '482865234667634688' , '494904219631878144' , '484684754508054528' , '507635159172907008' , '489922973222830080' , '480488584403484672' , '482877683861028864' , '471666420116094976' , '498770254759985153' , '479218758599049216' , '473534969071796224' , '479598105545670656' , '474281123879321600' , '476673976400084992' , '471623114736795648' , '501416296345239552' , '484684753866326016' , '479329592423743488' , '464788438315433984' , '476660947629375488' , '475954736080617472' , '501072635946336256' , '471974290447663104' , '482581320564736000' , '481119859145441280' , '482864640871628800' , '478956692394999808' , '501072381054287872' , '521358571649105920' , '514022967743610880' , '463400831098552320' , '476319982246952960' , '472331321801179136' , '476673975825465344' , '472023706080641024' , '486313026476048384' , '481119859787169792' , '507635160540250112' , '510887822199095296' , '521358571854626816' , '515109188150493184' , '498885087492833280' , '479959571725549568' , '501389817515347968' , '498770119770505217' , '479219965778460672' , '523843704117526528' , '476660939324653568' , '511607135537201152' , '492410581827977216' , '463400008603926528' , '501072116167213056' , '471653539131686912' , '490245514780999680' , '495243929508118528' , '484681000786329600' , '519151990534569984' , '501074105164890112' , '483218063576006656' , '519151990744285184' , '482573214719934464' , '501072381725376512' , '474281123241787392' , '478178015856033792' , '476319988987199488' , '490245514197991424' , '476679548117712896' , '494904219002732544' , '501416297607725056' , '482573207753195520' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：112ms , start = 1640331597681
┣━ 返回：RcdSet,size=108
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:57.802 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"483218062917500928","PARAM_31":"488696594527420416","PARAM_32":"501072380383199232","PARAM_33":"515109186632155136","PARAM_34":"482581326621310976","PARAM_35":"485747524523524096","PARAM_36":"473771453230088192","PARAM_37":"479219964406923264","PARAM_38":"478603514990297088","PARAM_30":"479329284624744448","PARAM_28":"516601919007887360","PARAM_29":"479354717013540864","PARAM_20":"485888535333699584","PARAM_21":"480377919596658688","PARAM_22":"480137007910092800","PARAM_23":"473733257758769152","PARAM_24":"478688762461683712","PARAM_25":"479598112373997568","PARAM_26":"478688767939444736","PARAM_27":"495243928195301376","PARAM_17":"485888535908319232","PARAM_18":"get-current-user","PARAM_19":"463401814398599168","PARAM_97":"472331328520454144","PARAM_10":"498581971681673216","PARAM_98":"494597324215943168","PARAM_11":"472023115707187200","PARAM_99":"483218062279966720","PARAM_12":"521358825886842880","PARAM_13":"477956224147521536","PARAM_14":"475686687532384256","PARAM_15":"463399154400362496","PARAM_16":"495243928853807104","PARAM_90":"463397738646601728","PARAM_91":"475954743139631104","PARAM_92":"463402976065617920","PARAM_93":"478922689868726272","PARAM_94":"463401586794692608","PARAM_95":"489815790388772864","PARAM_96":"472331135993511936","PARAM_86":"471622521137922048","PARAM_87":"495244163676110848","PARAM_88":"479220713446703104","PARAM_89":"474155093021687808","PARAM_80":"473228716474892288","PARAM_81":"479329292388401152","PARAM_82":"510887580523298816","PARAM_83":"501072635275247616","PARAM_84":"471974289361338368","PARAM_85":"hrm","PARAM_103":"463399689467723776","PARAM_104":"508300431265366016","PARAM_101":"475954742317547520","PARAM_102":"511607135369428992","PARAM_107":"487568374700703744","PARAM_108":"479008670655447040","PARAM_105":"480492966025101312","PARAM_106":"479008669908860928","PARAM_75":"471985490283724800","PARAM_76":"489901522558124032","PARAM_77":"477952351441780736","PARAM_109":"480492966641664000","PARAM_78":"480481731707666432","PARAM_79":"474158815193858049","PARAM_70":"487568375958994944","PARAM_71":"504682762972704768","PARAM_72":"472023114964795392","PARAM_73":"473771454031200256","PARAM_74":"479959570941214720","PARAM_9":"494904448682819584","PARAM_8":"494597323653906432","PARAM_7":"485560940721340416","PARAM_6":"480137014788751360","PARAM_5":"495244163038576640","PARAM_110":"517640836742119424","PARAM_4":"481068388223811584","PARAM_111":"474123296653180928","PARAM_3":"479354717600743424","PARAM_2":0,"PARAM_1":0,"PARAM_64":"464788444783050752","PARAM_65":"473550018758836225","PARAM_66":"478603515636219904","PARAM_67":"480377920209027072","PARAM_68":"481563571654754304","PARAM_69":"484683938606874624","PARAM_60":"510887582448484352","PARAM_61":"521358028549652480","PARAM_62":"479959570282708992","PARAM_63":"463401813807202304","PARAM_100":"487559544579293184","PARAM_125":"521359009509277696","PARAM_126":"521358825685516288","PARAM_123":"479598113124777984","PARAM_124":"489815783782744064","PARAM_129":"482877682514657280","PARAM_127":"481068388831985664","PARAM_128":"479956467156254720","PARAM_53":"485747531372822528","PARAM_54":"487559545757892608","PARAM_55":"480137014188965888","PARAM_56":"480481732412309504","PARAM_57":"463429357650575360","PARAM_58":"478585180114649088","PARAM_59":"489815789730267136","PARAM_50":"473733258505355264","PARAM_51":"501072634599964672","PARAM_52":"482581327279816704","PARAM_130":"463401586228461568","PARAM_131":0,"PARAM_114":"494904454114443264","PARAM_115":"481563570933334016","PARAM_112":"474155529355132929","PARAM_113":"482581098463756288","PARAM_118":"479219965136732160","PARAM_119":"508300432511074304","PARAM_116":"511607135210045440","PARAM_117":"471974289902403584","PARAM_42":"463397738055204864","PARAM_43":"479220712784003072","PARAM_44":"477952350720360448","PARAM_45":"478688768535035904","PARAM_46":"480389131239686144","PARAM_47":"482583849616801792","PARAM_48":"463402975415500800","PARAM_49":"473609126128123904","PARAM_40":"482581099034181632","PARAM_41":"473733250888499200","PARAM_121":"474123297290715136","PARAM_122":"479329291742478336","PARAM_120":"494904454714228736"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479354717600743424' , '481068388223811584' , '495244163038576640' , '480137014788751360' , '485560940721340416' , '494597323653906432' , '494904448682819584' , '498581971681673216' , '472023115707187200' , '521358825886842880' , '477956224147521536' , '475686687532384256' , '463399154400362496' , '495243928853807104' , '485888535908319232' , 'get-current-user' , '463401814398599168' , '485888535333699584' , '480377919596658688' , '480137007910092800' , '473733257758769152' , '478688762461683712' , '479598112373997568' , '478688767939444736' , '495243928195301376' , '516601919007887360' , '479354717013540864' , '479329284624744448' , '488696594527420416' , '501072380383199232' , '515109186632155136' , '482581326621310976' , '485747524523524096' , '473771453230088192' , '479219964406923264' , '478603514990297088' , '483218062917500928' , '482581099034181632' , '473733250888499200' , '463397738055204864' , '479220712784003072' , '477952350720360448' , '478688768535035904' , '480389131239686144' , '482583849616801792' , '463402975415500800' , '473609126128123904' , '473733258505355264' , '501072634599964672' , '482581327279816704' , '485747531372822528' , '487559545757892608' , '480137014188965888' , '480481732412309504' , '463429357650575360' , '478585180114649088' , '489815789730267136' , '510887582448484352' , '521358028549652480' , '479959570282708992' , '463401813807202304' , '464788444783050752' , '473550018758836225' , '478603515636219904' , '480377920209027072' , '481563571654754304' , '484683938606874624' , '487568375958994944' , '504682762972704768' , '472023114964795392' , '473771454031200256' , '479959570941214720' , '471985490283724800' , '489901522558124032' , '477952351441780736' , '480481731707666432' , '474158815193858049' , '473228716474892288' , '479329292388401152' , '510887580523298816' , '501072635275247616' , '471974289361338368' , 'hrm' , '471622521137922048' , '495244163676110848' , '479220713446703104' , '474155093021687808' , '463397738646601728' , '475954743139631104' , '463402976065617920' , '478922689868726272' , '463401586794692608' , '489815790388772864' , '472331135993511936' , '472331328520454144' , '494597324215943168' , '483218062279966720' , '487559544579293184' , '475954742317547520' , '511607135369428992' , '463399689467723776' , '508300431265366016' , '480492966025101312' , '479008669908860928' , '487568374700703744' , '479008670655447040' , '480492966641664000' , '517640836742119424' , '474123296653180928' , '474155529355132929' , '482581098463756288' , '494904454114443264' , '481563570933334016' , '511607135210045440' , '471974289902403584' , '479219965136732160' , '508300432511074304' , '494904454714228736' , '474123297290715136' , '479329291742478336' , '479598113124777984' , '489815783782744064' , '521359009509277696' , '521358825685516288' , '481068388831985664' , '479956467156254720' , '482877682514657280' , '463401586228461568' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：157ms , start = 1640331597637
┣━ 返回：RcdSet,size=106
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:57.844 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_9":0,"PARAM_8":"487559532503891968","PARAM_7":"480488576534970368","PARAM_6":"472023699273285632","PARAM_5":"479218751024136192","PARAM_4":"490245507570991104","PARAM_3":"482864633716146176","PARAM_2":"[]"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '[]' , '482864633716146176' , '490245507570991104' , '479218751024136192' , '472023699273285632' , '480488576534970368' , '487559532503891968' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：111ms , start = 1640331597732
┣━ 返回：RcdSet,size=6
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.844 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_9":"481338861117505536","PARAM_8":"463401807993896960","PARAM_10":"489077805078806528","PARAM_7":"479959564171608064","PARAM_11":"471666413233242112","PARAM_6":"523843695028469760","PARAM_12":0,"PARAM_5":"[]","PARAM_4":"498885073529995264","PARAM_3":"","PARAM_2":"492410573934297088"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '492410573934297088' , '' , '498885073529995264' , '[]' , '523843695028469760' , '479959564171608064' , '463401807993896960' , '481338861117505536' , '489077805078806528' , '471666413233242112' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：104ms , start = 1640331597739
┣━ 返回：RcdSet,size=8
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.847 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"463400835502571520","PARAM_31":"479219958253879296","PARAM_32":"471623119950315520","PARAM_33":"475686692922064896","PARAM_34":"471653532135587840","PARAM_35":"521282330438926337","PARAM_36":"499939063264968705","PARAM_37":"474158548662616065","PARAM_38":"498963857323065345","PARAM_30":"500338282807173120","PARAM_28":"501653165884575744","PARAM_29":"501072627838746624","PARAM_20":"463429362776014848","PARAM_21":"463400823850795008","PARAM_22":"499940744069382145","PARAM_23":"497513282840559617","PARAM_24":"490920319637262337","PARAM_25":"515117881764085760","PARAM_26":"476673982108532736","PARAM_27":"474159041438810113","PARAM_17":"501390061263130624","PARAM_18":"474157822892834817","PARAM_19":"471666425635799040","PARAM_97":"471622526703763456","PARAM_10":"497513009569071104","PARAM_98":"472358185009676289","PARAM_11":"481749158911279104","PARAM_99":"478625384087158785","PARAM_12":"489077816151769088","PARAM_13":"485560945611898880","PARAM_14":"463400013167329280","PARAM_15":"478688773647892480","PARAM_16":"490925002938388480","PARAM_90":"471653543871250432","PARAM_91":"479956473208635392","PARAM_92":"495244157174939648","PARAM_93":"486485877028032513","PARAM_94":"463399158544334848","PARAM_95":"491342702357512192","PARAM_96":"471974294486777856","PARAM_86":"471986344285962240","PARAM_87":"485395845907230720","PARAM_88":"481749145669861376","PARAM_89":"502170004054085633","PARAM_80":"465893287996162048","PARAM_81":"478598569259962368","PARAM_82":"486487652200091649","PARAM_83":"475955437510852608","PARAM_84":"515190045229973505","PARAM_85":"498963844891148289","PARAM_103":"481749756972892160","PARAM_104":"473036391530364929","PARAM_101":"521281127378321409","PARAM_102":"515109194081239040","PARAM_107":"480486574191026176","PARAM_108":"479220720316973056","PARAM_105":"481068382628610048","PARAM_106":"472331141001510912","PARAM_75":"463401590787670016","PARAM_76":"510887820517179392","PARAM_77":"472023711478710272","PARAM_109":"463401818576125952","PARAM_78":"501073274482987009","PARAM_79":"504683060067840001","PARAM_70":"501072641218576384","PARAM_71":"479959576465113088","PARAM_72":"504060697101996032","PARAM_73":"489424103724285952","PARAM_74":"498472529019543553","PARAM_9":"487559557153816576","PARAM_8":"502170156177297409","PARAM_7":"473227868306931712","PARAM_6":"498962211822108672","PARAM_5":"487568387254255616","PARAM_110":"514445360546975744","PARAM_4":"498473196719185920","PARAM_111":"463402980524163072","PARAM_3":"479218764370411520","PARAM_2":0,"PARAM_1":0,"PARAM_64":"515190041257967617","PARAM_65":"498809237418278912","PARAM_66":"463399693292929024","PARAM_67":"482865239696605184","PARAM_68":"482877688894193664","PARAM_69":"498472318377402368","PARAM_60":"485415810584555521","PARAM_61":"495244169128706048","PARAM_62":"501072374041411584","PARAM_63":"473534973345792000","PARAM_100":"476660952759009280","PARAM_125":"521281129953624065","PARAM_126":"484680929105674240","PARAM_123":"482864646571687936","PARAM_124":"499954050071007232","PARAM_129":"477956229818220544","PARAM_127":"478585185282031616","PARAM_128":"482581332891795456","PARAM_53":"473503433886793728","PARAM_54":"483567801252978688","PARAM_55":"473733264926834688","PARAM_56":"498808864725008384","PARAM_57":"463397743721709568","PARAM_58":"498472974811144192","PARAM_59":"490908428638621696","PARAM_50":"515119470113456128","PARAM_51":"482581103912157184","PARAM_52":"473612721665867776","PARAM_130":"473549948382609408","PARAM_131":0,"PARAM_114":"495243934444814336","PARAM_115":"471986431431016449","PARAM_112":"515120913977442304","PARAM_113":"472331333985632256","PARAM_118":"499939054448541696","PARAM_119":"526785381023092736","PARAM_116":"498970914482814977","PARAM_117":"479329585788354560","PARAM_42":"499940724104495105","PARAM_43":"479219970929065984","PARAM_44":"471985681850171393","PARAM_45":"515118156595855360","PARAM_46":"489815796164329472","PARAM_47":"495924945906302976","PARAM_48":"514445388166467584","PARAM_49":"463401581010747392","PARAM_40":"501072386968256512","PARAM_41":"473534962767757312","PARAM_121":"478603521634074624","PARAM_122":"473771446246572032","PARAM_120":"481119852547801088"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '479218764370411520' , '498473196719185920' , '487568387254255616' , '498962211822108672' , '473227868306931712' , '502170156177297409' , '487559557153816576' , '497513009569071104' , '481749158911279104' , '489077816151769088' , '485560945611898880' , '463400013167329280' , '478688773647892480' , '490925002938388480' , '501390061263130624' , '474157822892834817' , '471666425635799040' , '463429362776014848' , '463400823850795008' , '499940744069382145' , '497513282840559617' , '490920319637262337' , '515117881764085760' , '476673982108532736' , '474159041438810113' , '501653165884575744' , '501072627838746624' , '500338282807173120' , '479219958253879296' , '471623119950315520' , '475686692922064896' , '471653532135587840' , '521282330438926337' , '499939063264968705' , '474158548662616065' , '498963857323065345' , '463400835502571520' , '501072386968256512' , '473534962767757312' , '499940724104495105' , '479219970929065984' , '471985681850171393' , '515118156595855360' , '489815796164329472' , '495924945906302976' , '514445388166467584' , '463401581010747392' , '515119470113456128' , '482581103912157184' , '473612721665867776' , '473503433886793728' , '483567801252978688' , '473733264926834688' , '498808864725008384' , '463397743721709568' , '498472974811144192' , '490908428638621696' , '485415810584555521' , '495244169128706048' , '501072374041411584' , '473534973345792000' , '515190041257967617' , '498809237418278912' , '463399693292929024' , '482865239696605184' , '482877688894193664' , '498472318377402368' , '501072641218576384' , '479959576465113088' , '504060697101996032' , '489424103724285952' , '498472529019543553' , '463401590787670016' , '510887820517179392' , '472023711478710272' , '501073274482987009' , '504683060067840001' , '465893287996162048' , '478598569259962368' , '486487652200091649' , '475955437510852608' , '515190045229973505' , '498963844891148289' , '471986344285962240' , '485395845907230720' , '481749145669861376' , '502170004054085633' , '471653543871250432' , '479956473208635392' , '495244157174939648' , '486485877028032513' , '463399158544334848' , '491342702357512192' , '471974294486777856' , '471622526703763456' , '472358185009676289' , '478625384087158785' , '476660952759009280' , '521281127378321409' , '515109194081239040' , '481749756972892160' , '473036391530364929' , '481068382628610048' , '472331141001510912' , '480486574191026176' , '479220720316973056' , '463401818576125952' , '514445360546975744' , '463402980524163072' , '515120913977442304' , '472331333985632256' , '495243934444814336' , '471986431431016449' , '498970914482814977' , '479329585788354560' , '499939054448541696' , '526785381023092736' , '481119852547801088' , '478603521634074624' , '473771446246572032' , '482864646571687936' , '499954050071007232' , '521281129953624065' , '484680929105674240' , '478585185282031616' , '482581332891795456' , '477956229818220544' , '473549948382609408' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：154ms , start = 1640331597691
┣━ 返回：RcdSet,size=160
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:57.887 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"501072108604882944","PARAM_11":"487568361882910720","PARAM_12":"478956684543262720","PARAM_13":0,"PARAM_9":"482583842692005888","PARAM_8":"480492959255494656","PARAM_7":"501416282168492032","PARAM_6":"[]","PARAM_5":"498885073529995264","PARAM_4":"478922681358483456","PARAM_3":"","PARAM_2":"482865228384567296"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '482865228384567296' , '' , '478922681358483456' , '498885073529995264' , '[]' , '501416282168492032' , '480492959255494656' , '482583842692005888' , '501072108604882944' , '487568361882910720' , '478956684543262720' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：139ms , start = 1640331597747
┣━ 返回：RcdSet,size=9
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from sys_resourze WHERE ( deleted... ] ━━━━━ 

15:39:57.919 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"463429357977731072","PARAM_31":"482581327950905344","PARAM_32":"463399154698158080","PARAM_33":"482581093229264896","PARAM_34":"482581099617189888","PARAM_35":"481563572455866368","PARAM_36":"474123297894694912","PARAM_37":"485888537137250304","PARAM_38":"479956468586512384","PARAM_30":"481749153626456064","PARAM_28":"479598113862975488","PARAM_29":"494597324853477376","PARAM_20":"478688769155792896","PARAM_21":"472331136572325888","PARAM_22":"473771454769397760","PARAM_23":"471623115881840640","PARAM_24":"479956467907035136","PARAM_25":"484683939244408832","PARAM_26":"463402976384385024","PARAM_27":"475686688278970368","PARAM_17":"463429358598488064","PARAM_18":"479220714138763264","PARAM_19":"517640838696665088","PARAM_97":"463402977026113536","PARAM_10":"479598114576007168","PARAM_98":"472023707355709440","PARAM_11":"464788445420584960","PARAM_99":"479008671368478720","PARAM_12":"479354718158585856","PARAM_13":"485853808635678720","PARAM_14":"463397133957988354","PARAM_15":"463401815308763136","PARAM_16":"478603517087449088","PARAM_90":"494597325411319808","PARAM_91":"463401814696394752","PARAM_92":"479388230924369920","PARAM_93":"489815791064055808","PARAM_94":"478625116503146496","PARAM_95":"485747532043911168","PARAM_96":"482581328609411072","PARAM_86":"521359010843066368","PARAM_87":"472331329841659904","PARAM_88":"474123298494480384","PARAM_89":"477956224856358912","PARAM_80":"489815791709978624","PARAM_81":"477956225548419072","PARAM_82":"472331329199931392","PARAM_83":"485936564942143488","PARAM_84":"480377921387626496","PARAM_85":"521358028818087936","PARAM_103":"463399155289554944","PARAM_104":"472023116420218880","PARAM_101":"473609134411874304","PARAM_102":"478603516361834496","PARAM_107":"495244164322033664","PARAM_108":"471623115152031744","PARAM_105":"478585180710240256","PARAM_106":"471622521846759424","PARAM_75":"482583850279501824","PARAM_76":"494904455913799680","PARAM_77":"478080881207017472","PARAM_109":"486551839387418624","PARAM_78":"485747532740165632","PARAM_79":"519151990970777600","PARAM_70":"489901523275350016","PARAM_71":"478585181314220032","PARAM_72":"487568378521714688","PARAM_73":"481563563891097600","PARAM_74":"485560941274988544","PARAM_9":"479329293776715776","PARAM_8":"485936564371718144","PARAM_7":"463397732229316608","PARAM_6":"521358826281107456","PARAM_5":"508300433685479424","PARAM_110":"481068389998002176","PARAM_4":"521358826079780864","PARAM_111":"480481725646897152","PARAM_3":"484683939894525952","PARAM_2":0,"PARAM_1":0,"PARAM_64":"472023706713980928","PARAM_65":"463401587079905280","PARAM_66":"482583850896064512","PARAM_67":"485888536512299008","PARAM_68":"478688769768161280","PARAM_69":"479220706257666048","PARAM_60":"489901523904495616","PARAM_61":"481068389410799616","PARAM_62":"478080880531734528","PARAM_63":"510887582830166016","PARAM_100":"494903523763298304","PARAM_125":"478624924152365056","PARAM_126":"477952352960118784","PARAM_123":"464788446058119168","PARAM_124":"485560941845413888","PARAM_129":"481749154318516224","PARAM_127":"471974290984534016","PARAM_128":"463397739833589760","PARAM_53":"475954743840079872","PARAM_54":"479329593644285952","PARAM_55":"480492967241449472","PARAM_56":"487568377175343104","PARAM_57":"494904455314014208","PARAM_58":"521359009735770112","PARAM_59":"463397739233804288","PARAM_50":"480137015552114688","PARAM_51":"474281113531973632","PARAM_52":"471622522614317056","PARAM_130":"498885088876953600","PARAM_131":0,"PARAM_114":"498770477079068673","PARAM_115":"480377920796229632","PARAM_112":"478922690648866816","PARAM_113":"521358028679675904","PARAM_118":"488696597023031296","PARAM_119":"475954744494391296","PARAM_116":"482877676386779136","PARAM_117":"487559547058126848","PARAM_42":"517640838537281536","PARAM_43":"478922691353509888","PARAM_44":"481563573261172736","PARAM_45":"477952352276447232","PARAM_46":"474154919352336384","PARAM_47":"510887582641422336","PARAM_48":"473609133728202752","PARAM_49":"479388232048443392","PARAM_40":"472331137151139840","PARAM_41":"472036243182452736","PARAM_121":"481119860437286912","PARAM_122":"488696595773128704","PARAM_120":"472023117196165120"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '484683939894525952' , '521358826079780864' , '508300433685479424' , '521358826281107456' , '463397732229316608' , '485936564371718144' , '479329293776715776' , '479598114576007168' , '464788445420584960' , '479354718158585856' , '485853808635678720' , '463397133957988354' , '463401815308763136' , '478603517087449088' , '463429358598488064' , '479220714138763264' , '517640838696665088' , '478688769155792896' , '472331136572325888' , '473771454769397760' , '471623115881840640' , '479956467907035136' , '484683939244408832' , '463402976384385024' , '475686688278970368' , '479598113862975488' , '494597324853477376' , '481749153626456064' , '482581327950905344' , '463399154698158080' , '482581093229264896' , '482581099617189888' , '481563572455866368' , '474123297894694912' , '485888537137250304' , '479956468586512384' , '463429357977731072' , '472331137151139840' , '472036243182452736' , '517640838537281536' , '478922691353509888' , '481563573261172736' , '477952352276447232' , '474154919352336384' , '510887582641422336' , '473609133728202752' , '479388232048443392' , '480137015552114688' , '474281113531973632' , '471622522614317056' , '475954743840079872' , '479329593644285952' , '480492967241449472' , '487568377175343104' , '494904455314014208' , '521359009735770112' , '463397739233804288' , '489901523904495616' , '481068389410799616' , '478080880531734528' , '510887582830166016' , '472023706713980928' , '463401587079905280' , '482583850896064512' , '485888536512299008' , '478688769768161280' , '479220706257666048' , '489901523275350016' , '478585181314220032' , '487568378521714688' , '481563563891097600' , '485560941274988544' , '482583850279501824' , '494904455913799680' , '478080881207017472' , '485747532740165632' , '519151990970777600' , '489815791709978624' , '477956225548419072' , '472331329199931392' , '485936564942143488' , '480377921387626496' , '521358028818087936' , '521359010843066368' , '472331329841659904' , '474123298494480384' , '477956224856358912' , '494597325411319808' , '463401814696394752' , '479388230924369920' , '489815791064055808' , '478625116503146496' , '485747532043911168' , '482581328609411072' , '463402977026113536' , '472023707355709440' , '479008671368478720' , '494903523763298304' , '473609134411874304' , '478603516361834496' , '463399155289554944' , '472023116420218880' , '478585180710240256' , '471622521846759424' , '495244164322033664' , '471623115152031744' , '486551839387418624' , '481068389998002176' , '480481725646897152' , '478922690648866816' , '521358028679675904' , '498770477079068673' , '480377920796229632' , '482877676386779136' , '487559547058126848' , '488696597023031296' , '475954744494391296' , '472023117196165120' , '481119860437286912' , '488696595773128704' , '464788446058119168' , '485560941845413888' , '478624924152365056' , '477952352960118784' , '471974290984534016' , '463397739833589760' , '481749154318516224' , '498885088876953600' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：148ms , start = 1640331597769
┣━ 返回：RcdSet,size=167
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:57.992 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"490245507856203776","PARAM_31":"476517102736375808","PARAM_32":"521358572345360384","PARAM_33":"479959572333723648","PARAM_34":"476319990312599552","PARAM_35":"523843705900105728","PARAM_36":"490245515401756672","PARAM_37":"501072116880244736","PARAM_38":"482573216284409856","PARAM_30":"eam","PARAM_28":"492410582486482944","PARAM_29":"480492967832846336","PARAM_20":"473534969646415872","PARAM_21":"489922973885530112","PARAM_22":"473626754943025152","PARAM_23":"494904221175382016","PARAM_24":"463401587662913536","PARAM_25":"486313029152014336","PARAM_26":"521358826583097344","PARAM_27":"472810496475529216","PARAM_17":"508300436529217536","PARAM_18":"479220715891982336","PARAM_19":"476673977113116672","PARAM_97":"479329294410055680","PARAM_10":"482877685547139072","PARAM_98":"486551847834746880","PARAM_11":"481749753835552768","PARAM_99":"480481733892898816","PARAM_12":"501072637603086336","PARAM_13":"473733261147766784","PARAM_14":"479329295395717120","PARAM_15":"476660948308852736","PARAM_16":"471653540754882560","PARAM_90":"471666421412134912","PARAM_91":"511607135692390400","PARAM_92":"479219966495686656","PARAM_93":"480137016143511552","PARAM_94":"490245516341280768","PARAM_95":"501416298853433344","PARAM_96":"482864642218000384","PARAM_86":"473733260023693312","PARAM_87":"492410583505698816","PARAM_88":"479218751359680512","PARAM_89":"479330042942324736","PARAM_80":"510887822513668096","PARAM_81":"501072636617424896","PARAM_82":"523843704876695552","PARAM_83":"495243930166624256","PARAM_84":"495244165920063488","PARAM_85":"484684755145588736","PARAM_103":"479354719760809984","PARAM_104":"480481734924697600","PARAM_101":"476679549543776256","PARAM_102":"510887822752743424","PARAM_107":"508300434876661760","PARAM_108":"495244164963762176","PARAM_105":"478956693833646080","PARAM_106":"476319991407312896","PARAM_75":"479218759966392320","PARAM_76":"473771456543588352","PARAM_77":"480492968805924864","PARAM_109":"483218064226123776","PARAM_78":"480488585066184704","PARAM_79":"482581101043253248","PARAM_70":"484681017538379776","PARAM_71":"479008671947292672","PARAM_72":"507635163908276224","PARAM_73":"494904220248440832","PARAM_74":"479959573277442048","PARAM_9":"479218760989802496","PARAM_8":"484681028040916992","PARAM_7":"482573215365857280","PARAM_6":"487559548404498432","PARAM_5":"495243931164868608","PARAM_110":"473503441142939648","PARAM_4":"481338872328880128","PARAM_111":"479354718896783360","PARAM_3":"481338871154475008","PARAM_2":0,"PARAM_1":0,"PARAM_64":"482581100191809536","PARAM_65":"475954745446498304","PARAM_66":"482864634051690496","PARAM_67":"482865235867205632","PARAM_68":"475686688891338752","PARAM_69":"479008672874233856","PARAM_60":"472023699592052736","PARAM_61":"480488576866320384","PARAM_62":"479330044003483648","PARAM_63":"471666422389407744","PARAM_100":"463401588501774336","PARAM_125":"480137017104007168","PARAM_126":"472357984110903296","PARAM_123":"507635161886621696","PARAM_124":"511607135931465728","PARAM_129":"479220714860183552","PARAM_127":"487559533120454656","PARAM_128":"478956694827696128","PARAM_53":"473771455499206656","PARAM_54":"489077812460781568","PARAM_55":"514022970520240128","PARAM_56":"481749752891834368","PARAM_57":"487568380539174912","PARAM_58":"472814243020800001","PARAM_59":"476679548692332544","PARAM_50":"479598115674914816","PARAM_51":"486313028048912384","PARAM_52":"471653539840524288","PARAM_130":"501072382371299328","PARAM_131":0,"PARAM_114":"484684756085112832","PARAM_115":"475686689822474240","PARAM_112":"486551848799436800","PARAM_113":"482865236752203776","PARAM_118":"487559550405181440","PARAM_119":"515109188829970432","PARAM_116":"474281124533633024","PARAM_117":"463400832793051136","PARAM_42":"480389139313721344","PARAM_43":"501074106590953472","PARAM_44":"514022969345835008","PARAM_45":"521358572051759104","PARAM_46":"494904456811380736","PARAM_47":"482877684532117504","PARAM_48":"471974291777257472","PARAM_49":"463400831778029568","PARAM_40":"473626754091581440","PARAM_41":"463400009585393664","PARAM_121":"501072383491178496","PARAM_122":"479219967531679744","PARAM_120":"463399690289807360"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '481338871154475008' , '481338872328880128' , '495243931164868608' , '487559548404498432' , '482573215365857280' , '484681028040916992' , '479218760989802496' , '482877685547139072' , '481749753835552768' , '501072637603086336' , '473733261147766784' , '479329295395717120' , '476660948308852736' , '471653540754882560' , '508300436529217536' , '479220715891982336' , '476673977113116672' , '473534969646415872' , '489922973885530112' , '473626754943025152' , '494904221175382016' , '463401587662913536' , '486313029152014336' , '521358826583097344' , '472810496475529216' , '492410582486482944' , '480492967832846336' , 'eam' , '476517102736375808' , '521358572345360384' , '479959572333723648' , '476319990312599552' , '523843705900105728' , '490245515401756672' , '501072116880244736' , '482573216284409856' , '490245507856203776' , '473626754091581440' , '463400009585393664' , '480389139313721344' , '501074106590953472' , '514022969345835008' , '521358572051759104' , '494904456811380736' , '482877684532117504' , '471974291777257472' , '463400831778029568' , '479598115674914816' , '486313028048912384' , '471653539840524288' , '473771455499206656' , '489077812460781568' , '514022970520240128' , '481749752891834368' , '487568380539174912' , '472814243020800001' , '476679548692332544' , '472023699592052736' , '480488576866320384' , '479330044003483648' , '471666422389407744' , '482581100191809536' , '475954745446498304' , '482864634051690496' , '482865235867205632' , '475686688891338752' , '479008672874233856' , '484681017538379776' , '479008671947292672' , '507635163908276224' , '494904220248440832' , '479959573277442048' , '479218759966392320' , '473771456543588352' , '480492968805924864' , '480488585066184704' , '482581101043253248' , '510887822513668096' , '501072636617424896' , '523843704876695552' , '495243930166624256' , '495244165920063488' , '484684755145588736' , '473733260023693312' , '492410583505698816' , '479218751359680512' , '479330042942324736' , '471666421412134912' , '511607135692390400' , '479219966495686656' , '480137016143511552' , '490245516341280768' , '501416298853433344' , '482864642218000384' , '479329294410055680' , '486551847834746880' , '480481733892898816' , '463401588501774336' , '476679549543776256' , '510887822752743424' , '479354719760809984' , '480481734924697600' , '478956693833646080' , '476319991407312896' , '508300434876661760' , '495244164963762176' , '483218064226123776' , '473503441142939648' , '479354718896783360' , '486551848799436800' , '482865236752203776' , '484684756085112832' , '475686689822474240' , '474281124533633024' , '463400832793051136' , '487559550405181440' , '515109188829970432' , '463399690289807360' , '501072383491178496' , '479219967531679744' , '507635161886621696' , '511607135931465728' , '480137017104007168' , '472357984110903296' , '487559533120454656' , '478956694827696128' , '479220714860183552' , '501072382371299328' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：147ms , start = 1640331597832
┣━ 返回：RcdSet,size=297
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:57.993 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"510887583488671744","PARAM_31":"489901527587094528","PARAM_32":"488696601678708736","PARAM_33":"477956226529886208","PARAM_34":"501416282843774976","PARAM_35":"463400010562666496","PARAM_36":"521359011593846784","PARAM_37":"489815792691445760","PARAM_38":"476673978719535104","PARAM_30":"498885090605006848","PARAM_28":"472036556115279872","PARAM_29":"479388413435314177","PARAM_20":"515109191736623104","PARAM_21":"489922974875385856","PARAM_22":"478080882322702336","PARAM_23":"471623117999964160","PARAM_24":"463399156178747392","PARAM_25":"479388233323511808","PARAM_26":"463399691917197312","PARAM_27":"478922694239191040","PARAM_17":"472023708303622144","PARAM_18":"471622524862464000","PARAM_19":"474281126987300864","PARAM_97":"483218065169842176","PARAM_10":"478688770657353728","PARAM_98":"480492959574261760","PARAM_11":"485936567093821440","PARAM_99":"487568383219335168","PARAM_12":"517640838939934720","PARAM_13":"485560943879651328","PARAM_14":"498770298326220801","PARAM_15":"487568362436558848","PARAM_16":"478922681874382848","PARAM_90":"494597326321483776","PARAM_91":"480488586022486016","PARAM_92":"477956227867869184","PARAM_93":"478603518131830784","PARAM_94":"482864644558422016","PARAM_95":"519151991289544704","PARAM_96":"463400011548327936","PARAM_86":"515109189920489472","PARAM_87":"501072119862394880","PARAM_88":"481749155358703616","PARAM_89":"463402978934521856","PARAM_80":"484683940846632960","PARAM_81":"480377922318761984","PARAM_82":"485747535109947392","PARAM_83":"463402977978220544","PARAM_84":"489077814461464576","PARAM_85":"463401816202149888","PARAM_103":"501074109107535872","PARAM_104":"476660949365817344","PARAM_101":"478585183470092288","PARAM_102":"480389141578645504","PARAM_107":"473609136769073152","PARAM_108":"517640839262896128","PARAM_105":"477952353941585920","PARAM_106":"463429359550595072","PARAM_75":"472331332110778368","PARAM_76":"478956684903972864","PARAM_77":"478922692477583360","PARAM_109":"480488587389829120","PARAM_78":"471622523520286720","PARAM_79":"510887583106990080","PARAM_70":"472331139210543104","PARAM_71":"501416300740870144","PARAM_72":"474123300629381120","PARAM_73":"481563574288777216","PARAM_74":"464788447014420480","PARAM_9":"485936565877473280","PARAM_8":"489901525628354560","PARAM_7":"463429360842440704","PARAM_6":"485747533784547328","PARAM_5":"476673980116238336","PARAM_110":"481068390891388928","PARAM_4":"474123299400450048","PARAM_111":"479329595586248704","PARAM_3":"501072108940427264","PARAM_2":0,"PARAM_1":0,"PARAM_64":"479329594474758144","PARAM_65":"501072117886877696","PARAM_66":"479388237341655040","PARAM_67":"501416303421030400","PARAM_68":"472023709545136128","PARAM_69":"481119861406171136","PARAM_60":"472331330856681472","PARAM_61":"521358028998443008","PARAM_62":"478688771848536064","PARAM_63":"473534970493665280","PARAM_100":"482865228682362880","PARAM_125":"482583851852365824","PARAM_126":"464788448306266112","PARAM_123":"473534971609350144","PARAM_124":"481119862664462336","PARAM_129":"480389140282605568","PARAM_127":"473503441981800448","PARAM_128":"472331138002583552","PARAM_53":"521359011174416384","PARAM_54":"519151991713169408","PARAM_55":"482581329603461120","PARAM_56":"470155869825269760","PARAM_57":"494904458010951680","PARAM_58":"473609135473033216","PARAM_59":"521358029262684160","PARAM_50":"482583842985607168","PARAM_51":"481749156772184064","PARAM_52":"501074107681472512","PARAM_130":"479956471090511872","PARAM_131":0,"PARAM_114":"488696599002742784","PARAM_115":"489077813450637312","PARAM_112":"479956469668642816","PARAM_113":"478080883799097344","PARAM_118":"472023118244741120","PARAM_119":"463399157072134144","PARAM_116":"482864643224633344","PARAM_117":"489922976217563136","PARAM_42":"473503443139428352","PARAM_43":"463399691099308032","PARAM_44":"476660950745743360","PARAM_45":"485888538064191488","PARAM_46":"485560942738800640","PARAM_47":"471623117005914112","PARAM_48":"479208678382108672","PARAM_49":"482583853127434240","PARAM_40":"474281125611569152","PARAM_41":"478585182215995392","PARAM_121":"484683942113312768","PARAM_122":"498885092861542400","PARAM_120":"463397740718587904"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '501072108940427264' , '474123299400450048' , '476673980116238336' , '485747533784547328' , '463429360842440704' , '489901525628354560' , '485936565877473280' , '478688770657353728' , '485936567093821440' , '517640838939934720' , '485560943879651328' , '498770298326220801' , '487568362436558848' , '478922681874382848' , '472023708303622144' , '471622524862464000' , '474281126987300864' , '515109191736623104' , '489922974875385856' , '478080882322702336' , '471623117999964160' , '463399156178747392' , '479388233323511808' , '463399691917197312' , '478922694239191040' , '472036556115279872' , '479388413435314177' , '498885090605006848' , '489901527587094528' , '488696601678708736' , '477956226529886208' , '501416282843774976' , '463400010562666496' , '521359011593846784' , '489815792691445760' , '476673978719535104' , '510887583488671744' , '474281125611569152' , '478585182215995392' , '473503443139428352' , '463399691099308032' , '476660950745743360' , '485888538064191488' , '485560942738800640' , '471623117005914112' , '479208678382108672' , '482583853127434240' , '482583842985607168' , '481749156772184064' , '501074107681472512' , '521359011174416384' , '519151991713169408' , '482581329603461120' , '470155869825269760' , '494904458010951680' , '473609135473033216' , '521358029262684160' , '472331330856681472' , '521358028998443008' , '478688771848536064' , '473534970493665280' , '479329594474758144' , '501072117886877696' , '479388237341655040' , '501416303421030400' , '472023709545136128' , '481119861406171136' , '472331139210543104' , '501416300740870144' , '474123300629381120' , '481563574288777216' , '464788447014420480' , '472331332110778368' , '478956684903972864' , '478922692477583360' , '471622523520286720' , '510887583106990080' , '484683940846632960' , '480377922318761984' , '485747535109947392' , '463402977978220544' , '489077814461464576' , '463401816202149888' , '515109189920489472' , '501072119862394880' , '481749155358703616' , '463402978934521856' , '494597326321483776' , '480488586022486016' , '477956227867869184' , '478603518131830784' , '482864644558422016' , '519151991289544704' , '463400011548327936' , '483218065169842176' , '480492959574261760' , '487568383219335168' , '482865228682362880' , '478585183470092288' , '480389141578645504' , '501074109107535872' , '476660949365817344' , '477952353941585920' , '463429359550595072' , '473609136769073152' , '517640839262896128' , '480488587389829120' , '481068390891388928' , '479329595586248704' , '479956469668642816' , '478080883799097344' , '488696599002742784' , '489077813450637312' , '482864643224633344' , '489922976217563136' , '472023118244741120' , '463399157072134144' , '463397740718587904' , '484683942113312768' , '498885092861542400' , '473534971609350144' , '481119862664462336' , '482583851852365824' , '464788448306266112' , '473503441981800448' , '472331138002583552' , '480389140282605568' , '479956471090511872' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：144ms , start = 1640331597836
┣━ 返回：RcdSet,size=343
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:58.016 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= ? ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= ? ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_idt_1.deleted= ? ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 参数：{"PARAM_39":"486551850187751424","PARAM_31":"489815795505823744","PARAM_32":"495244167178354688","PARAM_33":"482865239109402624","PARAM_34":"489922978209857536","PARAM_35":"479959574523150336","PARAM_36":"480492970060021760","PARAM_37":"479219970283143168","PARAM_38":"480137018328743936","PARAM_30":"498890640633892865","PARAM_28":"478603519541116928","PARAM_29":"471623119124037632","PARAM_20":"501072640497156096","PARAM_21":"481563575630954496","PARAM_22":"471974292850999296","PARAM_23":"482877686885122048","PARAM_24":"495243932481880064","PARAM_25":"472331333301960704","PARAM_26":"485560945016307712","PARAM_27":"521358572748013568","PARAM_17":"473534972766978048","PARAM_18":"501072386309750784","PARAM_19":"473733264192831488","PARAM_97":"495244168478588928","PARAM_10":"474123302428737536","PARAM_98":"463400012525600768","PARAM_11":"479956472495603712","PARAM_99":"479959575810801664","PARAM_12":"521358826977361920","PARAM_13":"478585184673857536","PARAM_14":"487559555773890560","PARAM_15":"479218762373922816","PARAM_16":"481749158206636032","PARAM_90":"487568385933049856","PARAM_91":"489922977547157504","PARAM_92":"481338874124042240","PARAM_93":"478603520921042944","PARAM_94":"463402979890823168","PARAM_95":"475686691072376832","PARAM_96":"479354721128153088","PARAM_86":"515109193246572544","PARAM_87":"485888539251179520","PARAM_88":"471666413560397824","PARAM_89":"489077805410156544","PARAM_80":"477956229193269248","PARAM_81":"463397741918158848","PARAM_82":"463399692735086592","PARAM_83":"492410584894013440","PARAM_84":"482877688223105024","PARAM_85":"471622526116560896","PARAM_103":"463400833808072704","PARAM_104":"475686692318085120","PARAM_101":"463399157952937984","PARAM_102":"473626756130013184","PARAM_107":"501072384963379200","PARAM_108":"479330045333078016","PARAM_105":"479220717896859648","PARAM_106":"514022971866611712","PARAM_75":"484684757343404032","PARAM_76":"475954746797064192","PARAM_77":"481749756356329472","PARAM_109":"482581330920472576","PARAM_78":"484683104078794753","PARAM_79":"511607136254427136","PARAM_70":"494597327642689536","PARAM_71":"487559553085341696","PARAM_72":"489815794193006592","PARAM_73":"476660952100503552","PARAM_74":"472023119704358912","PARAM_9":"482573217517535232","PARAM_8":"463429362113314816","PARAM_7":"472036810977968129","PARAM_6":"495243933782114304","PARAM_5":"463401589349023744","PARAM_110":"479959564469403648","PARAM_4":"472331140393336832","PARAM_111":"523843707472969728","PARAM_3":"463401808295886848","PARAM_2":0,"PARAM_1":0,"PARAM_64":"510887823079899136","PARAM_65":"476679550688821248","PARAM_66":"513733380219600896","PARAM_67":"463401817988923392","PARAM_68":"507635166470995968","PARAM_69":"478956696207622144","PARAM_60":"508300439058382848","PARAM_61":"494904222408507392","PARAM_62":"476673981483581440","PARAM_63":"482581103345926144","PARAM_100":"474123301828952064","PARAM_125":"484681029190156288","PARAM_126":"489077815459708928","PARAM_123":"478688773039718400","PARAM_124":"498778136893194240","PARAM_129":"523843695414345728","PARAM_127":"473733262674493440","PARAM_128":"479220719629107200","PARAM_53":"463401817099730944","PARAM_54":"481068392111931392","PARAM_55":"471666424977293312","PARAM_56":"463401590217244672","PARAM_57":"501072639033344000","PARAM_58":"482865237926608896","PARAM_59":"476319992707547136","PARAM_50":"482581332237484032","PARAM_51":"472023710841176064","PARAM_52":"471666423702224896","PARAM_130":"480377923652550656","PARAM_131":0,"PARAM_114":"463397743117729792","PARAM_115":"481338861507575808","PARAM_112":"483218066432327680","PARAM_113":"480481736321400832","PARAM_118":"482864645908987904","PARAM_119":"486313030599049216","PARAM_116":"471974293945712640","PARAM_117":"471620891906670593","PARAM_42":"482581102209269760","PARAM_43":"471653543221133312","PARAM_44":"479598117155504128","PARAM_45":"477952355304734720","PARAM_46":"473771458015789056","PARAM_47":"479219968966131712","PARAM_48":"479218763728683008","PARAM_49":"463400834823094272","PARAM_40":"490245517545046016","PARAM_41":"479329296838557696","PARAM_121":"479008674094776320","PARAM_122":"481749755081261056","PARAM_120":"471653541992202240"}
┣ 执行：SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( version is not null) AND ( deleted= 0 ) ) t_0 
join (select * from sys_menu_resource WHERE ( version is not null) AND ( version is not null) AND ( deleted= 0 ) ) t_1 on t_1.resource_id = t_0.id 
 WHERE t_1.menu_id IN ( '463401808295886848' , '472331140393336832' , '463401589349023744' , '495243933782114304' , '472036810977968129' , '463429362113314816' , '482573217517535232' , '474123302428737536' , '479956472495603712' , '521358826977361920' , '478585184673857536' , '487559555773890560' , '479218762373922816' , '481749158206636032' , '473534972766978048' , '501072386309750784' , '473733264192831488' , '501072640497156096' , '481563575630954496' , '471974292850999296' , '482877686885122048' , '495243932481880064' , '472331333301960704' , '485560945016307712' , '521358572748013568' , '478603519541116928' , '471623119124037632' , '498890640633892865' , '489815795505823744' , '495244167178354688' , '482865239109402624' , '489922978209857536' , '479959574523150336' , '480492970060021760' , '479219970283143168' , '480137018328743936' , '486551850187751424' , '490245517545046016' , '479329296838557696' , '482581102209269760' , '471653543221133312' , '479598117155504128' , '477952355304734720' , '473771458015789056' , '479219968966131712' , '479218763728683008' , '463400834823094272' , '482581332237484032' , '472023710841176064' , '471666423702224896' , '463401817099730944' , '481068392111931392' , '471666424977293312' , '463401590217244672' , '501072639033344000' , '482865237926608896' , '476319992707547136' , '508300439058382848' , '494904222408507392' , '476673981483581440' , '482581103345926144' , '510887823079899136' , '476679550688821248' , '513733380219600896' , '463401817988923392' , '507635166470995968' , '478956696207622144' , '494597327642689536' , '487559553085341696' , '489815794193006592' , '476660952100503552' , '472023119704358912' , '484684757343404032' , '475954746797064192' , '481749756356329472' , '484683104078794753' , '511607136254427136' , '477956229193269248' , '463397741918158848' , '463399692735086592' , '492410584894013440' , '482877688223105024' , '471622526116560896' , '515109193246572544' , '485888539251179520' , '471666413560397824' , '489077805410156544' , '487568385933049856' , '489922977547157504' , '481338874124042240' , '478603520921042944' , '463402979890823168' , '475686691072376832' , '479354721128153088' , '495244168478588928' , '463400012525600768' , '479959575810801664' , '474123301828952064' , '463399157952937984' , '473626756130013184' , '463400833808072704' , '475686692318085120' , '479220717896859648' , '514022971866611712' , '501072384963379200' , '479330045333078016' , '482581330920472576' , '479959564469403648' , '523843707472969728' , '483218066432327680' , '480481736321400832' , '463397743117729792' , '481338861507575808' , '471974293945712640' , '471620891906670593' , '482864645908987904' , '486313030599049216' , '471653541992202240' , '479008674094776320' , '481749755081261056' , '478688773039718400' , '498778136893194240' , '484681029190156288' , '489077815459708928' , '473733262674493440' , '479220719629107200' , '523843695414345728' , '480377923652550656' ) AND t_1.deleted= 0 ORDER BY isnull( t_0.url ) -1 ASC, t_0.url ASC
┣ 结果： 
┣━ 耗时：137ms , start = 1640331597869
┣━ 返回：RcdSet,size=287
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.menu_id join_f0 FROM (select * from sys_resourze WHERE ( ve... ] ━━━━━ 

15:39:58.114 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"P001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'P001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331598071
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

15:39:58.114 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = ? ) AND ( member_type = ? ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_4":"E001","PARAM_3":"employee","PARAM_2":"employee"}
┣ 执行：SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from sys_busi_role_member WHERE ( member_type = 'employee' ) AND ( member_type = 'employee' ) ) t_1 on t_1.role_id = t_0.id 
 WHERE t_1.member_id IN ( 'E001' )
┣ 结果： 
┣━ 耗时：39ms , start = 1640331598074
┣━ 返回：RcdSet,size=7
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.member_id join_f0 FROM (select * from sys_busi_role WHERE (... ] ━━━━━ 

15:39:58.115 [ForkJoinPool-2-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"002"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '002' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331598074
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.executeInternal(SimpleJoinForkTask.java:32)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:45)
    com.github.foxnic.commons.concurrent.SimpleJoinForkTask.compute(SimpleJoinForkTask.java:7)
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_company WHERE ( deleted=... ] ━━━━━ 

15:39:58.172 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( valid=1) AND ( deleted= ? ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( ? ) AND t_2.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_5":0,"PARAM_4":"E001","PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from hrm_position WHERE ( valid=1) AND ( valid=1) AND ( deleted= 0 ) ) t_1 on t_1.org_id = t_0.id 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_2 on t_2.position_id = t_1.id 
 WHERE t_2.employee_id IN ( 'E001' ) AND t_2.deleted= 0
┣ 结果： 
┣━ 耗时：98ms , start = 1640331598074
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_2.employee_id join_f0 , t_2.is_primary pri FROM (select * fro... ] ━━━━━ 

15:39:58.177 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= ? ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= ? ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"E001","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * from hrm_position WHERE ( valid=1) AND ( deleted= 0 ) ) t_0 
join (select * from hrm_employee_position WHERE ( deleted= 0 ) ) t_1 on t_1.position_id = t_0.id 
 WHERE t_1.employee_id IN ( 'E001' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：103ms , start = 1640331598074
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.employee_id join_f0 , t_1.is_primary pri FROM (select * fro... ] ━━━━━ 

15:39:58.179 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 1113ms
15:39:58.244 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331598180
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:58.290 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331598247
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:58.328 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640331598293
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:39:58.491 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 
┣ 语句：UPDATE sys_user SET last_login_time = ? WHERE id = ?
┣ 参数：{"PARAM_1":1640331598442,"PARAM_2":"110588348101165911"}
┣ 执行：UPDATE sys_user SET last_login_time = str_to_date('2021-12-24 15:39:58','%Y-%m-%d %H:%i:%s') WHERE id = '110588348101165911'
┣ 结果： 
┣━ 耗时：45ms , start = 1640331598442
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.UserServiceImpl.update(UserServiceImpl.java:202)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.setupAuthentication(LoginSuccessHandler.java:84)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:127)
┣ TID：526785891557969920
┗━━━━━ SQL [ UPDATE sys_user SET last_login_time = :PARAM_1 WHERE id = :PARAM_2 ] ━━━━━ 

15:39:58.529 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_session_online WHERE id = ?
┣ 参数：{"PARAM_1":"Ix1tn-aYmNoGpKHWJgEi4aAKbQkDfKlv60n-39Lg"}
┣ 执行：select * from sys_session_online WHERE id = 'Ix1tn-aYmNoGpKHWJgEi4aAKbQkDfKlv60n-39Lg'
┣ 结果： 
┣━ 耗时：35ms , start = 1640331598493
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.getById(SessionOnlineServiceImpl.java:164)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.setupAuthentication(LoginSuccessHandler.java:91)
    org.github.foxnic.web.oauth.login.LoginSuccessHandler.onAuthenticationSuccess(LoginSuccessHandler.java:127)
┣ TID：526785891557969920
┗━━━━━ SQL [ select * from sys_session_online WHERE id = :PARAM_1 ] ━━━━━ 

15:39:58.584 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 
┣ 语句：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"Ix1tn-aYmNoGpKHWJgEi4aAKbQkDfKlv60n-39Lg","PARAM_9":"df-ce62104b46-5d9b","PARAM_8":"D7B67D75818C671B","PARAM_10":"110588348101165911","PARAM_7":1,"PARAM_11":1640331598533,"PARAM_6":12000,"PARAM_12":1,"PARAM_5":1640331598530,"PARAM_4":1640331598530,"PARAM_3":"110588348101165911","PARAM_2":"B6A_jwb8tSbFv_rABDlgyBMEF0X2LnNwFqMGS8h1"}
┣ 执行：INSERT INTO sys_session_online ( id , session_id , user_id , login_time , interact_time , session_time , online , host_id , node_id , create_by , create_time , version ) VALUES ( 'Ix1tn-aYmNoGpKHWJgEi4aAKbQkDfKlv60n-39Lg' , 'B6A_jwb8tSbFv_rABDlgyBMEF0X2LnNwFqMGS8h1' , '110588348101165911' , str_to_date('2021-12-24 15:39:58','%Y-%m-%d %H:%i:%s') , str_to_date('2021-12-24 15:39:58','%Y-%m-%d %H:%i:%s') , 12000 , 1 , 'D7B67D75818C671B' , 'df-ce62104b46-5d9b' , '110588348101165911' , str_to_date('2021-12-24 15:39:58','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：47ms , start = 1640331598535
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.SessionOnlineServiceImpl.insert(SessionOnlineServiceImpl.java:74)
┣ TID：526785891557969920
┗━━━━━ SQL [ INSERT INTO sys_session_online ( id , session_id , user_id , login_time , inte... ] ━━━━━ 

15:39:58.688 [XNIO-1 task-3] - [526785891557969920] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 
┣ 语句：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526786121682653184","PARAM_9":0,"PARAM_8":1640333598605,"PARAM_10":"110588348101165911","PARAM_7":0,"PARAM_11":1640331598623,"PARAM_6":1640333398587,"PARAM_12":1,"PARAM_5":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTY6MTM6MTgiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjM5OjU4IiwianRpIjoiNjY1OTBjODYtZGY1MS00ODFjLWE2Y2EtZTBkYzBjZWY2ZTA1In0.ebND_HgdFJoi0rGtEpYzk6HduwbnSCb6PExENAhCUx1yRQSk-1ObIGPDTlKW8aZtoDc0jkJeOTiKH_SHLeQVqAXvuE5GSbjvYPXHprAN31gxeNW4LC7oXh_te3_V-KMjjaSNQ0vZYZa-aEJEajqSrYFgJwj-iijJ8ygtEo0klivWkOZ_xSNryPiMBl2lE_FWzPPIicClGWVPDl3dKl5lMfbxWn9wQ6lPhpXBLWUnK_uaR3PYQVC7Bj7eA9sGGirDtoD6rH1xulAFttFZ05JTTV6yVtTINFLnOjOu7BBT2ooNPHJwkTT5X-sHPVLUcmDqVVpN9FnHVJM-I1P7tB6afA","PARAM_4":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTY6MDk6NTgiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjM5OjU4IiwianRpIjoiNjY1OTBjODYtZGY1MS00ODFjLWE2Y2EtZTBkYzBjZWY2ZTA1In0.WCFVNA0AevTmuV6Gfn8YTa4vsgWiNk-2DYfDQX1b73Sd6-gRoodsyKDfb2_u6D3kzPQsObFmKpItEZxJVGtAXFrKdElE7c2OCcIe9-7dpSLqUFdSSpMHdLdPjqD-S-nOoSZI8bNb466xM9njQMiR34aPr3SlVsc5It5CC532juFLRfuPTsDgBZTnBd_F9tDd8n8wzqscMk55RhFCoEw4G319JB7euRG8P3IzZmrcPIzNLT6S_FxuvoL3ANruIyRCSttnK1Z1AozOgzXq9ieh4d4pNEqBQUtudJVO7RMnpddZ-OAAHLQekh0wC3sm888303HsObbqPVBmR_N0yi9pvg","PARAM_3":"66590c86-df51-481c-a6ca-e0dc0cef6e05","PARAM_2":"110588348101165911"}
┣ 执行：INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , access_token_expire_time , access_token_expired , refresh_token_expire_time , refresh_token_expired , create_by , create_time , version ) VALUES ( '526786121682653184' , '110588348101165911' , '66590c86-df51-481c-a6ca-e0dc0cef6e05' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTY6MDk6NTgiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjM5OjU4IiwianRpIjoiNjY1OTBjODYtZGY1MS00ODFjLWE2Y2EtZTBkYzBjZWY2ZTA1In0.WCFVNA0AevTmuV6Gfn8YTa4vsgWiNk-2DYfDQX1b73Sd6-gRoodsyKDfb2_u6D3kzPQsObFmKpItEZxJVGtAXFrKdElE7c2OCcIe9-7dpSLqUFdSSpMHdLdPjqD-S-nOoSZI8bNb466xM9njQMiR34aPr3SlVsc5It5CC532juFLRfuPTsDgBZTnBd_F9tDd8n8wzqscMk55RhFCoEw4G319JB7euRG8P3IzZmrcPIzNLT6S_FxuvoL3ANruIyRCSttnK1Z1AozOgzXq9ieh4d4pNEqBQUtudJVO7RMnpddZ-OAAHLQekh0wC3sm888303HsObbqPVBmR_N0yi9pvg' , 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhbGwiLCJ1aWQiOiIxMTA1ODgzNDgxMDExNjU5MTEiLCJhdWQiOiJhZG1pbiIsImlzcyI6ImZlbG9yZC5jbiIsImV4cCI6IjIwMjEtMTItMjQgMTY6MTM6MTgiLCJpYXQiOiIyMDIxLTEyLTI0IDE1OjM5OjU4IiwianRpIjoiNjY1OTBjODYtZGY1MS00ODFjLWE2Y2EtZTBkYzBjZWY2ZTA1In0.ebND_HgdFJoi0rGtEpYzk6HduwbnSCb6PExENAhCUx1yRQSk-1ObIGPDTlKW8aZtoDc0jkJeOTiKH_SHLeQVqAXvuE5GSbjvYPXHprAN31gxeNW4LC7oXh_te3_V-KMjjaSNQ0vZYZa-aEJEajqSrYFgJwj-iijJ8ygtEo0klivWkOZ_xSNryPiMBl2lE_FWzPPIicClGWVPDl3dKl5lMfbxWn9wQ6lPhpXBLWUnK_uaR3PYQVC7Bj7eA9sGGirDtoD6rH1xulAFttFZ05JTTV6yVtTINFLnOjOu7BBT2ooNPHJwkTT5X-sHPVLUcmDqVVpN9FnHVJM-I1P7tB6afA' , str_to_date('2021-12-24 16:09:58','%Y-%m-%d %H:%i:%s') , 0 , str_to_date('2021-12-24 16:13:18','%Y-%m-%d %H:%i:%s') , 0 , '110588348101165911' , str_to_date('2021-12-24 15:39:58','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：63ms , start = 1640331598623
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.oauth.service.impl.TokenServiceImpl.insert(TokenServiceImpl.java:58)
┣ TID：526785891557969920
┗━━━━━ SQL [ INSERT INTO sys_token ( id , user_id , jti , access_token , refresh_token , ac... ] ━━━━━ 

15:39:59.162 [XNIO-1 task-3] - [526786123427483648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：122ms , start = 1640331599039
┣━ 返回：RcdSet,size=1390
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：526786123427483648
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

15:39:59.796 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331599744
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:59.851 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331599797
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:59.897 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331599855
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:59.957 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331599899
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:39:59.994 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640331599958
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:40:00.042 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.index.logo"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.index.logo' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331599995
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.102 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331600050
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.150 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331600106
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.208 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331600154
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.260 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331600208
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:40:00.316 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331600268
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.374 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331600319
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.407 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：31ms , start = 1640331600374
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:40:00.450 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331600408
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.484 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：30ms , start = 1640331600451
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.531 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331600487
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:40:00.573 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：30ms , start = 1640331600533
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.645 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640331600576
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.727 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.ui.table.pageLevels","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：72ms , start = 1640331600646
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:40:00.808 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：75ms , start = 1640331600731
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.851 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331600809
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:00.896 [XNIO-1 task-4] - [526783331413528576] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.portal.module.enable","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331600853
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526783331413528576
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:40:01.515 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select 1 from sys_lang WHERE defaults = :PARAM_1 AND deleted =... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select 1 from sys_lang WHERE defaults = ? AND deleted = ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产清理清单","PARAM_4":1,"PARAM_3":0,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select 1 from sys_lang WHERE defaults = '资产清理清单' AND deleted = 0 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1640331601464
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.checkExists(SuperService.java:1353)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.insert(LangServiceImpl.java:80)
    org.github.foxnic.web.system.controller.LangController.insert(LangController.java:78)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select 1 from sys_lang WHERE defaults = :PARAM_1 AND deleted =... ] ━━━━━ 

15:40:01.574 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_lang ( code , defaults , valid , create_by , create_time , ver... ] ━━━━━ 
┣ 语句：INSERT INTO sys_lang ( code , defaults , valid , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526786133829357568","PARAM_6":1,"PARAM_5":1640331601519,"PARAM_4":"110588348101165911","PARAM_3":1,"PARAM_2":"资产清理清单"}
┣ 执行：INSERT INTO sys_lang ( code , defaults , valid , create_by , create_time , version ) VALUES ( '526786133829357568' , '资产清理清单' , 1 , '110588348101165911' , str_to_date('2021-12-24 15:40:01','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：46ms , start = 1640331601520
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.insert(LangServiceImpl.java:82)
┣ TID：526786133598670848
┗━━━━━ SQL [ INSERT INTO sys_lang ( code , defaults , valid , create_by , create_time , ver... ] ━━━━━ 

15:40:01.576 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"465814972102868992"}
┣ 执行：select * from sys_file WHERE id = '465814972102868992'
┣ 结果： 
┣━ 耗时：46ms , start = 1640331601526
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.download(FileController.java:99)
┣ TID：526786133854523392
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:40:01.637 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640331601577}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:40:01','%Y-%m-%d %H:%i:%s') WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：43ms , start = 1640331601578
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526786133854523392
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:40:01.679 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640331601638}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:40:01','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：38ms , start = 1640331601638
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526786133854523392
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:40:01.682 [XNIO-1 task-3] - [526786133854523392] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210709/465814972098674688.jpg
15:40:58.832 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331658780
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786133854523392
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:58.883 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331658834
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786133854523392
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:58.943 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331658885
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786133854523392
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:58.988 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640331658945
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786133854523392
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:59.051 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640331658991
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786133854523392
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:40:59.301 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_attribute_item","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_attribute_item'
┣ 结果： 
┣━ 耗时：58ms , start = 1640331659238
┣━ 返回：RcdSet,size=22
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:40:59.367 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：43ms , start = 1640331659321
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786133854523392
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:40:59.424 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_attribute","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_attribute'
┣ 结果： 
┣━ 耗时：46ms , start = 1640331659374
┣━ 返回：RcdSet,size=23
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:40:59.473 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：41ms , start = 1640331659429
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:40:59.534 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640331659484
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.601 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：51ms , start = 1640331659543
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.601 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331659553
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786133598670848
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:59.636 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：32ms , start = 1640331659602
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786133598670848
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:40:59.656 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640331659608
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.686 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331659637
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786133598670848
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:40:59.707 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"来源","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '来源' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640331659658
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.738 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：47ms , start = 1640331659688
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786133598670848
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:40:59.758 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"位置","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '位置' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640331659709
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.806 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：60ms , start = 1640331659740
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:40:59.820 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"规格型号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '规格型号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1640331659766
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.872 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"序列号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '序列号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1640331659825
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.874 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"序列号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '序列号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1640331659822
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.930 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：55ms , start = 1640331659874
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.935 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产备注","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产备注' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：53ms , start = 1640331659880
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:40:59.977 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"厂商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '厂商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：42ms , start = 1640331659932
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.002 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"厂商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '厂商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：63ms , start = 1640331659936
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.023 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"维保商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '维保商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：38ms , start = 1640331659982
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.048 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"维保商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '维保商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：33ms , start = 1640331660006
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.066 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"采购日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '采购日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640331660024
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.091 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"采购日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '采购日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640331660050
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.111 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"开始日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '开始日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640331660068
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.134 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"开始日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '开始日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1640331660092
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.157 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"结束日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '结束日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：42ms , start = 1640331660112
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.176 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"结束日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '结束日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：38ms , start = 1640331660135
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.197 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所属公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所属公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：36ms , start = 1640331660158
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.218 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"所属公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '所属公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640331660177
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.254 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640331660199
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.274 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择公司","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择公司' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640331660222
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.295 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：34ms , start = 1640331660259
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.332 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用公司/部门","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用公司/部门' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1640331660275
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.335 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择组织节点","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择组织节点' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640331660296
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.375 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择组织节点","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择组织节点' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640331660334
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.382 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"管理人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '管理人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：44ms , start = 1640331660337
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.420 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"管理人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '管理人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640331660376
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.424 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640331660384
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.461 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"请选择人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '请选择人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640331660421
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.483 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1640331660426
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.505 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"使用人员","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '使用人员' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：36ms , start = 1640331660467
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.536 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"更多","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '更多' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：43ms , start = 1640331660490
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.556 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"更多","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '更多' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640331660507
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.589 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更明细","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更明细' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640331660538
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133598670848
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.599 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更明细","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更明细' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640331660559
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526786133854523392
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:41:00.650 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：54ms , start = 1640331660592
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786133598670848
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:41:00.660 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：55ms , start = 1640331660601
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786133854523392
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:41:00.701 [XNIO-1 task-4] - [526786133598670848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：40ms , start = 1640331660657
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786133598670848
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:41:00.719 [XNIO-1 task-3] - [526786133854523392] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：53ms , start = 1640331660663
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786133854523392
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:41:01.440 [XNIO-1 task-3] - [526786384246083584] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：212ms , start = 1640331661223
┣━ 返回：RcdSet,size=1391
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：526786384246083584
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

15:41:01.508 [XNIO-1 task-4] - [526786384594210816] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：199ms , start = 1640331661306
┣━ 返回：RcdSet,size=1391
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：526786384594210816
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

15:41:02.106 [XNIO-1 task-5] - [526786385374351360] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_manufacturer","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_manufacturer'
┣ 结果： 
┣━ 耗时：540ms , start = 1640331661564
┣━ 返回：RcdSet,size=13
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：526786385374351360
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:02.180 [XNIO-1 task-2] - [526786386724917248] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_maintainer","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_maintainer'
┣ 结果： 
┣━ 耗时：66ms , start = 1640331662111
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：526786386724917248
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:02.228 [XNIO-1 task-5] - [526786385374351360] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：105ms , start = 1640331662112
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526786385374351360
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:41:02.261 [XNIO-1 task-1] - [526786386422927360] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"sys_dict_item","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'sys_dict_item'
┣ 结果： 
┣━ 耗时：71ms , start = 1640331662185
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:334)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:205)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
┣ TID：526786386422927360
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:02.323 [XNIO-1 task-2] - [526786386724917248] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：133ms , start = 1640331662186
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526786386724917248
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:41:02.388 [XNIO-1 task-6] - [526786385735061504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_position'
┣ 结果： 
┣━ 耗时：119ms , start = 1640331662264
┣━ 返回：RcdSet,size=12
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:393)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786385735061504
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:02.424 [XNIO-1 task-1] - [526786386422927360] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam_source"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'eam_source' ))
┣ 结果： 
┣━ 耗时：154ms , start = 1640331662265
┣━ 返回：RcdSet,size=6
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:207)
┣ TID：526786386422927360
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

15:41:02.691 [XNIO-1 task-5] - [526786389031784448] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：324ms , start = 1640331662364
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526786389031784448
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:41:02.743 [XNIO-1 task-6] - [526786385735061504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：328ms , start = 1640331662410
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786385735061504
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:41:02.782 [XNIO-1 task-6] - [526786385735061504] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：34ms , start = 1640331662745
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786385735061504
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:41:02.807 [XNIO-1 task-5] - [526786390709506048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：41ms , start = 1640331662764
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526786390709506048
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:41:02.916 [XNIO-1 task-7] - [526786391024078848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：40ms , start = 1640331662866
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786391024078848
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:41:02.994 [XNIO-1 task-7] - [526786391024078848] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：69ms , start = 1640331662918
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786391024078848
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:41:03.144 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset'
┣ 结果： 
┣━ 耗时：59ms , start = 1640331663081
┣━ 返回：RcdSet,size=98
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQueryCondition(SuperService.java:328)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1112)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:726)
┣ TID：526786391292514304
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.240 [XNIO-1 task-1] - [526786391292514304] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:41:03.241 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset'
┣ 结果： 
┣━ 耗时：50ms , start = 1640331663189
┣━ 返回：RcdSet,size=98
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.buildQueryCondition(SuperService.java:328)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1112)
    com.dt.platform.eam.controller.AssetController.queryPagedList(AssetController.java:726)
┣ TID：526786391514812416
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.247 [XNIO-1 task-1] - [526786391292514304] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,120] - apply asset data permission,ownerCode:asset
15:41:03.260 [XNIO-1 task-4] - [526786391514812416] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:41:03.262 [XNIO-1 task-4] - [526786391514812416] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,120] - apply asset data permission,ownerCode:asset
15:41:03.305 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 
┣ 语句：select t.* from sys_config t WHERE ( ( t.deleted= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam.assetDataPermissions"}
┣ 执行：select t.* from sys_config t WHERE ( ( t.deleted= 0 ) AND ( code = 'eam.assetDataPermissions' ))
┣ 结果： 
┣━ 耗时：34ms , start = 1640331663269
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.queryList(ConfigServiceImpl.java:281)
┣ TID：526786391292514304
┗━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 

15:41:03.312 [XNIO-1 task-1] - [526786391292514304] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:eam_asset_global_data_permission
15:41:03.336 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 
┣ 语句：select t.* from sys_config t WHERE ( ( t.deleted= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam.assetDataPermissions"}
┣ 执行：select t.* from sys_config t WHERE ( ( t.deleted= 0 ) AND ( code = 'eam.assetDataPermissions' ))
┣ 结果： 
┣━ 耗时：65ms , start = 1640331663269
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.queryList(ConfigServiceImpl.java:281)
┣ TID：526786391514812416
┗━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 

15:41:03.337 [XNIO-1 task-4] - [526786391514812416] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:eam_asset_global_data_permission
15:41:03.371 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：49ms , start = 1640331663318
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:03.383 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：43ms , start = 1640331663338
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:03.456 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331663406
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:03.456 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331663402
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:03.466 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_permissions_org","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_permissions_org'
┣ 结果： 
┣━ 耗时：64ms , start = 1640331663400
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.530 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331663470
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:03.534 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_permissions_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_permissions_position'
┣ 结果： 
┣━ 耗时：64ms , start = 1640331663469
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.599 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640331663536
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:03.603 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_permissions_org","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_permissions_org'
┣ 结果： 
┣━ 耗时：66ms , start = 1640331663536
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.656 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331663605
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:03.656 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"pcm_catalog","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'pcm_catalog'
┣ 结果： 
┣━ 耗时：45ms , start = 1640331663611
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.707 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"pcm_catalog","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'pcm_catalog'
┣ 结果： 
┣━ 耗时：47ms , start = 1640331663659
┣━ 返回：RcdSet,size=17
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.769 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_permissions_position","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_permissions_position'
┣ 结果： 
┣━ 耗时：58ms , start = 1640331663711
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.818 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331663771
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:03.818 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_permissions_catalog","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_permissions_catalog'
┣ 结果： 
┣━ 耗时：46ms , start = 1640331663771
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.866 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331663823
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:03.867 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_permissions_catalog","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_permissions_catalog'
┣ 结果： 
┣━ 耗时：44ms , start = 1640331663822
┣━ 返回：RcdSet,size=10
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:03.880 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 492ms
15:41:03.934 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331663875
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:03.945 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 540ms
15:41:03.954 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：40ms , start = 1640331663913
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:03.995 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：47ms , start = 1640331663947
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.007 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331663956
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.009 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331663959
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.011 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331663959
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.012 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640331663956
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.013 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 57ms
15:41:04.036 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331663997
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.039 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331663997
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.055 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331663998
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.055 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331663998
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.060 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：39ms , start = 1640331664017
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.070 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 74ms
15:41:04.118 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331664074
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.118 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331664073
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.119 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：45ms , start = 1640331664072
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.122 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331664076
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.126 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331664071
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.138 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 71ms
15:41:04.164 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331664127
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.174 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331664132
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.175 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331664129
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.181 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331664130
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.183 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 62ms
15:41:04.185 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：37ms , start = 1640331664147
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.234 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331664188
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.234 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331664190
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.235 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664185
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.236 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331664188
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.236 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331664188
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.238 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 51ms
15:41:04.275 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331664237
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.275 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331664237
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.276 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331664237
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.275 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331664237
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.287 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 48ms
15:41:04.297 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：55ms , start = 1640331664240
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.337 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：45ms , start = 1640331664289
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.345 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331664304
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.356 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331664309
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.357 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331664310
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.356 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664307
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.373 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 74ms
15:41:04.393 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331664351
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.405 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664356
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.405 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331664354
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.405 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664356
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.408 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 63ms
15:41:04.427 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：40ms , start = 1640331664385
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.454 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：43ms , start = 1640331664410
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.489 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331664430
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.489 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331664430
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.490 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331664431
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.490 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331664432
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.492 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 62ms
15:41:04.494 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331664456
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.509 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331664456
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.513 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331664462
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.533 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：71ms , start = 1640331664462
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.553 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 98ms
15:41:04.554 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：36ms , start = 1640331664497
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.601 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331664556
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.613 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331664556
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.614 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331664556
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.614 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331664556
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.615 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：59ms , start = 1640331664555
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.616 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 60ms
15:41:04.653 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331664618
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.654 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331664618
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.654 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：34ms , start = 1640331664619
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.655 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331664618
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.654 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331664618
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.663 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 46ms
15:41:04.706 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664656
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.706 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664656
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.707 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664656
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.709 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331664656
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.720 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：52ms , start = 1640331664665
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.723 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 67ms
15:41:04.774 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331664730
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.774 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331664733
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.779 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331664737
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.784 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331664733
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.788 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 66ms
15:41:04.790 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：51ms , start = 1640331664732
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.838 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331664793
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.839 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331664793
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.839 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331664793
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.841 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331664794
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.840 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664790
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.844 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 51ms
15:41:04.897 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331664843
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.897 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331664842
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.897 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331664844
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.897 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331664843
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.901 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 59ms
15:41:04.903 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：51ms , start = 1640331664848
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.939 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：35ms , start = 1640331664903
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:04.966 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331664916
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:04.966 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664917
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:04.966 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331664916
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.969 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331664917
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.973 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 57ms
15:41:04.988 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331664949
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:04.988 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331664948
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:04.990 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331664948
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:05.013 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331664949
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:05.015 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 71ms
15:41:05.034 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：47ms , start = 1640331664987
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:05.057 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：40ms , start = 1640331665016
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:05.094 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331665036
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:05.094 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331665036
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:05.094 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331665036
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:05.095 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331665036
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:05.098 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 62ms
15:41:05.114 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331665059
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:05.114 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640331665059
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:05.116 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331665059
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:05.116 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331665059
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:05.118 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 59ms
15:41:05.151 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：47ms , start = 1640331665099
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:05.176 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：53ms , start = 1640331665120
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:05.206 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331665154
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:05.206 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331665155
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:05.207 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331665155
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:05.208 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331665154
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:05.211 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 57ms
15:41:05.227 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331665180
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:05.228 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331665179
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:05.227 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331665180
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:05.229 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331665180
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:05.235 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 56ms
15:41:05.256 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：40ms , start = 1640331665214
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391514812416
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:05.296 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：58ms , start = 1640331665236
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786391292514304
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:05.303 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331665258
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:05.304 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331665258
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:05.315 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331665258
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:05.315 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331665258
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:05.317 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 59ms
15:41:05.358 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331665299
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:05.358 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331665299
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:05.358 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331665299
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:05.358 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331665299
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:05.362 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 62ms
15:41:05.373 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.position_id IN ( ? , ? )
			OR (t.use_organization_id IN ( ? )
				AND t.use_organization_id = ? )
			OR t.category_id IN ( ? , ? )))) A
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.position_id IN ( '472024543184027649' , '472024559755722753' )
			OR (t.use_organization_id IN ( '500994919175819264' )
				AND t.use_organization_id = '490574816424755200' )
			OR t.category_id IN ( '486917927317016576' , '486918386278731776' )))) A
┣ 结果： 
┣━ 耗时：52ms , start = 1640331665319
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786391514812416
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:41:05.443 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.position_id IN ( ? , ? )
			OR (t.use_organization_id IN ( ? )
				AND t.use_organization_id = ? )
			OR t.category_id IN ( ? , ? )))) A
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.position_id IN ( '472024543184027649' , '472024559755722753' )
			OR (t.use_organization_id IN ( '500994919175819264' )
				AND t.use_organization_id = '490574816424755200' )
			OR t.category_id IN ( '486917927317016576' , '486918386278731776' )))) A
┣ 结果： 
┣━ 耗时：66ms , start = 1640331665375
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786391292514304
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:41:05.448 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) AND ( ( ( t.position_id IN ( ? , ? ))) OR ( ( t.use_organization_id IN ( ? )) AND ( t.use_organization_id = ? )) OR ( ( t.category_id IN ( ? , ? ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_15":0,"PARAM_16":50,"PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' )) AND ( ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' ))) AND ( ( ( t.position_id IN ( '472024543184027649' , '472024559755722753' ))) OR ( ( t.use_organization_id IN ( '500994919175819264' )) AND ( t.use_organization_id = '490574816424755200' )) OR ( ( t.category_id IN ( '486917927317016576' , '486918386278731776' ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：71ms , start = 1640331665374
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786391514812416
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:41:05.499 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) AND ( ( ( t.position_id IN ( ? , ? ))) OR ( ( t.use_organization_id IN ( ? )) AND ( t.use_organization_id = ? )) OR ( ( t.category_id IN ( ? , ? ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_15":0,"PARAM_16":50,"PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' )) AND ( ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' ))) AND ( ( ( t.position_id IN ( '472024543184027649' , '472024559755722753' ))) OR ( ( t.use_organization_id IN ( '500994919175819264' )) AND ( t.use_organization_id = '490574816424755200' )) OR ( ( t.category_id IN ( '486917927317016576' , '486918386278731776' ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：52ms , start = 1640331665444
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786391292514304
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:41:05.514 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331665457
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:05.514 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640331665459
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:05.517 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_supplier","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_supplier'
┣ 结果： 
┣━ 耗时：60ms , start = 1640331665457
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:05.524 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331665460
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:41:05.525 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331665460
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:41:05.525 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：65ms , start = 1640331665460
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:05.527 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：71ms , start = 1640331665456
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:05.536 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"486917927317016576"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917927317016576' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：75ms , start = 1640331665460
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:41:05.556 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331665516
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:05.557 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331665516
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:05.577 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331665525
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:05.578 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331665526
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:05.580 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：61ms , start = 1640331665519
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:41:05.584 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dc_rack","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dc_rack'
┣ 结果： 
┣━ 耗时：57ms , start = 1640331665526
┣━ 返回：RcdSet,size=16
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:05.600 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331665538
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:05.610 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"486917927317016576"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917927317016576' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331665558
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:41:05.626 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331665580
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:41:05.626 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331665583
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:41:05.633 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331665591
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:05.642 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"dc_rack","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'dc_rack'
┣ 结果： 
┣━ 耗时：44ms , start = 1640331665596
┣━ 返回：RcdSet,size=16
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:05.653 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331665604
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:05.654 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331665611
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:41:05.673 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331665627
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:05.673 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331665627
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:05.685 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331665647
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:05.686 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_goods","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_goods'
┣ 结果： 
┣━ 耗时：40ms , start = 1640331665646
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:05.691 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 235ms
15:41:05.761 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_goods","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_goods'
┣ 结果： 
┣━ 耗时：71ms , start = 1640331665690
┣━ 返回：RcdSet,size=19
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

15:41:05.767 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 267ms
15:41:08.115 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331668057
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786391514812416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:08.196 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：65ms , start = 1640331668129
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786391514812416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:08.250 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331668199
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786391514812416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:08.294 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331668253
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786391514812416
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:08.352 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331668295
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786391514812416
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:08.415 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：55ms , start = 1640331668356
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786391514812416
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:41:08.479 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：52ms , start = 1640331668424
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786391514812416
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:41:08.536 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331668494
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786391292514304
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:08.554 [XNIO-1 task-4] - [526786391514812416] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：48ms , start = 1640331668505
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786391514812416
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:41:08.575 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331668537
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786391292514304
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:08.640 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331668576
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786391292514304
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:08.698 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：52ms , start = 1640331668644
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786391292514304
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:41:08.746 [XNIO-1 task-1] - [526786391292514304] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：45ms , start = 1640331668699
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786391292514304
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:41:09.360 [XNIO-1 task-1] - [526786418144448512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：53ms , start = 1640331669305
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526786418144448512
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:41:09.396 [XNIO-1 task-4] - [526786418303832064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：51ms , start = 1640331669343
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786418303832064
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:41:09.453 [XNIO-1 task-4] - [526786418303832064] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：55ms , start = 1640331669397
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786418303832064
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:41:09.458 [XNIO-1 task-6] - [526786418572267520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：49ms , start = 1640331669407
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526786418572267520
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:41:09.637 [XNIO-1 task-6] - [526786419507597312] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:41:09.639 [XNIO-1 task-6] - [526786419507597312] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,120] - apply asset data permission,ownerCode:asset
15:41:09.712 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 
┣ 语句：select t.* from sys_config t WHERE ( ( t.deleted= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam.assetDataPermissions"}
┣ 执行：select t.* from sys_config t WHERE ( ( t.deleted= 0 ) AND ( code = 'eam.assetDataPermissions' ))
┣ 结果： 
┣━ 耗时：71ms , start = 1640331669640
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.queryList(ConfigServiceImpl.java:281)
┣ TID：526786419507597312
┗━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 

15:41:09.713 [XNIO-1 task-6] - [526786419507597312] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:eam_asset_global_data_permission
15:41:09.767 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：52ms , start = 1640331669714
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:09.777 [XNIO-1 task-4] - [526786419952193536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：39ms , start = 1640331669736
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526786419952193536
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:41:09.800 [XNIO-1 task-7] - [526786420057051136] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：35ms , start = 1640331669763
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786420057051136
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:41:09.813 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331669770
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:09.814 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331669771
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:09.814 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331669770
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:09.814 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331669770
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:09.818 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 50ms
15:41:09.865 [XNIO-1 task-7] - [526786420057051136] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：64ms , start = 1640331669800
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786420057051136
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:41:09.865 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：45ms , start = 1640331669819
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:09.866 [XNIO-1 task-5] - [526786420275154944] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：49ms , start = 1640331669813
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526786420275154944
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:41:09.927 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331669870
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:09.927 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331669868
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:09.928 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331669869
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:09.929 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331669869
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:09.935 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 69ms
15:41:09.999 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：62ms , start = 1640331669937
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.038 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331670001
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.039 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331670001
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.043 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331670001
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.044 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331670001
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.049 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 48ms
15:41:10.068 [XNIO-1 task-7] - [526786421336313856] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:41:10.069 [XNIO-1 task-7] - [526786421336313856] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,120] - apply asset data permission,ownerCode:asset
15:41:10.099 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：47ms , start = 1640331670050
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.118 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 
┣ 语句：select t.* from sys_config t WHERE ( ( t.deleted= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam.assetDataPermissions"}
┣ 执行：select t.* from sys_config t WHERE ( ( t.deleted= 0 ) AND ( code = 'eam.assetDataPermissions' ))
┣ 结果： 
┣━ 耗时：44ms , start = 1640331670070
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.queryList(ConfigServiceImpl.java:281)
┣ TID：526786421336313856
┗━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 

15:41:10.121 [XNIO-1 task-7] - [526786421336313856] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:eam_asset_global_data_permission
15:41:10.165 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640331670103
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.167 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：62ms , start = 1640331670104
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.167 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640331670107
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.167 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640331670104
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.176 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 76ms
15:41:10.182 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：52ms , start = 1640331670124
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.217 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：35ms , start = 1640331670179
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.248 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331670188
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.248 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331670189
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.248 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331670189
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.249 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331670190
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.251 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 64ms
15:41:10.264 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670219
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.264 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670219
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.264 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331670220
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.267 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331670219
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.269 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 51ms
15:41:10.317 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：63ms , start = 1640331670251
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.341 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：67ms , start = 1640331670270
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.376 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331670320
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.379 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331670319
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.377 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331670319
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.381 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640331670320
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.387 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 66ms
15:41:10.404 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：62ms , start = 1640331670342
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.404 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：61ms , start = 1640331670343
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.405 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：62ms , start = 1640331670342
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.406 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331670342
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.407 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 65ms
15:41:10.436 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670389
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.454 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：40ms , start = 1640331670413
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.484 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670438
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.486 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331670438
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.486 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331670438
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.486 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331670439
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.488 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 49ms
15:41:10.494 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331670456
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.494 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331670455
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.494 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331670455
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.494 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331670455
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.497 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 42ms
15:41:10.548 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：53ms , start = 1640331670491
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.570 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：69ms , start = 1640331670499
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.591 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331670551
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.591 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331670551
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.592 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331670550
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.592 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331670550
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.593 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 44ms
15:41:10.613 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331670573
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.620 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670574
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.620 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331670573
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.620 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331670573
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.626 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 53ms
15:41:10.657 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：61ms , start = 1640331670594
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.675 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670628
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.696 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331670658
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.696 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331670658
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.696 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331670658
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.697 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331670658
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.699 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 41ms
15:41:10.723 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670677
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.725 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331670677
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.726 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331670677
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.726 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331670677
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.727 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 51ms
15:41:10.754 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：52ms , start = 1640331670701
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.775 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670729
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.809 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331670757
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.810 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331670756
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.810 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331670757
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.810 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331670756
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.818 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331670777
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.819 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331670777
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.818 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331670777
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.820 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331670778
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.822 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 60ms
15:41:10.822 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 45ms
15:41:10.884 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：59ms , start = 1640331670824
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.884 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：59ms , start = 1640331670824
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.934 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331670891
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.935 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331670891
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.935 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670888
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:10.936 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670891
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.936 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331670891
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.937 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331670889
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:10.938 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331670888
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:10.938 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331670888
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:10.941 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 49ms
15:41:10.941 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 53ms
15:41:10.981 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：37ms , start = 1640331670942
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:10.983 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：38ms , start = 1640331670943
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:11.033 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331670985
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:11.034 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331670983
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:11.034 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331670985
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:11.033 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331670985
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:11.034 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331670983
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:11.035 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331670985
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:11.035 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331670983
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:11.035 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331670983
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:11.036 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 50ms
15:41:11.037 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 53ms
15:41:11.083 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：42ms , start = 1640331671038
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786419507597312
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:11.095 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：57ms , start = 1640331671037
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:11.124 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331671084
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:11.124 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331671084
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:11.124 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331671085
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:11.125 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331671084
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:11.127 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 42ms
15:41:11.134 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331671097
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:11.134 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331671097
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:11.134 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331671097
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:11.135 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331671097
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:11.136 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 40ms
15:41:11.174 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：36ms , start = 1640331671137
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:11.174 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.position_id IN ( ? , ? )
			OR (t.use_organization_id IN ( ? )
				AND t.use_organization_id = ? )
			OR t.category_id IN ( ? , ? )))) A
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.position_id IN ( '472024543184027649' , '472024559755722753' )
			OR (t.use_organization_id IN ( '500994919175819264' )
				AND t.use_organization_id = '490574816424755200' )
			OR t.category_id IN ( '486917927317016576' , '486918386278731776' )))) A
┣ 结果： 
┣━ 耗时：42ms , start = 1640331671131
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786419507597312
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:41:11.216 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) AND ( ( ( t.position_id IN ( ? , ? ))) OR ( ( t.use_organization_id IN ( ? )) AND ( t.use_organization_id = ? )) OR ( ( t.category_id IN ( ? , ? ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_15":0,"PARAM_16":50,"PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' )) AND ( ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' ))) AND ( ( ( t.position_id IN ( '472024543184027649' , '472024559755722753' ))) OR ( ( t.use_organization_id IN ( '500994919175819264' )) AND ( t.use_organization_id = '490574816424755200' )) OR ( ( t.category_id IN ( '486917927317016576' , '486918386278731776' ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：38ms , start = 1640331671175
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786419507597312
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:41:11.228 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331671177
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:11.228 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331671178
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:11.228 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331671177
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:11.231 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640331671176
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:11.240 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 64ms
15:41:11.288 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331671236
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:41:11.290 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331671235
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:41:11.292 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331671235
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:11.292 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640331671236
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:11.292 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331671234
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:11.292 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331671233
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:41:11.292 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"486917927317016576"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917927317016576' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331671232
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:41:11.292 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640331671229
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:11.296 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：49ms , start = 1640331671245
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:11.334 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331671291
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:11.334 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331671291
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:11.336 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331671292
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:11.338 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640331671305
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:11.338 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640331671305
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:11.339 [XNIO-1 task-6] - [526786419507597312] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 111ms
15:41:11.353 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331671305
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:11.353 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331671306
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:11.355 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 51ms
15:41:11.416 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：58ms , start = 1640331671356
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:11.460 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331671419
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:11.461 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331671418
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:11.466 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331671419
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:11.460 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331671420
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:11.473 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 54ms
15:41:11.525 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：49ms , start = 1640331671474
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786421336313856
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:11.574 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331671527
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:11.574 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331671526
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:11.574 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331671526
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:11.575 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331671527
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:11.576 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 50ms
15:41:11.624 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.position_id IN ( ? , ? )
			OR (t.use_organization_id IN ( ? )
				AND t.use_organization_id = ? )
			OR t.category_id IN ( ? , ? )))) A
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.position_id IN ( '472024543184027649' , '472024559755722753' )
			OR (t.use_organization_id IN ( '500994919175819264' )
				AND t.use_organization_id = '490574816424755200' )
			OR t.category_id IN ( '486917927317016576' , '486918386278731776' )))) A
┣ 结果： 
┣━ 耗时：45ms , start = 1640331671578
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786421336313856
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:41:11.662 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) AND ( ( ( t.position_id IN ( ? , ? ))) OR ( ( t.use_organization_id IN ( ? )) AND ( t.use_organization_id = ? )) OR ( ( t.category_id IN ( ? , ? ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_15":0,"PARAM_16":50,"PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' )) AND ( ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' ))) AND ( ( ( t.position_id IN ( '472024543184027649' , '472024559755722753' ))) OR ( ( t.use_organization_id IN ( '500994919175819264' )) AND ( t.use_organization_id = '490574816424755200' )) OR ( ( t.category_id IN ( '486917927317016576' , '486918386278731776' ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：36ms , start = 1640331671624
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786421336313856
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:41:11.708 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：32ms , start = 1640331671675
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:41:11.708 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640331671673
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:11.723 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331671674
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:11.723 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331671675
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:41:11.722 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"486917927317016576"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917927317016576' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331671674
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:41:11.722 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331671675
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:11.723 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331671675
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:11.723 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331671674
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:41:11.775 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331671708
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:11.776 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331671708
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:11.780 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331671724
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:11.784 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 113ms
15:41:27.320 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331687267
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.370 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331687322
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.415 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331687372
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.457 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331687417
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.537 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：75ms , start = 1640331687459
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:27.610 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.index.logo"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.index.logo' AND deleted = 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331687540
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.693 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：74ms , start = 1640331687615
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.734 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331687695
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.779 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331687736
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.816 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：32ms , start = 1640331687781
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:27.866 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331687817
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.918 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331687868
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:27.980 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640331687922
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:28.029 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331687981
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:28.075 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331688031
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:28.135 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331688076
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:28.189 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331688136
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:28.245 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331688194
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:28.291 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.ui.table.pageLevels","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331688247
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:28.350 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331688293
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:28.405 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331688353
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:28.456 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.portal.module.enable","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331688406
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:30.099 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331690048
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:30.155 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331690100
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:30.176 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"465814972102868992"}
┣ 执行：select * from sys_file WHERE id = '465814972102868992'
┣ 结果： 
┣━ 耗时：35ms , start = 1640331690137
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.download(FileController.java:99)
┣ TID：526786505511800832
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:41:30.214 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640331690177}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:41:30','%Y-%m-%d %H:%i:%s') WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：35ms , start = 1640331690177
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526786505511800832
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:41:30.240 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：81ms , start = 1640331690157
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786421336313856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:30.254 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640331690215}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:41:30','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：37ms , start = 1640331690215
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526786505511800832
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:41:30.255 [XNIO-1 task-6] - [526786505511800832] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210709/465814972098674688.jpg
15:41:30.269 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：25ms , start = 1640331690243
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786421336313856
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:41:30.316 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：42ms , start = 1640331690272
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786421336313856
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:41:30.381 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331690340
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786505511800832
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:30.428 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331690384
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786505511800832
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:41:30.428 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：49ms , start = 1640331690364
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786421336313856
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:41:30.484 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331690430
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786505511800832
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:41:30.484 [XNIO-1 task-7] - [526786421336313856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：50ms , start = 1640331690433
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786421336313856
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:41:30.534 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：48ms , start = 1640331690485
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786505511800832
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:41:30.590 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：45ms , start = 1640331690541
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786505511800832
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:41:30.644 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：29ms , start = 1640331690613
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786505511800832
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:41:30.693 [XNIO-1 task-6] - [526786505511800832] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：45ms , start = 1640331690647
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786505511800832
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:41:31.784 [XNIO-1 task-6] - [526786512289796096] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：33ms , start = 1640331691750
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526786512289796096
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:41:31.819 [XNIO-1 task-7] - [526786512424013824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：35ms , start = 1640331691783
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786512424013824
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:41:31.856 [XNIO-1 task-7] - [526786512424013824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：35ms , start = 1640331691820
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786512424013824
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:41:31.968 [XNIO-1 task-7] - [526786513195765760] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:41:31.968 [XNIO-1 task-7] - [526786513195765760] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,120] - apply asset data permission,ownerCode:asset
15:41:32.010 [XNIO-1 task-6] - [526786512751169536] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：147ms , start = 1640331691860
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526786512751169536
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:41:32.029 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 
┣ 语句：select t.* from sys_config t WHERE ( ( t.deleted= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam.assetDataPermissions"}
┣ 执行：select t.* from sys_config t WHERE ( ( t.deleted= 0 ) AND ( code = 'eam.assetDataPermissions' ))
┣ 结果： 
┣━ 耗时：46ms , start = 1640331691976
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.queryList(ConfigServiceImpl.java:281)
┣ TID：526786513195765760
┗━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 

15:41:32.032 [XNIO-1 task-7] - [526786513195765760] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:eam_asset_global_data_permission
15:41:32.096 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：61ms , start = 1640331692033
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:32.145 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331692098
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:32.145 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331692098
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:32.219 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：120ms , start = 1640331692098
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:32.233 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：134ms , start = 1640331692099
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:32.236 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 138ms
15:41:32.296 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：50ms , start = 1640331692244
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:32.335 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331692299
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:32.335 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331692297
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:32.393 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：93ms , start = 1640331692299
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:32.393 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：93ms , start = 1640331692299
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:32.394 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 96ms
15:41:32.440 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：39ms , start = 1640331692395
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:32.483 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331692444
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:32.483 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331692445
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:32.494 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331692444
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:32.533 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：84ms , start = 1640331692448
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:32.535 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 92ms
15:41:32.588 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：48ms , start = 1640331692536
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:32.656 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：65ms , start = 1640331692590
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:32.656 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640331692590
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:32.656 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：67ms , start = 1640331692589
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:32.699 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：105ms , start = 1640331692593
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:32.701 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 111ms
15:41:32.756 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：51ms , start = 1640331692703
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:32.803 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331692757
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:32.803 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331692757
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:32.805 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331692757
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:32.839 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：80ms , start = 1640331692758
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:32.841 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 83ms
15:41:32.863 [XNIO-1 task-6] - [526786516748341248] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：44ms , start = 1640331692814
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526786516748341248
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:41:32.886 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：39ms , start = 1640331692846
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:32.934 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331692889
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:32.953 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640331692889
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:32.954 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：65ms , start = 1640331692889
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:32.974 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：84ms , start = 1640331692890
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:32.977 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 88ms
15:41:32.994 [XNIO-1 task-6] - [526786517310377984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：44ms , start = 1640331692948
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786517310377984
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:41:33.081 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：81ms , start = 1640331692979
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.081 [XNIO-1 task-6] - [526786517310377984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：68ms , start = 1640331692995
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786517310377984
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:41:33.125 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331693082
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.125 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331693082
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.125 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331693083
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.126 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331693083
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.128 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 45ms
15:41:33.174 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：42ms , start = 1640331693130
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.217 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331693175
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.219 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331693175
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.219 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331693175
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.219 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331693175
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.221 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 45ms
15:41:33.274 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：49ms , start = 1640331693223
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.284 [XNIO-1 task-6] - [526786518300233728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：98ms , start = 1640331693184
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526786518300233728
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:41:33.315 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331693275
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.315 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331693275
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.320 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331693275
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.333 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331693275
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.335 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 59ms
15:41:33.347 [XNIO-1 task-5] - [526786518979710976] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:41:33.353 [XNIO-1 task-5] - [526786518979710976] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,120] - apply asset data permission,ownerCode:asset
15:41:33.395 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：49ms , start = 1640331693343
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.399 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 
┣ 语句：select t.* from sys_config t WHERE ( ( t.deleted= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam.assetDataPermissions"}
┣ 执行：select t.* from sys_config t WHERE ( ( t.deleted= 0 ) AND ( code = 'eam.assetDataPermissions' ))
┣ 结果： 
┣━ 耗时：41ms , start = 1640331693355
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.queryList(ConfigServiceImpl.java:281)
┣ TID：526786518979710976
┗━━━━━ SQL [ select t.* from sys_config t WHERE ( ( t.deleted= :PARAM_1 ) AND ( code = :PAR... ] ━━━━━ 

15:41:33.402 [XNIO-1 task-5] - [526786518979710976] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:eam_asset_global_data_permission
15:41:33.446 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331693398
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.446 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331693398
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.446 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331693399
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.448 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331693398
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.451 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 52ms
15:41:33.496 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：92ms , start = 1640331693403
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.517 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：62ms , start = 1640331693452
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.543 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331693497
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.543 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331693498
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.555 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331693497
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.555 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331693497
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.557 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 59ms
15:41:33.575 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331693526
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.593 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640331693526
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.595 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：68ms , start = 1640331693527
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.609 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：80ms , start = 1640331693527
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.612 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：48ms , start = 1640331693559
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.612 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 91ms
15:41:33.653 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331693614
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.653 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331693614
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.653 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331693614
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.656 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：39ms , start = 1640331693615
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.673 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331693615
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.675 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 61ms
15:41:33.702 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331693657
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.702 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331693657
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.703 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331693657
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.703 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331693657
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.704 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 46ms
15:41:33.714 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：36ms , start = 1640331693676
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.754 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：48ms , start = 1640331693705
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786513195765760
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.761 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331693715
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.763 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331693715
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.763 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331693715
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.764 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331693715
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.768 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 52ms
15:41:33.802 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331693756
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.812 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331693756
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.814 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331693756
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.815 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331693756
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.816 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 61ms
15:41:33.816 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：44ms , start = 1640331693771
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.862 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331693822
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.868 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331693823
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.869 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331693823
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.868 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331693824
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.869 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.position_id IN ( ? , ? )
			OR (t.use_organization_id IN ( ? )
				AND t.use_organization_id = ? )
			OR t.category_id IN ( ? , ? )))) A
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.position_id IN ( '472024543184027649' , '472024559755722753' )
			OR (t.use_organization_id IN ( '500994919175819264' )
				AND t.use_organization_id = '490574816424755200' )
			OR t.category_id IN ( '486917927317016576' , '486918386278731776' )))) A
┣ 结果： 
┣━ 耗时：40ms , start = 1640331693828
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786513195765760
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:41:33.871 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 50ms
15:41:33.914 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：40ms , start = 1640331693872
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:33.924 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) AND ( ( ( t.position_id IN ( ? , ? ))) OR ( ( t.use_organization_id IN ( ? )) AND ( t.use_organization_id = ? )) OR ( ( t.category_id IN ( ? , ? ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_15":0,"PARAM_16":50,"PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' )) AND ( ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' ))) AND ( ( ( t.position_id IN ( '472024543184027649' , '472024559755722753' ))) OR ( ( t.use_organization_id IN ( '500994919175819264' )) AND ( t.use_organization_id = '490574816424755200' )) OR ( ( t.category_id IN ( '486917927317016576' , '486918386278731776' ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：52ms , start = 1640331693870
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786513195765760
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:41:33.955 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331693916
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:33.955 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331693916
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:33.972 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331693915
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:33.972 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331693915
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:33.973 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331693933
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:33.979 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 63ms
15:41:33.992 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331693933
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:34.006 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：71ms , start = 1640331693934
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:41:34.007 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"486917927317016576"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917927317016576' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：72ms , start = 1640331693933
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:41:34.013 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331693974
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:41:34.013 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331693957
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:34.014 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331693975
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:34.037 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：61ms , start = 1640331693975
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:34.052 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：75ms , start = 1640331693976
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:41:34.053 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331694010
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:34.054 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：66ms , start = 1640331693986
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:34.054 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331693995
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:34.056 [XNIO-1 task-7] - [526786513195765760] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 123ms
15:41:34.097 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331694055
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:34.097 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331694055
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:34.097 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331694055
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:34.097 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331694055
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:34.099 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 43ms
15:41:34.167 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：64ms , start = 1640331694100
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:34.214 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331694172
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:34.215 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331694172
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:34.215 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331694172
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:34.215 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331694174
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:34.216 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 45ms
15:41:34.266 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：46ms , start = 1640331694218
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:34.313 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331694268
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:34.313 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331694267
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:34.313 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331694267
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:34.313 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331694268
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:34.314 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 46ms
15:41:34.354 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：37ms , start = 1640331694315
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:34.403 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331694356
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:34.403 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331694355
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:34.403 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331694356
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:34.403 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331694356
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:34.404 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 49ms
15:41:34.454 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：47ms , start = 1640331694405
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:34.503 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331694456
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:34.503 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331694455
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:34.512 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331694457
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:34.512 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331694455
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:34.513 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 58ms
15:41:34.563 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：48ms , start = 1640331694514
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:34.612 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331694564
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:34.614 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331694564
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:34.612 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331694564
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:34.613 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331694564
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:34.616 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 52ms
15:41:34.671 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：53ms , start = 1640331694617
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:34.723 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331694672
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:34.723 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331694673
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:34.733 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640331694673
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:34.735 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640331694672
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:34.737 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 64ms
15:41:34.780 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：41ms , start = 1640331694738
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526786518979710976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

15:41:34.818 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331694782
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

15:41:34.818 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331694781
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

15:41:34.818 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331694781
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

15:41:34.818 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331694782
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

15:41:34.820 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 38ms
15:41:34.866 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.position_id IN ( ? , ? )
			OR (t.use_organization_id IN ( ? )
				AND t.use_organization_id = ? )
			OR t.category_id IN ( ? , ? )))) A
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset' AND status = 'complete' AND (t.position_id IN ( '472024543184027649' , '472024559755722753' )
			OR (t.use_organization_id IN ( '500994919175819264' )
				AND t.use_organization_id = '490574816424755200' )
			OR t.category_id IN ( '486917927317016576' , '486918386278731776' )))) A
┣ 结果： 
┣━ 耗时：39ms , start = 1640331694821
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786518979710976
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:41:34.915 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) AND ( ( ( t.position_id IN ( ? , ? ))) OR ( ( t.use_organization_id IN ( ? )) AND ( t.use_organization_id = ? )) OR ( ( t.category_id IN ( ? , ? ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"472024559755722753","PARAM_11":"500994919175819264","PARAM_12":"490574816424755200","PARAM_13":"486917927317016576","PARAM_14":"486918386278731776","PARAM_15":0,"PARAM_16":50,"PARAM_9":"472024543184027649","PARAM_8":"complete","PARAM_7":"asset","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' )) AND ( ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset' ) AND ( status = 'complete' ))) AND ( ( ( t.position_id IN ( '472024543184027649' , '472024559755722753' ))) OR ( ( t.use_organization_id IN ( '500994919175819264' )) AND ( t.use_organization_id = '490574816424755200' )) OR ( ( t.category_id IN ( '486917927317016576' , '486918386278731776' ))))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：44ms , start = 1640331694868
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:287)
    com.dt.platform.eam.service.impl.AssetServiceImpl.queryPagedList(AssetServiceImpl.java:1175)
┣ TID：526786518979710976
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:41:34.967 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331694919
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:34.971 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331694921
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:41:34.972 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331694920
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:34.974 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331694920
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:41:34.973 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331694920
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:41:34.973 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"486917927317016576"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917927317016576' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331694920
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:41:34.974 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331694920
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:41:35.012 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331694973
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:35.016 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331694967
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:35.018 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：93ms , start = 1640331694924
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:41:35.018 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331694975
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:41:35.019 [XNIO-1 task-5] - [526786518979710976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 100ms
15:41:42.634 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 
┣ 语句：select * from sys_db_cache WHERE catalog = ? AND area = ? AND owner_type = ? AND owner_id = ? AND deleted = ?
┣ 参数：{"PARAM_1":"layui-table-column-width","PARAM_5":0,"PARAM_4":"110588348101165911","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select * from sys_db_cache WHERE catalog = 'layui-table-column-width' AND area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' AND owner_type = 'user' AND owner_id = '110588348101165911' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331702579
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:163)
    org.github.foxnic.web.system.controller.DbCacheController.save(DbCacheController.java:155)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 

15:41:42.675 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ INSERT INTO sys_db_cache ( id , catalog , area , owner_type , owner_id , value... ] ━━━━━ 
┣ 语句：INSERT INTO sys_db_cache ( id , catalog , area , owner_type , owner_id , value , create_by , create_time , version ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_1":"526786557944795136","PARAM_9":1,"PARAM_8":1640331702636,"PARAM_7":"110588348101165911","PARAM_6":"{\"assetCode\":183,\"categoryId\":96,\"assetStatus\":96,\"name\":96,\"model\":96,\"serialNumber\":96,\"useUserId\":96,\"ownCompanyId\":96,\"useOrganizationId\":96,\"positionId\":96,\"row-ops\":164}","PARAM_5":"110588348101165911","PARAM_4":"user","PARAM_3":"/business/eam/asset/asset_search/asset_clean_search.html#data-table","PARAM_2":"layui-table-column-width"}
┣ 执行：INSERT INTO sys_db_cache ( id , catalog , area , owner_type , owner_id , value , create_by , create_time , version ) VALUES ( '526786557944795136' , 'layui-table-column-width' , '/business/eam/asset/asset_search/asset_clean_search.html#data-table' , 'user' , '110588348101165911' , '{"assetCode":183,"categoryId":96,"assetStatus":96,"name":96,"model":96,"serialNumber":96,"useUserId":96,"ownCompanyId":96,"useOrganizationId":96,"positionId":96,"row-ops":164}' , '110588348101165911' , str_to_date('2021-12-24 15:41:42','%Y-%m-%d %H:%i:%s') , 1 )
┣ 结果： 
┣━ 耗时：36ms , start = 1640331702636
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.insert(DbCacheServiceImpl.java:92)
┣ TID：526786557680553984
┗━━━━━ SQL [ INSERT INTO sys_db_cache ( id , catalog , area , owner_type , owner_id , value... ] ━━━━━ 

15:41:42.724 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"526786557944795136"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = '526786557944795136' ) A
┣ 结果： 
┣━ 耗时：45ms , start = 1640331702677
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.insert(DbCacheServiceImpl.java:92)
┣ TID：526786557680553984
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 

15:41:42.774 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_db_cache WHERE id= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"526786557944795136","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_db_cache WHERE id= '526786557944795136' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1640331702725
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.insert(DbCacheServiceImpl.java:92)
┣ TID：526786557680553984
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 

15:41:42.824 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"526786557944795136"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = '526786557944795136' ) A
┣ 结果： 
┣━ 耗时：36ms , start = 1640331702780
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.insert(DbCacheServiceImpl.java:92)
┣ TID：526786557680553984
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 

15:41:42.882 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_db_cache WHERE id= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"526786557944795136","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_db_cache WHERE id= '526786557944795136' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1640331702826
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:911)
    com.github.foxnic.dao.entity.SuperService.insert(SuperService.java:891)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.insert(DbCacheServiceImpl.java:92)
┣ TID：526786557680553984
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 

15:42:47.616 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：62ms , start = 1640331767544
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:47.673 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331767624
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:47.765 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：87ms , start = 1640331767675
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:47.834 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331767767
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:47.898 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331767853
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:42:47.975 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.index.logo"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.index.logo' AND deleted = 0
┣ 结果： 
┣━ 耗时：67ms , start = 1640331767904
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.035 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331767977
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.083 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331768039
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.132 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331768084
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.214 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：73ms , start = 1640331768134
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:42:48.338 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：118ms , start = 1640331768216
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.394 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331768341
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.434 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640331768396
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:42:48.490 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331768443
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.533 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331768493
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.582 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331768534
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:42:48.634 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331768584
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.673 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640331768636
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.720 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.ui.table.pageLevels","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331768675
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:42:48.793 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331768724
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.843 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331768794
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:48.875 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.portal.module.enable","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：27ms , start = 1640331768846
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:42:50.882 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331770831
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:50.932 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331770885
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:50.957 [XNIO-1 task-7] - [526786844344455168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"465814972102868992"}
┣ 执行：select * from sys_file WHERE id = '465814972102868992'
┣ 结果： 
┣━ 耗时：30ms , start = 1640331770923
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.download(FileController.java:99)
┣ TID：526786844344455168
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:42:50.976 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331770936
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786557680553984
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:42:51.011 [XNIO-1 task-7] - [526786844344455168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640331770958}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:42:50','%Y-%m-%d %H:%i:%s') WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：49ms , start = 1640331770959
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526786844344455168
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:42:51.055 [XNIO-1 task-7] - [526786844344455168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640331771012}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:42:51','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：36ms , start = 1640331771013
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526786844344455168
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:42:51.057 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：58ms , start = 1640331770988
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786557680553984
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:42:51.058 [XNIO-1 task-7] - [526786844344455168] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210709/465814972098674688.jpg
15:42:51.125 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：57ms , start = 1640331771065
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786557680553984
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:42:51.212 [XNIO-1 task-7] - [526786844344455168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640331771143
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786844344455168
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:51.215 [XNIO-1 task-5] - [526786557680553984] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：56ms , start = 1640331771155
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526786557680553984
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:42:51.258 [XNIO-1 task-7] - [526786844344455168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331771214
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786844344455168
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:42:51.297 [XNIO-1 task-7] - [526786844344455168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331771259
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786844344455168
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:42:51.366 [XNIO-1 task-7] - [526786844344455168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：58ms , start = 1640331771304
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786844344455168
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:42:51.414 [XNIO-1 task-7] - [526786844344455168] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：43ms , start = 1640331771369
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786844344455168
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:42:53.158 [XNIO-1 task-7] - [526786853529980928] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：45ms , start = 1640331773109
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526786853529980928
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:42:53.338 [XNIO-1 task-7] - [526786854230429696] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：54ms , start = 1640331773281
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786854230429696
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:42:53.378 [XNIO-1 task-7] - [526786854230429696] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：35ms , start = 1640331773339
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786854230429696
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:42:53.781 [XNIO-1 task-5] - [526786856151420928] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：42ms , start = 1640331773734
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526786856151420928
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:42:54.172 [XNIO-1 task-5] - [526786857980137472] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:42:54.173 [XNIO-1 task-5] - [526786857980137472] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:
15:42:54.252 [XNIO-1 task-5] - [526786857980137472] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? )) A
┣ 参数：{"PARAM_1":0,"PARAM_8":"complete","PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' )) A
┣ 结果： 
┣━ 耗时：69ms , start = 1640331774177
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526786857980137472
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:42:54.295 [XNIO-1 task-5] - [526786857980137472] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_9":0,"PARAM_8":"complete","PARAM_10":50,"PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' )) AND ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：38ms , start = 1640331774253
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526786857980137472
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:42:54.347 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331774304
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:42:54.358 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331774305
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:42:54.393 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：82ms , start = 1640331774309
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:42:54.400 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331774352
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 

15:42:54.431 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：122ms , start = 1640331774308
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:42:54.449 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"486917667475689472","PARAM_2":"486917672672432128"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917672672432128' , '486917667475689472' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：141ms , start = 1640331774308
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:42:54.471 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：157ms , start = 1640331774312
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:42:54.498 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：191ms , start = 1640331774307
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:42:54.530 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：224ms , start = 1640331774305
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:42:54.533 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：169ms , start = 1640331774364
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:42:54.565 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：169ms , start = 1640331774395
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:42:54.574 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：172ms , start = 1640331774402
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:42:54.609 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：176ms , start = 1640331774432
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:42:54.618 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：162ms , start = 1640331774454
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:42:54.621 [XNIO-1 task-5] - [526786857980137472] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 319ms
15:42:54.648 [XNIO-1 task-7] - [526786859599138816] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：88ms , start = 1640331774556
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526786859599138816
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:42:54.726 [XNIO-1 task-6] - [526786860136009728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：40ms , start = 1640331774684
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786860136009728
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:42:54.771 [XNIO-1 task-6] - [526786860136009728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：43ms , start = 1640331774726
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526786860136009728
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:42:54.855 [XNIO-1 task-7] - [526786860689657856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：34ms , start = 1640331774816
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526786860689657856
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:42:55.211 [XNIO-1 task-7] - [526786862338019328] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:42:55.213 [XNIO-1 task-7] - [526786862338019328] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:
15:42:55.258 [XNIO-1 task-7] - [526786862338019328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? )) A
┣ 参数：{"PARAM_1":0,"PARAM_8":"complete","PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' )) A
┣ 结果： 
┣━ 耗时：38ms , start = 1640331775216
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526786862338019328
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:42:55.316 [XNIO-1 task-7] - [526786862338019328] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_9":0,"PARAM_8":"complete","PARAM_10":50,"PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' )) AND ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：49ms , start = 1640331775259
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526786862338019328
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:42:55.374 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331775332
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:42:55.380 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331775332
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:42:55.380 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331775336
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:42:55.384 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331775331
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:42:55.416 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：80ms , start = 1640331775336
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:42:55.430 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"486917667475689472","PARAM_2":"486917672672432128"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917672672432128' , '486917667475689472' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：89ms , start = 1640331775339
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:42:55.430 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：91ms , start = 1640331775339
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:42:55.441 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：100ms , start = 1640331775340
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:42:55.474 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：95ms , start = 1640331775375
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:42:55.493 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：110ms , start = 1640331775382
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:42:55.494 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：112ms , start = 1640331775381
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:42:55.494 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：108ms , start = 1640331775385
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 

15:42:55.541 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：110ms , start = 1640331775431
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:42:55.541 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：123ms , start = 1640331775418
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:42:55.543 [XNIO-1 task-7] - [526786862338019328] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 216ms
15:43:10.020 [XNIO-1 task-7] - [526786924434690048] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:43:10.022 [XNIO-1 task-7] - [526786924434690048] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:
15:43:10.100 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? )) A
┣ 参数：{"PARAM_1":0,"PARAM_8":"complete","PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' )) A
┣ 结果： 
┣━ 耗时：65ms , start = 1640331790032
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526786924434690048
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:43:10.164 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_9":0,"PARAM_8":"complete","PARAM_10":50,"PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' )) AND ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：61ms , start = 1640331790101
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526786924434690048
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:43:10.209 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331790165
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:43:10.210 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331790165
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:43:10.252 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：79ms , start = 1640331790172
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:43:10.252 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：79ms , start = 1640331790172
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:43:10.314 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：96ms , start = 1640331790210
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:43:10.316 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：150ms , start = 1640331790166
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:43:10.348 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：136ms , start = 1640331790211
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 

15:43:10.368 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：201ms , start = 1640331790166
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:43:10.390 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"486917667475689472","PARAM_2":"486917672672432128"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917672672432128' , '486917667475689472' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：219ms , start = 1640331790170
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:43:10.412 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：241ms , start = 1640331790171
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:43:10.433 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：176ms , start = 1640331790256
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:43:10.449 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：192ms , start = 1640331790256
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:43:10.490 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：170ms , start = 1640331790318
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:43:10.490 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：170ms , start = 1640331790319
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:43:10.493 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 327ms
15:43:16.137 [XNIO-1 task-6] - [526786860136009728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640331796100
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786860136009728
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:43:16.164 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331796100
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:43:16.186 [XNIO-1 task-6] - [526786860136009728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331796139
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786860136009728
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:43:16.197 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：26ms , start = 1640331796167
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:43:16.244 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331796201
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:43:16.244 [XNIO-1 task-6] - [526786860136009728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331796193
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786860136009728
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:43:16.291 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331796246
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:43:16.292 [XNIO-1 task-6] - [526786860136009728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331796247
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786860136009728
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:43:16.348 [XNIO-1 task-6] - [526786860136009728] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640331796297
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786860136009728
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:43:16.351 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331796298
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:10.553 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331850497
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:10.609 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331850556
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:10.658 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331850611
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:10.707 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331850659
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:10.771 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331850709
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:10.814 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.index.logo"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.index.logo' AND deleted = 0
┣ 结果： 
┣━ 耗时：34ms , start = 1640331850773
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:10.867 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.title"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.title' AND deleted = 0
┣ 结果： 
┣━ 耗时：32ms , start = 1640331850818
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:10.904 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：30ms , start = 1640331850870
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:10.997 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.code"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：85ms , start = 1640331850906
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:11.108 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.code","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.code' AND deleted = 0
┣ 结果： 
┣━ 耗时：75ms , start = 1640331851001
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:11.168 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331851125
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:11.209 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.name"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331851169
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:11.253 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.name","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.name' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331851213
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:11.307 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331851256
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:11.358 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.version.type"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331851310
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:11.408 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.version.type","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.version.type' AND deleted = 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331851360
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:11.457 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331851412
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:11.533 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.ui.table.pageLevels"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331851467
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:11.580 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.ui.table.pageLevels","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.ui.table.pageLevels' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331851535
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:11.647 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640331851581
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:11.714 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.portal.module.enable"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331851650
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:11.804 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.portal.module.enable","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.portal.module.enable' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331851716
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:12.744 [XNIO-1 task-3] - [526786390642397184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640331852700
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786390642397184
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:12.767 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331852720
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:12.807 [XNIO-1 task-3] - [526786390642397184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331852745
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786390642397184
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:12.810 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640331852769
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:12.875 [XNIO-1 task-3] - [526786390642397184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：61ms , start = 1640331852808
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786390642397184
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:12.885 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：62ms , start = 1640331852813
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:14.896 [XNIO-1 task-5] - [526787196250755072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 
┣ 语句：select * from sys_file WHERE id = ?
┣ 参数：{"PARAM_1":"465814972102868992"}
┣ 执行：select * from sys_file WHERE id = '465814972102868992'
┣ 结果： 
┣━ 耗时：57ms , start = 1640331854833
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:115)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.downloadFile(FileServiceImpl.java:184)
    org.github.foxnic.web.storage.controller.FileController.download(FileController.java:99)
┣ TID：526787196250755072
┗━━━━━ SQL [ select * from sys_file WHERE id = :PARAM_1 ] ━━━━━ 

15:44:14.908 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331854851
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:14.919 [XNIO-1 task-3] - [526786390642397184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640331854874
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786390642397184
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:14.939 [XNIO-1 task-5] - [526787196250755072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640331854897}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:44:14','%Y-%m-%d %H:%i:%s') WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：38ms , start = 1640331854897
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getById(FileServiceImpl.java:116)
┣ TID：526787196250755072
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 WHERE id... ] ━━━━━ 

15:44:14.950 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331854911
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:14.984 [XNIO-1 task-3] - [526786390642397184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331854921
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786390642397184
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:15.012 [XNIO-1 task-5] - [526787196250755072] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 
┣ 语句：UPDATE sys_file SET deleted = ? , latest_visit_time = ? , downloads = downloads+1 WHERE id IN ( ? )
┣ 参数：{"PARAM_1":0,"PARAM_3":"465814972102868992","PARAM_2":1640331854942}
┣ 执行：UPDATE sys_file SET deleted = 0 , latest_visit_time = str_to_date('2021-12-24 15:44:14','%Y-%m-%d %H:%i:%s') , downloads = downloads+1 WHERE id IN ( '465814972102868992' )
┣ 结果： 
┣━ 耗时：64ms , start = 1640331854943
┣━ 返回：java.lang.Integer
┣ 调用栈：
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:134)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.resurgence(FileServiceImpl.java:121)
    org.github.foxnic.web.storage.service.impl.FileServiceImpl.getBytes(FileServiceImpl.java:158)
┣ TID：526787196250755072
┗━━━━━ SQL [ UPDATE sys_file SET deleted = :PARAM_1 , latest_visit_time = :PARAM_2 , downlo... ] ━━━━━ 

15:44:15.012 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640331854952
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:15.013 [XNIO-1 task-5] - [526787196250755072] - INFO  o.g.f.w.s.s.DiskStorageSupport - [isFileExists,111] - /opt/upload/20210709/465814972098674688.jpg
15:44:15.047 [XNIO-1 task-3] - [526786390642397184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331854986
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786390642397184
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:15.072 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：54ms , start = 1640331855015
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786420149325824
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:44:15.111 [XNIO-1 task-3] - [526786390642397184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_4":"1","PARAM_3":"asset_book","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_book' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：56ms , start = 1640331855050
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526786390642397184
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

15:44:15.118 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：40ms , start = 1640331855075
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786420149325824
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:44:15.221 [XNIO-1 task-3] - [526786390642397184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_10":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":0,"PARAM_15":"T001","PARAM_9":"00f152f2-0f8b-11ec-ab08-00163e2e6a36","PARAM_8":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , '00f152f2-0f8b-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：96ms , start = 1640331855113
┣━ 返回：RcdSet,size=11
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526786390642397184
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

15:44:16.721 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331856662
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:16.774 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331856722
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:16.858 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331856776
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:16.906 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640331856860
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:16.990 [XNIO-1 task-1] - [526786420149325824] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640331856907
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786420149325824
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:17.974 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331857902
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:18.041 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331857978
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:44:18.093 [XNIO-1 task-7] - [526786924434690048] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331858043
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526786924434690048
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:44:19.240 [XNIO-1 task-1] - [526787214537920512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：56ms , start = 1640331859180
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526787214537920512
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:44:19.364 [XNIO-1 task-7] - [526787215062208512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：44ms , start = 1640331859306
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526787215062208512
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:44:19.455 [XNIO-1 task-7] - [526787215062208512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：78ms , start = 1640331859365
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526787215062208512
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:44:19.612 [XNIO-1 task-7] - [526787216169504768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：41ms , start = 1640331859569
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526787216169504768
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:44:19.879 [XNIO-1 task-7] - [526787217440378880] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:44:19.882 [XNIO-1 task-7] - [526787217440378880] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:
15:44:19.950 [XNIO-1 task-7] - [526787217440378880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? )) A
┣ 参数：{"PARAM_1":0,"PARAM_8":"complete","PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' )) A
┣ 结果： 
┣━ 耗时：55ms , start = 1640331859889
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526787217440378880
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:44:20.004 [XNIO-1 task-7] - [526787217440378880] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_9":0,"PARAM_8":"complete","PARAM_10":50,"PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' )) AND ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：45ms , start = 1640331859951
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526787217440378880
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:44:20.056 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331860006
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:44:20.108 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640331860057
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 

15:44:20.152 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：38ms , start = 1640331860113
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:44:20.210 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640331860156
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:44:20.264 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331860212
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:44:20.309 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640331860266
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:44:20.370 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：59ms , start = 1640331860310
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:44:20.432 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640331860371
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:44:20.465 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：31ms , start = 1640331860434
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:44:20.505 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640331860469
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:44:20.565 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640331860516
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:44:20.620 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"486917667475689472","PARAM_2":"486917672672432128"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917672672432128' , '486917667475689472' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640331860566
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:44:20.666 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640331860626
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:44:20.717 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331860668
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:44:20.719 [XNIO-1 task-7] - [526787217440378880] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 714ms
15:44:21.173 [XNIO-1 task-6] - [526787222624538624] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from eam_manufacturer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_manufacturer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：63ms , start = 1640331861107
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.ManufacturerServiceImpl.queryList(ManufacturerServiceImpl.java:196)
┣ TID：526787222624538624
┗━━━━━ SQL [ select t.* from eam_manufacturer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:44:21.234 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = ? AND t.tenant_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_position t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' ) A
┣ 结果： 
┣━ 耗时：38ms , start = 1640331861193
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526787222985248768
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_position t WHERE t.deleted = :PARAM_... ] ━━━━━ 

15:44:21.311 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= ? AND t.tenant_id= ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_4":10,"PARAM_3":0,"PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 10
┣ 结果： 
┣━ 耗时：45ms , start = 1640331861235
┣━ 返回：RcdSet,size=4
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526787222985248768
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_position t WHERE ( ( t.deleted= :PARAM_1 A... ] ━━━━━ 

15:44:21.316 [XNIO-1 task-6] - [526787223236907008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 
┣ 语句：select t.* from eam_maintainer t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_maintainer t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：60ms , start = 1640331861254
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.MaintainerServiceImpl.queryList(MaintainerServiceImpl.java:196)
┣ TID：526787223236907008
┗━━━━━ SQL [ select t.* from eam_maintainer t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id... ] ━━━━━ 

15:44:21.420 [XNIO-1 task-6] - [526787223933161472] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
15:44:21.422 [XNIO-1 task-6] - [526787223933161472] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:
15:44:21.490 [XNIO-1 task-6] - [526787223933161472] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? )) A
┣ 参数：{"PARAM_1":0,"PARAM_8":"complete","PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' )) A
┣ 结果： 
┣━ 耗时：61ms , start = 1640331861424
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526787223933161472
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

15:44:21.557 [XNIO-1 task-6] - [526787223933161472] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_9":0,"PARAM_8":"complete","PARAM_10":50,"PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' )) AND ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：59ms , start = 1640331861491
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526787223933161472
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

15:44:21.608 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640331861562
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:44:21.628 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640331861561
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:44:21.629 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640331861563
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

15:44:21.630 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：67ms , start = 1640331861561
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:44:21.650 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：84ms , start = 1640331861563
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

15:44:21.655 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：90ms , start = 1640331861564
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:44:21.668 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：103ms , start = 1640331861565
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

15:44:21.668 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640331861609
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

15:44:21.668 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"486917667475689472","PARAM_2":"486917672672432128"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917672672432128' , '486917667475689472' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：106ms , start = 1640331861562
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

15:44:21.685 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640331861631
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:44:21.705 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：73ms , start = 1640331861631
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:44:21.705 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640331861656
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

15:44:21.705 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640331861652
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

15:44:21.705 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：73ms , start = 1640331861632
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 

15:44:21.707 [XNIO-1 task-6] - [526787223933161472] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 145ms
15:46:25.210 [XNIO-1 task-6] - [526787742953115648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 
┣ 语句：select * from sys_db_cache WHERE catalog = ? AND area = ? AND owner_type = ? AND owner_id = ? AND deleted = ?
┣ 参数：{"PARAM_1":"layui-table-column-width","PARAM_5":0,"PARAM_4":"110588348101165911","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select * from sys_db_cache WHERE catalog = 'layui-table-column-width' AND area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' AND owner_type = 'user' AND owner_id = '110588348101165911' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640331985164
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:163)
    org.github.foxnic.web.system.controller.DbCacheController.save(DbCacheController.java:155)
┣ TID：526787742953115648
┗━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 

15:46:25.270 [XNIO-1 task-6] - [526787742953115648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_db_cache SET catalog = :PARAM_1 , area = :PARAM_2 , owner_type = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_db_cache SET catalog = ? , area = ? , owner_type = ? , owner_id = ? , value = ? , create_by = ? , create_time = ? , deleted = ? , version = version+1 , update_by = ? , update_time = ? WHERE id = ?
┣ 参数：{"PARAM_1":"layui-table-column-width","PARAM_9":"110588348101165911","PARAM_8":0,"PARAM_10":1640331985225,"PARAM_7":1640331703000,"PARAM_11":"526786557944795136","PARAM_6":"110588348101165911","PARAM_5":"{\"assetCode\":183,\"categoryId\":145,\"assetStatus\":96,\"name\":96,\"model\":96,\"serialNumber\":96,\"useUserId\":96,\"ownCompanyId\":96,\"useOrganizationId\":96,\"positionId\":96,\"row-ops\":164}","PARAM_4":"110588348101165911","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：UPDATE sys_db_cache SET catalog = 'layui-table-column-width' , area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' , owner_type = 'user' , owner_id = '110588348101165911' , value = '{"assetCode":183,"categoryId":145,"assetStatus":96,"name":96,"model":96,"serialNumber":96,"useUserId":96,"ownCompanyId":96,"useOrganizationId":96,"positionId":96,"row-ops":164}' , create_by = '110588348101165911' , create_time = str_to_date('2021-12-24 15:41:43','%Y-%m-%d %H:%i:%s') , deleted = 0 , version = version+1 , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:46:25','%Y-%m-%d %H:%i:%s') WHERE id = '526786557944795136'
┣ 结果： 
┣━ 耗时：40ms , start = 1640331985226
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787742953115648
┗━━━━━ SQL [ UPDATE sys_db_cache SET catalog = :PARAM_1 , area = :PARAM_2 , owner_type = :P... ] ━━━━━ 

15:46:25.323 [XNIO-1 task-6] - [526787742953115648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"526786557944795136"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = '526786557944795136' ) A
┣ 结果： 
┣━ 耗时：41ms , start = 1640331985272
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787742953115648
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 

15:46:25.409 [XNIO-1 task-6] - [526787742953115648] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_db_cache WHERE id= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"526786557944795136","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_db_cache WHERE id= '526786557944795136' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：52ms , start = 1640331985336
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787742953115648
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 

15:46:26.792 [XNIO-1 task-6] - [526787749504618496] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 
┣ 语句：select * from sys_db_cache WHERE catalog = ? AND area = ? AND owner_type = ? AND owner_id = ? AND deleted = ?
┣ 参数：{"PARAM_1":"layui-table-column-width","PARAM_5":0,"PARAM_4":"110588348101165911","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select * from sys_db_cache WHERE catalog = 'layui-table-column-width' AND area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' AND owner_type = 'user' AND owner_id = '110588348101165911' AND deleted = 0
┣ 结果： 
┣━ 耗时：60ms , start = 1640331986726
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:163)
    org.github.foxnic.web.system.controller.DbCacheController.save(DbCacheController.java:155)
┣ TID：526787749504618496
┗━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 

15:46:26.901 [XNIO-1 task-6] - [526787749504618496] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_db_cache SET catalog = :PARAM_1 , area = :PARAM_2 , owner_type = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_db_cache SET catalog = ? , area = ? , owner_type = ? , owner_id = ? , value = ? , create_by = ? , create_time = ? , update_by = ? , update_time = ? , deleted = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"layui-table-column-width","PARAM_9":1640331986795,"PARAM_8":"110588348101165911","PARAM_10":0,"PARAM_7":1640331703000,"PARAM_11":"526786557944795136","PARAM_6":"110588348101165911","PARAM_5":"{\"assetCode\":183,\"categoryId\":145,\"assetStatus\":130,\"name\":96,\"model\":96,\"serialNumber\":96,\"useUserId\":96,\"ownCompanyId\":96,\"useOrganizationId\":96,\"positionId\":96,\"row-ops\":164}","PARAM_4":"110588348101165911","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：UPDATE sys_db_cache SET catalog = 'layui-table-column-width' , area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' , owner_type = 'user' , owner_id = '110588348101165911' , value = '{"assetCode":183,"categoryId":145,"assetStatus":130,"name":96,"model":96,"serialNumber":96,"useUserId":96,"ownCompanyId":96,"useOrganizationId":96,"positionId":96,"row-ops":164}' , create_by = '110588348101165911' , create_time = str_to_date('2021-12-24 15:41:43','%Y-%m-%d %H:%i:%s') , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:46:26','%Y-%m-%d %H:%i:%s') , deleted = 0 , version = version+1 WHERE id = '526786557944795136'
┣ 结果： 
┣━ 耗时：39ms , start = 1640331986796
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787749504618496
┗━━━━━ SQL [ UPDATE sys_db_cache SET catalog = :PARAM_1 , area = :PARAM_2 , owner_type = :P... ] ━━━━━ 

15:46:26.955 [XNIO-1 task-6] - [526787749504618496] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"526786557944795136"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = '526786557944795136' ) A
┣ 结果： 
┣━ 耗时：43ms , start = 1640331986904
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787749504618496
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 

15:46:27.002 [XNIO-1 task-6] - [526787749504618496] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_db_cache WHERE id= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"526786557944795136","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_db_cache WHERE id= '526786557944795136' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640331986957
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787749504618496
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 

15:46:28.839 [XNIO-1 task-6] - [526787758140690432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 
┣ 语句：select * from sys_db_cache WHERE catalog = ? AND area = ? AND owner_type = ? AND owner_id = ? AND deleted = ?
┣ 参数：{"PARAM_1":"layui-table-column-width","PARAM_5":0,"PARAM_4":"110588348101165911","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select * from sys_db_cache WHERE catalog = 'layui-table-column-width' AND area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' AND owner_type = 'user' AND owner_id = '110588348101165911' AND deleted = 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640331988785
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:163)
    org.github.foxnic.web.system.controller.DbCacheController.save(DbCacheController.java:155)
┣ TID：526787758140690432
┗━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 

15:46:28.899 [XNIO-1 task-6] - [526787758140690432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_db_cache SET catalog = :PARAM_1 , area = :PARAM_2 , owner_type = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_db_cache SET catalog = ? , area = ? , owner_type = ? , owner_id = ? , value = ? , create_by = ? , create_time = ? , update_by = ? , update_time = ? , deleted = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"layui-table-column-width","PARAM_9":1640331988841,"PARAM_8":"110588348101165911","PARAM_10":0,"PARAM_7":1640331703000,"PARAM_11":"526786557944795136","PARAM_6":"110588348101165911","PARAM_5":"{\"assetCode\":183,\"categoryId\":145,\"assetStatus\":130,\"name\":96,\"model\":127,\"serialNumber\":96,\"useUserId\":96,\"ownCompanyId\":96,\"useOrganizationId\":96,\"positionId\":96,\"row-ops\":164}","PARAM_4":"110588348101165911","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：UPDATE sys_db_cache SET catalog = 'layui-table-column-width' , area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' , owner_type = 'user' , owner_id = '110588348101165911' , value = '{"assetCode":183,"categoryId":145,"assetStatus":130,"name":96,"model":127,"serialNumber":96,"useUserId":96,"ownCompanyId":96,"useOrganizationId":96,"positionId":96,"row-ops":164}' , create_by = '110588348101165911' , create_time = str_to_date('2021-12-24 15:41:43','%Y-%m-%d %H:%i:%s') , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:46:28','%Y-%m-%d %H:%i:%s') , deleted = 0 , version = version+1 WHERE id = '526786557944795136'
┣ 结果： 
┣━ 耗时：53ms , start = 1640331988841
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787758140690432
┗━━━━━ SQL [ UPDATE sys_db_cache SET catalog = :PARAM_1 , area = :PARAM_2 , owner_type = :P... ] ━━━━━ 

15:46:28.945 [XNIO-1 task-6] - [526787758140690432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"526786557944795136"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = '526786557944795136' ) A
┣ 结果： 
┣━ 耗时：39ms , start = 1640331988902
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787758140690432
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 

15:46:28.997 [XNIO-1 task-6] - [526787758140690432] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_db_cache WHERE id= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"526786557944795136","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_db_cache WHERE id= '526786557944795136' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640331988946
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787758140690432
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 

15:46:30.986 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 
┣ 语句：select * from sys_db_cache WHERE catalog = ? AND area = ? AND owner_type = ? AND owner_id = ? AND deleted = ?
┣ 参数：{"PARAM_1":"layui-table-column-width","PARAM_5":0,"PARAM_4":"110588348101165911","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：select * from sys_db_cache WHERE catalog = 'layui-table-column-width' AND area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' AND owner_type = 'user' AND owner_id = '110588348101165911' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640331990942
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:163)
    org.github.foxnic.web.system.controller.DbCacheController.save(DbCacheController.java:155)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_db_cache WHERE catalog = :PARAM_1 AND area = :PARAM_2 AND ow... ] ━━━━━ 

15:46:31.042 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ UPDATE sys_db_cache SET catalog = :PARAM_1 , area = :PARAM_2 , owner_type = :P... ] ━━━━━ 
┣ 语句：UPDATE sys_db_cache SET catalog = ? , area = ? , owner_type = ? , owner_id = ? , value = ? , create_by = ? , create_time = ? , update_by = ? , update_time = ? , deleted = ? , version = version+1 WHERE id = ?
┣ 参数：{"PARAM_1":"layui-table-column-width","PARAM_9":1640331990988,"PARAM_8":"110588348101165911","PARAM_10":0,"PARAM_7":1640331703000,"PARAM_11":"526786557944795136","PARAM_6":"110588348101165911","PARAM_5":"{\"assetCode\":183,\"categoryId\":145,\"assetStatus\":130,\"name\":96,\"model\":127,\"serialNumber\":96,\"useUserId\":162,\"ownCompanyId\":96,\"useOrganizationId\":96,\"positionId\":96,\"row-ops\":164}","PARAM_4":"110588348101165911","PARAM_3":"user","PARAM_2":"/business/eam/asset/asset_search/asset_clean_search.html#data-table"}
┣ 执行：UPDATE sys_db_cache SET catalog = 'layui-table-column-width' , area = '/business/eam/asset/asset_search/asset_clean_search.html#data-table' , owner_type = 'user' , owner_id = '110588348101165911' , value = '{"assetCode":183,"categoryId":145,"assetStatus":130,"name":96,"model":127,"serialNumber":96,"useUserId":162,"ownCompanyId":96,"useOrganizationId":96,"positionId":96,"row-ops":164}' , create_by = '110588348101165911' , create_time = str_to_date('2021-12-24 15:41:43','%Y-%m-%d %H:%i:%s') , update_by = '110588348101165911' , update_time = str_to_date('2021-12-24 15:46:30','%Y-%m-%d %H:%i:%s') , deleted = 0 , version = version+1 WHERE id = '526786557944795136'
┣ 结果： 
┣━ 耗时：49ms , start = 1640331990989
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787767183609856
┗━━━━━ SQL [ UPDATE sys_db_cache SET catalog = :PARAM_1 , area = :PARAM_2 , owner_type = :P... ] ━━━━━ 

15:46:31.111 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = ? ) A
┣ 参数：{"PARAM_1":"526786557944795136"}
┣ 执行：select count(1) X from (SELECT 1
FROM sys_db_cache
WHERE id = '526786557944795136' ) A
┣ 结果： 
┣━ 耗时：60ms , start = 1640331991045
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787767183609856
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM sys_db_cache WHERE id = :PARAM_1 ) A ] ━━━━━ 

15:46:31.156 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select * from sys_db_cache WHERE id= ? ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"526786557944795136","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select * from sys_db_cache WHERE id= '526786557944795136' ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：36ms , start = 1640331991115
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1112)
    com.github.foxnic.dao.entity.SuperService.update(SuperService.java:1098)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.save(DbCacheServiceImpl.java:166)
┣ TID：526787767183609856
┗━━━━━ SQL [ SELECT * FROM ( select * from sys_db_cache WHERE id= :PARAM_1 ) PAGED_QUERY LI... ] ━━━━━ 

15:47:48.048 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640332067998
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:48.126 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640332068056
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:48.175 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：36ms , start = 1640332068133
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:48.217 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640332068176
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:48.288 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640332068226
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:47:48.500 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产组织报表","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产组织报表' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：42ms , start = 1640332068453
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526787767183609856
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:47:48.572 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640332068523
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787222985248768
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:48.638 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：58ms , start = 1640332068575
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787222985248768
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:48.661 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_report/org_report_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_report/org_report_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：36ms , start = 1640332068622
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526787767183609856
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:47:48.675 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640332068640
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787222985248768
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:47:48.722 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_report/org_report_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_report/org_report_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：55ms , start = 1640332068663
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526787767183609856
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:47:48.738 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_report/org_report_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_report/org_report_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：42ms , start = 1640332068691
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526787222985248768
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:47:48.800 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_report/org_report_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_report/org_report_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ))
┣ 结果： 
┣━ 耗时：53ms , start = 1640332068741
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526787222985248768
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:47:49.122 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640332069073
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787222985248768
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:49.182 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640332069123
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787222985248768
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:49.235 [XNIO-1 task-7] - [526787222985248768] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640332069185
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787222985248768
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:47:50.164 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from hrm_organization t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 
┣ 语句：select t.* from hrm_organization t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( tenant_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"T001","PARAM_2":"T001"}
┣ 执行：select t.* from hrm_organization t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( tenant_id = 'T001' ))
┣ 结果： 
┣━ 耗时：62ms , start = 1640332070100
┣━ 返回：RcdSet,size=28
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.hrm.service.impl.OrganizationServiceImpl.queryList(OrganizationServiceImpl.java:231)
┣ TID：526788098126778368
┗━━━━━ SQL [ select t.* from hrm_organization t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_... ] ━━━━━ 

15:47:50.275 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select a.*,(select count(1) from hrm_organization b where a.parent_id=b.id and... ] ━━━━━ 
┣ 语句：select a.*,(select count(1) from hrm_organization b where a.parent_id=b.id and deleted=0) child_count from hrm_organization a where deleted=0 and tenant_id= ? AND id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_17":"500997934200918016","PARAM_18":"500996314050334721","PARAM_19":"503504809626697728","PARAM_10":"500998074466832384","PARAM_11":"500997401255874560","PARAM_12":"500997348004990976","PARAM_13":"500997851971588096","PARAM_14":"490642978142953472","PARAM_15":"500997947958235137","PARAM_16":"500997643577593856","PARAM_9":"500997001891024897","PARAM_8":"500996995779923968","PARAM_7":"503504825430835201","PARAM_6":"500996320194990081","PARAM_5":"500996987772997632","PARAM_4":"500998069018431488","PARAM_3":"490642971318820864","PARAM_2":"500996108965646336","PARAM_1":"T001","PARAM_28":"490574816424755200","PARAM_29":"500997858120437760","PARAM_20":"2","PARAM_21":"500994919175819264","PARAM_22":"500997637235806208","PARAM_23":"3","PARAM_24":"4","PARAM_25":"500997394683400193","PARAM_26":"503504845043400704","PARAM_27":"490279383479623680"}
┣ 执行：select a.*,(select count(1) from hrm_organization b where a.parent_id=b.id and deleted=0) child_count from hrm_organization a where deleted=0 and tenant_id= 'T001' AND id IN ( '500996108965646336' , '490642971318820864' , '500998069018431488' , '500996987772997632' , '500996320194990081' , '503504825430835201' , '500996995779923968' , '500997001891024897' , '500998074466832384' , '500997401255874560' , '500997348004990976' , '500997851971588096' , '490642978142953472' , '500997947958235137' , '500997643577593856' , '500997934200918016' , '500996314050334721' , '503504809626697728' , '2' , '500994919175819264' , '500997637235806208' , '3' , '4' , '500997394683400193' , '503504845043400704' , '490279383479623680' , '490574816424755200' , '500997858120437760' )
┣ 结果： 
┣━ 耗时：79ms , start = 1640332070193
┣━ 返回：RcdSet,size=28
┣ 调用栈：
    org.github.foxnic.web.hrm.service.impl.OrganizationServiceImpl.queryNodesFlatten(OrganizationServiceImpl.java:324)
    org.github.foxnic.web.hrm.controller.OrganizationController.queryNodesFlatten(OrganizationController.java:284)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：526788098126778368
┗━━━━━ SQL [ select a.*,(select count(1) from hrm_organization b where a.parent_id=b.id and... ] ━━━━━ 

15:47:50.340 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT '' AS name, t.*  , (   SELECT hierarchy   FROM hrm_organization   WHERE... ] ━━━━━ 
┣ 语句：SELECT '' AS name, t.*
 , (
  SELECT hierarchy
  FROM hrm_organization
  WHERE id = use_organization_id
 ) AS hierarchy
FROM (
 SELECT use_organization_id, COUNT(1) AS cnt
 FROM  (select ifnull(use_organization_id,'') use_organization_id ,i.id,i.status,i.owner_code ,i.tenant_id,i.deleted from eam_asset i) s
 WHERE s.deleted = '0'
    AND s.tenant_id= ? AND s.owner_code = 'asset'
  AND s.status  IN ('complete')
 GROUP BY s.use_organization_id
) t order by hierarchy
┣ 参数：{"PARAM_1":"T001"}
┣ 执行：SELECT '' AS name, t.*
 , (
  SELECT hierarchy
  FROM hrm_organization
  WHERE id = use_organization_id
 ) AS hierarchy
FROM (
 SELECT use_organization_id, COUNT(1) AS cnt
 FROM  (select ifnull(use_organization_id,'') use_organization_id ,i.id,i.status,i.owner_code ,i.tenant_id,i.deleted from eam_asset i) s
 WHERE s.deleted = '0'
    AND s.tenant_id= 'T001' AND s.owner_code = 'asset'
  AND s.status  IN ('complete')
 GROUP BY s.use_organization_id
) t order by hierarchy
┣ 结果： 
┣━ 耗时：41ms , start = 1640332070287
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetReportServiceImpl.queryOrganizationData(AssetReportServiceImpl.java:130)
    com.dt.platform.eam.controller.AssetReportController.queryOrganizationData(AssetReportController.java:36)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526788098126778368
┗━━━━━ SQL [ SELECT '' AS name, t.*  , (   SELECT hierarchy   FROM hrm_organization   WHERE... ] ━━━━━ 

15:47:51.190 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：63ms , start = 1640332071125
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788098126778368
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:51.253 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640332071191
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788098126778368
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:51.301 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640332071254
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788098126778368
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:47:51.360 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产分类报表","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产分类报表' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640332071311
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788098126778368
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

15:47:51.432 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_report/category_report_list.html#data-table"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_report/category_report_list.html#data-table' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：47ms , start = 1640332071366
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526788098126778368
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

15:47:51.441 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640332071364
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:51.526 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640332071466
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:51.578 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640332071528
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:47:51.662 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640332071612
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788098126778368
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:51.735 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640332071664
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788098126778368
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

15:47:51.835 [XNIO-1 task-7] - [526788098126778368] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640332071773
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788098126778368
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

15:47:52.708 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( tenant_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"T001","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( tenant_id = 'T001' ))
┣ 结果： 
┣━ 耗时：47ms , start = 1640332072658
┣━ 返回：RcdSet,size=59
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:239)
┣ TID：526788109363318784
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

15:47:52.796 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select a.*,(select count(1) from pcm_catalog b where a.parent_id=b.id and dele... ] ━━━━━ 
┣ 语句：select a.*,(select count(1) from pcm_catalog b where a.parent_id=b.id and deleted=0) child_count from pcm_catalog a where deleted=0 and tenant_id= ? AND id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? )
┣ 参数：{"PARAM_39":"486917510902321153","PARAM_31":"486918029091803137","PARAM_32":"521339124473397249","PARAM_33":"486920213170753537","PARAM_34":"513734565764792321","PARAM_35":"486920617409384449","PARAM_36":"484765179460980737","PARAM_37":"486917442224787456","PARAM_38":"486917863769116673","PARAM_30":"516696296409530369","PARAM_9":"501736778307207168","PARAM_8":"486917927317016576","PARAM_7":"497488059307130881","PARAM_6":"497487633480417280","PARAM_5":"501737031911604224","PARAM_4":"516695819617828864","PARAM_3":"486919288133783553","PARAM_2":"486918241663324161","PARAM_1":"T001","PARAM_28":"486917959676071937","PARAM_29":"486917967624278016","PARAM_20":"497488128370540545","PARAM_21":"486920559255359489","PARAM_22":"486917674308210688","PARAM_23":"486918449189097473","PARAM_24":"486917672672432128","PARAM_25":"486918073320738816","PARAM_26":"501737200690397185","PARAM_27":"486920589416599553","PARAM_60":"484764974338543617","PARAM_17":"486917830155964417","PARAM_18":"501737164271255553","PARAM_19":"517362782761394176","PARAM_53":"513734412781748224","PARAM_10":"484765162046230529","PARAM_54":"486918240887377921","PARAM_11":"511133790303682560","PARAM_55":"486918242527350784","PARAM_12":"486917899152265217","PARAM_56":"486918387960647681","PARAM_13":"516695628546310144","PARAM_57":"486917345357336576","PARAM_14":"486920527965851649","PARAM_58":"486917609841758209","PARAM_15":"486917478622957568","PARAM_59":"486920741405593601","PARAM_16":"501737355338579969","PARAM_50":"521339120128098305","PARAM_51":"486918164815286273","PARAM_52":"486918122771582977","PARAM_42":"484764976855126017","PARAM_43":"516696825294487553","PARAM_44":"513734601902915585","PARAM_45":"486917667475689472","PARAM_46":"521339040876724224","PARAM_47":"486917781384597505","PARAM_48":"486917968299560961","PARAM_49":"497140365942325248","PARAM_40":"486920436056068097","PARAM_41":"486918386278731776"}
┣ 执行：select a.*,(select count(1) from pcm_catalog b where a.parent_id=b.id and deleted=0) child_count from pcm_catalog a where deleted=0 and tenant_id= 'T001' AND id IN ( '486918241663324161' , '486919288133783553' , '516695819617828864' , '501737031911604224' , '497487633480417280' , '497488059307130881' , '486917927317016576' , '501736778307207168' , '484765162046230529' , '511133790303682560' , '486917899152265217' , '516695628546310144' , '486920527965851649' , '486917478622957568' , '501737355338579969' , '486917830155964417' , '501737164271255553' , '517362782761394176' , '497488128370540545' , '486920559255359489' , '486917674308210688' , '486918449189097473' , '486917672672432128' , '486918073320738816' , '501737200690397185' , '486920589416599553' , '486917959676071937' , '486917967624278016' , '516696296409530369' , '486918029091803137' , '521339124473397249' , '486920213170753537' , '513734565764792321' , '486920617409384449' , '484765179460980737' , '486917442224787456' , '486917863769116673' , '486917510902321153' , '486920436056068097' , '486918386278731776' , '484764976855126017' , '516696825294487553' , '513734601902915585' , '486917667475689472' , '521339040876724224' , '486917781384597505' , '486917968299560961' , '497140365942325248' , '521339120128098305' , '486918164815286273' , '486918122771582977' , '513734412781748224' , '486918240887377921' , '486918242527350784' , '486918387960647681' , '486917345357336576' , '486917609841758209' , '486920741405593601' , '484764974338543617' )
┣ 结果： 
┣━ 耗时：65ms , start = 1640332072720
┣━ 返回：RcdSet,size=59
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryNodesFlatten(CatalogServiceImpl.java:812)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodesFlatten(CatalogController.java:251)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：526788109363318784
┗━━━━━ SQL [ select a.*,(select count(1) from pcm_catalog b where a.parent_id=b.id and dele... ] ━━━━━ 

15:47:52.861 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT '' AS name, t.*  , (   SELECT hierarchy   FROM pcm_catalog   WHERE id =... ] ━━━━━ 
┣ 语句：SELECT '' AS name, t.*
 , (
  SELECT hierarchy
  FROM pcm_catalog
  WHERE id = t.category_id
 ) AS hierarchy
FROM (
 SELECT category_id, COUNT(1) AS cnt
 FROM  (select ifnull(category_id,'') category_id ,i.id,i.status,i.owner_code ,i.tenant_id,i.deleted from eam_asset i) s
 WHERE s.deleted = '0'
    AND s.tenant_id= ? AND s.owner_code = 'asset'
  AND s.status  IN ('complete')
 GROUP BY s.category_id
) t order by hierarchy
┣ 参数：{"PARAM_1":"T001"}
┣ 执行：SELECT '' AS name, t.*
 , (
  SELECT hierarchy
  FROM pcm_catalog
  WHERE id = t.category_id
 ) AS hierarchy
FROM (
 SELECT category_id, COUNT(1) AS cnt
 FROM  (select ifnull(category_id,'') category_id ,i.id,i.status,i.owner_code ,i.tenant_id,i.deleted from eam_asset i) s
 WHERE s.deleted = '0'
    AND s.tenant_id= 'T001' AND s.owner_code = 'asset'
  AND s.status  IN ('complete')
 GROUP BY s.category_id
) t order by hierarchy
┣ 结果： 
┣━ 耗时：37ms , start = 1640332072816
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.dt.platform.eam.service.impl.AssetReportServiceImpl.queryCategoryData(AssetReportServiceImpl.java:164)
    com.dt.platform.eam.controller.AssetReportController.queryCategoryData(AssetReportController.java:48)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT '' AS name, t.*  , (   SELECT hierarchy   FROM pcm_catalog   WHERE id =... ] ━━━━━ 

16:03:26.361 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640333006216
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788109363318784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:26.474 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640333006377
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788109363318784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:26.540 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640333006476
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788109363318784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:26.576 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：30ms , start = 1640333006543
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788109363318784
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:26.611 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：32ms , start = 1640333006577
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526788109363318784
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

16:03:26.791 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_operate","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_operate'
┣ 结果： 
┣━ 耗时：79ms , start = 1640333006709
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.getDBTableMeta(SuperService.java:63)
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:229)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:264)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

16:03:26.875 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_consumables_stock_in","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_consumables_stock_in' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：33ms , start = 1640333006837
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:264)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：526788109363318784
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

16:03:26.967 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/stock/stock_list.html#dtasset_consumablesinfalse"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/stock/stock_list.html#dtasset_consumablesinfalse' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：53ms , start = 1640333006911
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526788109363318784
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

16:03:27.052 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"资产库存","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '资产库存' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：54ms , start = 1640333006994
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.107 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"办理状态","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '办理状态' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：43ms , start = 1640333007061
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.115 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640333007061
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:27.151 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：32ms , start = 1640333007116
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:27.160 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"单据名称","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '单据名称' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：40ms , start = 1640333007118
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.191 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640333007152
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

16:03:27.210 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务编号","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务编号' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640333007162
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.242 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_consumables_stock_in","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_consumables_stock_in' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：46ms , start = 1640333007193
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:264)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：526787767183609856
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

16:03:27.252 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"供应商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '供应商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：32ms , start = 1640333007216
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.303 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"接收人","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '接收人' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640333007255
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.309 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"供应商","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '供应商' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：50ms , start = 1640333007251
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526787767183609856
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.351 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"购置日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '购置日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：39ms , start = 1640333007310
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.351 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"购置日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '购置日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640333007311
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526787767183609856
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.397 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：41ms , start = 1640333007353
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526787767183609856
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.400 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"业务时间","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '业务时间' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：46ms , start = 1640333007352
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.457 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"送审","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '送审' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1640333007405
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.458 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"送审","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '送审' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：51ms , start = 1640333007404
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526787767183609856
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.511 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"确认","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '确认' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：47ms , start = 1640333007461
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526787767183609856
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.511 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"确认","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '确认' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1640333007460
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.558 [XNIO-1 task-6] - [526787767183609856] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"撤销","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '撤销' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：42ms , start = 1640333007512
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526787767183609856
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:27.558 [XNIO-1 task-7] - [526788109363318784] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"撤销","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '撤销' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：43ms , start = 1640333007512
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526788109363318784
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:28.363 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：166ms , start = 1640333008194
┣━ 返回：RcdSet,size=1391
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：526792033768050688
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

16:03:28.526 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 
┣ 语句：select t.* from sys_lang t WHERE ( ( t.deleted= ? ))
┣ 参数：{"PARAM_1":0}
┣ 执行：select t.* from sys_lang t WHERE ( ( t.deleted= 0 ))
┣ 结果： 
┣━ 耗时：217ms , start = 1640333008305
┣━ 返回：RcdSet,size=1391
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.queryList(LangServiceImpl.java:198)
┣ TID：526792034317504512
┗━━━━━ SQL [ select t.* from sys_lang t WHERE ( ( t.deleted= :PARAM_1 )) ] ━━━━━ 

16:03:28.551 [XNIO-1 task-1] - [526792035127005184] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 
┣ 语句：select t.* from sys_dict_item t WHERE ( ( t.deleted= ? ) AND ( dict_code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"eam_source"}
┣ 执行：select t.* from sys_dict_item t WHERE ( ( t.deleted= 0 ) AND ( dict_code = 'eam_source' ))
┣ 结果： 
┣━ 耗时：42ms , start = 1640333008503
┣━ 返回：RcdSet,size=6
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DictItemServiceImpl.queryList(DictItemServiceImpl.java:207)
┣ TID：526792035127005184
┗━━━━━ SQL [ select t.* from sys_dict_item t WHERE ( ( t.deleted= :PARAM_1 ) AND ( dict_cod... ] ━━━━━ 

16:03:28.685 [XNIO-1 task-3] - [526792035357691904] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_supplier t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= ... ] ━━━━━ 
┣ 语句：select t.* from eam_supplier t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_supplier t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：48ms , start = 1640333008636
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.SupplierServiceImpl.queryList(SupplierServiceImpl.java:220)
┣ TID：526792035357691904
┗━━━━━ SQL [ select t.* from eam_supplier t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= ... ] ━━━━━ 

16:03:29.092 [XNIO-1 task-1] - [526792037446455296] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_supplier t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= ... ] ━━━━━ 
┣ 语句：select t.* from eam_supplier t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ))
┣ 参数：{"PARAM_1":0,"PARAM_2":"T001"}
┣ 执行：select t.* from eam_supplier t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ))
┣ 结果： 
┣━ 耗时：38ms , start = 1640333009051
┣━ 返回：RcdSet,size=5
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    com.dt.platform.eam.service.impl.SupplierServiceImpl.queryList(SupplierServiceImpl.java:220)
┣ TID：526792037446455296
┗━━━━━ SQL [ select t.* from eam_supplier t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= ... ] ━━━━━ 

16:03:29.111 [XNIO-1 task-3] - [526792037006053376] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_stock","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_stock'
┣ 结果： 
┣━ 耗时：61ms , start = 1640333009045
┣━ 返回：RcdSet,size=40
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:393)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526792037006053376
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

16:03:29.177 [XNIO-1 task-3] - [526792037006053376] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_stock t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_stock t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset_consumables","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_stock t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_consumables' ) A
┣ 结果： 
┣━ 耗时：45ms , start = 1640333009127
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526792037006053376
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_stock t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

16:03:29.224 [XNIO-1 task-3] - [526792037006053376] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_stock t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_stock t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_5":50,"PARAM_4":0,"PARAM_3":"asset_consumables","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_stock t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_consumables' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：42ms , start = 1640333009179
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526792037006053376
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_stock t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

16:03:29.247 [XNIO-1 task-1] - [526792038079795200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_stock t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_stock t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset_consumables","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_stock t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_consumables' ) A
┣ 结果： 
┣━ 耗时：42ms , start = 1640333009202
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526792038079795200
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_stock t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

16:03:29.284 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"purchase","PARAM_2":"give"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'give' , 'purchase' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640333009239
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:29.284 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640333009237
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

16:03:29.290 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_warehouse","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_warehouse'
┣ 结果： 
┣━ 耗时：55ms , start = 1640333009235
┣━ 返回：RcdSet,size=12
┣ TID：null
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

16:03:29.294 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640333009246
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

16:03:29.315 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：67ms , start = 1640333009247
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:29.321 [XNIO-1 task-1] - [526792038079795200] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_stock t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_stock t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_5":50,"PARAM_4":0,"PARAM_3":"asset_consumables","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_stock t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_consumables' )) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：71ms , start = 1640333009248
┣━ 返回：RcdSet,size=3
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:301)
┣ TID：526792038079795200
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_stock t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

16:03:29.329 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= :... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：35ms , start = 1640333009294
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= :... ] ━━━━━ 

16:03:29.330 [XNIO-1 task-3] - [526792037006053376] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 100ms
16:03:29.370 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640333009323
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

16:03:29.370 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640333009322
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

16:03:29.371 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"purchase","PARAM_2":"give"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'give' , 'purchase' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640333009322
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:29.372 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= :... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640333009322
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= :... ] ━━━━━ 

16:03:29.411 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：87ms , start = 1640333009323
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:29.412 [XNIO-1 task-1] - [526792038079795200] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 90ms
16:03:36.272 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.theme"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.theme' AND deleted = 0
┣ 结果： 
┣━ 耗时：56ms , start = 1640333016213
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526792034317504512
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:36.347 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.favico"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.favico' AND deleted = 0
┣ 结果： 
┣━ 耗时：69ms , start = 1640333016274
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526792034317504512
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:36.411 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640333016354
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526792034317504512
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:36.471 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640333016413
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526792034317504512
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:36.540 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640333016473
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526792034317504512
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

16:03:36.594 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_change_base_info","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_change_base_info' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：34ms , start = 1640333016554
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:264)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：526792034317504512
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

16:03:36.772 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 
┣ 语句：select t.* from sys_db_cache t WHERE ( ( t.deleted= ? ) AND ( area = ? ) AND ( owner_type = ? ) AND ( catalog = ? ) AND ( owner_id = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_5":"110588348101165911","PARAM_4":"layui-table-column-width","PARAM_3":"user","PARAM_2":"/business/eam/asset_data_change/asset_data_change_list.html#dtasset_changeeam_asset_change_base_infotrue"}
┣ 执行：select t.* from sys_db_cache t WHERE ( ( t.deleted= 0 ) AND ( area = '/business/eam/asset_data_change/asset_data_change_list.html#dtasset_changeeam_asset_change_base_infotrue' ) AND ( owner_type = 'user' ) AND ( catalog = 'layui-table-column-width' ) AND ( owner_id = '110588348101165911' ))
┣ 结果： 
┣━ 耗时：62ms , start = 1640333016706
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.system.service.impl.DbCacheServiceImpl.queryList(DbCacheServiceImpl.java:228)
┣ TID：526792034317504512
┗━━━━━ SQL [ select t.* from sys_db_cache t WHERE ( ( t.deleted= :PARAM_1 ) AND ( area = :P... ] ━━━━━ 

16:03:36.817 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( dimension = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_5":"1","PARAM_4":"attribution","PARAM_3":"asset_change","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_change' ) AND ( dimension = 'attribution' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：37ms , start = 1640333016777
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526792034317504512
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

16:03:36.871 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_18":0,"PARAM_19":"T001","PARAM_10":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_15":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_16":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：49ms , start = 1640333016819
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526792034317504512
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

16:03:36.930 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：36ms , start = 1640333016892
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:239)
┣ TID：526792034317504512
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

16:03:36.974 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：34ms , start = 1640333016937
┣━ 返回：RcdSet,size=6
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:310)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:345)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:279)
┣ TID：526792034317504512
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

16:03:37.035 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%' OR hierarchy like '486917609841758209/521339040876724224/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%' OR hierarchy like '486917609841758209/521339040876724224/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：48ms , start = 1640333016984
┣━ 返回：RcdSet,size=33
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.buildingHierarchicalRelationships(CatalogServiceImpl.java:408)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:285)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：526792034317504512
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

16:03:37.079 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"数据变更","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '数据变更' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：37ms , start = 1640333017041
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526792034317504512
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:37.135 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"变更日期","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '变更日期' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：49ms , start = 1640333017084
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526792034317504512
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:37.150 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"profile@GuoYIE","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'profile@GuoYIE' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：61ms , start = 1640333017087
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526792033768050688
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:37.185 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"同意","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '同意' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：45ms , start = 1640333017138
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526792034317504512
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:37.205 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 
┣ 语句：select * from sys_config WHERE profile_id = ? AND code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"empty","PARAM_3":0,"PARAM_2":"system.cachekey"}
┣ 执行：select * from sys_config WHERE profile_id = 'empty' AND code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640333017150
┣━ 返回：RcdSet,size=0
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:247)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526792033768050688
┗━━━━━ SQL [ select * from sys_config WHERE profile_id = :PARAM_1 AND code = :PARAM_2 AND d... ] ━━━━━ 

16:03:37.240 [XNIO-1 task-7] - [526792034317504512] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select defaults item from sys_lang where defaults= ? and deleted=0 and valid=1 ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":"拒绝","PARAM_3":1,"PARAM_2":0}
┣ 执行：SELECT * FROM ( select defaults item from sys_lang where defaults= '拒绝' and deleted=0 and valid=1 ) PAGED_QUERY LIMIT 0 , 1
┣ 结果： 
┣━ 耗时：50ms , start = 1640333017188
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:267)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:317)
    org.github.foxnic.web.system.service.impl.LangServiceImpl.translate(LangServiceImpl.java:322)
┣ TID：526792034317504512
┗━━━━━ SQL [ SELECT * FROM ( select defaults item from sys_lang where defaults= :PARAM_1 an... ] ━━━━━ 

16:03:37.251 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 
┣ 语句：select * from sys_config WHERE code = ? AND deleted = ?
┣ 参数：{"PARAM_1":"system.cachekey","PARAM_2":0}
┣ 执行：select * from sys_config WHERE code = 'system.cachekey' AND deleted = 0
┣ 结果： 
┣━ 耗时：42ms , start = 1640333017206
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    org.github.foxnic.web.system.service.impl.ConfigServiceImpl.getByCode(ConfigServiceImpl.java:255)
    org.github.foxnic.web.framework.cache.aspector.CachedAspector.processServiceMethod(CachedAspector.java:43)
┣ TID：526792033768050688
┗━━━━━ SQL [ select * from sys_config WHERE code = :PARAM_1 AND deleted = :PARAM_2 ] ━━━━━ 

16:03:37.313 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 
┣ 语句：select * from eam_operate WHERE operate_code = ? AND deleted = ? AND tenant_id = ?
┣ 参数：{"PARAM_1":"eam_asset_change_base_info","PARAM_3":"T001","PARAM_2":0}
┣ 执行：select * from eam_operate WHERE operate_code = 'eam_asset_change_base_info' AND deleted = 0 AND tenant_id = 'T001'
┣ 结果： 
┣━ 耗时：57ms , start = 1640333017253
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryEntity(SuperService.java:233)
    com.dt.platform.eam.service.impl.OperateServiceImpl.approvalRequired(OperateServiceImpl.java:264)
    com.dt.platform.eam.controller.OperateController.approvalRequired(OperateController.java:264)
┣ TID：526792033768050688
┗━━━━━ SQL [ select * from eam_operate WHERE operate_code = :PARAM_1 AND deleted = :PARAM_2... ] ━━━━━ 

16:03:37.372 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 
┣ 语句：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( dimension = ? ) AND ( list_show = ? )) ORDER BY list_sort ASC
┣ 参数：{"PARAM_1":0,"PARAM_5":"1","PARAM_4":"attribution","PARAM_3":"asset_change","PARAM_2":"T001"}
┣ 执行：select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_change' ) AND ( dimension = 'attribution' ) AND ( list_show = '1' )) ORDER BY list_sort ASC
┣ 结果： 
┣━ 耗时：55ms , start = 1640333017314
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:165)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:260)
┣ TID：526792033768050688
┗━━━━━ SQL [ select t.* from eam_asset_attribute_item t WHERE ( ( t.deleted= :PARAM_1 AND t... ] ━━━━━ 

16:03:37.433 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_17":"ff0f2f97-0f8a-11ec-ab08-00163e2e6a36","PARAM_18":0,"PARAM_19":"T001","PARAM_10":"fec153bc-0f8a-11ec-ab08-00163e2e6a36","PARAM_11":"fff12037-0f8a-11ec-ab08-00163e2e6a36","PARAM_12":"ff4319f6-0f8a-11ec-ab08-00163e2e6a36","PARAM_13":"ff73d4e5-0f8a-11ec-ab08-00163e2e6a36","PARAM_14":"feb39672-0f8a-11ec-ab08-00163e2e6a36","PARAM_15":"ff39f0d1-0f8a-11ec-ab08-00163e2e6a36","PARAM_16":"fef3ab3e-0f8a-11ec-ab08-00163e2e6a36","PARAM_9":"ff50d42e-0f8a-11ec-ab08-00163e2e6a36","PARAM_8":"ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36","PARAM_7":"ff67a298-0f8a-11ec-ab08-00163e2e6a36","PARAM_6":"ff894e3a-0f8a-11ec-ab08-00163e2e6a36","PARAM_5":"ff7d033c-0f8a-11ec-ab08-00163e2e6a36","PARAM_4":"fe6a6910-0f8a-11ec-ab08-00163e2e6a36","PARAM_3":"ff016233-0f8a-11ec-ab08-00163e2e6a36","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'ff016233-0f8a-11ec-ab08-00163e2e6a36' , 'fe6a6910-0f8a-11ec-ab08-00163e2e6a36' , 'ff7d033c-0f8a-11ec-ab08-00163e2e6a36' , 'ff894e3a-0f8a-11ec-ab08-00163e2e6a36' , 'ff67a298-0f8a-11ec-ab08-00163e2e6a36' , 'ffa7c7f9-0f8a-11ec-ab08-00163e2e6a36' , 'ff50d42e-0f8a-11ec-ab08-00163e2e6a36' , 'fec153bc-0f8a-11ec-ab08-00163e2e6a36' , 'fff12037-0f8a-11ec-ab08-00163e2e6a36' , 'ff4319f6-0f8a-11ec-ab08-00163e2e6a36' , 'ff73d4e5-0f8a-11ec-ab08-00163e2e6a36' , 'feb39672-0f8a-11ec-ab08-00163e2e6a36' , 'ff39f0d1-0f8a-11ec-ab08-00163e2e6a36' , 'fef3ab3e-0f8a-11ec-ab08-00163e2e6a36' , 'ff0f2f97-0f8a-11ec-ab08-00163e2e6a36' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：52ms , start = 1640333017374
┣━ 返回：RcdSet,size=15
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1683)
    com.dt.platform.eam.service.impl.AssetAttributeItemServiceImpl.queryListColumnByModule(AssetAttributeItemServiceImpl.java:261)
    com.dt.platform.eam.controller.AssetAttributeItemController.queryListColumnByModule(AssetAttributeItemController.java:325)
┣ TID：526792033768050688
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset_attribute WHERE ( ... ] ━━━━━ 

16:03:37.489 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 
┣ 语句：select t.* from pcm_catalog t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( code = ? ))
┣ 参数：{"PARAM_1":0,"PARAM_3":"asset","PARAM_2":"T001"}
┣ 执行：select t.* from pcm_catalog t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( code = 'asset' ))
┣ 结果： 
┣━ 耗时：47ms , start = 1640333017437
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:206)
    com.github.foxnic.dao.entity.SuperService.queryList(SuperService.java:161)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryList(CatalogServiceImpl.java:239)
┣ TID：526792033768050688
┗━━━━━ SQL [ select t.* from pcm_catalog t WHERE ( ( t.deleted= :PARAM_1 AND t.tenant_id= :... ] ━━━━━ 

16:03:37.554 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= ? and m.deleted=0 order by sort asc
┣ 参数：{"PARAM_1":"486917609841758209"}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.parent_id= '486917609841758209' and m.deleted=0 order by sort asc
┣ 结果： 
┣━ 耗时：57ms , start = 1640333017492
┣━ 返回：RcdSet,size=6
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildCatalogs(CatalogServiceImpl.java:310)
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.queryChildNodes(CatalogServiceImpl.java:345)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:279)
┣ TID：526792033768050688
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

16:03:37.625 [XNIO-1 task-6] - [526792033768050688] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 
┣ 语句：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%' OR hierarchy like '486917609841758209/521339040876724224/%')
order by parent_id , sort asc
┣ 参数：{}
┣ 执行：select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and cm.deleted=0) child_count from pcm_catalog m
where m.deleted=0 and ( hierarchy like '486917609841758209/486917667475689472/%' OR hierarchy like '486917609841758209/486917672672432128/%' OR hierarchy like '486917609841758209/486917674308210688/%' OR hierarchy like '486917609841758209/497140365942325248/%' OR hierarchy like '486917609841758209/497487633480417280/%' OR hierarchy like '486917609841758209/521339040876724224/%')
order by parent_id , sort asc
┣ 结果： 
┣━ 耗时：59ms , start = 1640333017556
┣━ 返回：RcdSet,size=33
┣ 调用栈：
    org.github.foxnic.web.pcm.service.impl.CatalogServiceImpl.buildingHierarchicalRelationships(CatalogServiceImpl.java:408)
    org.github.foxnic.web.pcm.controller.CatalogController.queryNodes(CatalogController.java:285)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:100)
┣ TID：526792033768050688
┗━━━━━ SQL [ select m.*,(select count(1) from pcm_catalog cm  where m.id=cm.parent_id and c... ] ━━━━━ 

16:03:38.153 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_change","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_change'
┣ 结果： 
┣━ 耗时：64ms , start = 1640333018086
┣━ 返回：RcdSet,size=30
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:393)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:307)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:844)
┣ TID：526792075237134336
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

16:03:38.226 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 
┣ 语句：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( ? ,UPPER( ? )) AND LOWER(TABLE_NAME)= ?
┣ 参数：{"PARAM_1":"eam","PARAM_3":"eam_asset_data_change","PARAM_2":"eam"}
┣ 执行：SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHAR_LENGTH, CHARACTER_OCTET_LENGTH DATA_LENGTH ,  
NUMERIC_PRECISION NUM_PRECISION,NUMERIC_SCALE NUM_SCALE,IS_NULLABLE NULLABLE, (CASE WHEN EXTRA='auto_increment' THEN 'YES' ELSE 'NO' END)  AUTO_INCREASE, 
COLUMN_KEY KEY_TYPE,COLUMN_COMMENT COMMENTS,COLUMN_DEFAULT  
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA IN( 'eam' ,UPPER( 'eam' )) AND LOWER(TABLE_NAME)= 'eam_asset_data_change'
┣ 结果： 
┣━ 耗时：50ms , start = 1640333018174
┣━ 返回：RcdSet,size=30
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:393)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:307)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:844)
┣ TID：526792075383934976
┗━━━━━ SQL [ SELECT DISTINCT TABLE_NAME,COLUMN_NAME,DATA_TYPE, CHARACTER_MAXIMUM_LENGTH CHA... ] ━━━━━ 

16:03:38.265 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：60ms , start = 1640333018198
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526792075237134336
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

16:03:38.282 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：45ms , start = 1640333018234
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526792075383934976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

16:03:38.308 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640333018269
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

16:03:38.324 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640333018272
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

16:03:38.324 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640333018269
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

16:03:38.324 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：55ms , start = 1640333018269
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

16:03:38.327 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 59ms
16:03:38.340 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640333018285
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

16:03:38.340 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640333018285
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

16:03:38.340 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：54ms , start = 1640333018285
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

16:03:38.354 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：68ms , start = 1640333018285
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

16:03:38.355 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 71ms
16:03:38.385 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：46ms , start = 1640333018338
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526792075237134336
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

16:03:38.405 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 
┣ 语句：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= ? and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 参数：{"PARAM_1":"E001"}
┣ 执行：select c.* from eam_asset_data_permissions c where c.status='enable' and  c.owner_code='asset' and c.deleted=0
and c.role_code in (select distinct a.code from sys_busi_role a,sys_busi_role_member b where b.member_id= 'E001' and a.id=b.role_id and a.deleted=0)
order by c.priority
┣ 结果： 
┣━ 耗时：47ms , start = 1640333018356
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.dt.platform.framework.datasource.DAOConfig.lambda$primaryDAO$0(DAOConfig.java:82)
    com.github.foxnic.dao.entity.SuperService.buildQuerySQL(SuperService.java:339)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:403)
┣ TID：526792075383934976
┗━━━━━ SQL [ select c.* from eam_asset_data_permissions c where c.status='enable' and  c.ow... ] ━━━━━ 

16:03:38.435 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640333018388
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

16:03:38.436 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640333018389
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

16:03:38.436 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640333018389
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

16:03:38.439 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：50ms , start = 1640333018388
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

16:03:38.440 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 53ms
16:03:38.464 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_org WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：57ms , start = 1640333018407
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from hrm_organization ... ] ━━━━━ 

16:03:38.468 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"eam_data_perm_default0"}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( 'eam_data_perm_default0' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：61ms , start = 1640333018407
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_busi_role WHERE ( dele... ] ━━━━━ 

16:03:38.471 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_catalog WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：62ms , start = 1640333018408
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from pcm_catalog WHERE... ] ━━━━━ 

16:03:38.493 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= ? ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( ? ) AND t_1.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"524261428077531136","PARAM_2":0}
┣ 执行：SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
join (select * from eam_asset_data_permissions_position WHERE ( deleted= 0 ) ) t_1 on t_1.value = t_0.id 
 WHERE t_1.permission_id IN ( '524261428077531136' ) AND t_1.deleted= 0
┣ 结果： 
┣━ 耗时：85ms , start = 1640333018408
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_1.permission_id join_f0 FROM (select * from eam_position WHER... ] ━━━━━ 

16:03:38.496 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_data_change t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_data_change t
WHERE t.deleted = ? AND t.tenant_id = ? AND change_type = ? AND t.originator_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_4":"E001","PARAM_3":"eam_asset_change_base_info","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_data_change t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND change_type = 'eam_asset_change_base_info' AND t.originator_id = 'E001' ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1640333018444
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:307)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:844)
┣ TID：526792075237134336
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_data_change t WHERE t.deleted ... ] ━━━━━ 

16:03:38.495 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 89ms
16:03:38.545 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset_data_change t WHERE ( ( t.deleted= :... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset_data_change t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( change_type = ? )) AND ( ( ( t.originator_id = ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_6":50,"PARAM_5":0,"PARAM_4":"E001","PARAM_3":"eam_asset_change_base_info","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset_data_change t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( change_type = 'eam_asset_change_base_info' )) AND ( ( ( t.originator_id = 'E001' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：47ms , start = 1640333018496
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:307)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:844)
┣ TID：526792075237134336
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset_data_change t WHERE ( ( t.deleted= :... ] ━━━━━ 

16:03:38.552 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_data_change t WHERE t.deleted ... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset_data_change t
WHERE t.deleted = ? AND t.tenant_id = ? AND change_type = ? AND t.originator_id = ? ) A
┣ 参数：{"PARAM_1":0,"PARAM_4":"E001","PARAM_3":"eam_asset_change_base_info","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset_data_change t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND change_type = 'eam_asset_change_base_info' AND t.originator_id = 'E001' ) A
┣ 结果： 
┣━ 耗时：49ms , start = 1640333018499
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:307)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:844)
┣ TID：526792075383934976
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset_data_change t WHERE t.deleted ... ] ━━━━━ 

16:03:38.596 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_5":"T001","PARAM_4":0,"PARAM_3":"E001","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：40ms , start = 1640333018553
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1691)
    com.dt.platform.eam.controller.AssetDataChangeController.queryPagedList(AssetDataChangeController.java:377)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526792075237134336
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:38.596 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset_data_change t WHERE ( ( t.deleted= :... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset_data_change t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( change_type = ? )) AND ( ( ( t.originator_id = ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_6":50,"PARAM_5":0,"PARAM_4":"E001","PARAM_3":"eam_asset_change_base_info","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset_data_change t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( change_type = 'eam_asset_change_base_info' )) AND ( ( ( t.originator_id = 'E001' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：41ms , start = 1640333018553
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:307)
    com.dt.platform.eam.service.impl.AssetDataChangeServiceImpl.queryPagedList(AssetDataChangeServiceImpl.java:844)
┣ TID：526792075383934976
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset_data_change t WHERE ( ( t.deleted= :... ] ━━━━━ 

16:03:38.645 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_5":"T001","PARAM_4":0,"PARAM_3":"E001","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：45ms , start = 1640333018598
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1691)
    com.dt.platform.eam.controller.AssetDataChangeController.queryPagedList(AssetDataChangeController.java:377)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526792075383934976
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:38.655 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"P001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'P001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：51ms , start = 1640333018602
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.dt.platform.eam.controller.AssetDataChangeController.queryPagedList(AssetDataChangeController.java:379)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
    com.github.foxnic.springboot.mvc.ControllerAspector.processPostMapping(ControllerAspector.java:75)
┣ TID：526792075237134336
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

16:03:38.685 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"P001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'P001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：37ms , start = 1640333018646
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.dt.platform.eam.controller.AssetDataChangeController.queryPagedList(AssetDataChangeController.java:379)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
    com.github.foxnic.springboot.mvc.ControllerAspector.processPostMapping(ControllerAspector.java:75)
┣ TID：526792075383934976
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_person WHERE ( deleted= ... ] ━━━━━ 

16:03:38.733 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= :... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_5":"T001","PARAM_4":0,"PARAM_3":"524693537481031680","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( '524693537481031680' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：66ms , start = 1640333018656
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1691)
    com.dt.platform.eam.controller.AssetDataChangeController.queryPagedList(AssetDataChangeController.java:382)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526792075237134336
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= :... ] ━━━━━ 

16:03:38.744 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= :... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= ? ) AND ( tenant_id= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ? AND t_0.tenant_id= ?
┣ 参数：{"PARAM_1":0,"PARAM_5":"T001","PARAM_4":0,"PARAM_3":"524693537481031680","PARAM_2":"T001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= 0 ) AND ( tenant_id= 'T001' ) ) t_0 
 WHERE t_0.id IN ( '524693537481031680' ) AND t_0.deleted= 0 AND t_0.tenant_id= 'T001'
┣ 结果： 
┣━ 耗时：55ms , start = 1640333018686
┣━ 返回：RcdSet,size=1
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.join(SuperService.java:1691)
    com.dt.platform.eam.controller.AssetDataChangeController.queryPagedList(AssetDataChangeController.java:382)
    com.github.foxnic.springboot.mvc.ControllerAspector.processControllerMethod(ControllerAspector.java:149)
┣ TID：526792075383934976
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_asset WHERE ( deleted= :... ] ━━━━━ 

16:03:38.824 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640333018757
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

16:03:38.825 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：68ms , start = 1640333018756
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

16:03:38.834 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：79ms , start = 1640333018754
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

16:03:38.834 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：77ms , start = 1640333018756
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

16:03:38.839 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：84ms , start = 1640333018754
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:38.839 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：84ms , start = 1640333018754
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:38.840 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：83ms , start = 1640333018755
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

16:03:38.863 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：106ms , start = 1640333018757
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:38.871 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640333018826
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

16:03:38.871 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( delet... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640333018825
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( delet... ] ━━━━━ 

16:03:38.889 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640333018835
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

16:03:38.889 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640333018835
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 

16:03:38.890 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：49ms , start = 1640333018840
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 

16:03:38.889 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：48ms , start = 1640333018840
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:38.904 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：40ms , start = 1640333018864
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:38.904 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：64ms , start = 1640333018840
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:38.917 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= :... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：44ms , start = 1640333018872
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= :... ] ━━━━━ 

16:03:38.916 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：43ms , start = 1640333018872
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:38.923 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：33ms , start = 1640333018890
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:38.944 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：52ms , start = 1640333018891
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:38.944 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640333018891
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:38.945 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：53ms , start = 1640333018891
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

16:03:38.948 [XNIO-1 task-6] - [526792075237134336] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 194ms
16:03:38.952 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：45ms , start = 1640333018906
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:39.119 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：46ms , start = 1640333018906
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

16:03:39.121 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：164ms , start = 1640333018946
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

16:03:39.122 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：176ms , start = 1640333018946
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:39.123 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：176ms , start = 1640333018945
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:39.123 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( delet... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：200ms , start = 1640333018919
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_maintainer WHERE ( delet... ] ━━━━━ 

16:03:39.124 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：201ms , start = 1640333018919
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

16:03:39.124 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：178ms , start = 1640333018946
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

16:03:39.170 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：47ms , start = 1640333019123
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:39.188 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= :... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：66ms , start = 1640333019122
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_goods WHERE ( deleted= :... ] ━━━━━ 

16:03:39.190 [XNIO-1 task-7] - [526792075383934976] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 436ms
16:03:50.507 [XNIO-1 task-7] - [526792127426859008] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
16:03:50.508 [XNIO-1 task-7] - [526792127426859008] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:
16:03:50.592 [XNIO-1 task-7] - [526792127426859008] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND asset_status IN ( ? )
	AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND asset_status IN ( ? )
		AND status = ? )) A
┣ 参数：{"PARAM_1":0,"PARAM_9":"idle","PARAM_8":"asset_clean_out","PARAM_10":"complete","PARAM_7":"T001","PARAM_6":0,"PARAM_5":"complete","PARAM_4":"idle","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND asset_status IN ( 'idle' )
	AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND asset_status IN ( 'idle' )
		AND status = 'complete' )) A
┣ 结果： 
┣━ 耗时：64ms , start = 1640333030516
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526792127426859008
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

16:03:53.159 [XNIO-1 task-7] - [526792138554347520] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,118] - start to match applyAssetDataPermissions!
16:03:53.161 [XNIO-1 task-7] - [526792138554347520] - INFO  c.d.p.e.s.i.AssetServiceImpl - [applyAssetDataPermissions,131] - apply asset data permission,dp match result:
16:03:53.230 [XNIO-1 task-7] - [526792138554347520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 
┣ 语句：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? AND (t.deleted = ? AND t.tenant_id = ? AND owner_code = ? AND status = ? )) A
┣ 参数：{"PARAM_1":0,"PARAM_8":"complete","PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：select count(1) X from (SELECT 1
FROM eam_asset t
WHERE t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' AND (t.deleted = 0 AND t.tenant_id = 'T001' AND owner_code = 'asset_clean_out' AND status = 'complete' )) A
┣ 结果： 
┣━ 耗时：64ms , start = 1640333033165
┣━ 返回：java.lang.Integer
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526792138554347520
┗━━━━━ SQL [ select count(1) X from (SELECT 1 FROM eam_asset t WHERE t.deleted = :PARAM_1 A... ] ━━━━━ 

16:03:53.303 [XNIO-1 task-7] - [526792138554347520] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 
┣ 语句：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? )) AND ( ( ( t.deleted= ? AND t.tenant_id= ? ) AND ( owner_code = ? ) AND ( status = ? ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT ? , ?
┣ 参数：{"PARAM_1":0,"PARAM_9":0,"PARAM_8":"complete","PARAM_10":50,"PARAM_7":"asset_clean_out","PARAM_6":"T001","PARAM_5":0,"PARAM_4":"complete","PARAM_3":"asset_clean_out","PARAM_2":"T001"}
┣ 执行：SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' )) AND ( ( ( t.deleted= 0 AND t.tenant_id= 'T001' ) AND ( owner_code = 'asset_clean_out' ) AND ( status = 'complete' ))) ORDER BY t.create_time DESC ) PAGED_QUERY LIMIT 0 , 50
┣ 结果： 
┣━ 耗时：63ms , start = 1640333033231
┣━ 返回：RcdSet,size=2
┣ 调用栈：
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:431)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:379)
    com.github.foxnic.dao.entity.SuperService.queryPagedList(SuperService.java:281)
┣ TID：526792138554347520
┗━━━━━ SQL [ SELECT * FROM ( select t.* from eam_asset t WHERE ( ( t.deleted= :PARAM_1 AND ... ] ━━━━━ 

16:03:53.352 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"2"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '2' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：39ms , start = 1640333033311
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

16:03:53.352 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_equipment_environment') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：41ms , start = 1640333033311
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:53.399 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：85ms , start = 1640333033313
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_supplier WHERE ( deleted... ] ━━━━━ 

16:03:53.399 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? , ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_4":0,"PARAM_3":"486917667475689472","PARAM_2":"486917672672432128"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '486917672672432128' , '486917667475689472' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：86ms , start = 1640333033312
┣━ 返回：RcdSet,size=2
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from pcm_catalog WHERE ( deleted=... ] ━━━━━ 

16:03:53.442 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：87ms , start = 1640333033354
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from dc_rack WHERE ( deleted= :PA... ] ━━━━━ 

16:03:53.453 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_maintenance_status') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：139ms , start = 1640333033314
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:53.481 [ForkJoinPool-1-worker-5] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：125ms , start = 1640333033354
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_manufacturer WHERE ( del... ] ━━━━━ 

16:03:53.490 [ForkJoinPool-1-worker-0] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：177ms , start = 1640333033312
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:53.533 [ForkJoinPool-1-worker-6] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：220ms , start = 1640333033312
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from eam_position WHERE ( deleted... ] ━━━━━ 

16:03:53.548 [ForkJoinPool-1-worker-2] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：230ms , start = 1640333033317
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_organization WHERE ( del... ] ━━━━━ 

16:03:53.568 [ForkJoinPool-1-worker-1] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_source') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：167ms , start = 1640333033400
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:53.590 [ForkJoinPool-1-worker-7] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":"E001"}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( 'E001' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：189ms , start = 1640333033400
┣━ 返回：RcdSet,size=1
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:53.609 [ForkJoinPool-1-worker-4] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= ? ) ) t_0 
 WHERE t_0.id IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted= 0 ) ) t_0 
 WHERE t_0.id IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：165ms , start = 1640333033443
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.id join_f0 FROM (select * from hrm_employee WHERE ( deleted... ] ━━━━━ 

16:03:53.633 [ForkJoinPool-1-worker-3] - [] - INFO  c.g.f.d.s.SQLPrinter - [printIn,123] - 
┏━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 
┣ 语句：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= ? ) ) t_0 
 WHERE t_0.code IN ( ? ) AND t_0.deleted= ?
┣ 参数：{"PARAM_1":0,"PARAM_3":0,"PARAM_2":""}
┣ 执行：SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict_code='eam_safety_level') AND ( deleted= 0 ) ) t_0 
 WHERE t_0.code IN ( '' ) AND t_0.deleted= 0
┣ 结果： 
┣━ 耗时：177ms , start = 1640333033455
┣━ 返回：RcdSet,size=0
┣ TID：null
┗━━━━━ SQL [ SELECT t_0.* , t_0.code join_f0 FROM (select * from sys_dict_item WHERE ( dict... ] ━━━━━ 

16:03:53.634 [XNIO-1 task-7] - [526792138554347520] - INFO  c.g.f.d.e.EntityNavigator - [execute,142] - fill with cost 324ms
